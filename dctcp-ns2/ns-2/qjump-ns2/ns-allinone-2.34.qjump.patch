diff -rupN ns-allinone-2.34-pfabric/ns-2.34/adc/qjump.cc ns-allinone-2.34-qjump/ns-2.34/adc/qjump.cc
--- ns-allinone-2.34-pfabric/ns-2.34/adc/qjump.cc	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/adc/qjump.cc	2015-03-04 23:13:41.190555793 +0000
@@ -0,0 +1,101 @@
+#include <string>
+#include <sstream>
+
+#include "connector.h" 
+#include "packet.h"
+#include "queue.h"
+#include "qjump.h"
+
+QJUMP_Value::QJUMP_Value(QJUMP *qjump): qjump_(qjump), bucket_size_(0), qjump_timer_(this) {
+  packet_queue_ = new PacketQueue();
+}
+
+QJUMP_Value::~QJUMP_Value() {
+  qjump_timer_.cancel();
+  if (packet_queue_->length() != 0) {
+    for (Packet *p = packet_queue_->head(); p != 0; p = p->next_) {
+      Packet::free(p);
+    }
+  }
+  delete packet_queue_;
+}
+
+void QJUMP::recv(Packet *p, Handler *) {
+  hdr_ip* iph = hdr_ip::access(p);
+  fid_qjump_itr it = qjumps_.find(iph->flowid());
+  if (it == qjumps_.end()) {
+    // Just send packets because the rate limiting is not active for this flow.
+    target_->recv(p);
+    return;
+  }
+  QJUMP_Value* qjump = it->second;
+  iph->prio() = qjump->prio_;
+  hdr_cmn *ch = hdr_cmn::access(p);
+  int pktsize = ch->size() << 3;
+  if (qjump->tokens_ >= pktsize) {
+    target_->recv(p);
+    qjump->tokens_ -= pktsize;
+  } else {
+    drop(p);
+  }
+}
+
+void QJUMP_Value::timeout(int) {
+  // Schedule a new tick.
+  tokens_ = bucket_size_;
+  qjump_timer_.resched(time_interval_);
+}
+
+int QJUMP::command(int argc, const char* const* argv) {
+	if (argc == 7) {
+		if (strcmp("activate-fid", argv[1]) == 0) {
+			int fid = atoi(argv[2]);
+			long long bucket;
+			long long time_interval_ns;
+			string text = argv[3];
+			stringstream buffer_bucket(text);
+			buffer_bucket >> bucket;
+			text = argv[4];
+			stringstream buffer_time_interval(text);
+			buffer_time_interval >> time_interval_ns;
+			int qlen = atoi(argv[5]);
+			int prio = atoi(argv[6]);
+			activate_fid(fid, bucket, time_interval_ns, qlen, prio);
+			return TCL_OK;
+		}
+	}
+	return Connector::command(argc, argv);
+}
+
+void QJUMP::activate_fid(int fid, long long bucket, long long time_interval_ns, int qlen, int prio) {
+	fid_qjump_itr it = qjumps_.find(fid);
+	if (it != qjumps_.end()) {
+		QJUMP_Value* qjump_val = it->second;
+		qjumps_.erase(it);
+		delete qjump_val;
+	}
+	QJUMP_Value* qjump = new QJUMP_Value(this);
+	qjump->flow_id_ = fid;
+	qjump->bucket_size_ = bucket;
+	qjump->tokens_ = bucket;
+	qjump->time_interval_ = time_interval_ns / 1000000000.0;
+	qjump->queue_len_ = qlen;
+	qjump->prio_ = prio;
+	qjumps_.insert(fid_qjump_val(fid, qjump));
+	qjump->qjump_timer_.resched(qjump->time_interval_);
+}
+
+void QJUMP_Timer::expire(Event* /*e*/) {
+	qjump_value_->timeout(0);
+}
+
+static class QJUMPClass : public TclClass {
+
+public:
+  QJUMPClass() : TclClass ("QJUMP") {
+  }
+
+  TclObject* create(int, const char*const*) {
+    return (new QJUMP());
+  }
+}class_qjump;
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/adc/qjump.h ns-allinone-2.34-qjump/ns-2.34/adc/qjump.h
--- ns-allinone-2.34-pfabric/ns-2.34/adc/qjump.h	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/adc/qjump.h	2015-03-04 23:13:41.190555793 +0000
@@ -0,0 +1,62 @@
+#ifndef ns_qjump_h
+#define ns_qjump_h
+
+#include "connector.h"
+#include "timer-handler.h"
+
+#include <map>
+
+using namespace std;
+
+class QJUMP;
+class QJUMP_Value;
+
+class QJUMP_Timer : public TimerHandler {
+ 
+ public:
+ QJUMP_Timer(QJUMP_Value *r) : TimerHandler() {
+    qjump_value_ = r;
+  }
+
+ protected:
+  virtual void expire(Event *e);
+  QJUMP_Value *qjump_value_;
+
+};
+
+class QJUMP_Value {
+
+ public:
+  QJUMP_Value(QJUMP *qjump);
+  ~QJUMP_Value();
+  void timeout(int);
+  int flow_id_;
+  long long bucket_size_;
+  long long tokens_;
+  double time_interval_;
+  int queue_len_;
+  //  double last_update_time_;
+  PacketQueue* packet_queue_;
+  QJUMP_Timer qjump_timer_;
+  int prio_;
+  QJUMP *qjump_;
+
+};
+
+typedef map<int, QJUMP_Value*> fid_qjump;
+typedef fid_qjump::iterator fid_qjump_itr;
+typedef fid_qjump::value_type fid_qjump_val;
+
+class QJUMP : public Connector {
+
+ public:
+  int command(int argc, const char*const* argv);
+
+ protected:
+  void recv(Packet *, Handler *);
+  void activate_fid(int fid, long long bucket, long long time_interval_ns, int qlen, int prio);
+  fid_qjump qjumps_;
+
+};
+
+#endif
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/adc/tbf.cc ns-allinone-2.34-qjump/ns-2.34/adc/tbf.cc
--- ns-allinone-2.34-pfabric/ns-2.34/adc/tbf.cc	2015-03-04 17:49:02.750750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/adc/tbf.cc	2015-03-04 23:13:41.190555793 +0000
@@ -45,118 +45,156 @@
    c. Max. Queue Length (a finite length would allow this to be used as  policer as packets are dropped after queue gets full)
    */
 
+#include <string>
+#include <sstream>
+
 #include "connector.h" 
 #include "packet.h"
 #include "queue.h"
 #include "tbf.h"
 
-TBF::TBF() :tokens_(0),tbf_timer_(this), init_(1)
-{
-	q_=new PacketQueue();
-	bind_bw("rate_",&rate_);
-	bind("bucket_",&bucket_);
-	bind("qlen_",&qlen_);
+TBF_Value::TBF_Value(TBF *tbf): tbf_(tbf), tokens_(0), tbf_timer_(this), init_(1) {
+	q_ = new PacketQueue();
 }
-	
-TBF::~TBF()
-{
+
+TBF_Value::~TBF_Value() {
 	if (q_->length() != 0) {
 		//Clear all pending timers
 		tbf_timer_.cancel();
 		//Free up the packetqueue
-		for (Packet *p=q_->head();p!=0;p=p->next_) 
+		for (Packet *p = q_->head(); p != 0; p = p->next_) 
 			Packet::free(p);
 	}
 	delete q_;
 }
 
-
-void TBF::recv(Packet *p, Handler *)
-{
-	//start with a full bucket
-	if (init_) {
-		tokens_=bucket_;
-		lastupdatetime_ = Scheduler::instance().clock();
-		init_=0;
+// TBF::~TBF() {
+// 	// TODO(ionel): Delete TBF_Values from tbfs_.
+// }
+
+void TBF::recv(Packet *p, Handler *) {
+	hdr_ip* iph = hdr_ip::access(p);
+	fid_tbf_itr it = tbfs_.find(iph->flowid());
+	if (it == tbfs_.end()) {
+		// Just send packets because the rate limiting is not active for this flow.
+		target_->recv(p);
+		return;
+	}
+	TBF_Value* tbf = it->second;
+	iph->prio() = tbf->prio_;
+	if (tbf->init_) {
+		//start with a full bucket
+		//		tbf->tokens_ = tbf->bucket_;
+		tbf->tokens_ = tbf->bucket_;
+		tbf->lastupdatetime_ = Scheduler::instance().clock();
+		tbf->init_ = 0;
 	}
 
-	
-	hdr_cmn *ch=hdr_cmn::access(p);
-
+	hdr_cmn *ch = hdr_cmn::access(p);
 	//enque packets appropriately if a non-zero q already exists
-	if (q_->length() !=0) {
-		if (q_->length() < qlen_) {
-			q_->enque(p);
+	if (tbf->q_->length() != 0) {
+		if (tbf->q_->length() < tbf->qlen_) {
+			tbf->q_->enque(p);
 			return;
 		}
-
 		drop(p);
 		return;
 	}
-
 	double tok;
-	tok = getupdatedtokens();
+	tok = tbf->getupdatedtokens();
 
-	int pktsize = ch->size()<<3;
-	if (tokens_ >=pktsize) {
+	int pktsize = ch->size() << 3;
+	if (tbf->tokens_ >= pktsize) {
 		target_->recv(p);
-		tokens_-=pktsize;
-	}
-	else {
-		
-		if (qlen_!=0) {
-			q_->enque(p);
-			tbf_timer_.resched((pktsize-tokens_)/rate_);
-		}
-		else {
+		tbf->tokens_ -= pktsize;
+	} else {
+		if (tbf->qlen_ != 0) {
+			tbf->q_->enque(p);
+			tbf->tbf_timer_.resched((pktsize - tbf->tokens_) / tbf->rate_);
+		} else {
 			drop(p);
 		}
 	}
 }
 
-double TBF::getupdatedtokens(void)
-{
-	double now=Scheduler::instance().clock();
+double TBF_Value::getupdatedtokens() {
+	double now = Scheduler::instance().clock();
 	
-	tokens_ += (now-lastupdatetime_)*rate_;
-	if (tokens_ > bucket_)
-		tokens_=bucket_;
+	tokens_ += (now - lastupdatetime_) * rate_;
+	if (tokens_ > bucket_) {
+		tokens_ = bucket_;
+	}
 	lastupdatetime_ = Scheduler::instance().clock();
 	return tokens_;
 }
 
-void TBF::timeout(int)
-{
+void TBF_Value::timeout(int) {
 	if (q_->length() == 0) {
 		fprintf (stderr,"ERROR in tbf\n");
 		abort();
 	}
 	
-	Packet *p=q_->deque();
+	Packet *p = q_->deque();
 	double tok;
 	tok = getupdatedtokens();
-	hdr_cmn *ch=hdr_cmn::access(p);
-	int pktsize = ch->size()<<3;
+	hdr_cmn *ch = hdr_cmn::access(p);
+	int pktsize = ch->size() << 3;
 
 	//We simply send the packet here without checking if we have enough tokens
 	//because the timer is supposed to fire at the right time
-	target_->recv(p);
-	tokens_-=pktsize;
+	tbf_->target_->recv(p);
+	tokens_ -= pktsize;
 
 	if (q_->length() !=0 ) {
-		p=q_->head();
-		hdr_cmn *ch=hdr_cmn::access(p);
-		pktsize = ch->size()<<3;
-		tbf_timer_.resched((pktsize-tokens_)/rate_);
+		p = q_->head();
+		hdr_cmn *ch = hdr_cmn::access(p);
+		pktsize = ch->size() << 3;
+		tbf_timer_.resched((pktsize - tokens_) / rate_);
 	}
 }
 
+int TBF::command(int argc, const char* const* argv) {
+	if (argc == 7) {
+		if (strcmp("activate-fid", argv[1]) == 0) {
+			int fid = atoi(argv[2]);
+			long long rate;
+			long long bucket;
+			string text = argv[3];
+			stringstream buffer_rate(text);
+			buffer_rate >> rate;
+			text = argv[4];
+			stringstream buffer_bucket(text);
+			buffer_bucket >> bucket;
+			int qlen = atoi(argv[5]);
+			int prio = atoi(argv[6]);
+			activate_fid(fid, rate, bucket, qlen, prio);
+			return TCL_OK;
+		}
+	}
+	return Connector::command(argc, argv);
+}
+
+void TBF::activate_fid(int fid, long long rate, long long bucket, int qlen, int prio) {
+	fid_tbf_itr it = tbfs_.find(fid);
+	if (it != tbfs_.end()) {
+		TBF_Value* tbf_val = it->second;
+		tbfs_.erase(it);
+		delete tbf_val;
+	}
+	TBF_Value* tbf = new TBF_Value(this);
+	tbf->flow_id_ = fid;
+	tbf->rate_ = rate;
+	tbf->bucket_ = bucket;
+	tbf->qlen_ = qlen;
+	tbf->prio_ = prio;
+	tbfs_.insert(fid_tbf_val(fid, tbf));
+}
+
 void TBF_Timer::expire(Event* /*e*/)
 {
-	tbf_->timeout(0);
+	tbf_value_->timeout(0);
 }
 
-
 static class TBFClass : public TclClass {
 public:
 	TBFClass() : TclClass ("TBF") {}
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/adc/tbf.h ns-allinone-2.34-qjump/ns-2.34/adc/tbf.h
--- ns-allinone-2.34-pfabric/ns-2.34/adc/tbf.h	2015-03-04 17:49:02.750750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/adc/tbf.h	2015-03-04 23:13:41.190555793 +0000
@@ -45,34 +45,56 @@
 #include "connector.h"
 #include "timer-handler.h"
 
+#include <map>
+
+using namespace std;
+
 class TBF;
+class TBF_Value;
 
 class TBF_Timer : public TimerHandler {
 public:
-	TBF_Timer(TBF *t) : TimerHandler() { tbf_ = t;}
+	TBF_Timer(TBF_Value *t) : TimerHandler() {
+		tbf_value_ = t;
+	}
 	
 protected:
 	virtual void expire(Event *e);
-	TBF *tbf_;
+	TBF_Value *tbf_value_;
 };
 
-
-class TBF : public Connector {
+class TBF_Value {
 public:
-	TBF();
-	~TBF();
+	TBF_Value(TBF *tbf);
+	~TBF_Value();
 	void timeout(int);
-protected:
-	void recv(Packet *, Handler *);
+
 	double getupdatedtokens();
-	double tokens_; //acumulated tokens
-	double rate_; //token bucket rate
-	int bucket_; //bucket depth
+	int flow_id_;
+	long long tokens_;
+	long long rate_;
+	long long bucket_;
 	int qlen_;
 	double lastupdatetime_;
 	PacketQueue *q_;
 	TBF_Timer tbf_timer_;
 	int init_;
+	int prio_;
+	TBF *tbf_;
+};
+
+typedef map<int, TBF_Value*> fid_tbf;
+typedef fid_tbf::iterator fid_tbf_itr;
+typedef fid_tbf::value_type fid_tbf_val;
+
+class TBF : public Connector {
+public:
+	int command(int argc, const char*const* argv);
+protected:
+	void recv(Packet *, Handler *);
+	void activate_fid(int fid, long long rate, long long bucket, int qlen, int prio);
+
+	fid_tbf tbfs_;
 };
 
 #endif
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/autoconf.h ns-allinone-2.34-qjump/ns-2.34/autoconf.h
--- ns-allinone-2.34-pfabric/ns-2.34/autoconf.h	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/autoconf.h	2015-03-04 23:13:41.158555793 +0000
@@ -0,0 +1,98 @@
+/* autoconf.h.  Generated from autoconf.h.in by configure.  */
+/* -*-	Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
+/*
+ * Copyright (c) 1997 University of Southern California.
+ * All rights reserved.                                            
+ *                                                                
+ * Redistribution and use in source and binary forms are permitted
+ * provided that the above copyright notice and this paragraph are
+ * duplicated in all such forms and that any documentation, advertising
+ * materials, and other materials related to such distribution and use
+ * acknowledge that the software was developed by the University of
+ * Southern California, Information Sciences Institute.  The name of the
+ * University may not be used to endorse or promote products derived from
+ * this software without specific prior written permission.
+ * 
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
+ * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ */
+
+/* This file should contain variables changed only by autoconf. */
+
+#define NSPERL_PATH "@PERL@"
+#define NSTCLSH_PATH "@V_TCLSH@"
+
+/* If you need these from tcl, see the file tcl/lib/ns-autoconf.tcl.in */
+
+/*
+ * Put autoconf #define's here to keep them off the command line.
+ * see autoconf.info(Header Templates) in the autoconf docs.
+ */
+
+#define _GNU_SOURCE 1
+
+/* what does random(3) return? */
+#define RANDOM_RETURN_TYPE long
+
+/* type definitions */
+/* #undef int8_t */
+/* #undef int16_t */
+/* #undef int32_t */
+/* #undef u_int8_t */
+/* #undef u_int16_t */
+/* #undef u_int32_t */
+
+/* 64-bits */
+#define HAVE_INT64 1
+#define SIZEOF_LONG 8
+/* #undef int64_t */
+
+/* socklen_t (for nse) */
+#define HAVE_SOCKLEN_T 1
+
+/* functions */
+#define HAVE_BCOPY 1
+#define HAVE_BZERO 1
+#define HAVE_GETRUSAGE 1
+#define HAVE_SBRK 1
+#define HAVE_SNPRINTF 1
+#define HAVE_STRTOLL 1
+#define HAVE_STRTOQ 1
+/* #undef HAVE_ADDR2ASCII */
+#define HAVE_FEENABLEEXCEPT 1
+
+/* headers */
+#define STDC_HEADERS 1
+#define HAVE_STRING_H 1
+#define HAVE_STRINGS_H 1
+#define HAVE_ARPA_INET_H 1
+#define HAVE_NETINET_IN_H 1
+#define HAVE_NET_ETHERNET_H 1
+#define HAVE_FENV_H 1
+
+/* structures */
+#define HAVE_ETHER_HEADER_STRUCT 1
+#define HAVE_ETHER_ADDRESS_STRUCT 1
+
+/* constants */
+#define HAVE_SIOCGIFHWADDR 1
+
+
+/* stl */
+#ifdef __cplusplus
+#define HAVE_STL 1
+
+#define CPP_REQUIRES_NAMESPACE 1
+#ifdef CPP_REQUIRES_NAMESPACE
+
+#ifndef CPP_NAMESPACE
+#define CPP_NAMESPACE std
+#endif
+
+
+using namespace CPP_NAMESPACE;
+#endif /* CPP_NAMESPACE */
+#endif /* __cplusplus */
+
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/common/connector.h ns-allinone-2.34-qjump/ns-2.34/common/connector.h
--- ns-allinone-2.34-pfabric/ns-2.34/common/connector.h	2015-03-04 17:49:02.754750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/common/connector.h	2015-03-04 23:13:41.194555793 +0000
@@ -49,13 +49,14 @@ public:
 	void target (NsObject *target) { target_ = target; }
 	virtual void drop(Packet* p);
 	void setDropTarget(NsObject *dt) {drop_ = dt; } 
+	NsObject* target_;
 protected:
 	virtual void drop(Packet* p, const char *s);
 	int command(int argc, const char*const* argv);
 	void recv(Packet*, Handler* callback = 0);
 	inline void send(Packet* p, Handler* h) { target_->recv(p, h); }
 
-	NsObject* target_;
+
 	NsObject* drop_;	// drop target for this connector
 };
 
Binary files ns-allinone-2.34-pfabric/ns-2.34/common/main-monolithic.o and ns-allinone-2.34-qjump/ns-2.34/common/main-monolithic.o differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/config.log ns-allinone-2.34-qjump/ns-2.34/config.log
--- ns-allinone-2.34-pfabric/ns-2.34/config.log	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/config.log	2015-03-04 23:13:41.190555793 +0000
@@ -0,0 +1,2364 @@
+This file contains any messages produced by compilers while
+running configure, to aid debugging if configure makes a mistake.
+
+It was created by configure, which was
+generated by GNU Autoconf 2.63.  Invocation command line was
+
+  $ ./configure 
+
+## --------- ##
+## Platform. ##
+## --------- ##
+
+hostname = eglon
+uname -m = x86_64
+uname -r = 3.13.0-35-generic
+uname -s = Linux
+uname -v = #62-Ubuntu SMP Fri Aug 15 01:58:42 UTC 2014
+
+/usr/bin/uname -p = unknown
+/bin/uname -X     = unknown
+
+/bin/arch              = unknown
+/usr/bin/arch -k       = unknown
+/usr/convex/getsysinfo = unknown
+/usr/bin/hostinfo      = unknown
+/bin/machine           = unknown
+/usr/bin/oslevel       = unknown
+/bin/universe          = unknown
+
+PATH: /usr/local/sbin
+PATH: /usr/local/bin
+PATH: /usr/sbin
+PATH: /usr/bin
+PATH: /sbin
+PATH: /bin
+PATH: /usr/games
+PATH: /usr/local/games
+PATH: /home/mpg39/ns2-2.34/ns-allinone-2.34/ns-2.34
+PATH: /home/mpg39/ns2-2.34/ns-allinone-2.34/ns-2.34
+
+
+## ----------- ##
+## Core tests. ##
+## ----------- ##
+
+configure:1933: checking for gcc
+configure:1949: found /usr/bin/gcc
+configure:1960: result: gcc
+configure:2192: checking for C compiler version
+configure:2200: gcc --version >&5
+gcc (Ubuntu 4.8.2-19ubuntu1) 4.8.2
+Copyright (C) 2013 Free Software Foundation, Inc.
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+configure:2204: $? = 0
+configure:2211: gcc -v >&5
+Using built-in specs.
+COLLECT_GCC=gcc
+COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper
+Target: x86_64-linux-gnu
+Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.8.2-19ubuntu1' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
+Thread model: posix
+gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) 
+configure:2215: $? = 0
+configure:2222: gcc -V >&5
+gcc: error: unrecognized command line option '-V'
+gcc: fatal error: no input files
+compilation terminated.
+configure:2226: $? = 4
+configure:2249: checking for C compiler default output file name
+configure:2271: gcc    conftest.c  >&5
+configure:2275: $? = 0
+configure:2313: result: a.out
+configure:2332: checking whether the C compiler works
+configure:2342: ./a.out
+configure:2346: $? = 0
+configure:2365: result: yes
+configure:2372: checking whether we are cross compiling
+configure:2374: result: no
+configure:2377: checking for suffix of executables
+configure:2384: gcc -o conftest    conftest.c  >&5
+configure:2388: $? = 0
+configure:2414: result: 
+configure:2420: checking for suffix of object files
+configure:2446: gcc -c   conftest.c >&5
+configure:2450: $? = 0
+configure:2475: result: o
+configure:2479: checking whether we are using the GNU C compiler
+configure:2508: gcc -c   conftest.c >&5
+configure:2515: $? = 0
+configure:2532: result: yes
+configure:2541: checking whether gcc accepts -g
+configure:2571: gcc -c -g  conftest.c >&5
+configure:2578: $? = 0
+configure:2679: result: yes
+configure:2696: checking for gcc option to accept ISO C89
+configure:2770: gcc  -c -g -O2  conftest.c >&5
+configure:2777: $? = 0
+configure:2800: result: none needed
+configure:2824: checking how to run the C preprocessor
+configure:2864: gcc -E  conftest.c
+configure:2871: $? = 0
+configure:2902: gcc -E  conftest.c
+conftest.c:8:28: fatal error: ac_nonexistent.h: No such file or directory
+ #include <ac_nonexistent.h>
+                            ^
+compilation terminated.
+configure:2909: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| /* end confdefs.h.  */
+| #include <ac_nonexistent.h>
+configure:2942: result: gcc -E
+configure:2971: gcc -E  conftest.c
+configure:2978: $? = 0
+configure:3009: gcc -E  conftest.c
+conftest.c:8:28: fatal error: ac_nonexistent.h: No such file or directory
+ #include <ac_nonexistent.h>
+                            ^
+compilation terminated.
+configure:3016: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| /* end confdefs.h.  */
+| #include <ac_nonexistent.h>
+configure:3056: checking for grep that handles long lines and -e
+configure:3116: result: /bin/grep
+configure:3121: checking for egrep
+configure:3185: result: /bin/grep -E
+configure:3190: checking for ANSI C header files
+configure:3220: gcc -c -g -O2  conftest.c >&5
+configure:3227: $? = 0
+configure:3326: gcc -o conftest -g -O2   conftest.c  >&5
+configure:3330: $? = 0
+configure:3336: ./conftest
+configure:3340: $? = 0
+configure:3358: result: yes
+configure:3382: checking for sys/types.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3382: checking for sys/stat.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3382: checking for stdlib.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3382: checking for string.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3382: checking for memory.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3382: checking for strings.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3382: checking for inttypes.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3382: checking for stdint.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3382: checking for unistd.h
+configure:3403: gcc -c -g -O2  conftest.c >&5
+configure:3410: $? = 0
+configure:3427: result: yes
+configure:3452: checking minix/config.h usability
+configure:3469: gcc -c -g -O2  conftest.c >&5
+conftest.c:51:26: fatal error: minix/config.h: No such file or directory
+ #include <minix/config.h>
+                          ^
+compilation terminated.
+configure:3476: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| #include <minix/config.h>
+configure:3490: result: no
+configure:3494: checking minix/config.h presence
+configure:3509: gcc -E  conftest.c
+conftest.c:18:26: fatal error: minix/config.h: No such file or directory
+ #include <minix/config.h>
+                          ^
+compilation terminated.
+configure:3516: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| /* end confdefs.h.  */
+| #include <minix/config.h>
+configure:3530: result: no
+configure:3558: checking for minix/config.h
+configure:3565: result: no
+configure:3596: checking whether it is safe to define __EXTENSIONS__
+configure:3624: gcc -c -g -O2  conftest.c >&5
+configure:3631: $? = 0
+configure:3646: result: yes
+configure:3785: checking build system type
+configure:3803: result: x86_64-unknown-linux-gnu
+configure:3825: checking host system type
+configure:3840: result: x86_64-unknown-linux-gnu
+configure:3862: checking target system type
+configure:3877: result: x86_64-unknown-linux-gnu
+configure:3954: checking for gcc
+configure:3981: result: gcc
+configure:4213: checking for C compiler version
+configure:4221: gcc --version >&5
+gcc (Ubuntu 4.8.2-19ubuntu1) 4.8.2
+Copyright (C) 2013 Free Software Foundation, Inc.
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+configure:4225: $? = 0
+configure:4232: gcc -v >&5
+Using built-in specs.
+COLLECT_GCC=gcc
+COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper
+Target: x86_64-linux-gnu
+Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.8.2-19ubuntu1' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
+Thread model: posix
+gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) 
+configure:4236: $? = 0
+configure:4243: gcc -V >&5
+gcc: error: unrecognized command line option '-V'
+gcc: fatal error: no input files
+compilation terminated.
+configure:4247: $? = 4
+configure:4250: checking whether we are using the GNU C compiler
+configure:4303: result: yes
+configure:4312: checking whether gcc accepts -g
+configure:4450: result: yes
+configure:4467: checking for gcc option to accept ISO C89
+configure:4571: result: none needed
+configure:4647: checking for g++
+configure:4663: found /usr/bin/g++
+configure:4674: result: g++
+configure:4701: checking for C++ compiler version
+configure:4709: g++ --version >&5
+g++ (Ubuntu 4.8.2-19ubuntu1) 4.8.2
+Copyright (C) 2013 Free Software Foundation, Inc.
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+configure:4713: $? = 0
+configure:4720: g++ -v >&5
+Using built-in specs.
+COLLECT_GCC=g++
+COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.8/lto-wrapper
+Target: x86_64-linux-gnu
+Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.8.2-19ubuntu1' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-libmudflap --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
+Thread model: posix
+gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) 
+configure:4724: $? = 0
+configure:4731: g++ -V >&5
+g++: error: unrecognized command line option '-V'
+g++: fatal error: no input files
+compilation terminated.
+configure:4735: $? = 4
+configure:4738: checking whether we are using the GNU C++ compiler
+configure:4767: g++ -c   conftest.cpp >&5
+configure:4774: $? = 0
+configure:4791: result: yes
+configure:4800: checking whether g++ accepts -g
+configure:4830: g++ -c -g  conftest.cpp >&5
+configure:4837: $? = 0
+configure:4938: result: yes
+configure:4961: checking for ANSI C header files
+configure:5129: result: yes
+configure:5144: checking for string.h
+configure:5151: result: yes
+configure:5295: checking for main in -lXbsd
+configure:5324: gcc -o conftest -g -O2   conftest.c -lXbsd   >&5
+/usr/bin/ld: cannot find -lXbsd
+collect2: error: ld returned 1 exit status
+configure:5331: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| /* end confdefs.h.  */
+| 
+| 
+| int
+| main ()
+| {
+| return main ();
+|   ;
+|   return 0;
+| }
+configure:5352: result: no
+configure:5358: checking for socket in -lsocket
+configure:5393: gcc -o conftest -g -O2   conftest.c -lsocket   >&5
+/usr/bin/ld: cannot find -lsocket
+collect2: error: ld returned 1 exit status
+configure:5400: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| /* end confdefs.h.  */
+| 
+| /* Override any GCC internal prototype to avoid an error.
+|    Use char because int might match the return type of a GCC
+|    builtin and then its argument prototype would still apply.  */
+| #ifdef __cplusplus
+| extern "C"
+| #endif
+| char socket ();
+| int
+| main ()
+| {
+| return socket ();
+|   ;
+|   return 0;
+| }
+configure:5421: result: no
+configure:5427: checking for gethostbyname in -lnsl
+configure:5462: gcc -o conftest -g -O2   conftest.c -lnsl   >&5
+configure:5469: $? = 0
+configure:5490: result: yes
+configure:5496: checking for dcgettext in -lintl
+configure:5531: gcc -o conftest -g -O2   conftest.c -lintl   >&5
+conftest.c:32:6: warning: conflicting types for built-in function 'dcgettext' [enabled by default]
+ char dcgettext ();
+      ^
+/usr/bin/ld: cannot find -lintl
+collect2: error: ld returned 1 exit status
+configure:5538: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| /* end confdefs.h.  */
+| 
+| /* Override any GCC internal prototype to avoid an error.
+|    Use char because int might match the return type of a GCC
+|    builtin and then its argument prototype would still apply.  */
+| #ifdef __cplusplus
+| extern "C"
+| #endif
+| char dcgettext ();
+| int
+| main ()
+| {
+| return dcgettext ();
+|   ;
+|   return 0;
+| }
+configure:5559: result: no
+configure:5565: checking for getnodebyname in -ldnet_stub
+configure:5600: gcc -o conftest -g -O2   conftest.c -ldnet_stub   >&5
+/usr/bin/ld: cannot find -ldnet_stub
+collect2: error: ld returned 1 exit status
+configure:5607: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| /* end confdefs.h.  */
+| 
+| /* Override any GCC internal prototype to avoid an error.
+|    Use char because int might match the return type of a GCC
+|    builtin and then its argument prototype would still apply.  */
+| #ifdef __cplusplus
+| extern "C"
+| #endif
+| char getnodebyname ();
+| int
+| main ()
+| {
+| return getnodebyname ();
+|   ;
+|   return 0;
+| }
+configure:5628: result: no
+configure:5674: checking that g++ can handle -O2
+configure:5705: gcc -c -g -O2  conftest.c >&5
+configure:5712: $? = 0
+configure:5717: result: yes
+configure:5841: checking if C++ libraries work without any namespace
+configure:5867: g++ -c -g -O2  conftest.cpp >&5
+conftest.cpp: In function 'int main()':
+conftest.cpp:30:1: error: 'cout' was not declared in this scope
+ cout.fail();
+ ^
+conftest.cpp:30:1: note: suggested alternative:
+In file included from conftest.cpp:25:0:
+/usr/include/c++/4.8/iostream:61:18: note:   'std::cout'
+   extern ostream cout;  /// Linked to standard output
+                  ^
+configure:5874: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| /* end confdefs.h.  */
+| #include <iostream>
+| 
+| int
+| main ()
+| {
+| cout.fail();
+| 
+|   ;
+|   return 0;
+| }
+configure:5887: result: no
+configure:5896: checking if C++ libraries work with namespace std
+configure:5922: g++ -c -g -O2  conftest.cpp >&5
+configure:5929: $? = 0
+configure:5934: result: yes
+configure:5952: checking if STL works without any namespace
+configure:5977: g++ -c -g -O2  conftest.cpp >&5
+conftest.cpp: In function 'int main()':
+conftest.cpp:30:1: error: 'list' was not declared in this scope
+ list<int> test;
+ ^
+conftest.cpp:30:1: note: suggested alternative:
+In file included from /usr/include/c++/4.8/list:63:0,
+                 from conftest.cpp:25:
+/usr/include/c++/4.8/bits/stl_list.h:438:11: note:   'std::list'
+     class list : protected _List_base<_Tp, _Alloc>
+           ^
+conftest.cpp:30:6: error: expected primary-expression before 'int'
+ list<int> test;
+      ^
+conftest.cpp:30:6: error: expected ';' before 'int'
+configure:5984: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| /* end confdefs.h.  */
+| #include <list>
+| 
+| int
+| main ()
+| {
+| list<int> test;
+| 
+|   ;
+|   return 0;
+| }
+configure:5997: result: no
+configure:6006: checking if STL works with namespace std
+configure:6032: g++ -c -g -O2  conftest.cpp >&5
+configure:6039: $? = 0
+configure:6044: result: yes
+configure:6123: checking should use STL
+configure:6147: result: yes
+configure:6394: checking for tcl.h
+configure:6447: result: -I../include
+configure:6453: checking for tclInt.h
+configure:6506: result: -I../include
+configure:6512: checking for libtcl8.4
+configure:6576: result: -L../lib -ltcl8.4
+configure:6582: checking for init.tcl
+configure:6621: result: ../lib/tcl8.4
+configure:6638: checking for http.tcl
+configure:6677: result: ../lib/tcl8.4/http1.0
+configure:6682: checking Tcl http.tcl library
+configure:6686: result: yes
+configure:6709: checking for tclsh8.4.18
+configure:6742: result: no
+configure:6709: checking for tclsh8.4
+configure:6727: found ../bin/tclsh8.4
+configure:6739: result: ../bin/tclsh8.4
+configure:6979: checking for tk.h
+configure:7032: result: -I../include
+configure:7038: checking for libtk8.4
+configure:7102: result: -L../lib -ltk8.4
+configure:7108: checking for tk.tcl
+configure:7147: result: ../lib/tk8.4
+configure:7246: checking for otcl.h
+configure:7299: result: -I../otcl
+configure:7305: checking for libotcl1.13
+configure:7369: result: -L../otcl -lotcl
+configure:7496: checking for tclcl.h
+configure:7549: result: -I../tclcl-1.19
+configure:7555: checking for libtclcl
+configure:7619: result: -L../tclcl-1.19 -ltclcl
+configure:7625: checking for tcl2c++
+configure:7664: result: ../tclcl-1.19
+configure:7872: gcc -E  conftest.c
+configure:7879: $? = 0
+configure:7913: checking for XOpenDisplay in -lX11
+configure:7948: gcc -o conftest -g -O2   conftest.c -lX11   >&5
+configure:7955: $? = 0
+configure:7976: result: yes
+configure:8002: checking for XShmAttach in -lXext
+configure:8037: gcc -o conftest -g -O2   conftest.c -lXext -lX11  >&5
+configure:8044: $? = 0
+configure:8065: result: yes
+configure:8136: checking for libtcldbg
+configure:8181: result: no
+configure:8291: checking dmalloc
+configure:8293: result: not requested with --with-dmalloc
+configure:8574: checking for perl
+configure:8613: result: /usr/bin
+/usr/bin/perl -e require 5.002
+configure:8722: checking for ANSI C header files
+configure:8890: result: yes
+configure:8924: checking arpa/inet.h usability
+configure:8941: gcc -c -g -O2  conftest.c >&5
+configure:8948: $? = 0
+configure:8962: result: yes
+configure:8966: checking arpa/inet.h presence
+configure:8981: gcc -E  conftest.c
+configure:8988: $? = 0
+configure:9002: result: yes
+configure:9030: checking for arpa/inet.h
+configure:9039: result: yes
+configure:8924: checking fenv.h usability
+configure:8941: gcc -c -g -O2  conftest.c >&5
+configure:8948: $? = 0
+configure:8962: result: yes
+configure:8966: checking fenv.h presence
+configure:8981: gcc -E  conftest.c
+configure:8988: $? = 0
+configure:9002: result: yes
+configure:9030: checking for fenv.h
+configure:9039: result: yes
+configure:8924: checking netinet/in.h usability
+configure:8941: gcc -c -g -O2  conftest.c >&5
+configure:8948: $? = 0
+configure:8962: result: yes
+configure:8966: checking netinet/in.h presence
+configure:8981: gcc -E  conftest.c
+configure:8988: $? = 0
+configure:9002: result: yes
+configure:9030: checking for netinet/in.h
+configure:9039: result: yes
+configure:8913: checking for string.h
+configure:8920: result: yes
+configure:8913: checking for strings.h
+configure:8920: result: yes
+configure:8924: checking time.h usability
+configure:8941: gcc -c -g -O2  conftest.c >&5
+configure:8948: $? = 0
+configure:8962: result: yes
+configure:8966: checking time.h presence
+configure:8981: gcc -E  conftest.c
+configure:8988: $? = 0
+configure:9002: result: yes
+configure:9030: checking for time.h
+configure:9039: result: yes
+configure:8913: checking for unistd.h
+configure:8920: result: yes
+configure:8924: checking net/ethernet.h usability
+configure:8941: gcc -c -g -O2  conftest.c >&5
+configure:8948: $? = 0
+configure:8962: result: yes
+configure:8966: checking net/ethernet.h presence
+configure:8981: gcc -E  conftest.c
+configure:8988: $? = 0
+configure:9002: result: yes
+configure:9030: checking for net/ethernet.h
+configure:9039: result: yes
+configure:9055: checking for main in -lm
+configure:9084: gcc -o conftest -g -O2   conftest.c -lm   >&5
+configure:9091: $? = 0
+configure:9112: result: yes
+configure:9137: checking for bcopy
+configure:9193: gcc -o conftest -g -O2   conftest.c -lm  >&5
+conftest.c:69:6: warning: conflicting types for built-in function 'bcopy' [enabled by default]
+ char bcopy ();
+      ^
+configure:9200: $? = 0
+configure:9222: result: yes
+configure:9137: checking for bzero
+configure:9193: gcc -o conftest -g -O2   conftest.c -lm  >&5
+conftest.c:70:6: warning: conflicting types for built-in function 'bzero' [enabled by default]
+ char bzero ();
+      ^
+configure:9200: $? = 0
+configure:9222: result: yes
+configure:9137: checking for fesetprecision
+configure:9193: gcc -o conftest -g -O2   conftest.c -lm  >&5
+/tmp/cc5CP7KH.o: In function `main':
+/home/mpg39/ns2-2.34/ns-allinone-2.34/ns-2.34/conftest.c:82: undefined reference to `fesetprecision'
+collect2: error: ld returned 1 exit status
+configure:9200: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| /* end confdefs.h.  */
+| /* Define fesetprecision to an innocuous variant, in case <limits.h> declares fesetprecision.
+|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+| #define fesetprecision innocuous_fesetprecision
+| 
+| /* System header to define __stub macros and hopefully few prototypes,
+|     which can conflict with char fesetprecision (); below.
+|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+|     <limits.h> exists even on freestanding compilers.  */
+| 
+| #ifdef __STDC__
+| # include <limits.h>
+| #else
+| # include <assert.h>
+| #endif
+| 
+| #undef fesetprecision
+| 
+| /* Override any GCC internal prototype to avoid an error.
+|    Use char because int might match the return type of a GCC
+|    builtin and then its argument prototype would still apply.  */
+| #ifdef __cplusplus
+| extern "C"
+| #endif
+| char fesetprecision ();
+| /* The GNU C library defines this for functions which it implements
+|     to always fail with ENOSYS.  Some functions are actually named
+|     something starting with __ and the normal name is an alias.  */
+| #if defined __stub_fesetprecision || defined __stub___fesetprecision
+| choke me
+| #endif
+| 
+| int
+| main ()
+| {
+| return fesetprecision ();
+|   ;
+|   return 0;
+| }
+configure:9222: result: no
+configure:9137: checking for feenableexcept
+configure:9193: gcc -o conftest -g -O2   conftest.c -lm  >&5
+configure:9200: $? = 0
+configure:9222: result: yes
+configure:9137: checking for getrusage
+configure:9193: gcc -o conftest -g -O2   conftest.c -lm  >&5
+configure:9200: $? = 0
+configure:9222: result: yes
+configure:9137: checking for sbrk
+configure:9193: gcc -o conftest -g -O2   conftest.c -lm  >&5
+configure:9200: $? = 0
+configure:9222: result: yes
+configure:9137: checking for snprintf
+configure:9193: gcc -o conftest -g -O2   conftest.c -lm  >&5
+conftest.c:74:6: warning: conflicting types for built-in function 'snprintf' [enabled by default]
+ char snprintf ();
+      ^
+configure:9200: $? = 0
+configure:9222: result: yes
+configure:9235: checking return type of random
+configure:9265: gcc -o conftest -g -O2   conftest.c -lm  >&5
+configure:9269: $? = 0
+configure:9275: ./conftest
+configure:9279: $? = 0
+configure:9281: result: long
+configure:9308: checking for int8_t
+configure:9336: gcc -c -g -O2  conftest.c >&5
+configure:9343: $? = 0
+configure:9370: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:89:21: error: expected expression before ')' token
+ if (sizeof ((int8_t)))
+                     ^
+configure:9377: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| if (sizeof ((int8_t)))
+| 	  return 0;
+|   ;
+|   return 0;
+| }
+configure:9400: result: yes
+configure:9412: checking for int16_t
+configure:9440: gcc -c -g -O2  conftest.c >&5
+configure:9447: $? = 0
+configure:9474: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:89:22: error: expected expression before ')' token
+ if (sizeof ((int16_t)))
+                      ^
+configure:9481: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| if (sizeof ((int16_t)))
+| 	  return 0;
+|   ;
+|   return 0;
+| }
+configure:9504: result: yes
+configure:9516: checking for int32_t
+configure:9544: gcc -c -g -O2  conftest.c >&5
+configure:9551: $? = 0
+configure:9578: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:89:22: error: expected expression before ')' token
+ if (sizeof ((int32_t)))
+                      ^
+configure:9585: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| if (sizeof ((int32_t)))
+| 	  return 0;
+|   ;
+|   return 0;
+| }
+configure:9608: result: yes
+configure:9620: checking for u_int8_t
+configure:9648: gcc -c -g -O2  conftest.c >&5
+configure:9655: $? = 0
+configure:9682: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:89:23: error: expected expression before ')' token
+ if (sizeof ((u_int8_t)))
+                       ^
+configure:9689: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| if (sizeof ((u_int8_t)))
+| 	  return 0;
+|   ;
+|   return 0;
+| }
+configure:9712: result: yes
+configure:9724: checking for u_int16_t
+configure:9752: gcc -c -g -O2  conftest.c >&5
+configure:9759: $? = 0
+configure:9786: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:89:24: error: expected expression before ')' token
+ if (sizeof ((u_int16_t)))
+                        ^
+configure:9793: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| if (sizeof ((u_int16_t)))
+| 	  return 0;
+|   ;
+|   return 0;
+| }
+configure:9816: result: yes
+configure:9828: checking for u_int32_t
+configure:9856: gcc -c -g -O2  conftest.c >&5
+configure:9863: $? = 0
+configure:9890: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:89:24: error: expected expression before ')' token
+ if (sizeof ((u_int32_t)))
+                        ^
+configure:9897: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| if (sizeof ((u_int32_t)))
+| 	  return 0;
+|   ;
+|   return 0;
+| }
+configure:9920: result: yes
+configure:9932: checking for u_char
+configure:9960: gcc -c -g -O2  conftest.c >&5
+configure:9967: $? = 0
+configure:9994: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:89:21: error: expected expression before ')' token
+ if (sizeof ((u_char)))
+                     ^
+configure:10001: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| if (sizeof ((u_char)))
+| 	  return 0;
+|   ;
+|   return 0;
+| }
+configure:10024: result: yes
+configure:10036: checking for u_int
+configure:10064: gcc -c -g -O2  conftest.c >&5
+configure:10071: $? = 0
+configure:10098: gcc -c -g -O2  conftest.c >&5
+conftest.c: In function 'main':
+conftest.c:89:20: error: expected expression before ')' token
+ if (sizeof ((u_int)))
+                    ^
+configure:10105: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| /* end confdefs.h.  */
+| #include <stdio.h>
+| #ifdef HAVE_SYS_TYPES_H
+| # include <sys/types.h>
+| #endif
+| #ifdef HAVE_SYS_STAT_H
+| # include <sys/stat.h>
+| #endif
+| #ifdef STDC_HEADERS
+| # include <stdlib.h>
+| # include <stddef.h>
+| #else
+| # ifdef HAVE_STDLIB_H
+| #  include <stdlib.h>
+| # endif
+| #endif
+| #ifdef HAVE_STRING_H
+| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+| #  include <memory.h>
+| # endif
+| # include <string.h>
+| #endif
+| #ifdef HAVE_STRINGS_H
+| # include <strings.h>
+| #endif
+| #ifdef HAVE_INTTYPES_H
+| # include <inttypes.h>
+| #endif
+| #ifdef HAVE_STDINT_H
+| # include <stdint.h>
+| #endif
+| #ifdef HAVE_UNISTD_H
+| # include <unistd.h>
+| #endif
+| int
+| main ()
+| {
+| if (sizeof ((u_int)))
+| 	  return 0;
+|   ;
+|   return 0;
+| }
+configure:10128: result: yes
+configure:10147: checking for strtoq
+configure:10203: gcc -o conftest -g -O2   conftest.c -lm  >&5
+configure:10210: $? = 0
+configure:10232: result: yes
+configure:10147: checking for strtoll
+configure:10203: gcc -o conftest -g -O2   conftest.c -lm  >&5
+configure:10210: $? = 0
+configure:10232: result: yes
+configure:10253: checking size of long
+configure:10558: gcc -o conftest -g -O2   conftest.c -lm  >&5
+configure:10562: $? = 0
+configure:10568: ./conftest
+configure:10572: $? = 0
+configure:10598: result: 8
+configure:10611: checking for strtol
+configure:10667: gcc -o conftest -g -O2   conftest.c -lm  >&5
+configure:10674: $? = 0
+configure:10694: result: yes
+configure:10699: checking for __int64_t
+configure:10724: gcc -o conftest -g -O2   conftest.c -lm  >&5
+conftest.c: In function 'main':
+conftest.c:57:10: error: unknown type name '__int64_t'
+ main() { __int64_t x; exit (sizeof(x) >= 8 ? 0 : 1); }
+          ^
+conftest.c:57:23: warning: incompatible implicit declaration of built-in function 'exit' [enabled by default]
+ main() { __int64_t x; exit (sizeof(x) >= 8 ? 0 : 1); }
+                       ^
+configure:10728: $? = 1
+configure: program exited with status 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| #define HAVE_STRTOQ 1
+| #define HAVE_STRTOLL 1
+| #define SIZEOF_LONG 8
+| /* end confdefs.h.  */
+| 
+| main() { __int64_t x; exit (sizeof(x) >= 8 ? 0 : 1); }
+| 
+configure:10755: result: no
+configure:10761: checking for long long
+configure:10786: gcc -o conftest -g -O2   conftest.c -lm  >&5
+conftest.c: In function 'main':
+conftest.c:57:23: warning: incompatible implicit declaration of built-in function 'exit' [enabled by default]
+ main() { long long x; exit (sizeof(x) >= 8 ? 0 : 1); }
+                       ^
+configure:10790: $? = 0
+configure:10796: ./conftest
+configure:10800: $? = 0
+configure:10817: result: yes
+configure:10825: checking for int64_t
+configure:10851: result: yes
+configure:10862: checking which kind of 64-bit int to use
+configure:10875: result: int64_t
+configure:10948: checking system version (for dynamic loading)
+configure:10968: result: Linux-3.13.0-35-generic
+configure:10976: checking for dlopen in -ldl
+configure:11011: gcc -o conftest -g -O2   conftest.c -ldl  -lm  >&5
+configure:11018: $? = 0
+configure:11039: result: yes
+configure:11777: checking dlfcn.h usability
+configure:11794: gcc -c -g -O2  conftest.c >&5
+configure:11801: $? = 0
+configure:11815: result: yes
+configure:11819: checking dlfcn.h presence
+configure:11834: gcc -E  conftest.c
+configure:11841: $? = 0
+configure:11855: result: yes
+configure:11883: checking for dlfcn.h
+configure:11890: result: yes
+configure:11903: checking for ns library name
+configure:11906: result: libns.so
+configure:11916: checking for struct ether_header
+configure:11949: gcc -c -g -O2  conftest.c >&5
+configure:11956: $? = 0
+configure:11966: result: found
+configure:11982: checking for struct ether_addr
+configure:12015: gcc -c -g -O2  conftest.c >&5
+configure:12022: $? = 0
+configure:12032: result: found
+configure:12052: checking for addr2ascii
+configure:12108: gcc -o conftest -g -O2   -Wl,-export-dynamic conftest.c -lm  >&5
+/tmp/ccN1qv3E.o: In function `main':
+/home/mpg39/ns2-2.34/ns-allinone-2.34/ns-2.34/conftest.c:93: undefined reference to `addr2ascii'
+collect2: error: ld returned 1 exit status
+configure:12115: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| #define HAVE_STRTOQ 1
+| #define HAVE_STRTOLL 1
+| #define SIZEOF_LONG 8
+| #define HAVE_INT64 1
+| #define HAVE_ETHER_HEADER_STRUCT 1
+| #define HAVE_ETHER_ADDRESS_STRUCT 1
+| /* end confdefs.h.  */
+| /* Define addr2ascii to an innocuous variant, in case <limits.h> declares addr2ascii.
+|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+| #define addr2ascii innocuous_addr2ascii
+| 
+| /* System header to define __stub macros and hopefully few prototypes,
+|     which can conflict with char addr2ascii (); below.
+|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+|     <limits.h> exists even on freestanding compilers.  */
+| 
+| #ifdef __STDC__
+| # include <limits.h>
+| #else
+| # include <assert.h>
+| #endif
+| 
+| #undef addr2ascii
+| 
+| /* Override any GCC internal prototype to avoid an error.
+|    Use char because int might match the return type of a GCC
+|    builtin and then its argument prototype would still apply.  */
+| #ifdef __cplusplus
+| extern "C"
+| #endif
+| char addr2ascii ();
+| /* The GNU C library defines this for functions which it implements
+|     to always fail with ENOSYS.  Some functions are actually named
+|     something starting with __ and the normal name is an alias.  */
+| #if defined __stub_addr2ascii || defined __stub___addr2ascii
+| choke me
+| #endif
+| 
+| int
+| main ()
+| {
+| return addr2ascii ();
+|   ;
+|   return 0;
+| }
+configure:12137: result: no
+configure:12175: gcc -o conftest -g -O2   -Wl,-export-dynamic conftest.c -lm  >&5
+configure:12179: $? = 0
+configure:12185: ./conftest
+configure:12189: $? = 0
+configure:12210: checking for Linux compliant tcphdr
+configure:12244: gcc -c -g -O2  conftest.c >&5
+configure:12251: $? = 0
+configure:12258: result: found
+configure:12274: checking for BSD compliant tcphdr
+configure:12308: gcc -c -g -O2  conftest.c >&5
+configure:12315: $? = 0
+configure:12321: result: found
+configure:12337: checking for socklen_t
+configure:12365: gcc -c -g -O2  conftest.c >&5
+configure:12372: $? = 0
+configure:12388: result: yes
+configure:12401: checking for main in -lpcap
+configure:12430: gcc -o conftest -g -O2   -Wl,-export-dynamic conftest.c -lpcap  -lm  >&5
+/usr/bin/ld: cannot find -lpcap
+collect2: error: ld returned 1 exit status
+configure:12437: $? = 1
+configure: failed program was:
+| /* confdefs.h.  */
+| #define PACKAGE_NAME ""
+| #define PACKAGE_TARNAME ""
+| #define PACKAGE_VERSION ""
+| #define PACKAGE_STRING ""
+| #define PACKAGE_BUGREPORT ""
+| #define STDC_HEADERS 1
+| #define HAVE_SYS_TYPES_H 1
+| #define HAVE_SYS_STAT_H 1
+| #define HAVE_STDLIB_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_MEMORY_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_INTTYPES_H 1
+| #define HAVE_STDINT_H 1
+| #define HAVE_UNISTD_H 1
+| #define __EXTENSIONS__ 1
+| #define _ALL_SOURCE 1
+| #define _GNU_SOURCE 1
+| #define _POSIX_PTHREAD_SEMANTICS 1
+| #define _TANDEM_SOURCE 1
+| #define STDC_HEADERS 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STL 1
+| #define CPP_REQUIRES_NAMESPACE 1
+| #define HAVE_TCL_H 1
+| #define HAVE_TCLINT_H 1
+| #define HAVE_LIBTCL8_4 1
+| #define HAVE_TK_H 1
+| #define HAVE_LIBTK8_4 1
+| #define HAVE_OTCL_H 1
+| #define HAVE_LIBOTCL1_13 1
+| #define HAVE_TCLCL_H 1
+| #define HAVE_LIBTCLCL 1
+| #define STDC_HEADERS 1
+| #define HAVE_ARPA_INET_H 1
+| #define HAVE_FENV_H 1
+| #define HAVE_NETINET_IN_H 1
+| #define HAVE_STRING_H 1
+| #define HAVE_STRINGS_H 1
+| #define HAVE_TIME_H 1
+| #define HAVE_UNISTD_H 1
+| #define HAVE_NET_ETHERNET_H 1
+| #define HAVE_LIBM 1
+| #define HAVE_BCOPY 1
+| #define HAVE_BZERO 1
+| #define HAVE_FEENABLEEXCEPT 1
+| #define HAVE_GETRUSAGE 1
+| #define HAVE_SBRK 1
+| #define HAVE_SNPRINTF 1
+| #define RANDOM_RETURN_TYPE long
+| #define HAVE_STRTOQ 1
+| #define HAVE_STRTOLL 1
+| #define SIZEOF_LONG 8
+| #define HAVE_INT64 1
+| #define HAVE_ETHER_HEADER_STRUCT 1
+| #define HAVE_ETHER_ADDRESS_STRUCT 1
+| #define HAVE_SIOCGIFHWADDR 1
+| #define HAVE_SOCKLEN_T 1
+| /* end confdefs.h.  */
+| 
+| 
+| int
+| main ()
+| {
+| return main ();
+|   ;
+|   return 0;
+| }
+configure:12458: result: no
+configure:12467: checking to make nse
+configure:12475: result: no
+configure:12523: checking for dlopen in -ldl
+configure:12586: result: yes
+configure:12787: checking for a BSD-compatible install
+configure:12855: result: /usr/bin/install -c
+configure:12972: creating ./config.status
+
+## ---------------------- ##
+## Running config.status. ##
+## ---------------------- ##
+
+This file was extended by config.status, which was
+generated by GNU Autoconf 2.63.  Invocation command line was
+
+  CONFIG_FILES    = 
+  CONFIG_HEADERS  = 
+  CONFIG_LINKS    = 
+  CONFIG_COMMANDS = 
+  $ ./config.status 
+
+on eglon
+
+config.status:838: creating Makefile
+config.status:838: creating tcl/lib/ns-autoconf.tcl
+config.status:838: creating indep-utils/webtrace-conv/ucb/Makefile
+config.status:838: creating indep-utils/webtrace-conv/dec/Makefile
+config.status:838: creating indep-utils/webtrace-conv/nlanr/Makefile
+config.status:838: creating indep-utils/webtrace-conv/epa/Makefile
+config.status:838: creating indep-utils/cmu-scen-gen/setdest/Makefile
+config.status:838: creating autoconf.h
+config.status:1054: autoconf.h is unchanged
+
+## ---------------- ##
+## Cache variables. ##
+## ---------------- ##
+
+ac_cv_build=x86_64-unknown-linux-gnu
+ac_cv_c_compiler_gnu=yes
+ac_cv_cxx_compiler_gnu=yes
+ac_cv_env_CCC_set=
+ac_cv_env_CCC_value=
+ac_cv_env_CC_set=
+ac_cv_env_CC_value=
+ac_cv_env_CFLAGS_set=
+ac_cv_env_CFLAGS_value=
+ac_cv_env_CPPFLAGS_set=
+ac_cv_env_CPPFLAGS_value=
+ac_cv_env_CPP_set=
+ac_cv_env_CPP_value=
+ac_cv_env_CXXFLAGS_set=
+ac_cv_env_CXXFLAGS_value=
+ac_cv_env_CXX_set=
+ac_cv_env_CXX_value=
+ac_cv_env_LDFLAGS_set=
+ac_cv_env_LDFLAGS_value=
+ac_cv_env_LIBS_set=
+ac_cv_env_LIBS_value=
+ac_cv_env_build_alias_set=
+ac_cv_env_build_alias_value=
+ac_cv_env_host_alias_set=
+ac_cv_env_host_alias_value=
+ac_cv_env_target_alias_set=
+ac_cv_env_target_alias_value=
+ac_cv_func_addr2ascii=no
+ac_cv_func_bcopy=yes
+ac_cv_func_bzero=yes
+ac_cv_func_feenableexcept=yes
+ac_cv_func_fesetprecision=no
+ac_cv_func_getrusage=yes
+ac_cv_func_sbrk=yes
+ac_cv_func_snprintf=yes
+ac_cv_func_strtol=yes
+ac_cv_func_strtoll=yes
+ac_cv_func_strtoq=yes
+ac_cv_header_arpa_inet_h=yes
+ac_cv_header_dlfcn_h=yes
+ac_cv_header_fenv_h=yes
+ac_cv_header_inttypes_h=yes
+ac_cv_header_memory_h=yes
+ac_cv_header_minix_config_h=no
+ac_cv_header_net_ethernet_h=yes
+ac_cv_header_netinet_in_h=yes
+ac_cv_header_stdc=yes
+ac_cv_header_stdint_h=yes
+ac_cv_header_stdlib_h=yes
+ac_cv_header_string_h=yes
+ac_cv_header_strings_h=yes
+ac_cv_header_sys_stat_h=yes
+ac_cv_header_sys_types_h=yes
+ac_cv_header_time_h=yes
+ac_cv_header_unistd_h=yes
+ac_cv_host=x86_64-unknown-linux-gnu
+ac_cv_lib_X11_XOpenDisplay=yes
+ac_cv_lib_Xbsd_main=no
+ac_cv_lib_Xext_XShmAttach=yes
+ac_cv_lib_dl_dlopen=yes
+ac_cv_lib_dnet_stub_getnodebyname=no
+ac_cv_lib_intl_dcgettext=no
+ac_cv_lib_m_main=yes
+ac_cv_lib_nsl_gethostbyname=yes
+ac_cv_lib_pcap_main=no
+ac_cv_lib_socket_socket=no
+ac_cv_objext=o
+ac_cv_path_EGREP='/bin/grep -E'
+ac_cv_path_GREP=/bin/grep
+ac_cv_path_V_TCLSH=../bin/tclsh8.4
+ac_cv_path_install='/usr/bin/install -c'
+ac_cv_prog_CPP='gcc -E'
+ac_cv_prog_ac_ct_CC=gcc
+ac_cv_prog_ac_ct_CXX=g++
+ac_cv_prog_cc_c89=
+ac_cv_prog_cc_g=yes
+ac_cv_prog_cxx_g=yes
+ac_cv_safe_to_define___extensions__=yes
+ac_cv_sizeof_long=8
+ac_cv_target=x86_64-unknown-linux-gnu
+ac_cv_type_int16_t=yes
+ac_cv_type_int32_t=yes
+ac_cv_type_int64_t=yes
+ac_cv_type_int8_t=yes
+ac_cv_type_socklen_t=yes
+ac_cv_type_u_char=yes
+ac_cv_type_u_int16_t=yes
+ac_cv_type_u_int32_t=yes
+ac_cv_type_u_int8_t=yes
+ac_cv_type_u_int=yes
+nsnam_cv_int64_t_HAVE_LONG_LONG=yes
+nsnam_cv_int64_t_HAVE___INT64_T=no
+
+## ----------------- ##
+## Output variables. ##
+## ----------------- ##
+
+CC='gcc'
+CFLAGS='-g -O2'
+CPP='gcc -E'
+CPPFLAGS=''
+CPP_NAMESPACE='std'
+CXX='g++'
+CXXFLAGS='-g -O2'
+DEFS='-DHAVE_CONFIG_H'
+DL_LD_FLAGS='-rdynamic'
+DL_LD_SEARCH_FLAGS=''
+DL_LIBS='-ldl'
+ECHO_C=''
+ECHO_N='-n'
+ECHO_T=''
+EGREP='/bin/grep -E'
+EXEEXT=''
+GREP='/bin/grep'
+INSTALL_DATA='${INSTALL} -m 644'
+INSTALL_PROGRAM='${INSTALL}'
+INSTALL_SCRIPT='${INSTALL}'
+LDFLAGS=' -Wl,-export-dynamic'
+LIBOBJS=''
+LIBS='-lm '
+LTLIBOBJS=''
+NSLIB='libns.so'
+OBJEXT='o'
+PACKAGE_BUGREPORT=''
+PACKAGE_NAME=''
+PACKAGE_STRING=''
+PACKAGE_TARNAME=''
+PACKAGE_VERSION=''
+PATH_SEPARATOR=':'
+PERL='/usr/bin/perl'
+PKG_SHLIB_CFLAGS=''
+SHELL='/bin/bash'
+SHLIB_CFLAGS='-fPIC'
+SHLIB_LD='gcc -shared'
+SHLIB_LD_LIBS=''
+SHLIB_SUFFIX='.so'
+V_ALL=''
+V_AR='ar cr'
+V_BROKEN_OBJ=''
+V_CCOPT='-O2 -Wall -Wno-write-strings'
+V_DEFINE='-DTCLCL_CLASSINSTVAR  -DNDEBUG -DLINUX_TCP_HEADER -DUSE_SHM'
+V_DEFINES='-DHAVE_LIBTCLCL -DHAVE_TCLCL_H -DHAVE_LIBOTCL1_13 -DHAVE_OTCL_H -DHAVE_LIBTK8_4 -DHAVE_TK_H -DHAVE_LIBTCL8_4 -DHAVE_TCLINT_H -DHAVE_TCL_H '
+V_IMPORT_LIBS=''
+V_INCLUDE=''
+V_INCLUDES='-I/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -I/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/usr/include/pcap'
+V_INCLUDE_X11=''
+V_LIB=' -lnsl -ldl'
+V_LIBRARY_TCL='../lib/tcl8.4'
+V_LIBRARY_TK='../lib/tk8.4'
+V_LIBS='-L/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -ltclcl -L/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -lotcl -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltk8.4 -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4'
+V_LIB_OTCL='-L/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -lotcl'
+V_LIB_TCL='-L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4'
+V_LIB_TCLCL='-L/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -ltclcl'
+V_LIB_TK='-L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltk8.4'
+V_LIB_X11='-lXext -lX11'
+V_LSSCRIPT=''
+V_NS_TCL_LIB_STL='$(NS_TCL_LIB_STL)'
+V_OBJ=''
+V_OBJ_CRYPT=''
+V_RANLIB='ranlib'
+V_SHELL=''
+V_SIGRET='void'
+V_STATIC=''
+V_STLOBJ='$(OBJ_STL)'
+V_TARCMD='tar cfh'
+V_TAR_EXTRA=''
+V_TAR_TARGET='linux-gnu'
+V_TCL2CPP='../tclcl-1.19/tcl2c++'
+V_TCLSH='/home/mpg39/ns2-2.34/ns-allinone-2.34/bin/tclsh8.4'
+V_TCL_LIBRARY_FILES='$(TCL_BASE_LIBRARY_FILES) ../lib/tcl8.4/http1.0/http.tcl'
+V_TKDOSNAMES='$(LIBRARY_TK)/optMenu.tcl $(LIBRARY_TK)/scrlbar.tcl'
+ac_ct_CC='gcc'
+ac_ct_CXX='g++'
+bindir='${exec_prefix}/bin'
+build='x86_64-unknown-linux-gnu'
+build_alias=''
+build_cpu='x86_64'
+build_nse=''
+build_os='linux-gnu'
+build_vendor='unknown'
+datadir='${datarootdir}'
+datarootdir='${prefix}/share'
+docdir='${datarootdir}/doc/${PACKAGE}'
+dvidir='${docdir}'
+exec_prefix='${prefix}'
+host='x86_64-unknown-linux-gnu'
+host_alias=''
+host_cpu='x86_64'
+host_os='linux-gnu'
+host_vendor='unknown'
+htmldir='${docdir}'
+includedir='${prefix}/include'
+infodir='${datarootdir}/info'
+libdir='${exec_prefix}/lib'
+libexecdir='${exec_prefix}/libexec'
+localedir='${datarootdir}/locale'
+localstatedir='${prefix}/var'
+mandir='${datarootdir}/man'
+oldincludedir='/usr/include'
+pdfdir='${docdir}'
+prefix='/usr/local'
+program_transform_name='s,x,x,'
+psdir='${docdir}'
+sbindir='${exec_prefix}/sbin'
+sharedstatedir='${prefix}/com'
+sysconfdir='${prefix}/etc'
+target='x86_64-unknown-linux-gnu'
+target_alias=''
+target_cpu='x86_64'
+target_os='linux-gnu'
+target_vendor='unknown'
+
+## ----------- ##
+## confdefs.h. ##
+## ----------- ##
+
+#define PACKAGE_NAME ""
+#define PACKAGE_TARNAME ""
+#define PACKAGE_VERSION ""
+#define PACKAGE_STRING ""
+#define PACKAGE_BUGREPORT ""
+#define STDC_HEADERS 1
+#define HAVE_SYS_TYPES_H 1
+#define HAVE_SYS_STAT_H 1
+#define HAVE_STDLIB_H 1
+#define HAVE_STRING_H 1
+#define HAVE_MEMORY_H 1
+#define HAVE_STRINGS_H 1
+#define HAVE_INTTYPES_H 1
+#define HAVE_STDINT_H 1
+#define HAVE_UNISTD_H 1
+#define __EXTENSIONS__ 1
+#define _ALL_SOURCE 1
+#define _GNU_SOURCE 1
+#define _POSIX_PTHREAD_SEMANTICS 1
+#define _TANDEM_SOURCE 1
+#define STDC_HEADERS 1
+#define HAVE_STRING_H 1
+#define HAVE_STL 1
+#define CPP_REQUIRES_NAMESPACE 1
+#define HAVE_TCL_H 1
+#define HAVE_TCLINT_H 1
+#define HAVE_LIBTCL8_4 1
+#define HAVE_TK_H 1
+#define HAVE_LIBTK8_4 1
+#define HAVE_OTCL_H 1
+#define HAVE_LIBOTCL1_13 1
+#define HAVE_TCLCL_H 1
+#define HAVE_LIBTCLCL 1
+#define STDC_HEADERS 1
+#define HAVE_ARPA_INET_H 1
+#define HAVE_FENV_H 1
+#define HAVE_NETINET_IN_H 1
+#define HAVE_STRING_H 1
+#define HAVE_STRINGS_H 1
+#define HAVE_TIME_H 1
+#define HAVE_UNISTD_H 1
+#define HAVE_NET_ETHERNET_H 1
+#define HAVE_LIBM 1
+#define HAVE_BCOPY 1
+#define HAVE_BZERO 1
+#define HAVE_FEENABLEEXCEPT 1
+#define HAVE_GETRUSAGE 1
+#define HAVE_SBRK 1
+#define HAVE_SNPRINTF 1
+#define RANDOM_RETURN_TYPE long
+#define HAVE_STRTOQ 1
+#define HAVE_STRTOLL 1
+#define SIZEOF_LONG 8
+#define HAVE_INT64 1
+#define HAVE_ETHER_HEADER_STRUCT 1
+#define HAVE_ETHER_ADDRESS_STRUCT 1
+#define HAVE_SIOCGIFHWADDR 1
+#define HAVE_SOCKLEN_T 1
+
+configure: exit 0
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/config.status ns-allinone-2.34-qjump/ns-2.34/config.status
--- ns-allinone-2.34-pfabric/ns-2.34/config.status	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/config.status	2015-03-04 23:13:41.162555793 +0000
@@ -0,0 +1,1078 @@
+#! /bin/bash
+# Generated by configure.
+# Run this file to recreate the current configuration.
+# Compiler output produced by configure, useful for debugging
+# configure, is in config.log if it exists.
+
+debug=false
+ac_cs_recheck=false
+ac_cs_silent=false
+SHELL=${CONFIG_SHELL-/bin/bash}
+## --------------------- ##
+## M4sh Initialization.  ##
+## --------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+
+
+# PATH needs CR
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+if (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+# Support unset when possible.
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  as_unset=unset
+else
+  as_unset=false
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  { (exit 1); exit 1; }
+fi
+
+# Work around bugs in pre-3.0 UWIN ksh.
+for as_var in ENV MAIL MAILPATH
+do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# Required to use basename.
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+
+# Name of the executable.
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# CDPATH.
+$as_unset CDPATH
+
+
+
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {
+
+  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
+  # uniformly replaced by the line number.  The first 'sed' inserts a
+  # line-number line after each line using $LINENO; the second 'sed'
+  # does the real work.  The second script uses 'N' to pair each
+  # line-number line with the line containing $LINENO, and appends
+  # trailing '-' during substitution so that $LINENO is not a special
+  # case at line end.
+  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
+  # scripts with optimization help from Paolo Bonzini.  Blame Lee
+  # E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
+    sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
+      N
+      :loop
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
+      t loop
+      s/-\n.*//
+    ' >$as_me.lineno &&
+  chmod +x "$as_me.lineno" ||
+    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
+   { (exit 1); exit 1; }; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
+  # Exit status is that of the last command.
+  exit
+}
+
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in
+-n*)
+  case `echo 'x\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  *)   ECHO_C='\c';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p=:
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+exec 6>&1
+
+# Save the log message, to keep $[0] and so on meaningful, and to
+# report actual input values of CONFIG_FILES etc. instead of their
+# values after options handling.
+ac_log="
+This file was extended by $as_me, which was
+generated by GNU Autoconf 2.63.  Invocation command line was
+
+  CONFIG_FILES    = $CONFIG_FILES
+  CONFIG_HEADERS  = $CONFIG_HEADERS
+  CONFIG_LINKS    = $CONFIG_LINKS
+  CONFIG_COMMANDS = $CONFIG_COMMANDS
+  $ $0 $@
+
+on `(hostname || uname -n) 2>/dev/null | sed 1q`
+"
+
+# Files that config.status was made for.
+config_files=" Makefile tcl/lib/ns-autoconf.tcl indep-utils/webtrace-conv/ucb/Makefile indep-utils/webtrace-conv/dec/Makefile indep-utils/webtrace-conv/nlanr/Makefile indep-utils/webtrace-conv/epa/Makefile indep-utils/cmu-scen-gen/setdest/Makefile"
+config_headers=" autoconf.h"
+
+ac_cs_usage="\
+\`$as_me' instantiates files from templates according to the
+current configuration.
+
+Usage: $0 [OPTION]... [FILE]...
+
+  -h, --help       print this help, then exit
+  -V, --version    print version number and configuration settings, then exit
+  -q, --quiet, --silent
+                   do not print progress messages
+  -d, --debug      don't remove temporary files
+      --recheck    update $as_me by reconfiguring in the same conditions
+      --file=FILE[:TEMPLATE]
+                   instantiate the configuration file FILE
+      --header=FILE[:TEMPLATE]
+                   instantiate the configuration header FILE
+
+Configuration files:
+$config_files
+
+Configuration headers:
+$config_headers
+
+Report bugs to <bug-autoconf@gnu.org>."
+
+ac_cs_version="\
+config.status
+configured by ./configure, generated by GNU Autoconf 2.63,
+  with options \"\"
+
+Copyright (C) 2008 Free Software Foundation, Inc.
+This config.status script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it."
+
+ac_pwd='/home/mpg39/ns2-2.34/ns-allinone-2.34/ns-2.34'
+srcdir='.'
+INSTALL='/usr/bin/install -c'
+test -n "$AWK" || AWK=awk
+# The default lists apply if the user does not specify any file.
+ac_need_defaults=:
+while test $# != 0
+do
+  case $1 in
+  --*=*)
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
+    ac_shift=:
+    ;;
+  *)
+    ac_option=$1
+    ac_optarg=$2
+    ac_shift=shift
+    ;;
+  esac
+
+  case $ac_option in
+  # Handling of the options.
+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
+    ac_cs_recheck=: ;;
+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
+    $as_echo "$ac_cs_version"; exit ;;
+  --debug | --debu | --deb | --de | --d | -d )
+    debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    CONFIG_FILES="$CONFIG_FILES '$ac_optarg'"
+    ac_need_defaults=false;;
+  --header | --heade | --head | --hea )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    CONFIG_HEADERS="$CONFIG_HEADERS '$ac_optarg'"
+    ac_need_defaults=false;;
+  --he | --h)
+    # Conflict between --help and --header
+    { $as_echo "$as_me: error: ambiguous option: $1
+Try \`$0 --help' for more information." >&2
+   { (exit 1); exit 1; }; };;
+  --help | --hel | -h )
+    $as_echo "$ac_cs_usage"; exit ;;
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil | --si | --s)
+    ac_cs_silent=: ;;
+
+  # This is an error.
+  -*) { $as_echo "$as_me: error: unrecognized option: $1
+Try \`$0 --help' for more information." >&2
+   { (exit 1); exit 1; }; } ;;
+
+  *) ac_config_targets="$ac_config_targets $1"
+     ac_need_defaults=false ;;
+
+  esac
+  shift
+done
+
+ac_configure_extra_args=
+
+if $ac_cs_silent; then
+  exec 6>/dev/null
+  ac_configure_extra_args="$ac_configure_extra_args --silent"
+fi
+
+if $ac_cs_recheck; then
+  set X '/bin/bash' './configure'  $ac_configure_extra_args --no-create --no-recursion
+  shift
+  $as_echo "running CONFIG_SHELL=/bin/bash $*" >&6
+  CONFIG_SHELL='/bin/bash'
+  export CONFIG_SHELL
+  exec "$@"
+fi
+
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
+## Running $as_me. ##
+_ASBOX
+  $as_echo "$ac_log"
+} >&5
+
+
+# Handling of arguments.
+for ac_config_target in $ac_config_targets
+do
+  case $ac_config_target in
+    "autoconf.h") CONFIG_HEADERS="$CONFIG_HEADERS autoconf.h" ;;
+    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
+    "tcl/lib/ns-autoconf.tcl") CONFIG_FILES="$CONFIG_FILES tcl/lib/ns-autoconf.tcl" ;;
+    "indep-utils/webtrace-conv/ucb/Makefile") CONFIG_FILES="$CONFIG_FILES indep-utils/webtrace-conv/ucb/Makefile" ;;
+    "indep-utils/webtrace-conv/dec/Makefile") CONFIG_FILES="$CONFIG_FILES indep-utils/webtrace-conv/dec/Makefile" ;;
+    "indep-utils/webtrace-conv/nlanr/Makefile") CONFIG_FILES="$CONFIG_FILES indep-utils/webtrace-conv/nlanr/Makefile" ;;
+    "indep-utils/webtrace-conv/epa/Makefile") CONFIG_FILES="$CONFIG_FILES indep-utils/webtrace-conv/epa/Makefile" ;;
+    "indep-utils/cmu-scen-gen/setdest/Makefile") CONFIG_FILES="$CONFIG_FILES indep-utils/cmu-scen-gen/setdest/Makefile" ;;
+
+  *) { { $as_echo "$as_me:$LINENO: error: invalid argument: $ac_config_target" >&5
+$as_echo "$as_me: error: invalid argument: $ac_config_target" >&2;}
+   { (exit 1); exit 1; }; };;
+  esac
+done
+
+
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason against having it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
+$debug ||
+{
+  tmp=
+  trap 'exit_status=$?
+  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
+' 0
+  trap '{ (exit 1); exit 1; }' 1 2 13 15
+}
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
+  test -n "$tmp" && test -d "$tmp"
+}  ||
+{
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
+} ||
+{
+   $as_echo "$as_me: cannot create a temporary directory in ." >&2
+   { (exit 1); exit 1; }
+}
+
+# Set up the scripts for CONFIG_FILES section.
+# No need to generate them if there are no CONFIG_FILES.
+# This happens for instance with `./config.status config.h'.
+if test -n "$CONFIG_FILES"; then
+
+
+ac_cr=''
+ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
+if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
+  ac_cs_awk_cr='\\r'
+else
+  ac_cs_awk_cr=$ac_cr
+fi
+
+echo 'BEGIN {' >"$tmp/subs1.awk" &&
+cat >>"$tmp/subs1.awk" <<\_ACAWK &&
+S["LTLIBOBJS"]=""
+S["LIBOBJS"]=""
+S["INSTALL_DATA"]="${INSTALL} -m 644"
+S["INSTALL_SCRIPT"]="${INSTALL}"
+S["INSTALL_PROGRAM"]="${INSTALL}"
+S["V_LSSCRIPT"]=""
+S["V_NS_TCL_LIB_STL"]="$(NS_TCL_LIB_STL)"
+S["V_STLOBJ"]="$(OBJ_STL)"
+S["V_AR"]="ar cr"
+S["V_RANLIB"]="ranlib"
+S["V_OBJ_CRYPT"]=""
+S["V_BROKEN_OBJ"]=""
+S["V_OBJ"]=""
+S["V_INCLUDE"]=""
+S["V_TARCMD"]="tar cfh"
+S["V_SHELL"]=""
+S["V_SIGRET"]="void"
+S["V_DEFINE"]="-DTCLCL_CLASSINSTVAR  -DNDEBUG -DLINUX_TCP_HEADER -DUSE_SHM"
+S["V_LIB"]=" -lnsl -ldl"
+S["V_TAR_EXTRA"]=""
+S["V_CCOPT"]="-O2 -Wall -Wno-write-strings"
+S["V_ALL"]=""
+S["V_LIB_TK"]="-L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltk8.4"
+S["V_LIB_TCL"]="-L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4"
+S["V_LIB_OTCL"]="-L/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -lotcl"
+S["V_LIB_TCLCL"]="-L/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -ltclcl"
+S["V_TAR_TARGET"]="linux-gnu"
+S["V_STATIC"]=""
+S["V_DEFINES"]="-DHAVE_LIBTCLCL -DHAVE_TCLCL_H -DHAVE_LIBOTCL1_13 -DHAVE_OTCL_H -DHAVE_LIBTK8_4 -DHAVE_TK_H -DHAVE_LIBTCL8_4 -DHAVE_TCLINT_H -DHAVE_TCL_H "
+S["V_LIBS"]="-L/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -ltclcl -L/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -lotcl -L/home/mpg39/ns2-2.34/ns-allinone-2."\
+"34/lib -ltk8.4 -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4"
+S["V_INCLUDES"]="-I/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -I/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/h"\
+"ome/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/usr/include/pcap"
+S["build_nse"]=""
+S["NSLIB"]="libns.so"
+S["PKG_SHLIB_CFLAGS"]=""
+S["SHLIB_SUFFIX"]=".so"
+S["SHLIB_LD_LIBS"]=""
+S["SHLIB_LD"]="gcc -shared"
+S["SHLIB_CFLAGS"]="-fPIC"
+S["DL_LD_SEARCH_FLAGS"]=""
+S["DL_LD_FLAGS"]="-rdynamic"
+S["DL_LIBS"]="-ldl"
+S["V_IMPORT_LIBS"]=""
+S["PERL"]="/usr/bin/perl"
+S["V_LIB_X11"]="-lXext -lX11"
+S["V_INCLUDE_X11"]=""
+S["V_TCL2CPP"]="../tclcl-1.19/tcl2c++"
+S["V_LIBRARY_TK"]="../lib/tk8.4"
+S["V_TKDOSNAMES"]="$(LIBRARY_TK)/optMenu.tcl $(LIBRARY_TK)/scrlbar.tcl"
+S["V_LIBRARY_TCL"]="../lib/tcl8.4"
+S["V_TCLSH"]="/home/mpg39/ns2-2.34/ns-allinone-2.34/bin/tclsh8.4"
+S["V_TCL_LIBRARY_FILES"]="$(TCL_BASE_LIBRARY_FILES) ../lib/tcl8.4/http1.0/http.tcl"
+S["CPP_NAMESPACE"]="std"
+S["ac_ct_CXX"]="g++"
+S["CXXFLAGS"]="-g -O2"
+S["CXX"]="g++"
+S["target_os"]="linux-gnu"
+S["target_vendor"]="unknown"
+S["target_cpu"]="x86_64"
+S["target"]="x86_64-unknown-linux-gnu"
+S["host_os"]="linux-gnu"
+S["host_vendor"]="unknown"
+S["host_cpu"]="x86_64"
+S["host"]="x86_64-unknown-linux-gnu"
+S["build_os"]="linux-gnu"
+S["build_vendor"]="unknown"
+S["build_cpu"]="x86_64"
+S["build"]="x86_64-unknown-linux-gnu"
+S["EGREP"]="/bin/grep -E"
+S["GREP"]="/bin/grep"
+S["CPP"]="gcc -E"
+S["OBJEXT"]="o"
+S["EXEEXT"]=""
+S["ac_ct_CC"]="gcc"
+S["CPPFLAGS"]=""
+S["LDFLAGS"]=" -Wl,-export-dynamic"
+S["CFLAGS"]="-g -O2"
+S["CC"]="gcc"
+S["target_alias"]=""
+S["host_alias"]=""
+S["build_alias"]=""
+S["LIBS"]="-lm "
+S["ECHO_T"]=""
+S["ECHO_N"]="-n"
+S["ECHO_C"]=""
+S["DEFS"]="-DHAVE_CONFIG_H"
+S["mandir"]="${datarootdir}/man"
+S["localedir"]="${datarootdir}/locale"
+S["libdir"]="${exec_prefix}/lib"
+S["psdir"]="${docdir}"
+S["pdfdir"]="${docdir}"
+S["dvidir"]="${docdir}"
+S["htmldir"]="${docdir}"
+S["infodir"]="${datarootdir}/info"
+S["docdir"]="${datarootdir}/doc/${PACKAGE}"
+S["oldincludedir"]="/usr/include"
+S["includedir"]="${prefix}/include"
+S["localstatedir"]="${prefix}/var"
+S["sharedstatedir"]="${prefix}/com"
+S["sysconfdir"]="${prefix}/etc"
+S["datadir"]="${datarootdir}"
+S["datarootdir"]="${prefix}/share"
+S["libexecdir"]="${exec_prefix}/libexec"
+S["sbindir"]="${exec_prefix}/sbin"
+S["bindir"]="${exec_prefix}/bin"
+S["program_transform_name"]="s,x,x,"
+S["prefix"]="/usr/local"
+S["exec_prefix"]="${prefix}"
+S["PACKAGE_BUGREPORT"]=""
+S["PACKAGE_STRING"]=""
+S["PACKAGE_VERSION"]=""
+S["PACKAGE_TARNAME"]=""
+S["PACKAGE_NAME"]=""
+S["PATH_SEPARATOR"]=":"
+S["SHELL"]="/bin/bash"
+_ACAWK
+cat >>"$tmp/subs1.awk" <<_ACAWK &&
+  for (key in S) S_is_set[key] = 1
+  FS = ""
+
+}
+{
+  line = $ 0
+  nfields = split(line, field, "@")
+  substed = 0
+  len = length(field[1])
+  for (i = 2; i < nfields; i++) {
+    key = field[i]
+    keylen = length(key)
+    if (S_is_set[key]) {
+      value = S[key]
+      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
+      len += length(value) + length(field[++i])
+      substed = 1
+    } else
+      len += 1 + keylen
+  }
+
+  print line
+}
+
+_ACAWK
+if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
+  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
+else
+  cat
+fi < "$tmp/subs1.awk" > "$tmp/subs.awk" \
+  || { { $as_echo "$as_me:$LINENO: error: could not setup config files machinery" >&5
+$as_echo "$as_me: error: could not setup config files machinery" >&2;}
+   { (exit 1); exit 1; }; }
+fi # test -n "$CONFIG_FILES"
+
+# Set up the scripts for CONFIG_HEADERS section.
+# No need to generate them if there are no CONFIG_HEADERS.
+# This happens for instance with `./config.status Makefile'.
+if test -n "$CONFIG_HEADERS"; then
+cat >"$tmp/defines.awk" <<\_ACAWK ||
+BEGIN {
+D["PACKAGE_NAME"]=" \"\""
+D["PACKAGE_TARNAME"]=" \"\""
+D["PACKAGE_VERSION"]=" \"\""
+D["PACKAGE_STRING"]=" \"\""
+D["PACKAGE_BUGREPORT"]=" \"\""
+D["STDC_HEADERS"]=" 1"
+D["HAVE_SYS_TYPES_H"]=" 1"
+D["HAVE_SYS_STAT_H"]=" 1"
+D["HAVE_STDLIB_H"]=" 1"
+D["HAVE_STRING_H"]=" 1"
+D["HAVE_MEMORY_H"]=" 1"
+D["HAVE_STRINGS_H"]=" 1"
+D["HAVE_INTTYPES_H"]=" 1"
+D["HAVE_STDINT_H"]=" 1"
+D["HAVE_UNISTD_H"]=" 1"
+D["__EXTENSIONS__"]=" 1"
+D["_ALL_SOURCE"]=" 1"
+D["_GNU_SOURCE"]=" 1"
+D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
+D["_TANDEM_SOURCE"]=" 1"
+D["STDC_HEADERS"]=" 1"
+D["HAVE_STRING_H"]=" 1"
+D["HAVE_STL"]=" 1"
+D["CPP_REQUIRES_NAMESPACE"]=" 1"
+D["HAVE_TCL_H"]=" 1"
+D["HAVE_TCLINT_H"]=" 1"
+D["HAVE_LIBTCL8_4"]=" 1"
+D["HAVE_TK_H"]=" 1"
+D["HAVE_LIBTK8_4"]=" 1"
+D["HAVE_OTCL_H"]=" 1"
+D["HAVE_LIBOTCL1_13"]=" 1"
+D["HAVE_TCLCL_H"]=" 1"
+D["HAVE_LIBTCLCL"]=" 1"
+D["STDC_HEADERS"]=" 1"
+D["HAVE_ARPA_INET_H"]=" 1"
+D["HAVE_FENV_H"]=" 1"
+D["HAVE_NETINET_IN_H"]=" 1"
+D["HAVE_STRING_H"]=" 1"
+D["HAVE_STRINGS_H"]=" 1"
+D["HAVE_TIME_H"]=" 1"
+D["HAVE_UNISTD_H"]=" 1"
+D["HAVE_NET_ETHERNET_H"]=" 1"
+D["HAVE_LIBM"]=" 1"
+D["HAVE_BCOPY"]=" 1"
+D["HAVE_BZERO"]=" 1"
+D["HAVE_FEENABLEEXCEPT"]=" 1"
+D["HAVE_GETRUSAGE"]=" 1"
+D["HAVE_SBRK"]=" 1"
+D["HAVE_SNPRINTF"]=" 1"
+D["RANDOM_RETURN_TYPE"]=" long"
+D["HAVE_STRTOQ"]=" 1"
+D["HAVE_STRTOLL"]=" 1"
+D["SIZEOF_LONG"]=" 8"
+D["HAVE_INT64"]=" 1"
+D["HAVE_ETHER_HEADER_STRUCT"]=" 1"
+D["HAVE_ETHER_ADDRESS_STRUCT"]=" 1"
+D["HAVE_SIOCGIFHWADDR"]=" 1"
+D["HAVE_SOCKLEN_T"]=" 1"
+  for (key in D) D_is_set[key] = 1
+  FS = ""
+}
+/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
+  line = $ 0
+  split(line, arg, " ")
+  if (arg[1] == "#") {
+    defundef = arg[2]
+    mac1 = arg[3]
+  } else {
+    defundef = substr(arg[1], 2)
+    mac1 = arg[2]
+  }
+  split(mac1, mac2, "(") #)
+  macro = mac2[1]
+  prefix = substr(line, 1, index(line, defundef) - 1)
+  if (D_is_set[macro]) {
+    # Preserve the white space surrounding the "#".
+    print prefix "define", macro P[macro] D[macro]
+    next
+  } else {
+    # Replace #undef with comments.  This is necessary, for example,
+    # in the case of _POSIX_SOURCE, which is predefined and required
+    # on some systems where configure will not decide to define it.
+    if (defundef == "undef") {
+      print "/*", prefix defundef, macro, "*/"
+      next
+    }
+  }
+}
+{ print }
+_ACAWK
+  { { $as_echo "$as_me:$LINENO: error: could not setup config headers machinery" >&5
+$as_echo "$as_me: error: could not setup config headers machinery" >&2;}
+   { (exit 1); exit 1; }; }
+fi # test -n "$CONFIG_HEADERS"
+
+
+eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    "
+shift
+for ac_tag
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) { { $as_echo "$as_me:$LINENO: error: invalid tag $ac_tag" >&5
+$as_echo "$as_me: error: invalid tag $ac_tag" >&2;}
+   { (exit 1); exit 1; }; };;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   { { $as_echo "$as_me:$LINENO: error: cannot find input file: $ac_f" >&5
+$as_echo "$as_me: error: cannot find input file: $ac_f" >&2;}
+   { (exit 1); exit 1; }; };;
+      esac
+      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
+      ac_file_inputs="$ac_file_inputs '$ac_f'"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input='Generated from '`
+	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
+	`' by configure.'
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { $as_echo "$as_me:$LINENO: creating $ac_file" >&5
+$as_echo "$as_me: creating $ac_file" >&6;}
+    fi
+    # Neutralize special characters interpreted by sed in replacement strings.
+    case $configure_input in #(
+    *\&* | *\|* | *\\* )
+       ac_sed_conf_input=`$as_echo "$configure_input" |
+       sed 's/[\\\\&|]/\\\\&/g'`;; #(
+    *) ac_sed_conf_input=$configure_input;;
+    esac
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$tmp/stdin" \
+      || { { $as_echo "$as_me:$LINENO: error: could not create $ac_file" >&5
+$as_echo "$as_me: error: could not create $ac_file" >&2;}
+   { (exit 1); exit 1; }; } ;;
+    esac
+    ;;
+  esac
+
+  ac_dir=`$as_dirname -- "$ac_file" ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  { as_dir="$ac_dir"
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || { { $as_echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
+$as_echo "$as_me: error: cannot create directory $as_dir" >&2;}
+   { (exit 1); exit 1; }; }; }
+  ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
+
+  case $INSTALL in
+  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
+  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
+  esac
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
+
+ac_sed_dataroot='
+/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p
+'
+case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { $as_echo "$as_me:$LINENO: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+  ac_datarootdir_hack='
+  s&@datadir@&${datarootdir}&g
+  s&@docdir@&${datarootdir}/doc/${PACKAGE}&g
+  s&@infodir@&${datarootdir}/info&g
+  s&@localedir@&${datarootdir}/locale&g
+  s&@mandir@&${datarootdir}/man&g
+    s&\${datarootdir}&${prefix}/share&g' ;;
+esac
+ac_sed_extra="/^[	 ]*VPATH[	 ]*=/{
+s/:*\$(srcdir):*/:/
+s/:*\${srcdir}:*/:/
+s/:*@srcdir@:*/:/
+s/^\([^=]*=[	 ]*\):*/\1/
+s/:*$//
+s/^[^=]*=[	 ]*$//
+}
+
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s|@configure_input@|$ac_sed_conf_input|;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@top_build_prefix@&$ac_top_build_prefix&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+s&@INSTALL@&$ac_INSTALL&;t t
+$ac_datarootdir_hack
+"
+eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$tmp/subs.awk" >$tmp/out \
+  || { { $as_echo "$as_me:$LINENO: error: could not create $ac_file" >&5
+$as_echo "$as_me: error: could not create $ac_file" >&2;}
+   { (exit 1); exit 1; }; }
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
+  { $as_echo "$as_me:$LINENO: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&5
+$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&2;}
+
+  rm -f "$tmp/stdin"
+  case $ac_file in
+  -) cat "$tmp/out" && rm -f "$tmp/out";;
+  *) rm -f "$ac_file" && mv "$tmp/out" "$ac_file";;
+  esac \
+  || { { $as_echo "$as_me:$LINENO: error: could not create $ac_file" >&5
+$as_echo "$as_me: error: could not create $ac_file" >&2;}
+   { (exit 1); exit 1; }; }
+ ;;
+  :H)
+  #
+  # CONFIG_HEADER
+  #
+  if test x"$ac_file" != x-; then
+    {
+      $as_echo "/* $configure_input  */" \
+      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs"
+    } >"$tmp/config.h" \
+      || { { $as_echo "$as_me:$LINENO: error: could not create $ac_file" >&5
+$as_echo "$as_me: error: could not create $ac_file" >&2;}
+   { (exit 1); exit 1; }; }
+    if diff "$ac_file" "$tmp/config.h" >/dev/null 2>&1; then
+      { $as_echo "$as_me:$LINENO: $ac_file is unchanged" >&5
+$as_echo "$as_me: $ac_file is unchanged" >&6;}
+    else
+      rm -f "$ac_file"
+      mv "$tmp/config.h" "$ac_file" \
+	|| { { $as_echo "$as_me:$LINENO: error: could not create $ac_file" >&5
+$as_echo "$as_me: error: could not create $ac_file" >&2;}
+   { (exit 1); exit 1; }; }
+    fi
+  else
+    $as_echo "/* $configure_input  */" \
+      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs" \
+      || { { $as_echo "$as_me:$LINENO: error: could not create -" >&5
+$as_echo "$as_me: error: could not create -" >&2;}
+   { (exit 1); exit 1; }; }
+  fi
+ ;;
+
+
+  esac
+
+done # for ac_tag
+
+
+{ (exit 0); exit 0; }
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/cmu-scen-gen/setdest/calcdest and ns-allinone-2.34-qjump/ns-2.34/indep-utils/cmu-scen-gen/setdest/calcdest differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/cmu-scen-gen/setdest/calcdest.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/cmu-scen-gen/setdest/calcdest.o differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/indep-utils/cmu-scen-gen/setdest/Makefile ns-allinone-2.34-qjump/ns-2.34/indep-utils/cmu-scen-gen/setdest/Makefile
--- ns-allinone-2.34-pfabric/ns-2.34/indep-utils/cmu-scen-gen/setdest/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/indep-utils/cmu-scen-gen/setdest/Makefile	2015-03-04 23:13:41.190555793 +0000
@@ -0,0 +1,90 @@
+# 
+#  Copyright (c) 1999 by the University of Southern California
+#  All rights reserved.
+# 
+#  This program is free software; you can redistribute it and/or
+#  modify it under the terms of the GNU General Public License,
+#  version 2, as published by the Free Software Foundation.
+#
+#  This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#  GNU General Public License for more details.
+#
+#  You should have received a copy of the GNU General Public License along
+#  with this program; if not, write to the Free Software Foundation, Inc.,
+#  59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
+#
+#  The copyright of this module includes the following
+#  linking-with-specific-other-licenses addition:
+#
+#  In addition, as a special exception, the copyright holders of
+#  this module give you permission to combine (via static or
+#  dynamic linking) this module with free software programs or
+#  libraries that are released under the GNU LGPL and with code
+#  included in the standard release of ns-2 under the Apache 2.0
+#  license or under otherwise-compatible licenses with advertising
+#  requirements (or modified versions of such code, with unchanged
+#  license).  You may copy and distribute such a system following the
+#  terms of the GNU GPL for this module and the licenses of the
+#  other code concerned, provided that you include the source code of
+#  that other code when and as the GNU GPL requires distribution of
+#  source code.
+#
+#  Note that people who make modified versions of this module
+#  are not obligated to grant this special exception for their
+#  modified versions; it is their choice whether to do so.  The GNU
+#  General Public License gives permission to release a modified
+#  version without this exception; this exception also makes it
+#  possible to release a modified version which carries forward this
+#  exception.
+#
+# Makefile for CMU mobile code scenario generation.
+#
+# $Header: /cvsroot/nsnam/ns-2/indep-utils/cmu-scen-gen/setdest/Makefile.in,v 1.12 2005/09/16 03:05:40 tomh Exp $
+
+# Top level hierarchy
+prefix	= /usr/local
+# Pathname of directory to install the binary
+BINDEST	= /usr/local/bin
+
+CCX = g++
+CC = gcc
+MKDEP	= ../../../conf/mkdep
+
+# when including files from ns, we need to take care STL_NAMESPACE
+DEFINE = -Dstand_alone -DSTL_NAMESPACE=@STL_NAMESPACE@ -DCPP_NAMESPACE=std
+CFLAGS = -O2 -Wall -Wno-write-strings 
+LDFLAGS = 
+LIBS =  -lnsl -ldl -lm -lm 
+INSTALL = /usr/bin/install -c
+
+all: setdest calcdest
+
+install: setdest calcdest
+	$(INSTALL) -m 555 -o bin -g bin setdest $(DESTDIR)$(BINDEST)
+	$(INSTALL) -m 555 -o bin -g bin calcdest $(DESTDIR)$(BINDEST)
+
+setdest: rng.o setdest.o
+	$(CCX) -o setdest $@.o rng.o $(DEFINE) $(LDFLAGS) $(CFLAGS) \
+	$(LIBS)
+
+calcdest: rng.o calcdest.o
+	$(CCX) -o calcdest $@.o rng.o $(DEFINE) $(LDFLAGS) $(CFLAGS) \
+	$(LIBS)
+
+rng.o:
+	@rm -f $@
+	$(CCX) -c $(DEFINE) -I../../.. -o $@ ../../../tools/rng.cc
+
+setbox: setbox.o
+	$(CCX) -o setbox $@.o $(LDFLAGS) $(CFLAGS) $(LIBS)
+
+clean:
+	@rm -f setdest setbox *.o *.core
+
+.SUFFIXES: .cc
+
+.cc.o:
+	$(CCX) -c $(DEFINE) $(CFLAGS) -o $@ $*.cc
+
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/cmu-scen-gen/setdest/rng.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/cmu-scen-gen/setdest/rng.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/cmu-scen-gen/setdest/setdest and ns-allinone-2.34-qjump/ns-2.34/indep-utils/cmu-scen-gen/setdest/setdest differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/cmu-scen-gen/setdest/setdest.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/cmu-scen-gen/setdest/setdest.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/dec-tr-stat and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/dec-tr-stat differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/formsquid.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/formsquid.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/formtxt.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/formtxt.o differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/Makefile ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/Makefile
--- ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/Makefile	2015-03-04 23:13:41.186555793 +0000
@@ -0,0 +1,83 @@
+# 
+#  Copyright (c) 1999 by the University of Southern California
+#  All rights reserved.
+# 
+#  This program is free software; you can redistribute it and/or
+#  modify it under the terms of the GNU General Public License,
+#  version 2, as published by the Free Software Foundation.
+#
+#  This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#  GNU General Public License for more details.
+#
+#  You should have received a copy of the GNU General Public License along
+#  with this program; if not, write to the Free Software Foundation, Inc.,
+#  59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
+#
+#  The copyright of this module includes the following
+#  linking-with-specific-other-licenses addition:
+#
+#  In addition, as a special exception, the copyright holders of
+#  this module give you permission to combine (via static or
+#  dynamic linking) this module with free software programs or
+#  libraries that are released under the GNU LGPL and with code
+#  included in the standard release of ns-2 under the Apache 2.0
+#  license or under otherwise-compatible licenses with advertising
+#  requirements (or modified versions of such code, with unchanged
+#  license).  You may copy and distribute such a system following the
+#  terms of the GNU GPL for this module and the licenses of the
+#  other code concerned, provided that you include the source code of
+#  that other code when and as the GNU GPL requires distribution of
+#  source code.
+#
+#  Note that people who make modified versions of this module
+#  are not obligated to grant this special exception for their
+#  modified versions; it is their choice whether to do so.  The GNU
+#  General Public License gives permission to release a modified
+#  version without this exception; this exception also makes it
+#  possible to release a modified version which carries forward this
+#  exception.
+# 
+# Makefile for DEC trace parsing.
+# (ftp://ftp.digital.com/pub/DEC/traces/proxy/webtraces.html)
+# 
+# Taken from Alex Rousskov's originial code. 
+#
+# $Header: /cvsroot/nsnam/ns-2/indep-utils/webtrace-conv/dec/Makefile.in,v 1.7 2005/09/16 03:05:40 tomh Exp $
+
+# Top level hierarchy
+prefix  = /usr/local
+# Pathname of directory to install the binary
+BINDEST = /usr/local/bin
+
+CC = g++
+INCLUDE = -I. -I/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -I/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/usr/include/pcap
+CFLAGS = -O2 -Wall -Wno-write-strings -DCPP_NAMESPACE=std
+LDFLAGS = 
+LIBS = -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4  -lnsl -ldl -lm 
+INSTALL = /usr/bin/install -c
+
+SRC = proxytrace.cc formsquid.cc formtxt.cc my-endian.cc \
+	proxytrace2any.cc tr-stat.cc
+OBJ = $(SRC:.cc=.o)
+
+all: dec-tr-stat
+
+install: dec-tr-stat
+	$(INSTALL) -m 555 -o bin -g bin dec-tr-stat $(DESTDIR)$(BINDEST)
+
+dec-tr-stat: $(OBJ)
+	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $(OBJ) $(LIBS)
+
+.SUFFIXES: .cc
+
+.cc.o: 
+	@rm -f $@
+	$(CC) -c $(CFLAGS) $(INCLUDE) -o $@ $*.cc
+
+clean: 
+	rm -f *.o *~ dec-tr-stat *core
+
+depend: $(SRC)
+	$(MKDEP) $(CFLAGS) $(INCLUDES) $(SRC)
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/my-endian.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/my-endian.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/proxytrace2any.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/proxytrace2any.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/proxytrace.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/proxytrace.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/dec/tr-stat.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/dec/tr-stat.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/epa/epa-tr-stat and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/epa/epa-tr-stat differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/epa/Makefile ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/epa/Makefile
--- ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/epa/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/epa/Makefile	2015-03-04 23:13:41.186555793 +0000
@@ -0,0 +1,79 @@
+# 
+#  Copyright (c) 1999 by the University of Southern California
+#  All rights reserved.
+# 
+#  This program is free software; you can redistribute it and/or
+#  modify it under the terms of the GNU General Public License,
+#  version 2, as published by the Free Software Foundation.
+#
+#  This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#  GNU General Public License for more details.
+#
+#  You should have received a copy of the GNU General Public License along
+#  with this program; if not, write to the Free Software Foundation, Inc.,
+#  59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
+#
+#  The copyright of this module includes the following
+#  linking-with-specific-other-licenses addition:
+#
+#  In addition, as a special exception, the copyright holders of
+#  this module give you permission to combine (via static or
+#  dynamic linking) this module with free software programs or
+#  libraries that are released under the GNU LGPL and with code
+#  included in the standard release of ns-2 under the Apache 2.0
+#  license or under otherwise-compatible licenses with advertising
+#  requirements (or modified versions of such code, with unchanged
+#  license).  You may copy and distribute such a system following the
+#  terms of the GNU GPL for this module and the licenses of the
+#  other code concerned, provided that you include the source code of
+#  that other code when and as the GNU GPL requires distribution of
+#  source code.
+#
+#  Note that people who make modified versions of this module
+#  are not obligated to grant this special exception for their
+#  modified versions; it is their choice whether to do so.  The GNU
+#  General Public License gives permission to release a modified
+#  version without this exception; this exception also makes it
+#  possible to release a modified version which carries forward this
+#  exception.
+#
+# $Header: /cvsroot/nsnam/ns-2/indep-utils/webtrace-conv/epa/Makefile.in,v 1.6 2005/09/16 03:05:40 tomh Exp $
+
+# Top level hierarchy
+prefix  = /usr/local
+# Pathname of directory to install the binary
+BINDEST = /usr/local/bin
+
+CC = g++
+MKDEP	= ../../../conf/mkdep
+
+INCLUDE = -I. -I/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -I/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/usr/include/pcap
+CFLAGS = -O2 -Wall -Wno-write-strings -DCPP_NAMESPACE=std
+LDFLAGS = 
+LIBS = -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4  -lnsl -ldl -lm 
+INSTALL = /usr/bin/install -c
+
+SRC = tr-stat.cc
+OBJ = $(SRC:.cc=.o)
+
+all: epa-tr-stat
+
+epa-tr-stat: $(OBJ)
+	$(CC) -o $@ $(LDFLAGS) $(CFLAGS) $(INCLUDE) $(OBJ) $(LIBS)
+
+install: epa-tr-stat
+	$(INSTALL) -m 555 -o bin -g bin epa-tr-stat $(DESTDIR)$(BINDEST)
+
+.SUFFIXES: .cc
+
+.cc.o: 
+	@rm -f $@
+	$(CC) -c $(CFLAGS) $(INCLUDE) -o $@ $*.cc
+
+clean: 
+	@rm -f *~ *.o epa-tr-stat *core
+
+depend: $(SRC)
+	$(MKDEP) $(CFLAGS) $(INCLUDE) $(SRC)
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/epa/tr-stat.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/epa/tr-stat.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/nlanr/logparse.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/nlanr/logparse.o differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/nlanr/Makefile ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/nlanr/Makefile
--- ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/nlanr/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/nlanr/Makefile	2015-03-04 23:13:41.186555793 +0000
@@ -0,0 +1,79 @@
+# 
+#  Copyright (c) 1999 by the University of Southern California
+#  All rights reserved.
+# 
+#  This program is free software; you can redistribute it and/or
+#  modify it under the terms of the GNU General Public License,
+#  version 2, as published by the Free Software Foundation.
+#
+#  This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#  GNU General Public License for more details.
+#
+#  You should have received a copy of the GNU General Public License along
+#  with this program; if not, write to the Free Software Foundation, Inc.,
+#  59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
+#
+#  The copyright of this module includes the following
+#  linking-with-specific-other-licenses addition:
+#
+#  In addition, as a special exception, the copyright holders of
+#  this module give you permission to combine (via static or
+#  dynamic linking) this module with free software programs or
+#  libraries that are released under the GNU LGPL and with code
+#  included in the standard release of ns-2 under the Apache 2.0
+#  license or under otherwise-compatible licenses with advertising
+#  requirements (or modified versions of such code, with unchanged
+#  license).  You may copy and distribute such a system following the
+#  terms of the GNU GPL for this module and the licenses of the
+#  other code concerned, provided that you include the source code of
+#  that other code when and as the GNU GPL requires distribution of
+#  source code.
+#
+#  Note that people who make modified versions of this module
+#  are not obligated to grant this special exception for their
+#  modified versions; it is their choice whether to do so.  The GNU
+#  General Public License gives permission to release a modified
+#  version without this exception; this exception also makes it
+#  possible to release a modified version which carries forward this
+#  exception.
+#
+# Makefile for NLANR web cache trace processing (http://ircache.nlanr.org).
+#
+# $Header: /cvsroot/nsnam/ns-2/indep-utils/webtrace-conv/nlanr/Makefile.in,v 1.8 2005/09/16 03:05:41 tomh Exp $
+
+# Top level hierarchy
+prefix  = /usr/local
+# Pathname of directory to install the binary
+BINDEST = /usr/local/bin
+
+CC = g++
+INCLUDE = -I. -I../../.. -I/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -I/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/usr/include/pcap
+CFLAGS = -O2 -Wall -Wno-write-strings -DCPP_NAMESPACE=std
+LDFLAGS = 
+LIBS = -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4  -lnsl -ldl -lm 
+INSTALL = /usr/bin/install -c
+
+SRC = tr-stat.cc logparse.cc
+OBJ = $(SRC:.cc=.o)
+
+all: nlanr-tr-stat
+
+nlanr-tr-stat: $(OBJ)
+	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $(OBJ) $(LIBS)
+
+install: nlanr-tr-stat
+	$(INSTALL) -m 555 -o bin -g bin nlanr-tr-stat $(DESTDIR)$(BINDEST)
+
+.SUFFIXES: .cc 
+
+.cc.o: 
+	@rm -f $@
+	$(CC) -c $(CFLAGS) $(INCLUDE) -o $@ $*.cc
+
+clean: 
+	rm -f *.o *~ nlanr-tr-stat *core
+
+depend: $(SRC)
+	$(MKDEP) $(CFLAGS) $(INCLUDE) $(SRC)
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/nlanr/nlanr-tr-stat and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/nlanr/nlanr-tr-stat differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/nlanr/tr-stat.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/nlanr/tr-stat.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/ucb/logparse.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/ucb/logparse.o differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/ucb/Makefile ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/ucb/Makefile
--- ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/ucb/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/ucb/Makefile	2015-03-04 23:13:41.186555793 +0000
@@ -0,0 +1,60 @@
+# COPYRIGHT AND DISCLAIMER
+# 
+# Copyright (C) 1996-1997 by the Regents of the University of California.
+# Copyright (c) 1999 by the University of Southern California
+#
+# IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR
+# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
+# OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES THEREOF,
+# EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+# 
+# THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. THIS SOFTWARE IS
+# PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO
+# OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
+# MODIFICATIONS.
+#
+# Taken from the UCB Home-IP trace by Steve Gribble <gribble@cs.berkeley.edu>
+#
+# $Header: /cvsroot/nsnam/ns-2/indep-utils/webtrace-conv/ucb/Makefile.in,v 1.4 2004/05/18 15:10:42 johnh Exp $
+
+# Top level hierarchy
+prefix  = /usr/local
+# Pathname of directory to install the binary
+BINDEST = /usr/local/bin
+
+CC = g++
+MKDEP	= ../../../conf/mkdep
+
+INCLUDE = -I. -I/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -I/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/usr/include/pcap
+CFLAGS = -O2 -Wall -Wno-write-strings -DCPP_NAMESPACE=std
+LDFLAGS = 
+LIBS = -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4  -lnsl -ldl -lm 
+INSTALL = /usr/bin/install -c
+
+SRC = tr-stat.cc logparse.cc utils.cc
+OBJ = $(SRC:.cc=.o)
+
+all: ucb-tr-stat
+
+ucb-tr-stat: $(OBJ)
+	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $(OBJ) $(LIBS)
+
+install: ucb-tr-stat
+	$(INSTALL) -m 555 -o bin -g bin ucb-tr-stat $(DESTDIR)$(BINDEST)
+
+.SUFFIXES: .cc
+
+.cc.o: 
+	@rm -f $@
+	$(CC) -c $(CFLAGS) $(INCLUDE) -o $@ $*.cc
+
+clean:
+	-/bin/rm -f *.o *~ ucb-tr-stat *core
+
+FORCE:
+	;
+
+depend: $(SRC)
+	$(MKDEP) $(CFLAGS) $(INCLUDE) $(SRC)
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/ucb/tr-stat.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/ucb/tr-stat.o differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/ucb/ucb-tr-stat and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/ucb/ucb-tr-stat differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/indep-utils/webtrace-conv/ucb/utils.o and ns-allinone-2.34-qjump/ns-2.34/indep-utils/webtrace-conv/ucb/utils.o differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/linkstate/ls.h ns-allinone-2.34-qjump/ns-2.34/linkstate/ls.h
--- ns-allinone-2.34-pfabric/ns-2.34/linkstate/ls.h	2015-03-04 17:49:02.730750272 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/linkstate/ls.h	2015-03-04 23:13:41.146555793 +0000
@@ -135,6 +135,7 @@ public:
 	}
 
 	void eraseAll() { this->erase(baseMap::begin(), baseMap::end()); }
+    /*void eraseAll() { erase(baseMap::begin(), baseMap::end()); }*/
 	T* findPtr(Key key) {
 		iterator it = baseMap::find(key);
 		return (it == baseMap::end()) ? (T *)NULL : &((*it).second);
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/Makefile ns-allinone-2.34-qjump/ns-2.34/Makefile
--- ns-allinone-2.34-pfabric/ns-2.34/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/Makefile	2015-03-04 23:13:41.218555792 +0000
@@ -0,0 +1,610 @@
+#  Copyright (c) 1994, 1995, 1996
+# 	The Regents of the University of California.  All rights reserved.
+#
+#  Redistribution and use in source and binary forms, with or without
+#  modification, are permitted provided that: (1) source code distributions
+#  retain the above copyright notice and this paragraph in its entirety, (2)
+#  distributions including binary code include the above copyright notice and
+#  this paragraph in its entirety in the documentation or other materials
+#  provided with the distribution, and (3) all advertising materials mentioning
+#  features or use of this software display the following acknowledgement:
+#  ``This product includes software developed by the University of California,
+#  Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
+#  the University nor the names of its contributors may be used to endorse
+#  or promote products derived from this software without specific prior
+#  written permission.
+#  THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
+#  WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
+#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
+#
+# @(#) $Header: 2002/10/09 15:34:11
+
+#
+# Various configurable paths (remember to edit Makefile.in, not Makefile)
+#
+
+# Top level hierarchy
+prefix	= /usr/local
+# Pathname of directory to install the binary
+BINDEST	= /usr/local/bin
+# Pathname of directory to install the man page
+MANDEST	= /usr/local/man
+
+BLANK	= # make a blank space.  DO NOT add anything to this line
+
+# The following will be redefined under Windows (see WIN32 lable below)
+CC	= gcc
+CPP	= g++
+LINK	= $(CPP)
+LINK_SHLIB = gcc -shared
+MKDEP	= ./conf/mkdep
+TCLSH	= /home/mpg39/ns2-2.34/ns-allinone-2.34/bin/tclsh8.4
+TCL2C	= ../tclcl-1.19/tcl2c++
+AR	= ar rc $(BLANK)
+
+RANLIB	= ranlib
+INSTALL	= /usr/bin/install -c
+LN	= ln
+TEST	= test
+RM	= rm -f
+MV      = mv
+PERL	= /usr/bin/perl
+
+# for diffusion
+#DIFF_INCLUDES = "./diffusion3/main ./diffusion3/lib ./diffusion3/nr ./diffusion3/ns"
+
+CCOPT	= -O2 -Wall -Wno-write-strings 
+STATIC	= 
+#LDFLAGS	= $(STATIC)
+LDFLAGS	=  -Wl,-export-dynamic 
+LDOUT	= -o $(BLANK)
+
+DEFINE	= -DTCP_DELAY_BIND_ALL -DNO_TK -DTCLCL_CLASSINSTVAR  -DNDEBUG -DLINUX_TCP_HEADER -DUSE_SHM -DHAVE_LIBTCLCL -DHAVE_TCLCL_H -DHAVE_LIBOTCL1_13 -DHAVE_OTCL_H -DHAVE_LIBTK8_4 -DHAVE_TK_H -DHAVE_LIBTCL8_4 -DHAVE_TCLINT_H -DHAVE_TCL_H  -DHAVE_CONFIG_H -DNS_DIFFUSION -DSMAC_NO_SYNC -DCPP_NAMESPACE=std -DUSE_SINGLE_ADDRESS_SPACE -Drng_test
+
+INCLUDES = \
+	-I.  \
+	-I. \
+	-I/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -I/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/home/mpg39/ns2-2.34/ns-allinone-2.34/include -I/usr/include/pcap \
+	-I./tcp -I./sctp -I./common -I./link -I./queue \
+	-I./adc -I./apps -I./mac -I./mobile -I./trace \
+	-I./routing -I./tools -I./classifier -I./mcast \
+	-I./diffusion3/lib/main -I./diffusion3/lib \
+	-I./diffusion3/lib/nr -I./diffusion3/ns \
+	-I./diffusion3/filter_core -I./asim/ -I./qs \
+	-I./diffserv -I./satellite \
+	-I./wpan
+
+
+LIB	= \
+	-L/home/mpg39/ns2-2.34/ns-allinone-2.34/tclcl-1.19 -ltclcl -L/home/mpg39/ns2-2.34/ns-allinone-2.34/otcl -lotcl -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltk8.4 -L/home/mpg39/ns2-2.34/ns-allinone-2.34/lib -ltcl8.4 \
+	-lXext -lX11 \
+	 -lnsl -ldl \
+	-lm -lm 
+#	-L${exec_prefix}/lib \
+
+CFLAGS	+= $(CCOPT) $(DEFINE) 
+
+# Explicitly define compilation rules since SunOS 4's make doesn't like gcc.
+# Also, gcc does not remove the .o before forking 'as', which can be a
+# problem if you don't own the file but can write to the directory.
+.SUFFIXES: .cc	# $(.SUFFIXES)
+
+.cc.o:
+	@rm -f $@
+	$(CPP) -c $(CFLAGS) $(INCLUDES) -o $@ $*.cc
+
+.c.o:
+	@rm -f $@
+	$(CC) -c $(CFLAGS) $(INCLUDES) -o $@ $*.c
+
+
+GEN_DIR	= gen/
+LIB_DIR	= lib/
+NS	= ns
+NSLIB   = libns.so
+NSX	= nsx
+NSE	= nse
+NSTK = nstk
+
+# To allow conf/makefile.win overwrite this macro
+# We will set these two macros to empty in conf/makefile.win since VC6.0
+# does not seem to support the STL in gcc 2.8 and up. 
+OBJ_STL = diffusion3/lib/nr/nr.o diffusion3/lib/dr.o \
+	diffusion3/filters/diffusion/one_phase_pull.o \
+	diffusion3/filters/diffusion/two_phase_pull.o \
+	diffusion3/lib/diffapp.o \
+	diffusion3/ns/diffagent.o diffusion3/ns/diffrtg.o \
+	diffusion3/ns/difftimer.o \
+	diffusion3/filter_core/filter_core.o \
+	diffusion3/filter_core/iolog.o \
+	diffusion3/filter_core/iostats.o \
+	diffusion3/lib/main/attrs.o \
+	diffusion3/lib/main/events.o \
+	diffusion3/lib/main/iodev.o \
+	diffusion3/lib/main/iohook.o \
+	diffusion3/lib/main/timers.o \
+	diffusion3/lib/main/message.o \
+	diffusion3/lib/main/tools.o \
+	diffusion3/apps/gear_examples/gear_common.o \
+	diffusion3/apps/gear_examples/gear_receiver.o \
+	diffusion3/apps/gear_examples/gear_sender.o \
+	diffusion3/apps/rmst_examples/rmst_sink.o \
+	diffusion3/apps/rmst_examples/rmst_source.o \
+	diffusion3/apps/ping/1pp_ping_sender.o \
+	diffusion3/apps/ping/1pp_ping_receiver.o \
+	diffusion3/apps/ping/2pp_ping_sender.o \
+	diffusion3/apps/ping/2pp_ping_receiver.o \
+	diffusion3/apps/ping/ping_common.o \
+	diffusion3/apps/ping/push_receiver.o \
+	diffusion3/apps/ping/push_sender.o \
+	diffusion3/filters/gear/gear_attr.o \
+	diffusion3/filters/gear/gear.o \
+	diffusion3/filters/gear/gear_tools.o \
+	diffusion3/filters/misc/log.o \
+	diffusion3/filters/misc/srcrt.o \
+	diffusion3/filters/misc/tag.o \
+	diffusion3/filters/rmst/rmst.o \
+	diffusion3/filters/rmst/rmst_filter.o \
+	delaybox/delaybox.o \
+	packmime/packmime_HTTP.o packmime/packmime_HTTP_rng.o \
+	packmime/packmime_OL.o packmime/packmime_OL_ranvar.o\
+	packmime/packmime_ranvar.o \
+	tmix/tmix.o tmix/tmix_delaybox.o
+
+NS_TCL_LIB_STL = tcl/lib/ns-diffusion.tcl \
+	tcl/delaybox/delaybox.tcl \
+	tcl/packmime/packmime.tcl \
+	tcl/tmix/tmix.tcl \
+	tcl/tmix/tmix_delaybox.tcl
+
+
+# WIN32: uncomment the following line to include specific make for VC++
+# !include <conf/makefile.win>
+
+OBJ_CC = \
+	tools/random.o tools/rng.o tools/ranvar.o common/misc.o common/timer-handler.o \
+	common/scheduler.o common/object.o common/packet.o \
+	common/ip.o routing/route.o common/connector.o common/ttl.o \
+	trace/trace.o trace/trace-ip.o \
+	classifier/classifier.o classifier/classifier-addr.o \
+	classifier/classifier-hash.o \
+	classifier/classifier-virtual.o \
+	classifier/classifier-mcast.o \
+	classifier/classifier-bst.o \
+	classifier/classifier-mpath.o mcast/replicator.o \
+	classifier/classifier-mac.o \
+	classifier/classifier-qs.o \
+	classifier/classifier-port.o src_rtg/classifier-sr.o \
+        src_rtg/sragent.o src_rtg/hdr_src.o adc/ump.o \
+	qs/qsagent.o qs/hdr_qs.o \
+	apps/app.o apps/telnet.o tcp/tcplib-telnet.o \
+	tools/trafgen.o trace/traffictrace.o tools/pareto.o \
+	tools/expoo.o tools/cbr_traffic.o \
+	adc/tbf.o adc/resv.o adc/sa.o tcp/saack.o \
+	tools/measuremod.o adc/estimator.o adc/adc.o adc/ms-adc.o \
+	adc/timewindow-est.o adc/acto-adc.o adc/qjump.o\
+        adc/pointsample-est.o adc/salink.o adc/actp-adc.o \
+	adc/hb-adc.o adc/expavg-est.o\
+	adc/param-adc.o adc/null-estimator.o \
+	adc/adaptive-receiver.o apps/vatrcvr.o adc/consrcvr.o \
+	common/agent.o common/message.o apps/udp.o \
+	common/session-rtp.o apps/rtp.o tcp/rtcp.o \
+	common/ivs.o \
+	common/messpass.o common/tp.o common/tpm.o apps/worm.o \
+	tcp/tcp.o tcp/tcp-sink.o tcp/tcp-reno.o \
+	tcp/tcp-newreno.o \
+	tcp/tcp-vegas.o tcp/tcp-rbp.o tcp/tcp-full.o tcp/rq.o \
+	baytcp/tcp-full-bay.o baytcp/ftpc.o baytcp/ftps.o \
+	tcp/scoreboard.o tcp/scoreboard-rq.o tcp/tcp-sack1.o tcp/tcp-fack.o \
+	tcp/linux/tcp_naivereno.o\
+	tcp/linux/src/tcp_cong.o\
+	tcp/linux/src/tcp_highspeed.o tcp/linux/src/tcp_bic.o tcp/linux/src/tcp_htcp.o tcp/linux/src/tcp_scalable.o tcp/linux/src/tcp_cubic.o\
+	tcp/linux/src/tcp_westwood.o tcp/linux/src/tcp_vegas.o tcp/linux/src/tcp_hybla.o\
+	tcp/linux/src/tcp_illinois.o tcp/linux/src/tcp_yeah.o \
+	tcp/linux/src/tcp_veno.o tcp/linux/src/tcp_compound.o tcp/linux/src/tcp_lp.o\
+	tcp/scoreboard1.o tcp/tcp-linux.o tcp/linux/ns-linux-util.o tcp/linux/ns-linux-c.o tcp/linux/ns-linux-param.o\
+	tcp/tcp-asym.o tcp/tcp-asym-sink.o tcp/tcp-fs.o \
+	tcp/tcp-asym-fs.o \
+	tcp/tcp-int.o tcp/chost.o tcp/tcp-session.o \
+	tcp/nilist.o \
+	sctp/sctp.o apps/sctp_app1.o\
+	sctp/sctp-timestamp.o sctp/sctp-hbAfterRto.o \
+	sctp/sctp-multipleFastRtx.o sctp/sctp-mfrHbAfterRto.o \
+	sctp/sctp-mfrTimestamp.o \
+	sctp/sctp-cmt.o \
+	sctp/sctpDebug.o \
+	tools/integrator.o tools/queue-monitor.o \
+	tools/flowmon.o tools/loss-monitor.o \
+	queue/queue.o queue/drop-tail.o \
+	adc/simple-intserv-sched.o queue/red.o \
+	queue/semantic-packetqueue.o queue/semantic-red.o \
+	tcp/ack-recons.o \
+	queue/sfq.o queue/fq.o queue/drr.o queue/srr.o queue/cbq.o \
+	queue/jobs.o queue/marker.o queue/demarker.o \
+	link/hackloss.o queue/errmodel.o queue/fec.o\
+	link/delay.o tcp/snoop.o \
+	gaf/gaf.o \
+	link/dynalink.o routing/rtProtoDV.o common/net-interface.o \
+	mcast/ctrMcast.o mcast/mcast_ctrl.o mcast/srm.o \
+	common/sessionhelper.o queue/delaymodel.o \
+	mcast/srm-ssm.o mcast/srm-topo.o \
+	routing/alloc-address.o routing/address.o \
+	$(LIB_DIR)int.Vec.o $(LIB_DIR)int.RVec.o \
+	$(LIB_DIR)dmalloc_support.o \
+	webcache/http.o webcache/tcp-simple.o webcache/pagepool.o \
+	webcache/inval-agent.o webcache/tcpapp.o webcache/http-aux.o \
+	webcache/mcache.o webcache/webtraf.o \
+	webcache/webserver.o \
+	webcache/logweb.o \
+	empweb/empweb.o \
+	empweb/empftp.o \
+	realaudio/realaudio.o \
+	mac/lanRouter.o classifier/filter.o \
+	common/pkt-counter.o \
+	common/Decapsulator.o common/Encapsulator.o \
+	common/encap.o \
+	mac/channel.o mac/mac.o mac/ll.o mac/mac-802_11.o \
+	mac/mac-802_11Ext.o \
+	mac/mac-802_3.o mac/mac-tdma.o mac/smac.o \
+	mobile/mip.o mobile/mip-reg.o mobile/gridkeeper.o \
+	mobile/propagation.o mobile/tworayground.o \
+	mobile/nakagami.o \
+	mobile/antenna.o mobile/omni-antenna.o \
+	mobile/shadowing.o mobile/shadowing-vis.o mobile/dumb-agent.o \
+	common/bi-connector.o common/node.o \
+	common/mobilenode.o \
+	mac/arp.o mobile/god.o mobile/dem.o \
+	mobile/topography.o mobile/modulation.o \
+	queue/priqueue.o queue/dsr-priqueue.o \
+	mac/phy.o mac/wired-phy.o mac/wireless-phy.o \
+	mac/wireless-phyExt.o \
+	mac/mac-timers.o trace/cmu-trace.o mac/varp.o \
+	mac/mac-simple.o \
+	satellite/sat-hdlc.o \
+	dsdv/dsdv.o dsdv/rtable.o queue/rtqueue.o \
+	routing/rttable.o \
+	imep/imep.o imep/dest_queue.o imep/imep_api.o \
+	imep/imep_rt.o imep/rxmit_queue.o imep/imep_timers.o \
+	imep/imep_util.o imep/imep_io.o \
+	tora/tora.o tora/tora_api.o tora/tora_dest.o \
+	tora/tora_io.o tora/tora_logs.o tora/tora_neighbor.o \
+	dsr/dsragent.o dsr/hdr_sr.o dsr/mobicache.o dsr/path.o \
+	dsr/requesttable.o dsr/routecache.o dsr/add_sr.o \
+	dsr/dsr_proto.o dsr/flowstruct.o dsr/linkcache.o \
+	dsr/simplecache.o dsr/sr_forwarder.o \
+	aodv/aodv_logs.o aodv/aodv.o \
+	aodv/aodv_rtable.o aodv/aodv_rqueue.o \
+	aomdv/aomdv_logs.o aomdv/aomdv.o \
+	aomdv/aomdv_rtable.o aomdv/aomdv_rqueue.o \
+	common/ns-process.o \
+	satellite/satgeometry.o satellite/sathandoff.o \
+	satellite/satlink.o satellite/satnode.o \
+	satellite/satposition.o satellite/satroute.o \
+	satellite/sattrace.o \
+	rap/raplist.o rap/rap.o rap/media-app.o rap/utilities.o \
+	common/fsm.o tcp/tcp-abs.o \
+	diffusion/diffusion.o diffusion/diff_rate.o diffusion/diff_prob.o \
+	diffusion/diff_sink.o diffusion/flooding.o diffusion/omni_mcast.o \
+	diffusion/hash_table.o diffusion/routing_table.o diffusion/iflist.o \
+	tcp/tfrc.o tcp/tfrc-sink.o mobile/energy-model.o apps/ping.o tcp/tcp-rfc793edu.o \
+	queue/rio.o queue/semantic-rio.o tcp/tcp-sack-rh.o tcp/scoreboard-rh.o \
+	plm/loss-monitor-plm.o plm/cbr-traffic-PP.o \
+	linkstate/hdr-ls.o \
+	mpls/classifier-addr-mpls.o mpls/ldp.o mpls/mpls-module.o \
+	routing/rtmodule.o classifier/classifier-hier.o \
+	routing/addr-params.o \
+         nix/hdr_nv.o nix/classifier-nix.o \
+         nix/nixnode.o \
+         routealgo/rnode.o \
+         routealgo/bfs.o \
+         routealgo/rbitmap.o \
+         routealgo/rlookup.o \
+         routealgo/routealgo.o \
+         nix/nixvec.o \
+	nix/nixroute.o \
+	diffserv/dsred.o diffserv/dsredq.o \
+	diffserv/dsEdge.o diffserv/dsCore.o \
+	diffserv/dsPolicy.o diffserv/ew.o diffserv/dewp.o \
+	queue/red-pd.o queue/pi.o queue/vq.o queue/rem.o \
+	queue/gk.o \
+	pushback/rate-limit.o pushback/rate-limit-strategy.o \
+	pushback/ident-tree.o pushback/agg-spec.o \
+	pushback/logging-data-struct.o \
+	pushback/rate-estimator.o \
+	pushback/pushback-queue.o pushback/pushback.o \
+	common/parentnode.o trace/basetrace.o \
+	common/simulator.o asim/asim.o \
+	common/scheduler-map.o common/splay-scheduler.o \
+	linkstate/ls.o linkstate/rtProtoLS.o \
+	pgm/classifier-pgm.o pgm/pgm-agent.o pgm/pgm-sender.o \
+	pgm/pgm-receiver.o mcast/rcvbuf.o \
+	mcast/classifier-lms.o mcast/lms-agent.o mcast/lms-receiver.o \
+	mcast/lms-sender.o \
+	queue/delayer.o \
+	xcp/xcpq.o xcp/xcp.o xcp/xcp-end-sys.o \
+	wpan/p802_15_4csmaca.o wpan/p802_15_4fail.o \
+	wpan/p802_15_4hlist.o wpan/p802_15_4mac.o \
+	wpan/p802_15_4nam.o wpan/p802_15_4phy.o \
+	wpan/p802_15_4sscs.o wpan/p802_15_4timer.o \
+	wpan/p802_15_4trace.o wpan/p802_15_4transac.o \
+	apps/pbc.o \
+	$(OBJ_STL)
+
+
+# don't allow comments to follow continuation lines
+
+#  mac-csma.o mac-multihop.o\
+#	sensor-nets/landmark.o mac-simple-wireless.o \
+#	sensor-nets/tags.o sensor-nets/sensor-query.o \
+#	sensor-nets/flood-agent.o \
+
+# what was here before is now in emulate/
+OBJ_C =
+
+OBJ_COMPAT = $(OBJ_GETOPT) common/win32.o
+#XXX compat/win32x.o compat/tkConsole.o
+
+OBJ_EMULATE_CC = \
+	emulate/net-ip.o \
+	emulate/net.o \
+	emulate/tap.o \
+	emulate/ether.o \
+	emulate/internet.o \
+	emulate/ping_responder.o \
+	emulate/arp.o \
+	emulate/icmp.o \
+	emulate/net-pcap.o \
+	emulate/nat.o  \
+	emulate/iptap.o \
+	emulate/tcptap.o
+
+OBJ_EMULATE_C = \
+	emulate/inet.o
+
+OBJ_GEN = $(GEN_DIR)version.o $(GEN_DIR)ns_tcl.o $(GEN_DIR)ptypes.o
+
+SRC =	$(OBJ_C:.o=.c) $(OBJ_CC:.o=.cc) \
+	$(OBJ_EMULATE_C:.o=.c) $(OBJ_EMULATE_CC:.o=.cc) \
+	common/tclAppInit.cc common/tkAppInit.cc 
+
+OBJ =	$(OBJ_C) $(OBJ_CC) $(OBJ_GEN) $(OBJ_COMPAT)
+
+CLEANFILES = ns nse nsx ns.dyn $(OBJ) $(OBJ_EMULATE_CC) \
+	$(OBJ_EMULATE_C) common/tclAppInit.o \
+	common/tkAppInit.o nstk \
+	$(GEN_DIR)* $(NS).core core core.$(NS) core.$(NSX) core.$(NSE) \
+	common/ptypes2tcl common/ptypes2tcl.o 
+
+SUBDIRS=\
+	indep-utils/cmu-scen-gen/setdest \
+	indep-utils/webtrace-conv/dec \
+	indep-utils/webtrace-conv/epa \
+	indep-utils/webtrace-conv/nlanr \
+	indep-utils/webtrace-conv/ucb
+
+BUILD_NSE = 
+
+all: $(NS) $(BUILD_NSE) $(NSTK) all-recursive Makefile
+
+
+all-recursive:
+	for i in $(SUBDIRS); do ( cd $$i; $(MAKE) all; ) done
+
+
+
+
+ifeq ($(NSLIB),libns.dll)
+
+# This is for cygwin
+
+NS_CPPFLAGS = -DNSLIBNAME=\"$(NSLIB)\" 
+NS_LIBS =  -ldl
+
+$(NSLIB): $(OBJ) common/tclAppInit.o 
+	$(LINK) -shared $(LDFLAGS) \
+		$(LDOUT)$@  \
+		-Wl,--export-all-symbols \
+		-Wl,--enable-auto-import \
+		-Wl,--out-implib=$@.a \
+		-Wl,--whole-archive $^ \
+		-Wl,--no-whole-archive  
+
+$(NS): $(NSLIB) common/main-modular.cc 
+	$(LINK) $(NS_CPPFLAGS) $(LDFLAGS) $(LDOUT)$@ common/main-modular.cc $(NS_LIBS)
+
+else 
+
+# default for all systems but cygwin
+
+$(NS): $(OBJ) common/tclAppInit.o common/main-monolithic.o
+	$(LINK) $(LDFLAGS) $(LDOUT)$@ $^ $(LIB)
+
+endif 
+
+
+
+Makefile: Makefile.in
+	@echo "Makefile.in is newer than Makefile."
+	@echo "You need to re-run configure."
+	false
+
+$(NSE): $(OBJ) common/tclAppInit.o common/main-monolithic.o $(OBJ_EMULATE_CC) $(OBJ_EMULATE_C)
+	$(LINK) $(LDFLAGS) $(LDOUT)$@ $^ $(LIB) 
+
+$(NSTK): $(OBJ) common/tkAppInit.o 
+	$(LINK) $(LDFLAGS) $(LDOUT)$@ $^ $(LIB)
+
+ns.dyn: $(OBJ) common/tclAppInit.o common/main-monolithic.o 
+	$(LINK) $(LDFLAGS) -o $@ $^ $(LIB)
+
+PURIFY	= purify -cache-dir=/tmp
+ns-pure: $(OBJ) common/tclAppInit.o common/main-monolithic.o 
+	$(PURIFY) $(LINK) $(LDFLAGS) -o $@ $^ $(LIB)
+
+NS_TCL_LIB = \
+	tcl/lib/ns-compat.tcl \
+	tcl/lib/ns-default.tcl \
+	tcl/lib/ns-errmodel.tcl \
+	tcl/lib/ns-lib.tcl \
+	tcl/lib/ns-link.tcl \
+	tcl/lib/ns-mobilenode.tcl \
+	tcl/lib/ns-sat.tcl \
+	tcl/lib/ns-cmutrace.tcl \
+	tcl/lib/ns-node.tcl \
+	tcl/lib/ns-rtmodule.tcl \
+	tcl/lib/ns-hiernode.tcl \
+	tcl/lib/ns-packet.tcl \
+	tcl/lib/ns-queue.tcl \
+	tcl/lib/ns-source.tcl \
+	tcl/lib/ns-nam.tcl \
+	tcl/lib/ns-trace.tcl \
+	tcl/lib/ns-agent.tcl \
+	tcl/lib/ns-random.tcl \
+	tcl/lib/ns-namsupp.tcl \
+	tcl/lib/ns-address.tcl \
+	tcl/lib/ns-intserv.tcl \
+	tcl/lib/ns-autoconf.tcl \
+	tcl/rtp/session-rtp.tcl \
+	tcl/lib/ns-mip.tcl \
+	tcl/rtglib/dynamics.tcl \
+	tcl/rtglib/route-proto.tcl \
+	tcl/rtglib/algo-route-proto.tcl \
+	tcl/rtglib/ns-rtProtoLS.tcl \
+        tcl/interface/ns-iface.tcl \
+	tcl/mcast/BST.tcl \
+        tcl/mcast/ns-mcast.tcl \
+        tcl/mcast/McastProto.tcl \
+        tcl/mcast/DM.tcl \
+	tcl/mcast/srm.tcl \
+	tcl/mcast/srm-adaptive.tcl \
+	tcl/mcast/srm-ssm.tcl \
+	tcl/mcast/timer.tcl \
+	tcl/mcast/McastMonitor.tcl \
+	tcl/mobility/dsdv.tcl \
+	tcl/mobility/dsr.tcl \
+        tcl/ctr-mcast/CtrMcast.tcl \
+        tcl/ctr-mcast/CtrMcastComp.tcl \
+        tcl/ctr-mcast/CtrRPComp.tcl \
+	tcl/rlm/rlm.tcl \
+	tcl/rlm/rlm-ns.tcl \
+	tcl/session/session.tcl \
+	tcl/lib/ns-route.tcl \
+	tcl/emulate/ns-emulate.tcl \
+	tcl/lan/vlan.tcl \
+	tcl/lan/abslan.tcl \
+	tcl/lan/ns-ll.tcl \
+	tcl/lan/ns-mac.tcl \
+	tcl/webcache/http-agent.tcl \
+	tcl/webcache/http-server.tcl \
+	tcl/webcache/http-cache.tcl \
+	tcl/webcache/http-mcache.tcl \
+	tcl/webcache/webtraf.tcl \
+	tcl/webcache/empweb.tcl \
+	tcl/webcache/empftp.tcl \
+	tcl/plm/plm.tcl \
+	tcl/plm/plm-ns.tcl \
+	tcl/plm/plm-topo.tcl \
+	tcl/mpls/ns-mpls-classifier.tcl \
+	tcl/mpls/ns-mpls-ldpagent.tcl \
+	tcl/mpls/ns-mpls-node.tcl \
+	tcl/mpls/ns-mpls-simulator.tcl \
+	tcl/lib/ns-pushback.tcl \
+	tcl/lib/ns-srcrt.tcl \
+	tcl/mcast/ns-lms.tcl \
+	tcl/lib/ns-qsnode.tcl \
+	$(NS_TCL_LIB_STL)
+
+$(GEN_DIR)ns_tcl.cc: $(NS_TCL_LIB)
+	$(TCLSH) bin/tcl-expand.tcl tcl/lib/ns-lib.tcl $(NS_TCL_LIB_STL) | $(TCL2C) et_ns_lib > $@
+
+$(GEN_DIR)version.c: VERSION
+	$(RM) $@
+	$(TCLSH) bin/string2c.tcl version_string < VERSION > $@
+
+$(GEN_DIR)ptypes.cc: common/ptypes2tcl common/packet.h
+	./common/ptypes2tcl > $@
+
+common/ptypes2tcl: common/ptypes2tcl.o
+	$(LINK) $(LDFLAGS) $(LDOUT)$@ common/ptypes2tcl.o
+
+common/ptypes2tcl.o: common/ptypes2tcl.cc common/packet.h
+
+dirs:
+	for d in $(DESTDIR)$(MANDEST)/man1; do \
+		if [ ! -d $$d ]; then \
+			mkdir -p $$d ;\
+		fi;\
+	done
+
+
+install: dirs force install-ns install-man
+
+install-ns: force
+	$(INSTALL) -m 755 ns $(DESTDIR)$(BINDEST)
+
+install-man: force
+	$(INSTALL) -m 644 ns.1 $(DESTDIR)$(MANDEST)/man1
+
+install-recursive: force
+	for i in $(SUBDIRS); do ( cd $$i; $(MAKE) install; ) done
+
+clean:
+	$(RM) $(CLEANFILES)
+
+AUTOCONF_GEN = tcl/lib/ns-autoconf.tcl
+distclean: distclean-recursive
+	$(RM) $(CLEANFILES) Makefile config.cache config.log config.status \
+	    autoconf.h gnuc.h os-proto.h $(AUTOCONF_GEN); \
+	$(MV) .configure .configure- ;\
+	echo "Moved .configure to .configure-"
+
+distclean-recursive:
+	for i in $(SUBDIRS); do ( cd $$i; $(MAKE) clean; $(RM) Makefile; ) done
+
+tags:	force
+	ctags -wtd *.cc *.h webcache/*.cc webcache/*.h dsdv/*.cc dsdv/*.h \
+	dsr/*.cc dsr/*.h webcache/*.cc webcache/*.h lib/*.cc lib/*.h \
+	../Tcl/*.cc ../Tcl/*.h 
+
+TAGS:	force
+	etags *.cc *.h webcache/*.cc webcache/*.h dsdv/*.cc dsdv/*.h \
+	dsr/*.cc dsr/*.h webcache/*.cc webcache/*.h lib/*.cc lib/*.h \
+	../Tcl/*.cc ../Tcl/*.h
+
+tcl/lib/TAGS:	force
+	( \
+		cd tcl/lib; \
+		$(TCLSH) ../../bin/tcl-expand.tcl ns-lib.tcl | grep '^### tcl-expand.tcl: begin' | awk '{print $$5}' >.tcl_files; \
+		etags --lang=none -r '/^[ \t]*proc[ \t]+\([^ \t]+\)/\1/' `cat .tcl_files`; \
+		etags --append --lang=none -r '/^\([A-Z][^ \t]+\)[ \t]+\(instproc\|proc\)[ \t]+\([^ \t]+\)[ \t]+/\1::\3/' `cat .tcl_files`; \
+	)
+
+depend: $(SRC)
+	$(MKDEP) $(CFLAGS) $(INCLUDES) -- $(SRC) 2>&1 > /dev/null
+
+srctar:
+	@cwd=`pwd` ; dir=`basename $$cwd` ; \
+	    name=ns-`cat VERSION | tr A-Z a-z` ; \
+	    tar=ns-src-`cat VERSION`.tar.gz ; \
+	    list="" ; \
+	    for i in `cat FILES` ; do list="$$list $$name/$$i" ; done; \
+	    echo \
+	    "(rm -f $$tar; cd .. ; ln -s $$dir $$name)" ; \
+	     (rm -f $$tar; cd .. ; ln -s $$dir $$name) ; \
+	    echo \
+	    "(cd .. ; tar cfhz $$tar [lots of files])" ; \
+	     (cd .. ; tar cfhz - $$list) > $$tar ; \
+	    echo \
+	    "rm ../$$name; chmod 444 $$tar" ;  \
+	     rm ../$$name; chmod 444 $$tar
+
+force:
+
+test:	force
+	./validate
+
+# Create makefile.vc for Win32 development by replacing:
+# "# !include ..." 	-> 	"!include ..."
+makefile.vc:	Makefile.in
+	$(PERL) bin/gen-vcmake.pl < Makefile.in > makefile.vc
+#	$(PERL) -pe 's/^# (\!include)/\!include/o' < Makefile.in > makefile.vc
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/mobile/nakagami.cc ns-allinone-2.34-qjump/ns-2.34/mobile/nakagami.cc
--- ns-allinone-2.34-pfabric/ns-2.34/mobile/nakagami.cc	2015-03-04 17:49:02.734750272 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/mobile/nakagami.cc	2015-03-04 23:13:41.158555793 +0000
@@ -181,8 +181,10 @@ double Nakagami::Pr(PacketStamp *t, Pack
  		
         if (int_m == m) {
  			resultPower = ErlangRandomVariable(Pr/m, int_m).value();
+            //resultPower = ErlangRandomVariable::ErlangRandomVariable(Pr/m, int_m).value();
  		} else {
- 			resultPower = GammaRandomVariable(m, Pr/m).value();
+            resultPower = GammaRandomVariable(m, Pr/m).value();
+ 			//resultPower = GammaRandomVariable::GammaRandomVariable(m, Pr/m).value();
  		}
  		return resultPower;
 	}
Binary files ns-allinone-2.34-pfabric/ns-2.34/ns-pf and ns-allinone-2.34-qjump/ns-2.34/ns-pf differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/queue/drop-tail.cc ns-allinone-2.34-qjump/ns-2.34/queue/drop-tail.cc
--- ns-allinone-2.34-pfabric/ns-2.34/queue/drop-tail.cc	2015-03-04 17:50:43.186749269 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/queue/drop-tail.cc	2015-03-04 23:13:41.174555793 +0000
@@ -247,6 +247,9 @@ Packet* DropTail::deque()
 			//}
 
 			q_->remove(p);
+			//			hdr_ip* iph = hdr_ip::access(p);
+			//			printf("deque (saddr, daddr, prio) = (%d, %d, %d)\n",
+			//			       iph->saddr(), iph->daddr(), iph->prio());
 			return p;
 	} else
 	if (drop_smart_) {
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tbf.h ns-allinone-2.34-qjump/ns-2.34/tbf.h
--- ns-allinone-2.34-pfabric/ns-2.34/tbf.h	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/tbf.h	2015-03-04 23:13:41.190555793 +0000
@@ -0,0 +1,78 @@
+/* -*-	Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
+/*
+ * Copyright (c) Xerox Corporation 1997. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; either version 2 of the License, or (at your
+ * option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ *
+ * Linking this file statically or dynamically with other modules is making
+ * a combined work based on this file.  Thus, the terms and conditions of
+ * the GNU General Public License cover the whole combination.
+ *
+ * In addition, as a special exception, the copyright holders of this file
+ * give you permission to combine this file with free software programs or
+ * libraries that are released under the GNU LGPL and with code included in
+ * the standard release of ns-2 under the Apache 2.0 license or under
+ * otherwise-compatible licenses with advertising requirements (or modified
+ * versions of such code, with unchanged license).  You may copy and
+ * distribute such a system following the terms of the GNU GPL for this
+ * file and the licenses of the other code concerned, provided that you
+ * include the source code of that other code when and as the GNU GPL
+ * requires distribution of source code.
+ *
+ * Note that people who make modified versions of this file are not
+ * obligated to grant this special exception for their modified versions;
+ * it is their choice whether to do so.  The GNU General Public License
+ * gives permission to release a modified version without this exception;
+ * this exception also makes it possible to release a modified version
+ * which carries forward this exception.
+ */
+
+#ifndef ns_tbf_h
+#define ns_tbf_h
+
+#include "connector.h"
+#include "timer-handler.h"
+
+class TBF;
+
+class TBF_Timer : public TimerHandler {
+public:
+	TBF_Timer(TBF *t) : TimerHandler() { tbf_ = t;}
+	
+protected:
+	virtual void expire(Event *e);
+	TBF *tbf_;
+};
+
+
+class TBF : public Connector {
+public:
+	TBF();
+	~TBF();
+	void timeout(int);
+protected:
+	void recv(Packet *, Handler *);
+	double getupdatedtokens();
+	double tokens_; //acumulated tokens
+	double rate_; //token bucket rate
+	int bucket_; //bucket depth
+	int qlen_;
+	double lastupdatetime_;
+	PacketQueue *q_;
+	TBF_Timer tbf_timer_;
+	int init_;
+};
+
+#endif
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/lib/ns-agent.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/lib/ns-agent.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/lib/ns-agent.tcl	2015-03-04 17:49:02.774750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/lib/ns-agent.tcl	2015-03-04 23:13:41.218555792 +0000
@@ -114,7 +114,14 @@ Agent instproc attach-app {s_type} {
 Agent instproc attach-tbf { tbf } {
 	$tbf target [$self target]
 	$self target $tbf
+}
 
+#
+# Attach qjump to an agent
+#
+Agent instproc attach-qjump { qjump } {
+	$qjump target [$self target]
+	$self target $qjump
 }
 
 #
@@ -137,6 +144,13 @@ Agent/CBR/UDP/SA instproc attach-tbf { t
 	$self ctrl-target [$tbf target]
 }
 
+Agent/CBR/UDP/SA instproc attach-qjump { qjump } {
+	$qjump target [$self target]
+	$self target $qjump
+	$self ctrl-target [$qjump target]
+}
+
+
 #
 # A lot of agents want to store the maxttl locally.  However,
 # setting a class variable based on the Agent::ttl_ variable
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/lib/ns-autoconf.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/lib/ns-autoconf.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/lib/ns-autoconf.tcl	1970-01-01 01:00:00.000000000 +0100
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/lib/ns-autoconf.tcl	2015-03-04 23:13:41.218555792 +0000
@@ -0,0 +1,50 @@
+# -*-	Mode:tcl -*-
+#
+# Copyright (c) 1997 University of Southern California.
+# All rights reserved.                                            
+#                                                                
+# Redistribution and use in source and binary forms are permitted
+# provided that the above copyright notice and this paragraph are
+# duplicated in all such forms and that any documentation, advertising
+# materials, and other materials related to such distribution and use
+# acknowledge that the software was developed by the University of
+# Southern California, Information Sciences Institute.  The name of the
+# University may not be used to endorse or promote products derived from
+# this software without specific prior written permission.
+# 
+# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
+# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
+# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
+#
+#
+
+# This file should contain variables changed only by autoconf.
+
+proc checkout_executable {exe_var best alternate text} {
+	global $exe_var
+	set $exe_var $best
+	if {"$best" == "" || ![file executable $best]} {
+		puts stderr $text
+		set $exe_var $alternate
+	}
+}
+
+#
+# Keep track of where the good perl is.
+#
+checkout_executable PERL "/usr/bin/perl" perl "\
+	When configured, ns found the right version of perl in\
+	/usr/bin/perl
+	but it doesn't seem to be there anymore, so\
+	ns will fall back on running the first perl in your path.\
+	The wrong version of perl may break the test suites.\
+	Reconfigure and rebuild ns if this is a problem.\
+"
+checkout_executable TCLSH "/home/mpg39/ns2-2.34/ns-allinone-2.34/bin/tclsh8.4" tclsh "\
+	When configured, ns found the right version of tclsh in\
+	/home/mpg39/ns2-2.34/ns-allinone-2.34/bin/tclsh8.4
+	but it doesn't seem to be there anymore, so\
+	ns will fall back on running the first tclsh in your path.\
+	The wrong version of tclsh may break the test suites.\
+	Reconfigure and rebuild ns if this is a problem.\
+"
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/lib/ns-lib.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/lib/ns-lib.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/lib/ns-lib.tcl	2015-03-04 17:49:02.774750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/lib/ns-lib.tcl	2015-03-04 23:13:41.218555792 +0000
@@ -1566,6 +1566,11 @@ Simulator instproc attach-tbf-agent { no
 	$agent attach-tbf $tbf
 }
 
+Simulator instproc attach-qjump-agent { node agent qjump } {
+	$node attach $agent
+	$agent attach-qjump $qjump
+}
+
 
 Simulator instproc detach-agent { node agent } {
 
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/100hts.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/100hts.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/100hts.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/100hts.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,345 +0,0 @@
-# Generated by sgb2hier-ns,sgb2hier-ns generated from sgb2ns
-# sgb2ns adapted from sgb2alt by Polly Huang
-# GRAPH (#nodes #edges id uu vv ww xx yy zz):
-# 100 374 transtub(0,3,0,0,{1,89,3,1.000,0.000,0.000},{4,44,3,0.600,0.000,0.000},{8,36,3,0.420,0.000,0.000}) 89 2 5 0 
-
-#Creating hierarchical topology from transit-stub graph:
-
-proc create-hier-topology {linkBW} {
-	# upvar $node n
-# 	upvar $nsns ns
-    global n
-    global ns
-
-	set verbose 1
-
-	if {$verbose} { 
-		puts "Creating hierarchical nodes.." 
-}
-set n(0) [$ns node 0.0.0]
-set n(1) [$ns node 0.1.0]
-set n(2) [$ns node 0.2.0]
-set n(3) [$ns node 0.3.0]
-set n(4) [$ns node 0.4.0]
-set n(5) [$ns node 0.4.1]
-set n(6) [$ns node 0.4.2]
-set n(7) [$ns node 0.4.3]
-set n(8) [$ns node 0.5.0]
-set n(9) [$ns node 0.5.1]
-set n(10) [$ns node 0.5.2]
-set n(11) [$ns node 0.5.3]
-set n(12) [$ns node 0.5.4]
-set n(13) [$ns node 0.5.5]
-set n(14) [$ns node 0.5.6]
-set n(15) [$ns node 0.5.7]
-set n(16) [$ns node 0.6.0]
-set n(17) [$ns node 0.6.1]
-set n(18) [$ns node 0.6.2]
-set n(19) [$ns node 0.6.3]
-set n(20) [$ns node 0.6.4]
-set n(21) [$ns node 0.6.5]
-set n(22) [$ns node 0.6.6]
-set n(23) [$ns node 0.6.7]
-set n(24) [$ns node 0.6.8]
-set n(25) [$ns node 0.6.9]
-set n(26) [$ns node 0.6.10]
-set n(27) [$ns node 0.7.0]
-set n(28) [$ns node 0.7.1]
-set n(29) [$ns node 0.7.2]
-set n(30) [$ns node 0.7.3]
-set n(31) [$ns node 0.7.4]
-set n(32) [$ns node 0.7.5]
-set n(33) [$ns node 0.7.6]
-set n(34) [$ns node 0.7.7]
-set n(35) [$ns node 0.7.8]
-set n(36) [$ns node 0.8.0]
-set n(37) [$ns node 0.8.1]
-set n(38) [$ns node 0.8.2]
-set n(39) [$ns node 0.8.3]
-set n(40) [$ns node 0.8.4]
-set n(41) [$ns node 0.8.5]
-set n(42) [$ns node 0.9.0]
-set n(43) [$ns node 0.9.1]
-set n(44) [$ns node 0.9.2]
-set n(45) [$ns node 0.9.3]
-set n(46) [$ns node 0.9.4]
-set n(47) [$ns node 0.9.5]
-set n(48) [$ns node 0.9.6]
-set n(49) [$ns node 0.10.0]
-set n(50) [$ns node 0.10.1]
-set n(51) [$ns node 0.10.2]
-set n(52) [$ns node 0.10.3]
-set n(53) [$ns node 0.10.4]
-set n(54) [$ns node 0.10.5]
-set n(55) [$ns node 0.10.6]
-set n(56) [$ns node 0.10.7]
-set n(57) [$ns node 0.10.8]
-set n(58) [$ns node 0.10.9]
-set n(59) [$ns node 0.11.0]
-set n(60) [$ns node 0.11.1]
-set n(61) [$ns node 0.11.2]
-set n(62) [$ns node 0.11.3]
-set n(63) [$ns node 0.11.4]
-set n(64) [$ns node 0.11.5]
-set n(65) [$ns node 0.11.6]
-set n(66) [$ns node 0.11.7]
-set n(67) [$ns node 0.11.8]
-set n(68) [$ns node 0.12.0]
-set n(69) [$ns node 0.12.1]
-set n(70) [$ns node 0.12.2]
-set n(71) [$ns node 0.12.3]
-set n(72) [$ns node 0.12.4]
-set n(73) [$ns node 0.12.5]
-set n(74) [$ns node 0.12.6]
-set n(75) [$ns node 0.12.7]
-set n(76) [$ns node 0.12.8]
-set n(77) [$ns node 0.13.0]
-set n(78) [$ns node 0.13.1]
-set n(79) [$ns node 0.13.2]
-set n(80) [$ns node 0.13.3]
-set n(81) [$ns node 0.13.4]
-set n(82) [$ns node 0.13.5]
-set n(83) [$ns node 0.13.6]
-set n(84) [$ns node 0.13.7]
-set n(85) [$ns node 0.13.8]
-set n(86) [$ns node 0.13.9]
-set n(87) [$ns node 0.14.0]
-set n(88) [$ns node 0.14.1]
-set n(89) [$ns node 0.14.2]
-set n(90) [$ns node 0.14.3]
-set n(91) [$ns node 0.14.4]
-set n(92) [$ns node 0.15.0]
-set n(93) [$ns node 0.15.1]
-set n(94) [$ns node 0.15.2]
-set n(95) [$ns node 0.15.3]
-set n(96) [$ns node 0.15.4]
-set n(97) [$ns node 0.15.5]
-set n(98) [$ns node 0.15.6]
-set n(99) [$ns node 0.15.7]
-
-
-# Topology information :
-lappend eilevel 1 16
-AddrParams set eilevel_ $eilevel
-lappend eilastlevel 1 1 1 1 4 8 11 9 6 7 10 9 9 10 5 8 
-AddrParams set eilastlevel_ $eilastlevel
-
-
-	# EDGES (from-node to-node length a b):
-	if {$verbose} { 
-		puts -nonewline "Creating links 0..."
-		flush stdout 
-	}
-	$ns duplex-link-of-interfaces $n(0) $n(29) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(17) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(12) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(4) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(2) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(3) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(63) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(53) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(44) $linkBW 10ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(40) $linkBW 300ms DropTail
-	if {$verbose} { puts -nonewline "10..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1) $n(2) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(3) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(88) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(80) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(69) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(3) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(95) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(5) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(7) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(6) $linkBW 160ms DropTail
-	if {$verbose} { puts -nonewline "20..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(6) $n(7) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(9) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(11) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(10) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(12) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(12) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(15) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(12) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(13) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(15) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "30..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(12) $n(13) $linkBW 10ms DropTail
-	$ns duplex-link-of-interfaces $n(12) $n(14) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(12) $n(15) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(13) $n(14) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(16) $n(18) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(16) $n(20) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(16) $n(25) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(17) $n(20) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(17) $n(23) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(17) $n(24) $linkBW 80ms DropTail
-	if {$verbose} { puts -nonewline "40..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(17) $n(25) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(17) $n(26) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(19) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(21) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(22) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(24) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(26) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(20) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(21) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(22) $linkBW 190ms DropTail
-	if {$verbose} { puts -nonewline "50..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(19) $n(23) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(24) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(25) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(21) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(22) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(23) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(25) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(26) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(22) $n(24) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(24) $linkBW 190ms DropTail
-	if {$verbose} { puts -nonewline "60..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(23) $n(26) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(24) $n(26) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(27) $n(30) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(27) $n(32) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(27) $n(34) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(27) $n(35) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(28) $n(31) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(28) $n(33) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(29) $n(30) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(29) $n(33) $linkBW 100ms DropTail
-	if {$verbose} { puts -nonewline "70..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(29) $n(34) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(30) $n(34) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(30) $n(35) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(31) $n(33) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(32) $n(33) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(32) $n(35) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(33) $n(35) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(36) $n(38) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(36) $n(41) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(37) $n(40) $linkBW 10ms DropTail
-	if {$verbose} { puts -nonewline "80..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(37) $n(41) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(38) $n(39) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(38) $n(40) $linkBW 10ms DropTail
-	$ns duplex-link-of-interfaces $n(42) $n(43) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(42) $n(44) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(42) $n(45) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(43) $n(44) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(43) $n(47) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(43) $n(48) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(44) $n(45) $linkBW 110ms DropTail
-	if {$verbose} { puts -nonewline "90..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(45) $n(46) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(45) $n(47) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(46) $n(48) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(47) $n(48) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(49) $n(53) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(49) $n(58) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(50) $n(52) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(50) $n(56) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(51) $n(53) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(51) $n(56) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "100..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(51) $n(57) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(51) $n(58) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(52) $n(54) $linkBW 10ms DropTail
-	$ns duplex-link-of-interfaces $n(52) $n(56) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(52) $n(58) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(53) $n(54) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(53) $n(55) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(53) $n(58) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(54) $n(55) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(54) $n(58) $linkBW 120ms DropTail
-	if {$verbose} { puts -nonewline "110..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(55) $n(58) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(56) $n(57) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(56) $n(58) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(59) $n(60) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(59) $n(61) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(59) $n(63) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(60) $n(63) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(60) $n(66) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(60) $n(67) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(61) $n(63) $linkBW 70ms DropTail
-	if {$verbose} { puts -nonewline "120..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(61) $n(64) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(61) $n(67) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(62) $n(64) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(62) $n(67) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(63) $n(65) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(63) $n(66) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(63) $n(67) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(65) $n(67) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(66) $n(67) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(68) $n(72) $linkBW 320ms DropTail
-	if {$verbose} { puts -nonewline "130..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(68) $n(74) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(69) $n(70) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(69) $n(71) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(69) $n(75) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(70) $n(71) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(70) $n(73) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(70) $n(76) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(71) $n(73) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(71) $n(75) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(71) $n(76) $linkBW 180ms DropTail
-	if {$verbose} { puts -nonewline "140..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(73) $n(74) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(73) $n(75) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(74) $n(76) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(75) $n(76) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(77) $n(79) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(77) $n(82) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(79) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(81) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(83) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(85) $linkBW 220ms DropTail
-	if {$verbose} { puts -nonewline "150..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(78) $n(86) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(83) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(86) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(80) $n(84) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(80) $n(85) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(82) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(84) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(83) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(84) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(85) $linkBW 270ms DropTail
-	if {$verbose} { puts -nonewline "160..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(82) $n(86) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(83) $n(85) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(83) $n(86) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(84) $n(85) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(84) $n(86) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(85) $n(86) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(87) $n(88) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(87) $n(89) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(87) $n(90) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(87) $n(91) $linkBW 210ms DropTail
-	if {$verbose} { puts -nonewline "170..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(88) $n(90) $linkBW 10ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(90) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(91) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(90) $n(91) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(92) $n(93) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(92) $n(99) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(93) $n(95) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(93) $n(98) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(93) $n(99) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(94) $n(95) $linkBW 50ms DropTail
-	if {$verbose} { puts -nonewline "180..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(94) $n(96) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(94) $n(97) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(94) $n(99) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(95) $n(97) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(95) $n(98) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(96) $n(97) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(98) $n(99) $linkBW 170ms DropTail
-
-	if {$verbose} { 
-		puts -nonewline "187..."
-		flush stdout
-		puts "starting"
-	}
-	return 100}
-# end of hier topology generation
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/cbr.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/cbr.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/cbr.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/cbr.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,21 +0,0 @@
-#
-# nodes: 5, max conn: 1, send rate: 2.0, seed: 1
-#
-#
-# 2 connecting to 3 at time 82.557023746220864
-#
-set udp_(0) [new Agent/UDP]
-$ns_ attach-agent $node_(2) $udp_(0)
-set null_(0) [new Agent/Null]
-$ns_ attach-agent $node_(3) $null_(0)
-set cbr_(0) [new Application/Traffic/CBR]
-$cbr_(0) set packetSize_ 512
-$cbr_(0) set interval_ 2.0
-$cbr_(0) set random_ 1
-$cbr_(0) set maxpkts_ 10000
-$cbr_(0) attach-agent $udp_(0)
-$ns_ connect $udp_(0) $null_(0)
-$ns_ at 82.557023746220864 "$cbr_(0) start"
-$ns_ at 492.557023746220864 "$cbr_(0) stop"
-#Total sources/connections: 1/1
-#
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/.cvsignore	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,20 +0,0 @@
-t0.tcl
-t1.tcl
-t3.tcl
-t4.tcl
-t5.tcl
-t6.tcl
-t7.tcl
-t8.tcl
-temp.*
-*.tr
-*.tr1
-all.q
-out.*
-fairflow.tr
-fairflow.xgr
-all.nam
-cwnd.xgr
-*.rands
-all.cwnd
-gkeeper.nam
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/flowdurcdf ns-allinone-2.34-qjump/ns-2.34/tcl/test/flowdurcdf
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/flowdurcdf	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/flowdurcdf	1970-01-01 01:00:00.000000000 +0100
@@ -1,254 +0,0 @@
-1.0 0 0
-2.0 0 0
-3.0 9 0.00622407
-4.0 10 0.0131397
-5.0 8 0.0186722
-6.0 9 0.0248963
-7.0 8 0.0304288
-8.0 15 0.0408022
-9.0 20 0.0546335
-10.0 19 0.0677732
-11.0 19 0.0809129
-12.0 24 0.0975104
-13.0 22 0.112725
-14.0 26 0.130705
-15.0 30 0.151452
-16.0 20 0.165284
-17.0 19 0.178423
-18.0 20 0.192254
-19.0 22 0.207469
-20.0 25 0.224758
-21.0 24 0.241355
-22.0 24 0.257953
-23.0 26 0.275934
-24.0 29 0.295989
-25.0 20 0.30982
-26.0 14 0.319502
-27.0 21 0.334025
-28.0 16 0.34509
-29.0 19 0.35823
-30.0 16 0.369295
-31.0 22 0.384509
-32.0 23 0.400415
-33.0 16 0.41148
-34.0 21 0.426003
-35.0 17 0.437759
-36.0 12 0.446058
-37.0 28 0.465422
-38.0 18 0.47787
-39.0 19 0.49101
-40.0 20 0.504841
-41.0 20 0.518672
-42.0 14 0.528354
-43.0 21 0.542877
-44.0 18 0.555325
-45.0 14 0.565007
-46.0 18 0.577455
-47.0 20 0.591286
-48.0 16 0.602351
-49.0 8 0.607884
-50.0 8 0.613416
-51.0 8 0.618949
-52.0 8 0.624481
-53.0 4 0.627248
-54.0 6 0.631397
-55.0 7 0.636238
-56.0 5 0.639696
-57.0 8 0.645228
-58.0 9 0.651452
-59.0 6 0.655602
-60.0 4 0.658368
-61.0 3 0.660443
-62.0 8 0.665975
-63.0 8 0.671508
-64.0 3 0.673582
-65.0 14 0.683264
-66.0 10 0.69018
-67.0 12 0.698479
-68.0 3 0.700553
-69.0 2 0.701936
-70.0 9 0.70816
-71.0 9 0.714385
-72.0 6 0.718534
-73.0 7 0.723375
-74.0 8 0.728907
-75.0 7 0.733748
-76.0 6 0.737898
-77.0 3 0.739972
-78.0 2 0.741355
-79.0 4 0.744122
-80.0 5 0.74758
-81.0 4 0.750346
-82.0 3 0.75242
-83.0 4 0.755187
-84.0 7 0.760028
-85.0 6 0.764177
-86.0 6 0.768326
-87.0 4 0.771093
-88.0 5 0.77455
-89.0 5 0.778008
-90.0 7 0.782849
-91.0 7 0.78769
-92.0 2 0.789073
-93.0 5 0.792531
-94.0 4 0.795297
-95.0 6 0.799447
-96.0 7 0.804288
-97.0 7 0.809129
-98.0 4 0.811895
-99.0 4 0.814661
-100.0 6 0.818811
-101.0 2 0.820194
-102.0 6 0.824343
-103.0 3 0.826418
-104.0 1 0.827109
-105.0 5 0.830567
-106.0 3 0.832642
-107.0 0 0.832642
-108.0 1 0.833333
-109.0 7 0.838174
-110.0 2 0.839557
-111.0 6 0.843707
-112.0 5 0.847165
-113.0 2 0.848548
-114.0 3 0.850622
-115.0 3 0.852697
-116.0 3 0.854772
-117.0 3 0.856846
-118.0 3 0.858921
-119.0 1 0.859613
-120.0 4 0.862379
-121.0 2 0.863762
-122.0 5 0.86722
-123.0 3 0.869295
-124.0 8 0.874827
-125.0 2 0.87621
-126.0 1 0.876902
-127.0 3 0.878976
-128.0 7 0.883817
-129.0 1 0.884509
-130.0 2 0.885892
-131.0 2 0.887275
-132.0 3 0.88935
-133.0 1 0.890041
-134.0 3 0.892116
-135.0 1 0.892808
-136.0 2 0.894191
-137.0 2 0.895574
-138.0 0 0.895574
-139.0 1 0.896266
-140.0 3 0.89834
-141.0 1 0.899032
-142.0 4 0.901798
-143.0 3 0.903873
-144.0 3 0.905947
-145.0 4 0.908714
-146.0 2 0.910097
-147.0 2 0.91148
-148.0 2 0.912863
-149.0 3 0.914938
-150.0 5 0.918396
-151.0 3 0.92047
-152.0 1 0.921162
-153.0 1 0.921853
-154.0 1 0.922545
-155.0 1 0.923237
-156.0 2 0.92462
-157.0 4 0.927386
-158.0 1 0.928077
-159.0 3 0.930152
-160.0 2 0.931535
-161.0 4 0.934302
-162.0 4 0.937068
-163.0 1 0.937759
-164.0 2 0.939142
-165.0 0 0.939142
-166.0 3 0.941217
-167.0 4 0.943983
-168.0 2 0.945367
-169.0 3 0.947441
-170.0 3 0.949516
-171.0 1 0.950207
-172.0 4 0.952974
-173.0 2 0.954357
-174.0 1 0.955048
-175.0 1 0.95574
-176.0 1 0.956432
-177.0 2 0.957815
-178.0 3 0.959889
-179.0 4 0.962656
-180.0 3 0.96473
-181.0 2 0.966113
-182.0 2 0.967497
-183.0 4 0.970263
-184.0 4 0.973029
-185.0 0 0.973029
-186.0 3 0.975104
-187.0 5 0.978562
-188.0 2 0.979945
-189.0 3 0.982019
-190.0 5 0.985477
-191.0 4 0.988243
-192.0 0 0.988243
-193.0 3 0.990318
-194.0 5 0.993776
-195.0 0 0.993776
-196.0 1 0.994467
-197.0 1 0.995159
-198.0 0 0.995159
-199.0 1 0.995851
-200.0 1 0.996542
-201.0 0 0.996542
-202.0 2 0.997925
-203.0 0 0.997925
-204.0 0 0.997925
-205.0 0 0.997925
-206.0 0 0.997925
-207.0 0 0.997925
-208.0 1 0.998617
-209.0 0 0.998617
-210.0 1 0.999308
-211.0 0 0.999308
-212.0 0 0.999308
-213.0 0 0.999308
-214.0 0 0.999308
-215.0 0 0.999308
-216.0 0 0.999308
-217.0 0 0.999308
-218.0 0 0.999308
-219.0 0 0.999308
-220.0 0 0.999308
-221.0 0 0.999308
-222.0 0 0.999308
-223.0 0 0.999308
-224.0 0 0.999308
-225.0 0 0.999308
-226.0 0 0.999308
-227.0 0 0.999308
-228.0 0 0.999308
-229.0 0 0.999308
-230.0 0 0.999308
-231.0 0 0.999308
-232.0 0 0.999308
-233.0 0 0.999308
-234.0 0 0.999308
-235.0 0 0.999308
-236.0 0 0.999308
-237.0 0 0.999308
-238.0 0 0.999308
-239.0 0 0.999308
-240.0 0 0.999308
-241.0 0 0.999308
-242.0 0 0.999308
-243.0 0 0.999308
-244.0 0 0.999308
-245.0 0 0.999308
-246.0 0 0.999308
-247.0 0 0.999308
-248.0 0 0.999308
-249.0 0 0.999308
-250.0 0 0.999308
-251.0 0 0.999308
-252.0 0 0.999308
-253.0 0 0.999308
-254.0 1 1
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/fratecdf ns-allinone-2.34-qjump/ns-2.34/tcl/test/fratecdf
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/fratecdf	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/fratecdf	1970-01-01 01:00:00.000000000 +0100
@@ -1,8 +0,0 @@
-1.1 108 0.0746888
-2.2 809 0.559474
-3.3 1054 0.728907
-4.4 1146 0.792531
-5.5 1215 0.840249
-6.6 1270 0.878285
-7.7 1408 0.973721
-8.8 1446 1
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/FullTCP.notes ns-allinone-2.34-qjump/ns-2.34/tcl/test/FullTCP.notes
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/FullTCP.notes	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/FullTCP.notes	1970-01-01 01:00:00.000000000 +0100
@@ -1,114 +0,0 @@
-Here is the current state of validation tests in NS for FullTCP:
-Last updated: September 5, 2005.
-
-test-suite-simple.tcl, test-suite-simple-full.tcl
-  Tests in test-suite-simple.tcl that have not been added to 
-test-suite-simple-full.tcl: 
-tahoe1Bytes, tahoe1RED, tahoe1REDbytes, tahoe3RED, reno5_nobug,
-statsECN, stats1Bytes, stats1a, stats1aBytes, statsHeaders,
-stats2, stats3, stats4, statsTFRC
-
-test-suite-tcp-init-win.tcl:
-  There is a comparable validation test test-suite-tcp-init-win-full.tcl,
-but it is not included in "validate", and it has some tests
-commented out.  
-  The best way to check "test-suite-tcp-init-win-full.tcl" would
-  be
-to run "test-suite-tcp-init-win-full.tcl" and "test-suite-tcp-init-win.tcl"
-side by side, one test at a time, to see if the test results compare.
-
-test-suite-tcpOptions.tcl:
-  The following tests do not have comparable tests for Full-TCP:
-  Tests of maxburst: 
-maxburst_tahoe, maxburst_tahoe1, maxburst_reno, maxburst_reno1, 
-maxburst_newreno, maxburst_newreno1, maxburst_sack, maxburst_sack1
-  Tests of retransmit timeouts:
-timeouts_tahoe, timeouts_tahoe1, timeouts_tahoe2, timeouts_tahoe3,
-timeouts_reno, timeouts_reno_noexitFR, timeouts_reno1, timeouts_reno2,
-timeouts_reno3, timeouts_newreno, timeouts_newreno_noexitFR,
-timeouts_newreno1, timeouts_newreno2, timeouts_newreno3, timeouts_sack,
-timeouts_sack1, timeouts_sack2, timeouts_sack3, timeoutsA_tahoe,
-timeoutsA_tahoe1,
-  I [Sally] checked in two commented-out tests in 
-test-suite-tcpOptions.tcl, but the test "onedrop_sack_full" doesn't
-look perfect to me.  Does anyone know why the sender sends two
-packets for the Fast Retransmit, instead of just one, as in
-"onedrop_sack?
-
-test-suite-tcpReset.tcl:
-  There is no comparable validation test for FullTCP.
-
-test-suite-newreno.tcl:
-  There is no comparable validation test for FullTCP.
-
-test-suite-tcp.tcl: 
-  There is no comparable validation test for FullTCP.
-  This includes tests of ecn, retransmit timers, TCP after quiescent
-periods and underutilized periods.
-
-test-suite-ecn-ack.tcl 
-  There is no comparable validation test for FullTCP.
-  This contains only one validation test.
-
-test-suite-tcpVariants.tcl:
-  The following tests do not have comparable tests for Full-TCP:
-  Tests of multiple drops: 
-multiple_tahoe, multiple_reno, multiple_newreno, multiple_sack, 
-multiple_partial_ack_sack
-  Tests of multiple drops, scenario #2: 
-multiple2_tahoe, multiple2_reno, multiple2_newreno, multiple2_sack, 
-multiple2_partial_ack_sack
-
-test-all-sack, test-all-sack-full.
-  Tests in test-all-sack that have not been added to test-all-sack-full: 
-FalsePipe, FalsePipe1, sack_dupacks, sack_dupacks1
-  Tests commented out in both test-all-sack-full and test-all-sack:
-delayedSack, phaseSack, phaseSack2, phaseSack3, timersSack
-
-Functionality added to one-way TCP but not yet added to FullTCP
-inclused the following:
-Quick-Start: test-all-quickstart
-Limited Transmit (RFC 3042): test-all-LimTransmit
-HighSpeed TCP (RFC 3649): test-all-tcpHighspeed
-  Other validation tests for one-way TCP that don't have a
-comparable test for FullTCP include the following:
-aimd, greis, rfc793edu, rfc2581, rbp, frto, ack 
-
-test-suite-ecn.tcl, test-suite-ecn-full.tcl:
-  There are a number of tests in test-suite-ecn.tcl that are not
-in test-suite-ecn-full.tcl.
-
-test-suite-full.tcl:
-  This test suite has no equivalent for one-way TCP.
-  The following tests are commented out:
-twoway_bsdcompat, oneway_bsdcompat
-
-test-suite-testReno-full.tcl:
-  This test suite has no equivalent for one-way TCP.
-  The following tests are commented out:
-Tahoe_FullTCP_without_Fast_Retransmit,
-Sack_FullTCP, Tahoe_FullTCP2_without_Fast_Retransmit,
-Sack_FullTCP2
-
--------------------------------------------------------------------
-### Tools for listing the tests in each validation test:  ###
-
-# Tool for comparing the tests in two different validation tests:
-set filename=tcp-init-win-full
-set filename1=tcp-init-win
-set filename=ecn-full
-set filename1=ecn
-grep 'Class Test' test-suite-$filename.tcl |\
- awk '{if($1=="#"){print $1, $3;}else if($1=="#Class"){print "#", $2;}else{print $2}}'>t
-grep 'Class Test' test-suite-$filename1.tcl |\
- awk '{if($1=="#"){print $1, $3;}else if($1=="#Class"){print "#", $2;}else{print $2}}'>t1
-diff t t1
-echo test-suite-$filename1.tcl, test-suite-$filename.tcl
-
-# Tool for listing the tests in a single validation test
-set filename=full
-grep 'Class Test' test-suite-$filename.tcl |\
- awk '{if($1=="#"){print $1, $3;}else if($1=="#Class"){print "#", $2;}else{print $2}}'
-echo test-suite-$filename.tcl
--------------------------------------------------------------------
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotA.com ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotA.com
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotA.com	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotA.com	1970-01-01 01:00:00.000000000 +0100
@@ -1,22 +0,0 @@
-# csh figure2A.com temp1.rands testname
-set filename=$1
-set filename3=$2
-set first='"packets'
-set second='"skip-1'
-awk '{if ($1~/'$first'/) yes=1; if ($1~/'$second'/) yes=0; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > packets
-set first='"drops'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > drops
-gnuplot << !
-# set term post
-set terminal postscript eps
-set xlabel "Time"
-set ylabel "Packet"
-set title "$filename3"
-set output "$filename3.ps"
-set key left box
-# set size 0.6,0.8
-set size 1.0,0.8 
-plot "packets" with points pt 5 ps 0.3, "drops" with points pt 1 ps 2
-!
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotB.com ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotB.com
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotB.com	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotB.com	1970-01-01 01:00:00.000000000 +0100
@@ -1,28 +0,0 @@
-# csh figure2B.com temp2.rands testname
-set filename=$1
-set filename3=$2
-cp $filename temp
-set label='"flow' 
-rm -rf flow1 flow2 flow3 flow4 flow5
-awk '{if ($1~/'$label'/) yes=yes+1; \
-  if(yes==1&&NF==2&&$1!~/'$label'/){print $1, $2;}}' temp > flow1
-awk '{if ($1~/'$label'/) yes=yes+1; \
-  if(yes==2&&NF==2&&$1!~/'$label'/){print $1, $2;}}' temp > flow2
-awk '{if ($1~/'$label'/) yes=yes+1; \
-  if(yes==3&&NF==2&&$1!~/'$label'/){print $1, $2;}}' temp > flow3
-awk '{if ($1~/'$label'/) yes=yes+1; \
-  if(yes==4&&NF==2&&$1!~/'$label'/){print $1, $2;}}' temp > flow4
-awk '{if ($1~/'$label'/) yes=yes+1; \
-  if(yes==5&&NF==2&&$1!~/'$label'/){print $1, $2;}}' temp > flow5
-gnuplot << !
-set terminal postscript eps
-set xlabel "Time"
-set ylabel "Rate"
-set title "$filename3"
-set output "$filename3.B.ps"
-set key right box
-# set size 0.6,0.8
-# set size 2,3
-plot "flow1" with lines, "flow2" with lines,  "flow3" with lines, "flow4" with lines, "flow5" with lines
-replot
-!
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotC1.com ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotC1.com
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotC1.com	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotC1.com	1970-01-01 01:00:00.000000000 +0100
@@ -1,33 +0,0 @@
-# csh gnuplotC1.com temp.rands temp1.rands testname
-set filename=$1
-set filename2=$2
-set filename3=$3
-set first='"packets'
-set second='"skip-1'
-rm -f packets acks
-awk '{if ($1~/'$first'/) yes=1; if ($1~/'$second'/) yes=0; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > packets
-#
-set first='"acks'
-set second='"drops'
-awk '{if ($1~/'$first'/) yes=1; if ($1~/'$second'/) yes=0; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename2 > acks
-#
-#
-gnuplot << !
-set yrange [-1:95]
-set xrange [-0.2:4]
-set terminal postscript eps "Helvitica" 20 
-set terminal postscript color 
-# set terminal color
-set xlabel "Time"
-set ylabel "Packet"
-set title "$filename3"
-set output "$filename3.ps"
-set key left box
-# set size 0.6,0.8
-# set size 3.0,2.4 
-set size 1.0,0.8 
-plot "packets" with points pt 5 ps 0.8, "acks" with points pt 1 ps 1
-replot
-!
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotC.com ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotC.com
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotC.com	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotC.com	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-# csh gnuplotC.com temp.rands temp1.rands temp2.rands testname
-set filename=$1
-set filename2=$2
-set filename4=$3  
-set filename3=$4
-set first='"packets'
-set second='"skip-1'
-cp dummy ecn
-rm -f drops ecn packets acks
-awk '{if ($1~/'$first'/) yes=1; if ($1~/'$second'/) yes=0; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > packets
-set first='"ecn_packets'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > ecn
-set first='"drops'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > drops
-#
-set first='"drops'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename4 >> drops
-set first='"ecn_packets'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename4 >> ecn
-#
-set first='"acks'
-set second='"drops'
-awk '{if ($1~/'$first'/) yes=1; if ($1~/'$second'/) yes=0; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename2 > acks
-#
-gnuplot << !
-set yrange [-1:8]
-set xrange [-0.2:3]
-##set xrange [-0.2:5]
-set terminal postscript eps "Helvitica" 20
-set xlabel "Time"
-set ylabel "Packet"
-set title "$filename3"
-set output "$filename3.ps"
-set key left box
-# set size 0.6,0.8
-# set size 3.0,2.4 
-set size 1.0,0.8 
-plot "packets" with points pt 5 ps 0.8, "drops" with points pt 2 ps 2, "acks" with points pt 1 ps 1, "ecn" with points pt 3 ps 2
-##plot "packets" with points pt 5 ps 0.5, "acks" with points pt 1 ps 1
-!
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotD.com ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotD.com
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotD.com	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotD.com	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-# csh gnuplotC.com temp.rands temp1.rands temp2.rands testname
-set filename=$1
-set filename2=$2
-set filename4=$3  
-set filename3=$4
-set first='"packets'
-set second='"skip-1'
-cp dummy ecn
-rm -f drops ecn packets acks
-awk '{if ($1~/'$first'/) yes=1; if ($1~/'$second'/) yes=0; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > packets
-set first='"ecn_packets'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > ecn
-set first='"drops'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename > drops
-#
-set first='"drops'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename4 >> drops
-set first='"ecn_packets'
-awk '{if ($1~/'$first'/) yes=1; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename4 >> ecn
-#
-set first='"acks'
-set second='"drops'
-awk '{if ($1~/'$first'/) yes=1; if ($1~/'$second'/) yes=0; \
-  if(yes==1&&NF==2){print $1, $2*100;}}' $filename2 > acks
-#
-gnuplot << !
-##set yrange [-1:8]
-##set xrange [-0.2:3]
-set xrange [-0.2:5]
-set terminal postscript eps
-set xlabel "Time"
-set ylabel "Packet"
-set title "$filename3"
-set output "$filename3.ps"
-set key left 
-# set size 0.6,0.8
-set size 1.0,0.8 
-##plot "packets" with points pt 5 ps 0.8, "drops" with points pt 2 ps 2, "acks" with points pt 1 ps 1, "ecn" with points pt 3 ps 2
-plot "packets" with points pt 5 ps 0.5, "acks" with points pt 1 ps 1
-!
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotE.com ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotE.com
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotE.com	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotE.com	1970-01-01 01:00:00.000000000 +0100
@@ -1,15 +0,0 @@
-# csh gnuplotE.com testname
-set filename=$1
-gnuplot << !
-set terminal postscript eps
-set xlabel "Time"
-set ylabel "Fraction of Link Bandwidth"
-##set title "$filename"
-set output "$filename.E.ps"
-set key 46,0.85
-set size 0.8,0.5
-set yrange [0:1.1]
-# set size 2,3
-plot "flows1" with lines, "flows2" with lines,  "flows3" with lines, "flows4" with lines, "flows5" with lines, "all" with lines
-replot
-!
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotF.com ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotF.com
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/gnuplotF.com	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/gnuplotF.com	1970-01-01 01:00:00.000000000 +0100
@@ -1,16 +0,0 @@
-# csh gnuplotF.com testname
-awk -f ~/papers/pushback/sims/awkfiles/droprate.awk temp.s > temp.s1
-set filename=$1
-gnuplot << !
-set terminal postscript eps
-set xlabel "Time"
-set ylabel "Drop Rate"
-##set title "$filename"
-set output "$filename.F.ps"
-set nokey 
-set size 0.8,0.25
-set yrange [0:1]
-# set size 2,3
-plot "temp.s1" with lines
-replot
-!
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/hier-test-1000.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/hier-test-1000.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/hier-test-1000.tcl	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/hier-test-1000.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,69 +0,0 @@
-# hier-test-1000.tcl
-# Test for hier routing using topology generated by GaTech topology generator
-# (1000 node transit-stub graph converted to hierarchical topology
-
-
-set ns [new Simulator]
-$ns set-address-format hierarchical
-source ./hts1000.tcl
-set linkBW 5Mb
-global n ns
-
-#$ns namtrace-all [open hier-out-1000.nam w]
-#$ns trace-all [open hier-out-1000.tr w]
-
-create-hier-topology $linkBW
-
-
-set udp0 [new Agent/UDP]
-$ns attach-agent $n(0) $udp0
-set cbr0 [new Application/Traffic/CBR]
-$cbr0 attach-agent $udp0
-
-set udp1 [new Agent/UDP]
-$ns attach-agent $n(500) $udp1
-$udp1 set class_ 1
-set cbr1 [new Application/Traffic/CBR]
-$cbr1 attach-agent $udp1
-
-set null0 [new Agent/Null]
-$ns attach-agent $n(10) $null0
-
-set null1 [new Agent/Null]
-$ns attach-agent $n(600) $null1
-
-$ns connect $udp0 $null0
-$ns connect $udp1 $null1
-
-$ns at 1.0 "$cbr0 start"
-$ns at 1.1 "$cbr1 start"
-
-set tcp [new Agent/TCP]
-$tcp set class_ 2
-set sink [new Agent/TCPSink]
-$ns attach-agent $n(0) $tcp
-$ns attach-agent $n(5) $sink
-$ns connect $tcp $sink
-set ftp [new Source/FTP]
-$ftp set agent_ $tcp
-$ns at 1.2 "$ftp start"
-$ns at 3.0 "finish"
-
-puts [$cbr0 set packetSize_]
-puts [$cbr0 set interval_]
-
-$ns at 3.0 "finish"
-
-proc finish {} {
-    global ns 
-    $ns flush-trace
-    puts "running nam..."
-    exec nam out.nam &
-    exit 0
-}
-
-$ns run
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/hts1000.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/hts1000.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/hts1000.tcl	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/hts1000.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,2756 +0,0 @@
-# Generated by sgb2hier-ns,sgb2hier-ns generated from sgb2ns
-# sgb2ns adapted from sgb2alt by Polly Huang
-# GRAPH (#nodes #edges id uu vv ww xx yy zz):
-# 1040 3030 transtub(0,3,0,0,{16,288,3,1.000,0.000,0.000},{5,144,3,0.600,0.000,0.000},{4,89,3,0.420,0.000,0.000}) 288 4 4 1 
-
-#Creating hierarchical topology from transit-stub graph:
-
-proc create-hier-topology {linkBW} {
-	global ns n
-
-	set verbose 1
-
-	if {$verbose} { 
-		puts "Creating hierarchical nodes.." 
-}
-set n(0) [$ns node 0.0.0]
-	if {$verbose} { puts -nonewline "0..."; flush stdout }
-set n(1) [$ns node 0.1.0]
-set n(2) [$ns node 0.2.0]
-set n(3) [$ns node 0.3.0]
-set n(4) [$ns node 0.4.0]
-set n(5) [$ns node 0.5.0]
-set n(6) [$ns node 0.6.0]
-set n(7) [$ns node 0.6.1]
-set n(8) [$ns node 0.6.2]
-set n(9) [$ns node 0.6.3]
-set n(10) [$ns node 0.6.4]
-set n(11) [$ns node 0.7.0]
-set n(12) [$ns node 0.7.1]
-set n(13) [$ns node 0.7.2]
-set n(14) [$ns node 0.8.0]
-set n(15) [$ns node 0.8.1]
-set n(16) [$ns node 0.8.2]
-set n(17) [$ns node 0.8.3]
-set n(18) [$ns node 0.9.0]
-set n(19) [$ns node 0.9.1]
-set n(20) [$ns node 0.10.0]
-set n(21) [$ns node 0.10.1]
-set n(22) [$ns node 0.10.2]
-set n(23) [$ns node 0.11.0]
-set n(24) [$ns node 0.11.1]
-set n(25) [$ns node 0.11.2]
-set n(26) [$ns node 0.11.3]
-set n(27) [$ns node 0.11.4]
-set n(28) [$ns node 0.11.5]
-set n(29) [$ns node 0.11.6]
-set n(30) [$ns node 0.12.0]
-set n(31) [$ns node 0.12.1]
-set n(32) [$ns node 0.12.2]
-set n(33) [$ns node 0.12.3]
-set n(34) [$ns node 0.13.0]
-set n(35) [$ns node 0.13.1]
-set n(36) [$ns node 0.13.2]
-set n(37) [$ns node 0.13.3]
-set n(38) [$ns node 0.14.0]
-set n(39) [$ns node 0.14.1]
-set n(40) [$ns node 0.14.2]
-set n(41) [$ns node 0.14.3]
-set n(42) [$ns node 0.14.4]
-set n(43) [$ns node 0.15.0]
-set n(44) [$ns node 0.15.1]
-set n(45) [$ns node 0.15.2]
-set n(46) [$ns node 0.16.0]
-set n(47) [$ns node 0.16.1]
-set n(48) [$ns node 0.16.2]
-set n(49) [$ns node 0.16.3]
-set n(50) [$ns node 0.17.0]
-set n(51) [$ns node 0.17.1]
-set n(52) [$ns node 0.17.2]
-set n(53) [$ns node 0.17.3]
-set n(54) [$ns node 0.18.0]
-set n(55) [$ns node 0.18.1]
-set n(56) [$ns node 0.18.2]
-set n(57) [$ns node 0.18.3]
-set n(58) [$ns node 0.19.0]
-set n(59) [$ns node 0.19.1]
-set n(60) [$ns node 0.19.2]
-set n(61) [$ns node 0.19.3]
-set n(62) [$ns node 0.19.4]
-set n(63) [$ns node 0.20.0]
-set n(64) [$ns node 0.20.1]
-set n(65) [$ns node 0.20.2]
-set n(66) [$ns node 0.20.3]
-set n(67) [$ns node 0.21.0]
-set n(68) [$ns node 0.21.1]
-set n(69) [$ns node 0.21.2]
-set n(70) [$ns node 0.22.0]
-set n(71) [$ns node 0.22.1]
-set n(72) [$ns node 0.22.2]
-set n(73) [$ns node 0.22.3]
-set n(74) [$ns node 0.23.0]
-set n(75) [$ns node 0.23.1]
-set n(76) [$ns node 0.23.2]
-set n(77) [$ns node 0.23.3]
-set n(78) [$ns node 1.0.0]
-set n(79) [$ns node 1.1.0]
-set n(80) [$ns node 1.2.0]
-set n(81) [$ns node 1.3.0]
-set n(82) [$ns node 1.4.0]
-set n(83) [$ns node 1.5.0]
-set n(84) [$ns node 1.5.1]
-set n(85) [$ns node 1.5.2]
-set n(86) [$ns node 1.5.3]
-set n(87) [$ns node 1.6.0]
-set n(88) [$ns node 1.6.1]
-set n(89) [$ns node 1.6.2]
-set n(90) [$ns node 1.6.3]
-set n(91) [$ns node 1.6.4]
-set n(92) [$ns node 1.7.0]
-set n(93) [$ns node 1.7.1]
-set n(94) [$ns node 1.7.2]
-set n(95) [$ns node 1.8.0]
-set n(96) [$ns node 1.8.1]
-set n(97) [$ns node 1.8.2]
-set n(98) [$ns node 1.9.0]
-set n(99) [$ns node 1.9.1]
-set n(100) [$ns node 1.9.2]
-	if {$verbose} { puts -nonewline "100..."; flush stdout }
-set n(101) [$ns node 1.9.3]
-set n(102) [$ns node 1.9.4]
-set n(103) [$ns node 1.9.5]
-set n(104) [$ns node 1.10.0]
-set n(105) [$ns node 1.10.1]
-set n(106) [$ns node 1.10.2]
-set n(107) [$ns node 1.11.0]
-set n(108) [$ns node 1.11.1]
-set n(109) [$ns node 1.11.2]
-set n(110) [$ns node 1.11.3]
-set n(111) [$ns node 1.12.0]
-set n(112) [$ns node 1.12.1]
-set n(113) [$ns node 1.13.0]
-set n(114) [$ns node 1.13.1]
-set n(115) [$ns node 1.13.2]
-set n(116) [$ns node 1.13.3]
-set n(117) [$ns node 1.13.4]
-set n(118) [$ns node 1.14.0]
-set n(119) [$ns node 1.14.1]
-set n(120) [$ns node 1.15.0]
-set n(121) [$ns node 1.15.1]
-set n(122) [$ns node 1.15.2]
-set n(123) [$ns node 1.15.3]
-set n(124) [$ns node 1.15.4]
-set n(125) [$ns node 1.15.5]
-set n(126) [$ns node 1.15.6]
-set n(127) [$ns node 1.15.7]
-set n(128) [$ns node 1.15.8]
-set n(129) [$ns node 1.15.9]
-set n(130) [$ns node 1.16.0]
-set n(131) [$ns node 1.17.0]
-set n(132) [$ns node 1.17.1]
-set n(133) [$ns node 1.17.2]
-set n(134) [$ns node 1.17.3]
-set n(135) [$ns node 1.17.4]
-set n(136) [$ns node 1.17.5]
-set n(137) [$ns node 1.17.6]
-set n(138) [$ns node 1.17.7]
-set n(139) [$ns node 1.18.0]
-set n(140) [$ns node 1.19.0]
-set n(141) [$ns node 1.19.1]
-set n(142) [$ns node 1.19.2]
-set n(143) [$ns node 2.0.0]
-set n(144) [$ns node 2.1.0]
-set n(145) [$ns node 2.2.0]
-set n(146) [$ns node 2.3.0]
-set n(147) [$ns node 2.4.0]
-set n(148) [$ns node 2.5.0]
-set n(149) [$ns node 2.5.1]
-set n(150) [$ns node 2.5.2]
-set n(151) [$ns node 2.5.3]
-set n(152) [$ns node 2.5.4]
-set n(153) [$ns node 2.5.5]
-set n(154) [$ns node 2.6.0]
-set n(155) [$ns node 2.6.1]
-set n(156) [$ns node 2.7.0]
-set n(157) [$ns node 2.7.1]
-set n(158) [$ns node 2.7.2]
-set n(159) [$ns node 2.8.0]
-set n(160) [$ns node 2.8.1]
-set n(161) [$ns node 2.8.2]
-set n(162) [$ns node 2.8.3]
-set n(163) [$ns node 2.8.4]
-set n(164) [$ns node 2.9.0]
-set n(165) [$ns node 2.9.1]
-set n(166) [$ns node 2.10.0]
-set n(167) [$ns node 2.10.1]
-set n(168) [$ns node 2.10.2]
-set n(169) [$ns node 2.10.3]
-set n(170) [$ns node 2.10.4]
-set n(171) [$ns node 2.10.5]
-set n(172) [$ns node 2.11.0]
-set n(173) [$ns node 2.11.1]
-set n(174) [$ns node 2.11.2]
-set n(175) [$ns node 2.11.3]
-set n(176) [$ns node 2.12.0]
-set n(177) [$ns node 2.12.1]
-set n(178) [$ns node 2.12.2]
-set n(179) [$ns node 2.12.3]
-set n(180) [$ns node 2.13.0]
-set n(181) [$ns node 2.13.1]
-set n(182) [$ns node 2.13.2]
-set n(183) [$ns node 2.13.3]
-set n(184) [$ns node 2.13.4]
-set n(185) [$ns node 2.13.5]
-set n(186) [$ns node 2.14.0]
-set n(187) [$ns node 2.14.1]
-set n(188) [$ns node 2.15.0]
-set n(189) [$ns node 2.15.1]
-set n(190) [$ns node 2.16.0]
-set n(191) [$ns node 2.16.1]
-set n(192) [$ns node 2.16.2]
-set n(193) [$ns node 2.16.3]
-set n(194) [$ns node 2.17.0]
-set n(195) [$ns node 2.17.1]
-set n(196) [$ns node 2.17.2]
-set n(197) [$ns node 2.17.3]
-set n(198) [$ns node 2.17.4]
-set n(199) [$ns node 2.17.5]
-set n(200) [$ns node 2.18.0]
-	if {$verbose} { puts -nonewline "200..."; flush stdout }
-set n(201) [$ns node 2.18.1]
-set n(202) [$ns node 2.18.2]
-set n(203) [$ns node 2.19.0]
-set n(204) [$ns node 2.19.1]
-set n(205) [$ns node 2.19.2]
-set n(206) [$ns node 2.19.3]
-set n(207) [$ns node 2.19.4]
-set n(208) [$ns node 3.0.0]
-set n(209) [$ns node 3.1.0]
-set n(210) [$ns node 3.2.0]
-set n(211) [$ns node 3.3.0]
-set n(212) [$ns node 3.4.0]
-set n(213) [$ns node 3.5.0]
-set n(214) [$ns node 3.5.1]
-set n(215) [$ns node 3.5.2]
-set n(216) [$ns node 3.5.3]
-set n(217) [$ns node 3.6.0]
-set n(218) [$ns node 3.6.1]
-set n(219) [$ns node 3.6.2]
-set n(220) [$ns node 3.6.3]
-set n(221) [$ns node 3.7.0]
-set n(222) [$ns node 3.7.1]
-set n(223) [$ns node 3.8.0]
-set n(224) [$ns node 3.8.1]
-set n(225) [$ns node 3.8.2]
-set n(226) [$ns node 3.8.3]
-set n(227) [$ns node 3.8.4]
-set n(228) [$ns node 3.9.0]
-set n(229) [$ns node 3.9.1]
-set n(230) [$ns node 3.9.2]
-set n(231) [$ns node 3.9.3]
-set n(232) [$ns node 3.9.4]
-set n(233) [$ns node 3.10.0]
-set n(234) [$ns node 3.10.1]
-set n(235) [$ns node 3.10.2]
-set n(236) [$ns node 3.10.3]
-set n(237) [$ns node 3.11.0]
-set n(238) [$ns node 3.11.1]
-set n(239) [$ns node 3.11.2]
-set n(240) [$ns node 3.11.3]
-set n(241) [$ns node 3.11.4]
-set n(242) [$ns node 3.12.0]
-set n(243) [$ns node 3.12.1]
-set n(244) [$ns node 3.12.2]
-set n(245) [$ns node 3.13.0]
-set n(246) [$ns node 3.13.1]
-set n(247) [$ns node 3.13.2]
-set n(248) [$ns node 3.14.0]
-set n(249) [$ns node 3.15.0]
-set n(250) [$ns node 3.15.1]
-set n(251) [$ns node 3.15.2]
-set n(252) [$ns node 3.15.3]
-set n(253) [$ns node 3.15.4]
-set n(254) [$ns node 3.16.0]
-set n(255) [$ns node 3.16.1]
-set n(256) [$ns node 3.16.2]
-set n(257) [$ns node 3.16.3]
-set n(258) [$ns node 3.16.4]
-set n(259) [$ns node 3.16.5]
-set n(260) [$ns node 3.16.6]
-set n(261) [$ns node 3.17.0]
-set n(262) [$ns node 3.17.1]
-set n(263) [$ns node 3.17.2]
-set n(264) [$ns node 3.17.3]
-set n(265) [$ns node 3.18.0]
-set n(266) [$ns node 3.18.1]
-set n(267) [$ns node 3.19.0]
-set n(268) [$ns node 3.19.1]
-set n(269) [$ns node 3.19.2]
-set n(270) [$ns node 3.19.3]
-set n(271) [$ns node 3.19.4]
-set n(272) [$ns node 3.19.5]
-set n(273) [$ns node 4.0.0]
-set n(274) [$ns node 4.1.0]
-set n(275) [$ns node 4.2.0]
-set n(276) [$ns node 4.3.0]
-set n(277) [$ns node 4.4.0]
-set n(278) [$ns node 4.5.0]
-set n(279) [$ns node 4.5.1]
-set n(280) [$ns node 4.6.0]
-set n(281) [$ns node 4.6.1]
-set n(282) [$ns node 4.6.2]
-set n(283) [$ns node 4.6.3]
-set n(284) [$ns node 4.6.4]
-set n(285) [$ns node 4.6.5]
-set n(286) [$ns node 4.7.0]
-set n(287) [$ns node 4.7.1]
-set n(288) [$ns node 4.7.2]
-set n(289) [$ns node 4.7.3]
-set n(290) [$ns node 4.8.0]
-set n(291) [$ns node 4.9.0]
-set n(292) [$ns node 4.9.1]
-set n(293) [$ns node 4.9.2]
-set n(294) [$ns node 4.9.3]
-set n(295) [$ns node 4.9.4]
-set n(296) [$ns node 4.9.5]
-set n(297) [$ns node 4.10.0]
-set n(298) [$ns node 4.10.1]
-set n(299) [$ns node 4.10.2]
-set n(300) [$ns node 4.10.3]
-	if {$verbose} { puts -nonewline "300..."; flush stdout }
-set n(301) [$ns node 4.10.4]
-set n(302) [$ns node 4.11.0]
-set n(303) [$ns node 4.11.1]
-set n(304) [$ns node 4.11.2]
-set n(305) [$ns node 4.11.3]
-set n(306) [$ns node 4.11.4]
-set n(307) [$ns node 4.12.0]
-set n(308) [$ns node 4.12.1]
-set n(309) [$ns node 4.12.2]
-set n(310) [$ns node 4.12.3]
-set n(311) [$ns node 4.13.0]
-set n(312) [$ns node 4.13.1]
-set n(313) [$ns node 4.13.2]
-set n(314) [$ns node 4.14.0]
-set n(315) [$ns node 4.14.1]
-set n(316) [$ns node 4.14.2]
-set n(317) [$ns node 4.15.0]
-set n(318) [$ns node 4.15.1]
-set n(319) [$ns node 4.15.2]
-set n(320) [$ns node 4.15.3]
-set n(321) [$ns node 4.15.4]
-set n(322) [$ns node 4.15.5]
-set n(323) [$ns node 4.15.6]
-set n(324) [$ns node 4.15.7]
-set n(325) [$ns node 4.16.0]
-set n(326) [$ns node 4.16.1]
-set n(327) [$ns node 4.16.2]
-set n(328) [$ns node 4.16.3]
-set n(329) [$ns node 4.17.0]
-set n(330) [$ns node 4.18.0]
-set n(331) [$ns node 4.18.1]
-set n(332) [$ns node 4.18.2]
-set n(333) [$ns node 4.18.3]
-set n(334) [$ns node 4.19.0]
-set n(335) [$ns node 4.19.1]
-set n(336) [$ns node 4.19.2]
-set n(337) [$ns node 4.19.3]
-set n(338) [$ns node 5.0.0]
-set n(339) [$ns node 5.1.0]
-set n(340) [$ns node 5.2.0]
-set n(341) [$ns node 5.3.0]
-set n(342) [$ns node 5.4.0]
-set n(343) [$ns node 5.5.0]
-set n(344) [$ns node 5.6.0]
-set n(345) [$ns node 5.7.0]
-set n(346) [$ns node 5.8.0]
-set n(347) [$ns node 5.9.0]
-set n(348) [$ns node 5.10.0]
-set n(349) [$ns node 5.11.0]
-set n(350) [$ns node 5.11.1]
-set n(351) [$ns node 5.11.2]
-set n(352) [$ns node 5.11.3]
-set n(353) [$ns node 5.11.4]
-set n(354) [$ns node 5.11.5]
-set n(355) [$ns node 5.12.0]
-set n(356) [$ns node 5.12.1]
-set n(357) [$ns node 5.12.2]
-set n(358) [$ns node 5.12.3]
-set n(359) [$ns node 5.12.4]
-set n(360) [$ns node 5.13.0]
-set n(361) [$ns node 5.13.1]
-set n(362) [$ns node 5.14.0]
-set n(363) [$ns node 5.14.1]
-set n(364) [$ns node 5.14.2]
-set n(365) [$ns node 5.14.3]
-set n(366) [$ns node 5.15.0]
-set n(367) [$ns node 5.15.1]
-set n(368) [$ns node 5.15.2]
-set n(369) [$ns node 5.15.3]
-set n(370) [$ns node 5.15.4]
-set n(371) [$ns node 5.15.5]
-set n(372) [$ns node 5.16.0]
-set n(373) [$ns node 5.16.1]
-set n(374) [$ns node 5.16.2]
-set n(375) [$ns node 5.16.3]
-set n(376) [$ns node 5.16.4]
-set n(377) [$ns node 5.17.0]
-set n(378) [$ns node 5.17.1]
-set n(379) [$ns node 5.17.2]
-set n(380) [$ns node 5.17.3]
-set n(381) [$ns node 5.18.0]
-set n(382) [$ns node 5.18.1]
-set n(383) [$ns node 5.18.2]
-set n(384) [$ns node 5.19.0]
-set n(385) [$ns node 5.19.1]
-set n(386) [$ns node 5.20.0]
-set n(387) [$ns node 5.20.1]
-set n(388) [$ns node 5.20.2]
-set n(389) [$ns node 5.20.3]
-set n(390) [$ns node 5.20.4]
-set n(391) [$ns node 5.20.5]
-set n(392) [$ns node 5.21.0]
-set n(393) [$ns node 5.21.1]
-set n(394) [$ns node 5.21.2]
-set n(395) [$ns node 5.21.3]
-set n(396) [$ns node 5.21.4]
-set n(397) [$ns node 5.22.0]
-set n(398) [$ns node 5.22.1]
-set n(399) [$ns node 5.22.2]
-set n(400) [$ns node 5.23.0]
-	if {$verbose} { puts -nonewline "400..."; flush stdout }
-set n(401) [$ns node 5.23.1]
-set n(402) [$ns node 5.23.2]
-set n(403) [$ns node 5.23.3]
-set n(404) [$ns node 5.24.0]
-set n(405) [$ns node 5.24.1]
-set n(406) [$ns node 5.24.2]
-set n(407) [$ns node 5.24.3]
-set n(408) [$ns node 5.25.0]
-set n(409) [$ns node 5.26.0]
-set n(410) [$ns node 5.26.1]
-set n(411) [$ns node 5.27.0]
-set n(412) [$ns node 5.27.1]
-set n(413) [$ns node 5.27.2]
-set n(414) [$ns node 5.27.3]
-set n(415) [$ns node 5.27.4]
-set n(416) [$ns node 5.27.5]
-set n(417) [$ns node 5.27.6]
-set n(418) [$ns node 5.27.7]
-set n(419) [$ns node 5.27.8]
-set n(420) [$ns node 5.28.0]
-set n(421) [$ns node 5.28.1]
-set n(422) [$ns node 5.28.2]
-set n(423) [$ns node 5.28.3]
-set n(424) [$ns node 5.29.0]
-set n(425) [$ns node 5.29.1]
-set n(426) [$ns node 5.29.2]
-set n(427) [$ns node 5.29.3]
-set n(428) [$ns node 5.29.4]
-set n(429) [$ns node 5.29.5]
-set n(430) [$ns node 5.30.0]
-set n(431) [$ns node 5.30.1]
-set n(432) [$ns node 5.31.0]
-set n(433) [$ns node 5.32.0]
-set n(434) [$ns node 5.32.1]
-set n(435) [$ns node 5.32.2]
-set n(436) [$ns node 5.32.3]
-set n(437) [$ns node 5.32.4]
-set n(438) [$ns node 5.33.0]
-set n(439) [$ns node 5.33.1]
-set n(440) [$ns node 5.33.2]
-set n(441) [$ns node 5.33.3]
-set n(442) [$ns node 5.33.4]
-set n(443) [$ns node 5.33.5]
-set n(444) [$ns node 5.34.0]
-set n(445) [$ns node 5.34.1]
-set n(446) [$ns node 5.34.2]
-set n(447) [$ns node 5.34.3]
-set n(448) [$ns node 5.35.0]
-set n(449) [$ns node 5.35.1]
-set n(450) [$ns node 5.35.2]
-set n(451) [$ns node 5.35.3]
-set n(452) [$ns node 5.35.4]
-set n(453) [$ns node 5.35.5]
-set n(454) [$ns node 5.35.6]
-set n(455) [$ns node 5.35.7]
-set n(456) [$ns node 5.36.0]
-set n(457) [$ns node 5.36.1]
-set n(458) [$ns node 5.37.0]
-set n(459) [$ns node 5.37.1]
-set n(460) [$ns node 5.37.2]
-set n(461) [$ns node 5.38.0]
-set n(462) [$ns node 5.38.1]
-set n(463) [$ns node 5.38.2]
-set n(464) [$ns node 5.38.3]
-set n(465) [$ns node 5.38.4]
-set n(466) [$ns node 5.38.5]
-set n(467) [$ns node 5.39.0]
-set n(468) [$ns node 6.0.0]
-set n(469) [$ns node 6.1.0]
-set n(470) [$ns node 6.2.0]
-set n(471) [$ns node 6.3.0]
-set n(472) [$ns node 6.4.0]
-set n(473) [$ns node 6.5.0]
-set n(474) [$ns node 6.5.1]
-set n(475) [$ns node 6.5.2]
-set n(476) [$ns node 6.5.3]
-set n(477) [$ns node 6.6.0]
-set n(478) [$ns node 6.6.1]
-set n(479) [$ns node 6.6.2]
-set n(480) [$ns node 6.6.3]
-set n(481) [$ns node 6.7.0]
-set n(482) [$ns node 6.7.1]
-set n(483) [$ns node 6.7.2]
-set n(484) [$ns node 6.7.3]
-set n(485) [$ns node 6.7.4]
-set n(486) [$ns node 6.7.5]
-set n(487) [$ns node 6.7.6]
-set n(488) [$ns node 6.7.7]
-set n(489) [$ns node 6.8.0]
-set n(490) [$ns node 6.8.1]
-set n(491) [$ns node 6.9.0]
-set n(492) [$ns node 6.9.1]
-set n(493) [$ns node 6.10.0]
-set n(494) [$ns node 6.10.1]
-set n(495) [$ns node 6.10.2]
-set n(496) [$ns node 6.10.3]
-set n(497) [$ns node 6.10.4]
-set n(498) [$ns node 6.10.5]
-set n(499) [$ns node 6.11.0]
-set n(500) [$ns node 6.11.1]
-	if {$verbose} { puts -nonewline "500..."; flush stdout }
-set n(501) [$ns node 6.11.2]
-set n(502) [$ns node 6.11.3]
-set n(503) [$ns node 6.11.4]
-set n(504) [$ns node 6.12.0]
-set n(505) [$ns node 6.12.1]
-set n(506) [$ns node 6.12.2]
-set n(507) [$ns node 6.12.3]
-set n(508) [$ns node 6.13.0]
-set n(509) [$ns node 6.14.0]
-set n(510) [$ns node 6.14.1]
-set n(511) [$ns node 6.14.2]
-set n(512) [$ns node 6.14.3]
-set n(513) [$ns node 6.15.0]
-set n(514) [$ns node 6.15.1]
-set n(515) [$ns node 6.15.2]
-set n(516) [$ns node 6.15.3]
-set n(517) [$ns node 6.15.4]
-set n(518) [$ns node 6.16.0]
-set n(519) [$ns node 6.16.1]
-set n(520) [$ns node 6.17.0]
-set n(521) [$ns node 6.17.1]
-set n(522) [$ns node 6.17.2]
-set n(523) [$ns node 6.17.3]
-set n(524) [$ns node 6.17.4]
-set n(525) [$ns node 6.18.0]
-set n(526) [$ns node 6.18.1]
-set n(527) [$ns node 6.19.0]
-set n(528) [$ns node 6.19.1]
-set n(529) [$ns node 6.19.2]
-set n(530) [$ns node 6.19.3]
-set n(531) [$ns node 6.19.4]
-set n(532) [$ns node 6.19.5]
-set n(533) [$ns node 7.0.0]
-set n(534) [$ns node 7.1.0]
-set n(535) [$ns node 7.2.0]
-set n(536) [$ns node 7.3.0]
-set n(537) [$ns node 7.4.0]
-set n(538) [$ns node 7.5.0]
-set n(539) [$ns node 7.6.0]
-set n(540) [$ns node 7.6.1]
-set n(541) [$ns node 7.6.2]
-set n(542) [$ns node 7.6.3]
-set n(543) [$ns node 7.7.0]
-set n(544) [$ns node 7.7.1]
-set n(545) [$ns node 7.7.2]
-set n(546) [$ns node 7.7.3]
-set n(547) [$ns node 7.7.4]
-set n(548) [$ns node 7.8.0]
-set n(549) [$ns node 7.8.1]
-set n(550) [$ns node 7.9.0]
-set n(551) [$ns node 7.9.1]
-set n(552) [$ns node 7.9.2]
-set n(553) [$ns node 7.9.3]
-set n(554) [$ns node 7.9.4]
-set n(555) [$ns node 7.9.5]
-set n(556) [$ns node 7.9.6]
-set n(557) [$ns node 7.10.0]
-set n(558) [$ns node 7.10.1]
-set n(559) [$ns node 7.10.2]
-set n(560) [$ns node 7.11.0]
-set n(561) [$ns node 7.11.1]
-set n(562) [$ns node 7.11.2]
-set n(563) [$ns node 7.12.0]
-set n(564) [$ns node 7.12.1]
-set n(565) [$ns node 7.12.2]
-set n(566) [$ns node 7.12.3]
-set n(567) [$ns node 7.13.0]
-set n(568) [$ns node 7.13.1]
-set n(569) [$ns node 7.13.2]
-set n(570) [$ns node 7.13.3]
-set n(571) [$ns node 7.14.0]
-set n(572) [$ns node 7.14.1]
-set n(573) [$ns node 7.14.2]
-set n(574) [$ns node 7.14.3]
-set n(575) [$ns node 7.15.0]
-set n(576) [$ns node 7.15.1]
-set n(577) [$ns node 7.15.2]
-set n(578) [$ns node 7.15.3]
-set n(579) [$ns node 7.15.4]
-set n(580) [$ns node 7.16.0]
-set n(581) [$ns node 7.16.1]
-set n(582) [$ns node 7.16.2]
-set n(583) [$ns node 7.16.3]
-set n(584) [$ns node 7.16.4]
-set n(585) [$ns node 7.17.0]
-set n(586) [$ns node 7.17.1]
-set n(587) [$ns node 7.18.0]
-set n(588) [$ns node 7.18.1]
-set n(589) [$ns node 7.18.2]
-set n(590) [$ns node 7.18.3]
-set n(591) [$ns node 7.19.0]
-set n(592) [$ns node 7.19.1]
-set n(593) [$ns node 7.19.2]
-set n(594) [$ns node 7.19.3]
-set n(595) [$ns node 7.19.4]
-set n(596) [$ns node 7.20.0]
-set n(597) [$ns node 7.20.1]
-set n(598) [$ns node 7.20.2]
-set n(599) [$ns node 7.20.3]
-set n(600) [$ns node 7.20.4]
-	if {$verbose} { puts -nonewline "600..."; flush stdout }
-set n(601) [$ns node 7.20.5]
-set n(602) [$ns node 7.21.0]
-set n(603) [$ns node 7.21.1]
-set n(604) [$ns node 7.21.2]
-set n(605) [$ns node 7.22.0]
-set n(606) [$ns node 7.22.1]
-set n(607) [$ns node 7.23.0]
-set n(608) [$ns node 7.23.1]
-set n(609) [$ns node 7.23.2]
-set n(610) [$ns node 7.23.3]
-set n(611) [$ns node 8.0.0]
-set n(612) [$ns node 8.1.0]
-set n(613) [$ns node 8.1.1]
-set n(614) [$ns node 8.1.2]
-set n(615) [$ns node 8.1.3]
-set n(616) [$ns node 8.1.4]
-set n(617) [$ns node 8.1.5]
-set n(618) [$ns node 8.2.0]
-set n(619) [$ns node 8.2.1]
-set n(620) [$ns node 8.3.0]
-set n(621) [$ns node 8.3.1]
-set n(622) [$ns node 8.3.2]
-set n(623) [$ns node 8.3.3]
-set n(624) [$ns node 9.0.0]
-set n(625) [$ns node 9.1.0]
-set n(626) [$ns node 9.2.0]
-set n(627) [$ns node 9.3.0]
-set n(628) [$ns node 9.4.0]
-set n(629) [$ns node 9.4.1]
-set n(630) [$ns node 9.4.2]
-set n(631) [$ns node 9.4.3]
-set n(632) [$ns node 9.4.4]
-set n(633) [$ns node 9.4.5]
-set n(634) [$ns node 9.5.0]
-set n(635) [$ns node 9.5.1]
-set n(636) [$ns node 9.6.0]
-set n(637) [$ns node 9.6.1]
-set n(638) [$ns node 9.6.2]
-set n(639) [$ns node 9.7.0]
-set n(640) [$ns node 9.7.1]
-set n(641) [$ns node 9.7.2]
-set n(642) [$ns node 9.7.3]
-set n(643) [$ns node 9.7.4]
-set n(644) [$ns node 9.8.0]
-set n(645) [$ns node 9.8.1]
-set n(646) [$ns node 9.8.2]
-set n(647) [$ns node 9.8.3]
-set n(648) [$ns node 9.8.4]
-set n(649) [$ns node 9.9.0]
-set n(650) [$ns node 9.9.1]
-set n(651) [$ns node 9.9.2]
-set n(652) [$ns node 9.10.0]
-set n(653) [$ns node 9.10.1]
-set n(654) [$ns node 9.10.2]
-set n(655) [$ns node 9.10.3]
-set n(656) [$ns node 9.11.0]
-set n(657) [$ns node 9.11.1]
-set n(658) [$ns node 9.12.0]
-set n(659) [$ns node 9.12.1]
-set n(660) [$ns node 9.12.2]
-set n(661) [$ns node 9.12.3]
-set n(662) [$ns node 9.12.4]
-set n(663) [$ns node 9.12.5]
-set n(664) [$ns node 9.13.0]
-set n(665) [$ns node 9.13.1]
-set n(666) [$ns node 9.13.2]
-set n(667) [$ns node 9.13.3]
-set n(668) [$ns node 9.13.4]
-set n(669) [$ns node 9.13.5]
-set n(670) [$ns node 9.14.0]
-set n(671) [$ns node 9.14.1]
-set n(672) [$ns node 9.14.2]
-set n(673) [$ns node 9.14.3]
-set n(674) [$ns node 9.15.0]
-set n(675) [$ns node 9.15.1]
-set n(676) [$ns node 10.0.0]
-set n(677) [$ns node 10.1.0]
-set n(678) [$ns node 10.2.0]
-set n(679) [$ns node 10.3.0]
-set n(680) [$ns node 10.4.0]
-set n(681) [$ns node 10.5.0]
-set n(682) [$ns node 10.6.0]
-set n(683) [$ns node 10.7.0]
-set n(684) [$ns node 10.8.0]
-set n(685) [$ns node 10.9.0]
-set n(686) [$ns node 10.9.1]
-set n(687) [$ns node 10.9.2]
-set n(688) [$ns node 10.9.3]
-set n(689) [$ns node 10.10.0]
-set n(690) [$ns node 10.10.1]
-set n(691) [$ns node 10.10.2]
-set n(692) [$ns node 10.10.3]
-set n(693) [$ns node 10.11.0]
-set n(694) [$ns node 10.11.1]
-set n(695) [$ns node 10.11.2]
-set n(696) [$ns node 10.12.0]
-set n(697) [$ns node 10.12.1]
-set n(698) [$ns node 10.12.2]
-set n(699) [$ns node 10.12.3]
-set n(700) [$ns node 10.12.4]
-	if {$verbose} { puts -nonewline "700..."; flush stdout }
-set n(701) [$ns node 10.12.5]
-set n(702) [$ns node 10.13.0]
-set n(703) [$ns node 10.13.1]
-set n(704) [$ns node 10.13.2]
-set n(705) [$ns node 10.14.0]
-set n(706) [$ns node 10.14.1]
-set n(707) [$ns node 10.14.2]
-set n(708) [$ns node 10.14.3]
-set n(709) [$ns node 10.15.0]
-set n(710) [$ns node 10.15.1]
-set n(711) [$ns node 10.15.2]
-set n(712) [$ns node 10.15.3]
-set n(713) [$ns node 10.15.4]
-set n(714) [$ns node 10.16.0]
-set n(715) [$ns node 10.16.1]
-set n(716) [$ns node 10.16.2]
-set n(717) [$ns node 10.16.3]
-set n(718) [$ns node 10.16.4]
-set n(719) [$ns node 10.17.0]
-set n(720) [$ns node 10.17.1]
-set n(721) [$ns node 10.17.2]
-set n(722) [$ns node 10.17.3]
-set n(723) [$ns node 10.18.0]
-set n(724) [$ns node 10.18.1]
-set n(725) [$ns node 10.19.0]
-set n(726) [$ns node 10.19.1]
-set n(727) [$ns node 10.19.2]
-set n(728) [$ns node 10.20.0]
-set n(729) [$ns node 10.20.1]
-set n(730) [$ns node 10.20.2]
-set n(731) [$ns node 10.20.3]
-set n(732) [$ns node 10.20.4]
-set n(733) [$ns node 10.20.5]
-set n(734) [$ns node 10.21.0]
-set n(735) [$ns node 10.21.1]
-set n(736) [$ns node 10.22.0]
-set n(737) [$ns node 10.22.1]
-set n(738) [$ns node 10.22.2]
-set n(739) [$ns node 10.22.3]
-set n(740) [$ns node 10.22.4]
-set n(741) [$ns node 10.23.0]
-set n(742) [$ns node 10.23.1]
-set n(743) [$ns node 10.23.2]
-set n(744) [$ns node 10.24.0]
-set n(745) [$ns node 10.24.1]
-set n(746) [$ns node 10.24.2]
-set n(747) [$ns node 10.24.3]
-set n(748) [$ns node 10.25.0]
-set n(749) [$ns node 10.25.1]
-set n(750) [$ns node 10.25.2]
-set n(751) [$ns node 10.26.0]
-set n(752) [$ns node 10.26.1]
-set n(753) [$ns node 10.26.2]
-set n(754) [$ns node 10.26.3]
-set n(755) [$ns node 10.26.4]
-set n(756) [$ns node 10.26.5]
-set n(757) [$ns node 10.27.0]
-set n(758) [$ns node 10.27.1]
-set n(759) [$ns node 10.27.2]
-set n(760) [$ns node 10.27.3]
-set n(761) [$ns node 10.28.0]
-set n(762) [$ns node 10.29.0]
-set n(763) [$ns node 10.29.1]
-set n(764) [$ns node 10.29.2]
-set n(765) [$ns node 10.29.3]
-set n(766) [$ns node 10.29.4]
-set n(767) [$ns node 10.29.5]
-set n(768) [$ns node 10.30.0]
-set n(769) [$ns node 10.30.1]
-set n(770) [$ns node 10.30.2]
-set n(771) [$ns node 10.30.3]
-set n(772) [$ns node 10.30.4]
-set n(773) [$ns node 10.31.0]
-set n(774) [$ns node 10.31.1]
-set n(775) [$ns node 10.31.2]
-set n(776) [$ns node 10.31.3]
-set n(777) [$ns node 10.32.0]
-set n(778) [$ns node 10.32.1]
-set n(779) [$ns node 10.32.2]
-set n(780) [$ns node 10.33.0]
-set n(781) [$ns node 10.33.1]
-set n(782) [$ns node 10.33.2]
-set n(783) [$ns node 10.33.3]
-set n(784) [$ns node 10.33.4]
-set n(785) [$ns node 10.34.0]
-set n(786) [$ns node 10.34.1]
-set n(787) [$ns node 10.34.2]
-set n(788) [$ns node 10.34.3]
-set n(789) [$ns node 10.35.0]
-set n(790) [$ns node 10.35.1]
-set n(791) [$ns node 10.35.2]
-set n(792) [$ns node 10.35.3]
-set n(793) [$ns node 11.0.0]
-set n(794) [$ns node 11.1.0]
-set n(795) [$ns node 11.2.0]
-set n(796) [$ns node 11.2.1]
-set n(797) [$ns node 11.2.2]
-set n(798) [$ns node 11.2.3]
-set n(799) [$ns node 11.2.4]
-set n(800) [$ns node 11.3.0]
-	if {$verbose} { puts -nonewline "800..."; flush stdout }
-set n(801) [$ns node 11.3.1]
-set n(802) [$ns node 11.3.2]
-set n(803) [$ns node 11.3.3]
-set n(804) [$ns node 11.4.0]
-set n(805) [$ns node 11.4.1]
-set n(806) [$ns node 11.4.2]
-set n(807) [$ns node 11.4.3]
-set n(808) [$ns node 11.4.4]
-set n(809) [$ns node 11.4.5]
-set n(810) [$ns node 11.5.0]
-set n(811) [$ns node 11.6.0]
-set n(812) [$ns node 11.6.1]
-set n(813) [$ns node 11.7.0]
-set n(814) [$ns node 11.7.1]
-set n(815) [$ns node 11.7.2]
-set n(816) [$ns node 11.7.3]
-set n(817) [$ns node 11.7.4]
-set n(818) [$ns node 11.7.5]
-set n(819) [$ns node 12.0.0]
-set n(820) [$ns node 12.1.0]
-set n(821) [$ns node 12.2.0]
-set n(822) [$ns node 12.3.0]
-set n(823) [$ns node 12.4.0]
-set n(824) [$ns node 12.4.1]
-set n(825) [$ns node 12.4.2]
-set n(826) [$ns node 12.5.0]
-set n(827) [$ns node 12.5.1]
-set n(828) [$ns node 12.5.2]
-set n(829) [$ns node 12.5.3]
-set n(830) [$ns node 12.6.0]
-set n(831) [$ns node 12.6.1]
-set n(832) [$ns node 12.6.2]
-set n(833) [$ns node 12.6.3]
-set n(834) [$ns node 12.6.4]
-set n(835) [$ns node 12.7.0]
-set n(836) [$ns node 12.7.1]
-set n(837) [$ns node 12.7.2]
-set n(838) [$ns node 12.8.0]
-set n(839) [$ns node 12.8.1]
-set n(840) [$ns node 12.8.2]
-set n(841) [$ns node 12.8.3]
-set n(842) [$ns node 12.8.4]
-set n(843) [$ns node 12.9.0]
-set n(844) [$ns node 12.9.1]
-set n(845) [$ns node 12.9.2]
-set n(846) [$ns node 12.9.3]
-set n(847) [$ns node 12.10.0]
-set n(848) [$ns node 12.10.1]
-set n(849) [$ns node 12.10.2]
-set n(850) [$ns node 12.10.3]
-set n(851) [$ns node 12.11.0]
-set n(852) [$ns node 12.11.1]
-set n(853) [$ns node 12.11.2]
-set n(854) [$ns node 12.11.3]
-set n(855) [$ns node 12.12.0]
-set n(856) [$ns node 12.12.1]
-set n(857) [$ns node 12.12.2]
-set n(858) [$ns node 12.12.3]
-set n(859) [$ns node 12.13.0]
-set n(860) [$ns node 12.13.1]
-set n(861) [$ns node 12.13.2]
-set n(862) [$ns node 12.13.3]
-set n(863) [$ns node 12.13.4]
-set n(864) [$ns node 12.14.0]
-set n(865) [$ns node 12.14.1]
-set n(866) [$ns node 12.14.2]
-set n(867) [$ns node 12.15.0]
-set n(868) [$ns node 12.15.1]
-set n(869) [$ns node 12.15.2]
-set n(870) [$ns node 12.15.3]
-set n(871) [$ns node 13.0.0]
-set n(872) [$ns node 13.1.0]
-set n(873) [$ns node 13.2.0]
-set n(874) [$ns node 13.3.0]
-set n(875) [$ns node 13.4.0]
-set n(876) [$ns node 13.5.0]
-set n(877) [$ns node 13.6.0]
-set n(878) [$ns node 13.6.1]
-set n(879) [$ns node 13.6.2]
-set n(880) [$ns node 13.6.3]
-set n(881) [$ns node 13.6.4]
-set n(882) [$ns node 13.6.5]
-set n(883) [$ns node 13.7.0]
-set n(884) [$ns node 13.7.1]
-set n(885) [$ns node 13.8.0]
-set n(886) [$ns node 13.8.1]
-set n(887) [$ns node 13.9.0]
-set n(888) [$ns node 13.9.1]
-set n(889) [$ns node 13.9.2]
-set n(890) [$ns node 13.10.0]
-set n(891) [$ns node 13.10.1]
-set n(892) [$ns node 13.10.2]
-set n(893) [$ns node 13.10.3]
-set n(894) [$ns node 13.11.0]
-set n(895) [$ns node 13.11.1]
-set n(896) [$ns node 13.11.2]
-set n(897) [$ns node 13.11.3]
-set n(898) [$ns node 13.11.4]
-set n(899) [$ns node 13.11.5]
-set n(900) [$ns node 13.11.6]
-	if {$verbose} { puts -nonewline "900..."; flush stdout }
-set n(901) [$ns node 13.12.0]
-set n(902) [$ns node 13.12.1]
-set n(903) [$ns node 13.12.2]
-set n(904) [$ns node 13.12.3]
-set n(905) [$ns node 13.13.0]
-set n(906) [$ns node 13.13.1]
-set n(907) [$ns node 13.13.2]
-set n(908) [$ns node 13.13.3]
-set n(909) [$ns node 13.14.0]
-set n(910) [$ns node 13.14.1]
-set n(911) [$ns node 13.14.2]
-set n(912) [$ns node 13.14.3]
-set n(913) [$ns node 13.15.0]
-set n(914) [$ns node 13.15.1]
-set n(915) [$ns node 13.15.2]
-set n(916) [$ns node 13.15.3]
-set n(917) [$ns node 13.16.0]
-set n(918) [$ns node 13.17.0]
-set n(919) [$ns node 13.17.1]
-set n(920) [$ns node 13.17.2]
-set n(921) [$ns node 13.17.3]
-set n(922) [$ns node 13.17.4]
-set n(923) [$ns node 13.17.5]
-set n(924) [$ns node 13.17.6]
-set n(925) [$ns node 13.18.0]
-set n(926) [$ns node 13.18.1]
-set n(927) [$ns node 13.18.2]
-set n(928) [$ns node 13.18.3]
-set n(929) [$ns node 13.18.4]
-set n(930) [$ns node 13.19.0]
-set n(931) [$ns node 13.19.1]
-set n(932) [$ns node 13.19.2]
-set n(933) [$ns node 13.20.0]
-set n(934) [$ns node 13.20.1]
-set n(935) [$ns node 13.20.2]
-set n(936) [$ns node 13.20.3]
-set n(937) [$ns node 13.21.0]
-set n(938) [$ns node 13.22.0]
-set n(939) [$ns node 13.22.1]
-set n(940) [$ns node 13.22.2]
-set n(941) [$ns node 13.22.3]
-set n(942) [$ns node 13.22.4]
-set n(943) [$ns node 13.22.5]
-set n(944) [$ns node 13.22.6]
-set n(945) [$ns node 13.22.7]
-set n(946) [$ns node 13.23.0]
-set n(947) [$ns node 13.23.1]
-set n(948) [$ns node 13.23.2]
-set n(949) [$ns node 14.0.0]
-set n(950) [$ns node 14.1.0]
-set n(951) [$ns node 14.2.0]
-set n(952) [$ns node 14.3.0]
-set n(953) [$ns node 14.4.0]
-set n(954) [$ns node 14.5.0]
-set n(955) [$ns node 14.5.1]
-set n(956) [$ns node 14.5.2]
-set n(957) [$ns node 14.5.3]
-set n(958) [$ns node 14.5.4]
-set n(959) [$ns node 14.5.5]
-set n(960) [$ns node 14.5.6]
-set n(961) [$ns node 14.6.0]
-set n(962) [$ns node 14.6.1]
-set n(963) [$ns node 14.6.2]
-set n(964) [$ns node 14.6.3]
-set n(965) [$ns node 14.7.0]
-set n(966) [$ns node 14.8.0]
-set n(967) [$ns node 14.8.1]
-set n(968) [$ns node 14.8.2]
-set n(969) [$ns node 14.8.3]
-set n(970) [$ns node 14.9.0]
-set n(971) [$ns node 14.9.1]
-set n(972) [$ns node 14.9.2]
-set n(973) [$ns node 14.9.3]
-set n(974) [$ns node 14.9.4]
-set n(975) [$ns node 14.9.5]
-set n(976) [$ns node 14.9.6]
-set n(977) [$ns node 14.10.0]
-set n(978) [$ns node 14.10.1]
-set n(979) [$ns node 14.10.2]
-set n(980) [$ns node 14.10.3]
-set n(981) [$ns node 14.11.0]
-set n(982) [$ns node 14.11.1]
-set n(983) [$ns node 14.11.2]
-set n(984) [$ns node 14.11.3]
-set n(985) [$ns node 14.12.0]
-set n(986) [$ns node 14.12.1]
-set n(987) [$ns node 14.12.2]
-set n(988) [$ns node 14.12.3]
-set n(989) [$ns node 14.12.4]
-set n(990) [$ns node 14.12.5]
-set n(991) [$ns node 14.12.6]
-set n(992) [$ns node 14.13.0]
-set n(993) [$ns node 14.13.1]
-set n(994) [$ns node 14.13.2]
-set n(995) [$ns node 14.14.0]
-set n(996) [$ns node 14.14.1]
-set n(997) [$ns node 14.14.2]
-set n(998) [$ns node 14.14.3]
-set n(999) [$ns node 14.15.0]
-set n(1000) [$ns node 14.15.1]
-	if {$verbose} { puts -nonewline "1000..."; flush stdout }
-set n(1001) [$ns node 15.0.0]
-set n(1002) [$ns node 15.1.0]
-set n(1003) [$ns node 15.2.0]
-set n(1004) [$ns node 15.3.0]
-set n(1005) [$ns node 15.3.1]
-set n(1006) [$ns node 15.3.2]
-set n(1007) [$ns node 15.3.3]
-set n(1008) [$ns node 15.3.4]
-set n(1009) [$ns node 15.3.5]
-set n(1010) [$ns node 15.4.0]
-set n(1011) [$ns node 15.4.1]
-set n(1012) [$ns node 15.4.2]
-set n(1013) [$ns node 15.4.3]
-set n(1014) [$ns node 15.4.4]
-set n(1015) [$ns node 15.4.5]
-set n(1016) [$ns node 15.5.0]
-set n(1017) [$ns node 15.6.0]
-set n(1018) [$ns node 15.6.1]
-set n(1019) [$ns node 15.7.0]
-set n(1020) [$ns node 15.7.1]
-set n(1021) [$ns node 15.7.2]
-set n(1022) [$ns node 15.7.3]
-set n(1023) [$ns node 15.7.4]
-set n(1024) [$ns node 15.8.0]
-set n(1025) [$ns node 15.8.1]
-set n(1026) [$ns node 15.8.2]
-set n(1027) [$ns node 15.8.3]
-set n(1028) [$ns node 15.9.0]
-set n(1029) [$ns node 15.9.1]
-set n(1030) [$ns node 15.9.2]
-set n(1031) [$ns node 15.9.3]
-set n(1032) [$ns node 15.10.0]
-set n(1033) [$ns node 15.10.1]
-set n(1034) [$ns node 15.10.2]
-set n(1035) [$ns node 15.10.3]
-set n(1036) [$ns node 15.11.0]
-set n(1037) [$ns node 15.11.1]
-set n(1038) [$ns node 15.11.2]
-set n(1039) [$ns node 15.11.3]
-
-
-# Topology information :
-lappend domain 16
-AddrParams set domain_num_ $domain
-lappend cluster 24 20 20 20 20 40 20 24 4 16 36 8 16 24 16 12 
-AddrParams set cluster_num_ $cluster
-lappend eilastlevel 1 1 1 1 1 1 5 3 4 2 3 7 4 4 5 3 4 4 4 5 4 3 4 4 1 1 1 1 1 4 5 3 3 6 3 4 2 5 2 10 1 8 1 3 1 1 1 1 1 6 2 3 5 2 6 4 4 6 2 2 4 6 3 5 1 1 1 1 1 4 4 2 5 5 4 5 3 3 1 5 7 4 2 6 1 1 1 1 1 2 6 4 1 6 5 5 4 3 3 8 4 1 4 4 1 1 1 1 1 1 1 1 1 1 1 6 5 2 4 6 5 4 3 2 6 5 3 4 4 1 2 9 4 6 2 1 5 6 4 8 2 3 6 1 1 1 1 1 1 4 4 8 2 2 6 5 4 1 4 5 2 5 2 6 1 1 1 1 1 1 4 5 2 7 3 3 4 4 4 5 5 2 4 5 6 3 2 4 1 6 2 4 1 1 1 1 6 2 3 5 5 3 4 2 6 6 4 2 1 1 1 1 1 1 1 1 1 4 4 3 6 3 4 5 5 4 2 3 6 2 5 3 4 3 6 4 1 6 5 4 3 5 4 4 1 1 5 4 6 1 2 6 1 1 1 1 3 4 5 3 5 4 4 4 4 5 3 4 1 1 1 1 1 1 6 2 2 3 4 7 4 4 4 4 1 7 5 3 4 1 8 3 1 1 1 1 1 7 4 1 4 7 4 4 7 3 4 2 1 1 1 6 6 1 2 5 4 4 4 4 
-AddrParams set nodes_num_ $eilastlevel
-
-
-	# EDGES (from-node to-node length a b):
-	if {$verbose} { 
-		puts "Creating links 0..."
-		flush stdout 
-	}
-	$ns duplex-link-of-interfaces $n(0) $n(144) $linkBW 1810ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(340) $linkBW 2280ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(819) $linkBW 1380ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(1001) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(13) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(7) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(1) $linkBW 1340ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(5) $linkBW 1590ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(1003) $linkBW 1380ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(611) $linkBW 2050ms DropTail
-	if {$verbose} { puts -nonewline "10..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1) $n(472) $linkBW 1590ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(79) $linkBW 2030ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(682) $linkBW 1670ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(793) $linkBW 1290ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(28) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(21) $linkBW 970ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(19) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(14) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(2) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(3) $linkBW 150ms DropTail
-	if {$verbose} { puts -nonewline "20..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1) $n(4) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(951) $linkBW 3070ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(344) $linkBW 3290ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(277) $linkBW 2620ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(147) $linkBW 2540ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(534) $linkBW 2850ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(624) $linkBW 2500ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(951) $linkBW 3070ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(44) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(40) $linkBW 750ms DropTail
-	if {$verbose} { puts -nonewline "30..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(2) $n(34) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(33) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(4) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(5) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(874) $linkBW 2170ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(624) $linkBW 2150ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(537) $linkBW 2470ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(209) $linkBW 1070ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(274) $linkBW 2410ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(469) $linkBW 1900ms DropTail
-	if {$verbose} { puts -nonewline "40..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(3) $n(54) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(52) $linkBW 0ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(48) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(4) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(794) $linkBW 1600ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(678) $linkBW 1310ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(82) $linkBW 1540ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(611) $linkBW 1470ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(69) $linkBW 860ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(66) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "50..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(4) $n(61) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(5) $linkBW 920ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(819) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(208) $linkBW 910ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(875) $linkBW 1360ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(76) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(72) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(7) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(9) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(10) $linkBW 200ms DropTail
-	if {$verbose} { puts -nonewline "60..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(7) $n(8) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(9) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(10) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(13) $linkBW 910ms DropTail
-	$ns duplex-link-of-interfaces $n(12) $n(13) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(14) $n(15) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(15) $n(16) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(15) $n(17) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(16) $n(17) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(19) $linkBW 240ms DropTail
-	if {$verbose} { puts -nonewline "70..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(20) $n(21) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(22) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(24) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(25) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(28) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(29) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(24) $n(26) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(24) $n(27) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(25) $n(26) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(26) $n(27) $linkBW 150ms DropTail
-	if {$verbose} { puts -nonewline "80..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(26) $n(28) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(26) $n(29) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(27) $n(29) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(30) $n(32) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(30) $n(33) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(31) $n(32) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(34) $n(36) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(35) $n(36) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(36) $n(37) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(38) $n(41) $linkBW 390ms DropTail
-	if {$verbose} { puts -nonewline "90..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(39) $n(40) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(40) $n(41) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(40) $n(42) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(43) $n(44) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(44) $n(45) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(46) $n(48) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(47) $n(48) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(47) $n(49) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(48) $n(49) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(50) $n(51) $linkBW 520ms DropTail
-	if {$verbose} { puts -nonewline "100..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(50) $n(52) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(51) $n(53) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(52) $n(53) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(54) $n(55) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(54) $n(56) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(54) $n(57) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(55) $n(57) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(58) $n(59) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(58) $n(60) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(59) $n(61) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "110..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(60) $n(61) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(60) $n(62) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(63) $n(64) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(63) $n(66) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(64) $n(65) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(67) $n(69) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(68) $n(69) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(70) $n(72) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(71) $n(72) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(71) $n(73) $linkBW 720ms DropTail
-	if {$verbose} { puts -nonewline "120..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(74) $n(76) $linkBW 860ms DropTail
-	$ns duplex-link-of-interfaces $n(74) $n(77) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(75) $n(76) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(1003) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(144) $linkBW 860ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(611) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(793) $linkBW 1870ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(821) $linkBW 1470ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(872) $linkBW 1750ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(83) $linkBW 40ms DropTail
-	if {$verbose} { puts -nonewline "130..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(78) $n(79) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(81) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(82) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(470) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(210) $linkBW 940ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(624) $linkBW 1780ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(105) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(100) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(95) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(92) $linkBW 480ms DropTail
-	if {$verbose} { puts -nonewline "140..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(79) $n(87) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(80) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(80) $n(819) $linkBW 1850ms DropTail
-	$ns duplex-link-of-interfaces $n(80) $n(611) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(80) $n(275) $linkBW 1050ms DropTail
-	$ns duplex-link-of-interfaces $n(80) $n(1002) $linkBW 1640ms DropTail
-	$ns duplex-link-of-interfaces $n(80) $n(110) $linkBW 880ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(952) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(793) $linkBW 1440ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(274) $linkBW 840ms DropTail
-	if {$verbose} { puts -nonewline "150..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(81) $n(338) $linkBW 900ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(534) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(951) $linkBW 990ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(130) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(122) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(119) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(114) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(81) $n(111) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(876) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(677) $linkBW 70ms DropTail
-	if {$verbose} { puts -nonewline "160..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(82) $n(627) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(536) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(339) $linkBW 920ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(144) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(212) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(469) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(684) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(141) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(139) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(82) $n(132) $linkBW 340ms DropTail
-	if {$verbose} { puts -nonewline "170..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(83) $n(84) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(83) $n(85) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(84) $n(86) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(87) $n(89) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(87) $n(91) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(88) $n(90) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(88) $n(91) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(91) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(90) $n(91) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(92) $n(94) $linkBW 660ms DropTail
-	if {$verbose} { puts -nonewline "180..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(93) $n(94) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(95) $n(97) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(96) $n(97) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(98) $n(99) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(98) $n(102) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(98) $n(103) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(99) $n(101) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(99) $n(103) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(100) $n(103) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(101) $n(102) $linkBW 330ms DropTail
-	if {$verbose} { puts -nonewline "190..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(101) $n(103) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(104) $n(105) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(104) $n(106) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(105) $n(106) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(107) $n(108) $linkBW 1170ms DropTail
-	$ns duplex-link-of-interfaces $n(107) $n(109) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(108) $n(110) $linkBW 950ms DropTail
-	$ns duplex-link-of-interfaces $n(111) $n(112) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(113) $n(115) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(113) $n(116) $linkBW 160ms DropTail
-	if {$verbose} { puts -nonewline "200..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(113) $n(117) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(114) $n(115) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(115) $n(116) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(115) $n(117) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(118) $n(119) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(120) $n(124) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(121) $n(122) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(121) $n(123) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(121) $n(124) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(121) $n(126) $linkBW 410ms DropTail
-	if {$verbose} { puts -nonewline "210..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(121) $n(128) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(122) $n(123) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(122) $n(126) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(122) $n(127) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(123) $n(124) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(123) $n(125) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(123) $n(127) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(124) $n(127) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(125) $n(126) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(125) $n(128) $linkBW 510ms DropTail
-	if {$verbose} { puts -nonewline "220..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(126) $n(127) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(126) $n(128) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(128) $n(129) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(131) $n(133) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(131) $n(134) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(131) $n(137) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(131) $n(138) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(132) $n(133) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(132) $n(135) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(133) $n(134) $linkBW 380ms DropTail
-	if {$verbose} { puts -nonewline "230..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(133) $n(135) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(133) $n(136) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(133) $n(137) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(133) $n(138) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(134) $n(136) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(135) $n(138) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(137) $n(138) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(140) $n(142) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(141) $n(142) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(873) $linkBW 810ms DropTail
-	if {$verbose} { puts -nonewline "240..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(143) $n(611) $linkBW 1450ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(212) $linkBW 950ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(338) $linkBW 770ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(536) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(611) $linkBW 1450ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(163) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(156) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(155) $linkBW 880ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(148) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(145) $linkBW 110ms DropTail
-	if {$verbose} { puts -nonewline "250..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(143) $n(146) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(144) $n(819) $linkBW 1710ms DropTail
-	$ns duplex-link-of-interfaces $n(144) $n(681) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(144) $n(950) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(144) $n(166) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(144) $n(165) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(144) $n(147) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(951) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(536) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(342) $linkBW 130ms DropTail
-	if {$verbose} { puts -nonewline "260..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(145) $n(210) $linkBW 1180ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(684) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(178) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(173) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(146) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(147) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(146) $n(626) $linkBW 1130ms DropTail
-	$ns duplex-link-of-interfaces $n(146) $n(277) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(146) $n(624) $linkBW 1230ms DropTail
-	$ns duplex-link-of-interfaces $n(146) $n(1003) $linkBW 1170ms DropTail
-	if {$verbose} { puts -nonewline "270..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(146) $n(186) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(146) $n(182) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(146) $n(147) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(1003) $linkBW 1100ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(793) $linkBW 2130ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(471) $linkBW 1170ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(276) $linkBW 1190ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(470) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(793) $linkBW 2130ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(820) $linkBW 2140ms DropTail
-	if {$verbose} { puts -nonewline "280..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(147) $n(871) $linkBW 1560ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(206) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(202) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(199) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(190) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(147) $n(189) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(148) $n(150) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(148) $n(151) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(148) $n(152) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(148) $n(153) $linkBW 620ms DropTail
-	if {$verbose} { puts -nonewline "290..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(149) $n(152) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(149) $n(153) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(150) $n(151) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(152) $n(153) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(154) $n(155) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(156) $n(157) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(156) $n(158) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(159) $n(161) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(160) $n(162) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(160) $n(163) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "300..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(161) $n(162) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(162) $n(163) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(164) $n(165) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(166) $n(167) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(166) $n(168) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(166) $n(170) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(167) $n(168) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(168) $n(170) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(169) $n(170) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(170) $n(171) $linkBW 550ms DropTail
-	if {$verbose} { puts -nonewline "310..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(172) $n(173) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(173) $n(174) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(173) $n(175) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(176) $n(178) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(176) $n(179) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(177) $n(178) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(177) $n(179) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(180) $n(182) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(180) $n(183) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(181) $n(182) $linkBW 600ms DropTail
-	if {$verbose} { puts -nonewline "320..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(181) $n(183) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(181) $n(184) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(181) $n(185) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(182) $n(183) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(183) $n(185) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(186) $n(187) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(188) $n(189) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(190) $n(192) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(191) $n(193) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(192) $n(193) $linkBW 560ms DropTail
-	if {$verbose} { puts -nonewline "330..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(194) $n(195) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(194) $n(198) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(194) $n(199) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(195) $n(196) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(197) $n(199) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(200) $n(201) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(200) $n(202) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(203) $n(204) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(203) $n(205) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(203) $n(206) $linkBW 170ms DropTail
-	if {$verbose} { puts -nonewline "340..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(204) $n(205) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(204) $n(207) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(342) $linkBW 1210ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(819) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(214) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(209) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(210) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(212) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(949) $linkBW 1440ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(341) $linkBW 1650ms DropTail
-	if {$verbose} { puts -nonewline "350..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(209) $n(537) $linkBW 1970ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(611) $linkBW 850ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(949) $linkBW 1440ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(229) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(224) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(221) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(218) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(210) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(211) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(212) $linkBW 560ms DropTail
-	if {$verbose} { puts -nonewline "360..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(210) $n(1003) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(611) $linkBW 1090ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(470) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(626) $linkBW 1150ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(682) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(1003) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(233) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(211) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(212) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(821) $linkBW 960ms DropTail
-	if {$verbose} { puts -nonewline "370..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(211) $n(624) $linkBW 1520ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(537) $linkBW 1450ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(793) $linkBW 1330ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(262) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(259) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(253) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(248) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(246) $linkBW 870ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(243) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(241) $linkBW 710ms DropTail
-	if {$verbose} { puts -nonewline "380..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(212) $n(875) $linkBW 1700ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(793) $linkBW 1860ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(676) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(276) $linkBW 1950ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(273) $linkBW 1870ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(471) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(872) $linkBW 1920ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(267) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(266) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(213) $n(214) $linkBW 730ms DropTail
-	if {$verbose} { puts -nonewline "390..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(213) $n(216) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(214) $n(215) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(217) $n(219) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(217) $n(220) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(218) $n(220) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(221) $n(222) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(223) $n(224) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(223) $n(225) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(223) $n(226) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(223) $n(227) $linkBW 580ms DropTail
-	if {$verbose} { puts -nonewline "400..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(224) $n(226) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(225) $n(226) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(228) $n(230) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(229) $n(231) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(230) $n(232) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(231) $n(232) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(233) $n(234) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(233) $n(236) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(235) $n(236) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(237) $n(239) $linkBW 630ms DropTail
-	if {$verbose} { puts -nonewline "410..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(238) $n(240) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(239) $n(241) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(240) $n(241) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(242) $n(243) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(242) $n(244) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(243) $n(244) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(245) $n(246) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(246) $n(247) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(249) $n(252) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(249) $n(253) $linkBW 140ms DropTail
-	if {$verbose} { puts -nonewline "420..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(250) $n(253) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(251) $n(252) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(254) $n(257) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(254) $n(258) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(255) $n(257) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(256) $n(258) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(256) $n(259) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(257) $n(258) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(258) $n(260) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(259) $n(260) $linkBW 270ms DropTail
-	if {$verbose} { puts -nonewline "430..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(261) $n(262) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(261) $n(264) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(262) $n(263) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(262) $n(264) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(265) $n(266) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(267) $n(268) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(267) $n(269) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(267) $n(270) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(267) $n(271) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(268) $n(271) $linkBW 300ms DropTail
-	if {$verbose} { puts -nonewline "440..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(268) $n(272) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(270) $n(272) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(794) $linkBW 1490ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(611) $linkBW 2260ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(678) $linkBW 1980ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(794) $linkBW 1490ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(822) $linkBW 2230ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(873) $linkBW 1430ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(284) $linkBW 920ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(279) $linkBW 160ms DropTail
-	if {$verbose} { puts -nonewline "450..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(273) $n(276) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(1002) $linkBW 2210ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(875) $linkBW 900ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(624) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(469) $linkBW 950ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(468) $linkBW 1200ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(534) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(286) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(276) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(277) $linkBW 460ms DropTail
-	if {$verbose} { puts -nonewline "460..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(275) $n(952) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(819) $linkBW 1900ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(684) $linkBW 980ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(534) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(339) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(625) $linkBW 930ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(311) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(309) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(302) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(297) $linkBW 440ms DropTail
-	if {$verbose} { puts -nonewline "470..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(275) $n(293) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(290) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(275) $n(277) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(276) $n(611) $linkBW 2290ms DropTail
-	$ns duplex-link-of-interfaces $n(276) $n(343) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(276) $n(329) $linkBW 910ms DropTail
-	$ns duplex-link-of-interfaces $n(276) $n(328) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(276) $n(320) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(276) $n(314) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(277) $n(951) $linkBW 450ms DropTail
-	if {$verbose} { puts -nonewline "480..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(277) $n(1002) $linkBW 2000ms DropTail
-	$ns duplex-link-of-interfaces $n(277) $n(336) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(277) $n(330) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(278) $n(279) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(280) $n(281) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(280) $n(285) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(281) $n(282) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(281) $n(283) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(281) $n(284) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(283) $n(284) $linkBW 690ms DropTail
-	if {$verbose} { puts -nonewline "490..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(286) $n(287) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(286) $n(288) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(287) $n(288) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(287) $n(289) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(292) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(293) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(295) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(292) $n(296) $linkBW 1030ms DropTail
-	$ns duplex-link-of-interfaces $n(293) $n(294) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(294) $n(295) $linkBW 320ms DropTail
-	if {$verbose} { puts -nonewline "500..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(297) $n(299) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(297) $n(301) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(298) $n(299) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(298) $n(300) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(302) $n(303) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(302) $n(306) $linkBW 850ms DropTail
-	$ns duplex-link-of-interfaces $n(303) $n(304) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(304) $n(305) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(307) $n(308) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(307) $n(310) $linkBW 830ms DropTail
-	if {$verbose} { puts -nonewline "510..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(308) $n(309) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(308) $n(310) $linkBW 950ms DropTail
-	$ns duplex-link-of-interfaces $n(311) $n(312) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(312) $n(313) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(314) $n(315) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(314) $n(316) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(317) $n(318) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(317) $n(319) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(317) $n(320) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(318) $n(319) $linkBW 150ms DropTail
-	if {$verbose} { puts -nonewline "520..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(318) $n(322) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(318) $n(323) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(319) $n(321) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(319) $n(323) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(320) $n(321) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(320) $n(324) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(321) $n(323) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(321) $n(324) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(323) $n(324) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(325) $n(328) $linkBW 710ms DropTail
-	if {$verbose} { puts -nonewline "530..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(326) $n(327) $linkBW 930ms DropTail
-	$ns duplex-link-of-interfaces $n(327) $n(328) $linkBW 930ms DropTail
-	$ns duplex-link-of-interfaces $n(330) $n(332) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(331) $n(333) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(332) $n(333) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(334) $n(335) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(334) $n(336) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(335) $n(336) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(335) $n(337) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(336) $n(337) $linkBW 270ms DropTail
-	if {$verbose} { puts -nonewline "540..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(338) $n(626) $linkBW 1080ms DropTail
-	$ns duplex-link-of-interfaces $n(338) $n(538) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(338) $n(359) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(338) $n(353) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(338) $n(348) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(338) $n(339) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(338) $n(341) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(338) $n(345) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(339) $n(1003) $linkBW 1640ms DropTail
-	$ns duplex-link-of-interfaces $n(339) $n(369) $linkBW 170ms DropTail
-	if {$verbose} { puts -nonewline "550..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(339) $n(363) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(339) $n(360) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(339) $n(342) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(339) $n(344) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(340) $n(679) $linkBW 1680ms DropTail
-	$ns duplex-link-of-interfaces $n(340) $n(611) $linkBW 2070ms DropTail
-	$ns duplex-link-of-interfaces $n(340) $n(681) $linkBW 980ms DropTail
-	$ns duplex-link-of-interfaces $n(340) $n(381) $linkBW 920ms DropTail
-	$ns duplex-link-of-interfaces $n(340) $n(379) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(340) $n(376) $linkBW 310ms DropTail
-	if {$verbose} { puts -nonewline "560..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(340) $n(342) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(340) $n(346) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(341) $n(793) $linkBW 1660ms DropTail
-	$ns duplex-link-of-interfaces $n(341) $n(950) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(341) $n(388) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(341) $n(384) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(341) $n(345) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(341) $n(346) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(342) $n(538) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(342) $n(398) $linkBW 150ms DropTail
-	if {$verbose} { puts -nonewline "570..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(342) $n(395) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(342) $n(343) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(342) $n(345) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(342) $n(347) $linkBW 770ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(471) $linkBW 1460ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(469) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(794) $linkBW 1310ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(406) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(402) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(345) $linkBW 650ms DropTail
-	if {$verbose} { puts -nonewline "580..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(344) $n(820) $linkBW 2680ms DropTail
-	$ns duplex-link-of-interfaces $n(344) $n(627) $linkBW 1240ms DropTail
-	$ns duplex-link-of-interfaces $n(344) $n(871) $linkBW 1300ms DropTail
-	$ns duplex-link-of-interfaces $n(344) $n(420) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(344) $n(412) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(344) $n(409) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(344) $n(408) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(344) $n(345) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(345) $n(876) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(345) $n(611) $linkBW 2240ms DropTail
-	if {$verbose} { puts -nonewline "590..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(345) $n(819) $linkBW 2310ms DropTail
-	$ns duplex-link-of-interfaces $n(345) $n(430) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(345) $n(424) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(346) $n(1002) $linkBW 1810ms DropTail
-	$ns duplex-link-of-interfaces $n(346) $n(447) $linkBW 850ms DropTail
-	$ns duplex-link-of-interfaces $n(346) $n(441) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(346) $n(435) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(346) $n(432) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(347) $n(951) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(347) $n(467) $linkBW 490ms DropTail
-	if {$verbose} { puts -nonewline "600..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(347) $n(461) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(347) $n(458) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(347) $n(456) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(347) $n(451) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(349) $n(351) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(349) $n(354) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(350) $n(354) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(351) $n(353) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(351) $n(354) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(352) $n(354) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "610..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(355) $n(357) $linkBW 880ms DropTail
-	$ns duplex-link-of-interfaces $n(355) $n(358) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(356) $n(357) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(356) $n(359) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(357) $n(359) $linkBW 850ms DropTail
-	$ns duplex-link-of-interfaces $n(360) $n(361) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(362) $n(363) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(362) $n(364) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(362) $n(365) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(366) $n(368) $linkBW 490ms DropTail
-	if {$verbose} { puts -nonewline "620..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(366) $n(369) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(366) $n(370) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(367) $n(368) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(367) $n(369) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(367) $n(370) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(367) $n(371) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(368) $n(371) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(369) $n(370) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(369) $n(371) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(370) $n(371) $linkBW 720ms DropTail
-	if {$verbose} { puts -nonewline "630..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(372) $n(374) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(373) $n(374) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(373) $n(375) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(373) $n(376) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(374) $n(375) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(374) $n(376) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(377) $n(380) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(378) $n(379) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(378) $n(380) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(381) $n(382) $linkBW 680ms DropTail
-	if {$verbose} { puts -nonewline "640..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(381) $n(383) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(382) $n(383) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(384) $n(385) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(386) $n(388) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(386) $n(390) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(387) $n(389) $linkBW 770ms DropTail
-	$ns duplex-link-of-interfaces $n(387) $n(391) $linkBW 890ms DropTail
-	$ns duplex-link-of-interfaces $n(388) $n(389) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(388) $n(390) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(389) $n(391) $linkBW 280ms DropTail
-	if {$verbose} { puts -nonewline "650..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(390) $n(391) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(392) $n(393) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(393) $n(395) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(393) $n(396) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(394) $n(395) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(397) $n(398) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(397) $n(399) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(398) $n(399) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(400) $n(403) $linkBW 770ms DropTail
-	$ns duplex-link-of-interfaces $n(401) $n(403) $linkBW 900ms DropTail
-	if {$verbose} { puts -nonewline "660..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(402) $n(403) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(404) $n(405) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(404) $n(406) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(405) $n(406) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(405) $n(407) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(409) $n(410) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(411) $n(414) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(411) $n(416) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(412) $n(413) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(412) $n(415) $linkBW 160ms DropTail
-	if {$verbose} { puts -nonewline "670..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(412) $n(419) $linkBW 880ms DropTail
-	$ns duplex-link-of-interfaces $n(413) $n(416) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(413) $n(419) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(414) $n(416) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(414) $n(418) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(415) $n(418) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(415) $n(419) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(417) $n(418) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(417) $n(419) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(418) $n(419) $linkBW 270ms DropTail
-	if {$verbose} { puts -nonewline "680..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(420) $n(421) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(420) $n(422) $linkBW 920ms DropTail
-	$ns duplex-link-of-interfaces $n(420) $n(423) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(424) $n(429) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(425) $n(427) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(426) $n(427) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(427) $n(428) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(427) $n(429) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(428) $n(429) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(430) $n(431) $linkBW 670ms DropTail
-	if {$verbose} { puts -nonewline "690..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(433) $n(436) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(434) $n(436) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(434) $n(437) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(435) $n(437) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(438) $n(440) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(439) $n(442) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(440) $n(441) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(441) $n(442) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(441) $n(443) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(444) $n(446) $linkBW 350ms DropTail
-	if {$verbose} { puts -nonewline "700..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(444) $n(447) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(445) $n(446) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(445) $n(447) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(448) $n(449) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(448) $n(451) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(448) $n(453) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(449) $n(450) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(449) $n(453) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(450) $n(451) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(451) $n(454) $linkBW 240ms DropTail
-	if {$verbose} { puts -nonewline "710..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(451) $n(455) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(452) $n(454) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(456) $n(457) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(458) $n(459) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(459) $n(460) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(461) $n(464) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(461) $n(465) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(461) $n(466) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(462) $n(463) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(462) $n(464) $linkBW 510ms DropTail
-	if {$verbose} { puts -nonewline "720..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(462) $n(465) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(463) $n(465) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(464) $n(465) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(464) $n(466) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(875) $linkBW 1090ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(793) $linkBW 1320ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(624) $linkBW 1300ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(537) $linkBW 1170ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(793) $linkBW 1320ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(950) $linkBW 530ms DropTail
-	if {$verbose} { puts -nonewline "730..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(468) $n(1003) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(475) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(470) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(471) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(472) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(822) $linkBW 1340ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(627) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(491) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(489) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(483) $linkBW 350ms DropTail
-	if {$verbose} { puts -nonewline "740..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(469) $n(479) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(472) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(1001) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(611) $linkBW 1100ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(508) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(504) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(501) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(493) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(471) $n(679) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(471) $n(611) $linkBW 1080ms DropTail
-	if {$verbose} { puts -nonewline "750..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(471) $n(538) $linkBW 1600ms DropTail
-	$ns duplex-link-of-interfaces $n(471) $n(874) $linkBW 1480ms DropTail
-	$ns duplex-link-of-interfaces $n(471) $n(512) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(472) $n(949) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(472) $n(679) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(472) $n(821) $linkBW 1100ms DropTail
-	$ns duplex-link-of-interfaces $n(472) $n(528) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(472) $n(525) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(472) $n(521) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(472) $n(518) $linkBW 570ms DropTail
-	if {$verbose} { puts -nonewline "760..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(472) $n(517) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(473) $n(474) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(473) $n(475) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(473) $n(476) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(474) $n(475) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(475) $n(476) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(477) $n(478) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(478) $n(479) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(478) $n(480) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(481) $n(482) $linkBW 340ms DropTail
-	if {$verbose} { puts -nonewline "770..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(481) $n(485) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(481) $n(488) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(482) $n(487) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(483) $n(488) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(484) $n(485) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(484) $n(486) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(484) $n(488) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(485) $n(486) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(486) $n(487) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(486) $n(488) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "780..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(489) $n(490) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(491) $n(492) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(493) $n(495) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(493) $n(497) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(494) $n(495) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(494) $n(498) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(495) $n(498) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(496) $n(497) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(497) $n(498) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(499) $n(501) $linkBW 110ms DropTail
-	if {$verbose} { puts -nonewline "790..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(499) $n(502) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(502) $linkBW 950ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(503) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(502) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(503) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(502) $n(503) $linkBW 890ms DropTail
-	$ns duplex-link-of-interfaces $n(504) $n(505) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(506) $linkBW 890ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(507) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(507) $linkBW 710ms DropTail
-	if {$verbose} { puts -nonewline "800..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(509) $n(510) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(509) $n(512) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(511) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(513) $n(515) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(517) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(515) $n(516) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(516) $n(517) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(518) $n(519) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(520) $n(522) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(520) $n(524) $linkBW 510ms DropTail
-	if {$verbose} { puts -nonewline "810..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(521) $n(524) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(522) $n(523) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(523) $n(524) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(525) $n(526) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(527) $n(529) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(527) $n(530) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(527) $n(531) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(527) $n(532) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(528) $n(530) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(528) $n(532) $linkBW 570ms DropTail
-	if {$verbose} { puts -nonewline "820..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(529) $n(532) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(530) $n(532) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(533) $n(625) $linkBW 1520ms DropTail
-	$ns duplex-link-of-interfaces $n(533) $n(678) $linkBW 1740ms DropTail
-	$ns duplex-link-of-interfaces $n(533) $n(819) $linkBW 2480ms DropTail
-	$ns duplex-link-of-interfaces $n(533) $n(540) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(533) $n(534) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(533) $n(537) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(820) $linkBW 2290ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(793) $linkBW 2080ms DropTail
-	if {$verbose} { puts -nonewline "830..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(534) $n(794) $linkBW 1290ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(565) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(561) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(557) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(550) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(549) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(546) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(536) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(537) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(535) $n(678) $linkBW 1400ms DropTail
-	if {$verbose} { puts -nonewline "840..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(535) $n(572) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(535) $n(568) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(535) $n(536) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(535) $n(538) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(611) $linkBW 1310ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(951) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(1002) $linkBW 2040ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(586) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(580) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(578) $linkBW 790ms DropTail
-	if {$verbose} { puts -nonewline "850..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(536) $n(537) $linkBW 920ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(538) $linkBW 990ms DropTail
-	$ns duplex-link-of-interfaces $n(537) $n(949) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(537) $n(590) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(1002) $linkBW 2230ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(875) $linkBW 1020ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(611) $linkBW 2110ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(624) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(874) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(607) $linkBW 220ms DropTail
-	if {$verbose} { puts -nonewline "860..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(538) $n(606) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(603) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(600) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(593) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(539) $n(541) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(539) $n(542) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(540) $n(541) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(543) $n(544) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(543) $n(546) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(543) $n(547) $linkBW 600ms DropTail
-	if {$verbose} { puts -nonewline "870..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(544) $n(545) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(544) $n(547) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(545) $n(546) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(545) $n(547) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(546) $n(547) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(548) $n(549) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(550) $n(551) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(550) $n(552) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(550) $n(553) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(551) $n(553) $linkBW 190ms DropTail
-	if {$verbose} { puts -nonewline "880..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(551) $n(554) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(551) $n(556) $linkBW 860ms DropTail
-	$ns duplex-link-of-interfaces $n(552) $n(553) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(552) $n(555) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(552) $n(556) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(553) $n(556) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(554) $n(555) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(557) $n(558) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(558) $n(559) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(560) $n(562) $linkBW 550ms DropTail
-	if {$verbose} { puts -nonewline "890..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(561) $n(562) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(563) $n(564) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(563) $n(566) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(564) $n(565) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(567) $n(570) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(568) $n(569) $linkBW 850ms DropTail
-	$ns duplex-link-of-interfaces $n(568) $n(570) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(569) $n(570) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(571) $n(572) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(572) $n(574) $linkBW 170ms DropTail
-	if {$verbose} { puts -nonewline "900..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(573) $n(574) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(575) $n(576) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(575) $n(577) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(575) $n(578) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(576) $n(579) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(578) $n(579) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(580) $n(582) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(581) $n(583) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(582) $n(583) $linkBW 870ms DropTail
-	$ns duplex-link-of-interfaces $n(582) $n(584) $linkBW 310ms DropTail
-	if {$verbose} { puts -nonewline "910..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(583) $n(584) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(585) $n(586) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(587) $n(588) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(587) $n(589) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(587) $n(590) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(588) $n(589) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(588) $n(590) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(591) $n(592) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(591) $n(595) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(592) $n(593) $linkBW 850ms DropTail
-	if {$verbose} { puts -nonewline "920..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(592) $n(595) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(593) $n(594) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(593) $n(595) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(596) $n(600) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(597) $n(599) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(597) $n(600) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(597) $n(601) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(598) $n(599) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(598) $n(600) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(598) $n(601) $linkBW 730ms DropTail
-	if {$verbose} { puts -nonewline "930..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(599) $n(601) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(600) $n(601) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(602) $n(603) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(603) $n(604) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(605) $n(606) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(607) $n(610) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(608) $n(609) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(609) $n(610) $linkBW 900ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(1002) $linkBW 1450ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(949) $linkBW 1520ms DropTail
-	if {$verbose} { puts -nonewline "940..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(611) $n(875) $linkBW 2280ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(822) $linkBW 1780ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(793) $linkBW 2420ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(682) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(625) $linkBW 2380ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(625) $linkBW 2380ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(680) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(794) $linkBW 1950ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(819) $linkBW 1930ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(874) $linkBW 2230ms DropTail
-	if {$verbose} { puts -nonewline "950..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(611) $n(952) $linkBW 1680ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(1002) $linkBW 1450ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(620) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(619) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(617) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(612) $n(613) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(612) $n(615) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(613) $n(614) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(613) $n(617) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(614) $n(615) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "960..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(614) $n(617) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(615) $n(616) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(615) $n(617) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(618) $n(619) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(620) $n(622) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(620) $n(623) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(621) $n(623) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(622) $n(623) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(951) $linkBW 1190ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(875) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "970..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(624) $n(820) $linkBW 1730ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(639) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(637) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(635) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(628) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(625) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(627) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(1002) $linkBW 1930ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(793) $linkBW 1000ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(950) $linkBW 760ms DropTail
-	if {$verbose} { puts -nonewline "980..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(625) $n(1001) $linkBW 1640ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(649) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(644) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(626) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(627) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(626) $n(680) $linkBW 1620ms DropTail
-	$ns duplex-link-of-interfaces $n(626) $n(654) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(793) $linkBW 1150ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(684) $linkBW 1160ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(821) $linkBW 780ms DropTail
-	if {$verbose} { puts -nonewline "990..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(627) $n(875) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(674) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(672) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(668) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(661) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(656) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(628) $n(632) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(628) $n(633) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(629) $n(632) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(630) $n(632) $linkBW 190ms DropTail
-	if {$verbose} { puts -nonewline "1000..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(631) $n(633) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(634) $n(635) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(636) $n(637) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(636) $n(638) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(637) $n(638) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(639) $n(640) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(639) $n(641) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(639) $n(643) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(640) $n(642) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(641) $n(642) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "1010..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(641) $n(643) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(644) $n(647) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(644) $n(648) $linkBW 940ms DropTail
-	$ns duplex-link-of-interfaces $n(645) $n(646) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(645) $n(647) $linkBW 920ms DropTail
-	$ns duplex-link-of-interfaces $n(645) $n(648) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(646) $n(648) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(647) $n(648) $linkBW 890ms DropTail
-	$ns duplex-link-of-interfaces $n(649) $n(651) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(650) $n(651) $linkBW 680ms DropTail
-	if {$verbose} { puts -nonewline "1020..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(652) $n(654) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(652) $n(655) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(653) $n(654) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(653) $n(655) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(656) $n(657) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(658) $n(659) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(658) $n(662) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(659) $n(663) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(660) $n(661) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(660) $n(662) $linkBW 680ms DropTail
-	if {$verbose} { puts -nonewline "1030..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(661) $n(663) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(662) $n(663) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(664) $n(666) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(664) $n(668) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(665) $n(669) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(666) $n(669) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(667) $n(669) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(668) $n(669) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(670) $n(671) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(670) $n(672) $linkBW 550ms DropTail
-	if {$verbose} { puts -nonewline "1040..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(671) $n(672) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(672) $n(673) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(674) $n(675) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(676) $n(950) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(676) $n(874) $linkBW 1250ms DropTail
-	$ns duplex-link-of-interfaces $n(676) $n(688) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(676) $n(678) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(676) $n(679) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(676) $n(681) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(677) $n(692) $linkBW 730ms DropTail
-	if {$verbose} { puts -nonewline "1050..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(677) $n(681) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(678) $n(1003) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(678) $n(703) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(678) $n(699) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(678) $n(695) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(678) $n(682) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(679) $n(794) $linkBW 1310ms DropTail
-	$ns duplex-link-of-interfaces $n(679) $n(819) $linkBW 1210ms DropTail
-	$ns duplex-link-of-interfaces $n(679) $n(872) $linkBW 1940ms DropTail
-	$ns duplex-link-of-interfaces $n(679) $n(705) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "1060..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(679) $n(680) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(679) $n(681) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(679) $n(682) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(820) $linkBW 2060ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(793) $linkBW 2180ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(1003) $linkBW 880ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(723) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(720) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(717) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(710) $linkBW 420ms DropTail
-	if {$verbose} { puts -nonewline "1070..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(681) $n(736) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(681) $n(734) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(681) $n(732) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(681) $n(727) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(681) $n(683) $linkBW 990ms DropTail
-	$ns duplex-link-of-interfaces $n(682) $n(950) $linkBW 1340ms DropTail
-	$ns duplex-link-of-interfaces $n(682) $n(752) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(682) $n(748) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(682) $n(747) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(682) $n(742) $linkBW 340ms DropTail
-	if {$verbose} { puts -nonewline "1080..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(682) $n(684) $linkBW 940ms DropTail
-	$ns duplex-link-of-interfaces $n(683) $n(772) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(683) $n(767) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(683) $n(761) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(683) $n(757) $linkBW 960ms DropTail
-	$ns duplex-link-of-interfaces $n(683) $n(684) $linkBW 850ms DropTail
-	$ns duplex-link-of-interfaces $n(684) $n(791) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(684) $n(785) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(684) $n(781) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(684) $n(778) $linkBW 610ms DropTail
-	if {$verbose} { puts -nonewline "1090..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(684) $n(774) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(685) $n(686) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(685) $n(688) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(686) $n(687) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(686) $n(688) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(689) $n(691) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(690) $n(691) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(690) $n(692) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(691) $n(692) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(693) $n(694) $linkBW 80ms DropTail
-	if {$verbose} { puts -nonewline "1100..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(694) $n(695) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(696) $n(699) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(696) $n(701) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(697) $n(698) $linkBW 1170ms DropTail
-	$ns duplex-link-of-interfaces $n(697) $n(700) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(698) $n(699) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(699) $n(701) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(702) $n(703) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(702) $n(704) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(705) $n(707) $linkBW 840ms DropTail
-	if {$verbose} { puts -nonewline "1110..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(706) $n(707) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(706) $n(708) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(709) $n(712) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(709) $n(713) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(710) $n(711) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(710) $n(712) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(711) $n(712) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(714) $n(717) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(715) $n(716) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(716) $n(718) $linkBW 270ms DropTail
-	if {$verbose} { puts -nonewline "1120..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(717) $n(718) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(719) $n(720) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(719) $n(722) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(720) $n(722) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(721) $n(722) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(723) $n(724) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(725) $n(726) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(725) $n(727) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(726) $n(727) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(728) $n(730) $linkBW 100ms DropTail
-	if {$verbose} { puts -nonewline "1130..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(728) $n(732) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(728) $n(733) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(729) $n(731) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(729) $n(733) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(731) $n(733) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(734) $n(735) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(736) $n(737) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(736) $n(738) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(737) $n(738) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(737) $n(739) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "1140..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(738) $n(740) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(741) $n(743) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(742) $n(743) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(744) $n(746) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(744) $n(747) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(745) $n(746) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(746) $n(747) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(748) $n(749) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(748) $n(750) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(751) $n(752) $linkBW 360ms DropTail
-	if {$verbose} { puts -nonewline "1150..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(751) $n(754) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(751) $n(756) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(753) $n(755) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(753) $n(756) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(754) $n(756) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(757) $n(759) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(758) $n(759) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(759) $n(760) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(762) $n(763) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(763) $n(764) $linkBW 640ms DropTail
-	if {$verbose} { puts -nonewline "1160..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(763) $n(767) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(764) $n(766) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(764) $n(767) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(765) $n(767) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(769) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(770) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(771) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(772) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(769) $n(770) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(769) $n(772) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "1170..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(773) $n(774) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(774) $n(776) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(775) $n(776) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(777) $n(778) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(778) $n(779) $linkBW 860ms DropTail
-	$ns duplex-link-of-interfaces $n(780) $n(781) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(780) $n(784) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(781) $n(782) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(781) $n(783) $linkBW 860ms DropTail
-	$ns duplex-link-of-interfaces $n(781) $n(784) $linkBW 580ms DropTail
-	if {$verbose} { puts -nonewline "1180..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(782) $n(783) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(782) $n(784) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(783) $n(784) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(785) $n(786) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(785) $n(788) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(786) $n(787) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(786) $n(788) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(787) $n(788) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(789) $n(790) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(789) $n(791) $linkBW 420ms DropTail
-	if {$verbose} { puts -nonewline "1190..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(789) $n(792) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(1002) $linkBW 1380ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(821) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(874) $linkBW 1310ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(950) $linkBW 1260ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(1003) $linkBW 1650ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(810) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(808) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(802) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(799) $linkBW 700ms DropTail
-	if {$verbose} { puts -nonewline "1200..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(793) $n(794) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(794) $n(951) $linkBW 1350ms DropTail
-	$ns duplex-link-of-interfaces $n(794) $n(873) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(794) $n(819) $linkBW 1070ms DropTail
-	$ns duplex-link-of-interfaces $n(794) $n(818) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(794) $n(812) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(795) $n(797) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(795) $n(798) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(795) $n(799) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(796) $n(797) $linkBW 130ms DropTail
-	if {$verbose} { puts -nonewline "1210..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(796) $n(798) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(796) $n(799) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(797) $n(798) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(800) $n(802) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(800) $n(803) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(801) $n(802) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(801) $n(803) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(804) $n(808) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(805) $n(807) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(805) $n(808) $linkBW 920ms DropTail
-	if {$verbose} { puts -nonewline "1220..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(806) $n(807) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(806) $n(809) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(808) $n(809) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(811) $n(812) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(813) $n(815) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(813) $n(816) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(814) $n(815) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(814) $n(816) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(815) $n(816) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(815) $n(818) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "1230..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(816) $n(817) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(950) $linkBW 1370ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(830) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(829) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(825) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(820) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(821) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(822) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(820) $n(872) $linkBW 1920ms DropTail
-	$ns duplex-link-of-interfaces $n(820) $n(838) $linkBW 460ms DropTail
-	if {$verbose} { puts -nonewline "1240..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(820) $n(835) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(820) $n(821) $linkBW 770ms DropTail
-	$ns duplex-link-of-interfaces $n(820) $n(822) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(821) $n(858) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(821) $n(852) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(821) $n(849) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(821) $n(846) $linkBW 880ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(1001) $linkBW 890ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(952) $linkBW 1750ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(873) $linkBW 900ms DropTail
-	if {$verbose} { puts -nonewline "1250..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(822) $n(1003) $linkBW 1000ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(868) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(866) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(861) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(823) $n(824) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(824) $n(825) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(826) $n(828) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(827) $n(829) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(828) $n(829) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(830) $n(833) $linkBW 550ms DropTail
-	if {$verbose} { puts -nonewline "1260..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(831) $n(832) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(832) $n(833) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(833) $n(834) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(835) $n(837) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(836) $n(837) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(838) $n(840) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(838) $n(842) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(839) $n(840) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(839) $n(842) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(840) $n(841) $linkBW 840ms DropTail
-	if {$verbose} { puts -nonewline "1270..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(841) $n(842) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(843) $n(845) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(843) $n(846) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(844) $n(845) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(845) $n(846) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(847) $n(848) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(847) $n(849) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(847) $n(850) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(851) $n(853) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(852) $n(853) $linkBW 590ms DropTail
-	if {$verbose} { puts -nonewline "1280..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(853) $n(854) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(855) $n(858) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(856) $n(857) $linkBW 890ms DropTail
-	$ns duplex-link-of-interfaces $n(857) $n(858) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(859) $n(860) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(859) $n(861) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(859) $n(863) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(860) $n(861) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(860) $n(863) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(861) $n(862) $linkBW 420ms DropTail
-	if {$verbose} { puts -nonewline "1290..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(864) $n(865) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(865) $n(866) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(867) $n(869) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(868) $n(870) $linkBW 980ms DropTail
-	$ns duplex-link-of-interfaces $n(869) $n(870) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(883) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(878) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(874) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(875) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(876) $linkBW 650ms DropTail
-	if {$verbose} { puts -nonewline "1300..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(872) $n(951) $linkBW 1010ms DropTail
-	$ns duplex-link-of-interfaces $n(872) $n(896) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(872) $n(892) $linkBW 1020ms DropTail
-	$ns duplex-link-of-interfaces $n(872) $n(887) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(872) $n(886) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(872) $n(874) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(873) $n(905) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(873) $n(904) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(873) $n(875) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(874) $n(1003) $linkBW 1710ms DropTail
-	if {$verbose} { puts -nonewline "1310..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(874) $n(1002) $linkBW 2030ms DropTail
-	$ns duplex-link-of-interfaces $n(874) $n(916) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(874) $n(911) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(952) $linkBW 1290ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(935) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(932) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(928) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(918) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(917) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(876) $linkBW 740ms DropTail
-	if {$verbose} { puts -nonewline "1320..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(876) $n(947) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(876) $n(938) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(876) $n(937) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(877) $n(878) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(877) $n(880) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(878) $n(880) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(878) $n(881) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(879) $n(880) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(879) $n(881) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(879) $n(882) $linkBW 870ms DropTail
-	if {$verbose} { puts -nonewline "1330..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(880) $n(881) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(883) $n(884) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(885) $n(886) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(887) $n(889) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(888) $n(889) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(890) $n(892) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(890) $n(893) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(891) $n(892) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(891) $n(893) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(892) $n(893) $linkBW 260ms DropTail
-	if {$verbose} { puts -nonewline "1340..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(894) $n(895) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(894) $n(899) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(895) $n(896) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(895) $n(898) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(895) $n(899) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(896) $n(897) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(896) $n(898) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(896) $n(899) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(897) $n(898) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(899) $n(900) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "1350..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(901) $n(902) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(901) $n(903) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(903) $n(904) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(905) $n(908) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(906) $n(908) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(907) $n(908) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(909) $n(910) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(909) $n(911) $linkBW 900ms DropTail
-	$ns duplex-link-of-interfaces $n(910) $n(912) $linkBW 910ms DropTail
-	$ns duplex-link-of-interfaces $n(913) $n(914) $linkBW 130ms DropTail
-	if {$verbose} { puts -nonewline "1360..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(913) $n(915) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(913) $n(916) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(918) $n(919) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(918) $n(920) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(918) $n(921) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(918) $n(922) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(919) $n(921) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(919) $n(922) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(920) $n(923) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(921) $n(923) $linkBW 120ms DropTail
-	if {$verbose} { puts -nonewline "1370..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(922) $n(924) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(923) $n(924) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(925) $n(926) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(926) $n(928) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(926) $n(929) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(927) $n(928) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(928) $n(929) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(930) $n(931) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(931) $n(932) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(933) $n(934) $linkBW 360ms DropTail
-	if {$verbose} { puts -nonewline "1380..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(933) $n(935) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(934) $n(936) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(938) $n(941) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(938) $n(944) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(939) $n(943) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(939) $n(945) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(940) $n(941) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(940) $n(944) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(940) $n(945) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(941) $n(942) $linkBW 500ms DropTail
-	if {$verbose} { puts -nonewline "1390..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(941) $n(944) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(941) $n(945) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(942) $n(943) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(943) $n(944) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(944) $n(945) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(946) $n(947) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(946) $n(948) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(947) $n(948) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(949) $n(1001) $linkBW 1110ms DropTail
-	$ns duplex-link-of-interfaces $n(949) $n(957) $linkBW 300ms DropTail
-	if {$verbose} { puts -nonewline "1400..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(949) $n(953) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(949) $n(950) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(949) $n(951) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(950) $n(978) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(950) $n(971) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(950) $n(968) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(950) $n(965) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(950) $n(964) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(950) $n(952) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(951) $n(1001) $linkBW 1800ms DropTail
-	if {$verbose} { puts -nonewline "1410..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(951) $n(983) $linkBW 710ms DropTail
-	$ns duplex-link-of-interfaces $n(951) $n(952) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(952) $n(999) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(952) $n(995) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(952) $n(993) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(952) $n(985) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(954) $n(955) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(955) $n(956) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(955) $n(959) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(955) $n(960) $linkBW 350ms DropTail
-	if {$verbose} { puts -nonewline "1420..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(956) $n(958) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(956) $n(959) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(957) $n(960) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(958) $n(960) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(959) $n(960) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(961) $n(962) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(961) $n(964) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(963) $n(964) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(966) $n(967) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(967) $n(968) $linkBW 730ms DropTail
-	if {$verbose} { puts -nonewline "1430..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(967) $n(969) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(968) $n(969) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(970) $n(973) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(970) $n(975) $linkBW 790ms DropTail
-	$ns duplex-link-of-interfaces $n(970) $n(976) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(971) $n(972) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(971) $n(973) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(971) $n(974) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(971) $n(975) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(971) $n(976) $linkBW 200ms DropTail
-	if {$verbose} { puts -nonewline "1440..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(972) $n(973) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(972) $n(975) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(973) $n(975) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(974) $n(975) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(975) $n(976) $linkBW 960ms DropTail
-	$ns duplex-link-of-interfaces $n(977) $n(978) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(978) $n(979) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(978) $n(980) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(979) $n(980) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(981) $n(982) $linkBW 480ms DropTail
-	if {$verbose} { puts -nonewline "1450..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(982) $n(983) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(982) $n(984) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(983) $n(984) $linkBW 1000ms DropTail
-	$ns duplex-link-of-interfaces $n(985) $n(986) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(985) $n(987) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(985) $n(990) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(986) $n(987) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(986) $n(989) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(986) $n(991) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(987) $n(990) $linkBW 530ms DropTail
-	if {$verbose} { puts -nonewline "1460..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(987) $n(991) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(988) $n(989) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(988) $n(991) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(989) $n(990) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(992) $n(994) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(993) $n(994) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(995) $n(996) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(995) $n(997) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(995) $n(998) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(997) $n(998) $linkBW 510ms DropTail
-	if {$verbose} { puts -nonewline "1470..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(999) $n(1000) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(1001) $n(1022) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(1001) $n(1018) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(1001) $n(1016) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(1001) $n(1014) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(1001) $n(1004) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(1001) $n(1002) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(1002) $n(1028) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(1002) $n(1026) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(1002) $n(1003) $linkBW 790ms DropTail
-	if {$verbose} { puts -nonewline "1480..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1003) $n(1038) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(1003) $n(1034) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(1004) $n(1006) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(1004) $n(1007) $linkBW 810ms DropTail
-	$ns duplex-link-of-interfaces $n(1004) $n(1008) $linkBW 1130ms DropTail
-	$ns duplex-link-of-interfaces $n(1004) $n(1009) $linkBW 1040ms DropTail
-	$ns duplex-link-of-interfaces $n(1005) $n(1006) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(1006) $n(1008) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(1008) $n(1009) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(1010) $n(1012) $linkBW 840ms DropTail
-	if {$verbose} { puts -nonewline "1490..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1010) $n(1013) $linkBW 840ms DropTail
-	$ns duplex-link-of-interfaces $n(1010) $n(1015) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(1011) $n(1013) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(1013) $n(1015) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(1014) $n(1015) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(1017) $n(1018) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(1019) $n(1021) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(1019) $n(1022) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(1020) $n(1021) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(1021) $n(1023) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "1500..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1022) $n(1023) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(1024) $n(1027) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(1025) $n(1027) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(1026) $n(1027) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(1028) $n(1029) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(1028) $n(1030) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(1029) $n(1030) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(1029) $n(1031) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(1032) $n(1034) $linkBW 10ms DropTail
-	$ns duplex-link-of-interfaces $n(1032) $n(1035) $linkBW 140ms DropTail
-	if {$verbose} { puts -nonewline "1510..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1033) $n(1035) $linkBW 950ms DropTail
-	$ns duplex-link-of-interfaces $n(1034) $n(1035) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(1036) $n(1037) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(1037) $n(1039) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(1038) $n(1039) $linkBW 570ms DropTail
-
-	if {$verbose} { 
-		puts -nonewline "1515..."
-		flush stdout
-		puts "starting"
-	}
-	return 1040}
-# end of hier topology generation
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/misc_simple.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/misc_simple.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/misc_simple.tcl	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/misc_simple.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,293 +0,0 @@
-
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/misc_simple.tcl,v 1.13 2003/01/19 03:51:18 sfloyd Exp $
-#
-
-Object instproc exit args {
-      set ns [Simulator instance]
-      catch "$ns clearTimers"
-      eval exit $args
-}
-
-Class TestSuite
-
-# Use "$self next 0" or "$self next noTraceFiles" to avoid creating 
-#   all.tr and all.nam.
-# Use "$self next 2" or "$self next pktTraceFile" to create only all.tr, 
-#   but not all.nam.
-TestSuite instproc init { {dotrace traceFiles} } {
-	global quiet argv0
-	$self instvar ns_ test_ node_ testName_ 
-	$self instvar allchan_ namchan_
-	if [catch "$self get-simulator" ns_] {
-	    set ns_ [new Simulator]
-	}
-	if { $dotrace == 1 || $dotrace == 2 || $dotrace == "traceFiles" || 
-		   $dotrace == "pktTraceFile" } {
-                set allchan_ [open all.tr w]
-                $ns_ trace-all $allchan_
-        } 
-        if { $dotrace == "traceFiles" || $dotrace == 1 } {
-		set namchan_ [open all.nam w]
-		if {$quiet == "false"} {
-                	$ns_ namtrace-all $namchan_
-		}
-		if {[regexp {testReno} $argv0]} {
-			$ns_ eventtrace-all
-		}
-	}
-	set testName_ "$test_"
-}
-
-#
-# Arrange for tcp source stats to be dumped for $tcpSrc every
-# $interval seconds of simulation time
-#
-TestSuite instproc tcpDump { tcpSrc interval } {
-	global quiet
-	$self instvar dump_inst_ ns_
-	if ![info exists dump_inst_($tcpSrc)] {
-		set dump_inst_($tcpSrc) 1
-		$ns_ at 0.0 "$self tcpDump $tcpSrc $interval"
-		return
-	}
-	$ns_ at [expr [$ns_ now] + $interval] "$self tcpDump $tcpSrc $interval"
-	set report [$ns_ now]/cwnd=[format "%.4f" [$tcpSrc set cwnd_]]/ssthresh=[$tcpSrc set ssthresh_]/ack=[$tcpSrc set ack_]
-        if {$quiet == "false"} {
-                puts $report
-        }
-}
-
-#
-# Arrange for time to be printed every
-# $interval seconds of simulation time
-#
-TestSuite instproc timeDump { interval } {
-	global quiet
-	$self instvar dump_inst_ ns_
-	if ![info exists dump_inst_] {
-		set dump_inst_ 1
-		$ns_ at 0.0 "$self timeDump $interval"
-		return
-	}
-	$ns_ at [expr [$ns_ now] + $interval] "$self timeDump $interval"
-	set report [$ns_ now]
-        if {$quiet == "false"} {
-                puts $report
-        }
-}
-
-#
-# Trace the TCP congestion window cwnd_.
-#
-TestSuite instproc enable_tracecwnd { ns tcp {filename all.cwnd} } { 
-        $self instvar cwnd_chan_
-        set cwnd_chan_ [open $filename w]
-        $tcp trace cwnd_
-        $tcp attach $cwnd_chan_ 
-}       
-        
-#
-# Plot the TCP congestion window cwnd_.
-#
-TestSuite instproc plot_cwnd { {terse 0} {title cwnd} {newfiles 0} } {
-        global quiet
-        $self instvar cwnd_chan_
-        set awkCode {
-              {
-              if ($6 == "cwnd_") {
-                print $1, $7 >> "temp.cwnd";
-              } }
-        }
-        set awkCodeTerse {
-	      BEGIN { oldcwnd = -2; print "  " >> "temp.cwnd";}
-              {
-              if ($6 == "cwnd_") {
-		 newcwnd = $7;
-		 newtime = $1;
-		 if (newtime < oldtime) {
-                    print "  " >> "temp.cwnd";
-		    oldcwnd = -1;
-		 }
-                 if ((newcwnd >= oldcwnd + 1) || (newcwnd <= oldcwnd - 1)){
-                    print newtime, newcwnd >> "temp.cwnd";
-		    oldcwnd = $7;
-		 }
-		 oldtime = $1;
-              } }
-        }
-        set f [open cwnd.xgr w]
-        puts $f "TitleText: $title"
-        puts $f "Device: Postscript"
- 
-        if { [info exists cwnd_chan_] } {
-                close $cwnd_chan_  
-        }
-        exec rm -f temp.cwnd
-        exec touch temp.cwnd
-        
-	if {$terse == 1} {
-		exec awk $awkCodeTerse all.cwnd
-		if {$newfiles != 0} {
- 		        exec awk $awkCodeTerse all.cwnd1
-		}
-	} else {
-       		exec awk $awkCode all.cwnd
-	}
-        
-        puts $f \"cwnd
-        exec cat temp.cwnd >@ $f
-        close $f                
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -x time -y cwnd cwnd.xgr &
-        }               
-}                               
-                
-TestSuite instproc cleanup { tfile testname } {
-	$self instvar ns_ allchan_ namchan_
-	$ns_ halt
-	close $tfile
-	if { [info exists allchan_] } {
-		close $allchan_
-	}       
-	if { [info exists namchan_] } {
-		close $namchan_
-	}       
-	$self finish $testname; # calls finish procedure in test suite file
-}
-
-TestSuite instproc cleanupAll { testname {stoptime 0}} {
-	$self instvar ns_ allchan_ namchan_
-	$ns_ halt
-	if { [info exists allchan_] } {
-		close $allchan_
-	}       
-	if { [info exists namchan_] } {
-		close $namchan_
-	}       
-	if { $stoptime > 0 } {
-		$self finish $testname $stoptime; 
-	} else {
-		$self finish $testname;
-	}
-	# calls finish procedure in test suite file
-}
-
-
-TestSuite instproc openTrace { stopTime testName } {
-	$self instvar ns_ allchan_ namchan_
-	exec rm -f out.tr temp.rands
-	set traceFile [open out.tr w]
-	puts $traceFile "v testName $testName"
-	$ns_ at $stopTime "$self cleanup $traceFile $testName"
-	return $traceFile
-}
-
-TestSuite instproc traceQueues { node traceFile } {
-        $self instvar ns_
-        foreach nbr [$node neighbors] { 
-                $ns_ trace-queue $node $nbr $traceFile
-                [$ns_ link $node $nbr] trace-dynamics $ns_ $traceFile
-        }
-}
- 
-proc usage {} {
-	global argv0
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-        global argc argv quiet
-
-        set quiet false
-        switch $argc {
-                1 {
-                        set test $argv
-                        isProc? Test $test
-                }
-                2 {
-                        set test [lindex $argv 0]
-                        isProc? Test $test
-
-                        set param [lindex $argv 1]
-                        if {$param == "QUIET"} {
-                                set quiet true 
-                        } 
-                }
-                default {
-                        usage
-                }
-        }
-        set t [new Test/$test]
-        $t run
-}
-
-TestSuite instproc setTopo {} {
-    $self instvar node_ net_ ns_ topo_
-
-    set topo_ [new Topology/$net_ $ns_]
-    foreach i [$topo_ array names node_] {
-        set node_($i) [$topo_ node? $i]
-    }
-}
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/misc.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/misc.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/misc.tcl	2015-03-04 17:49:02.774750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/misc.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,269 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/misc.tcl,v 1.20 2000/05/24 00:22:27 heideman Exp $
-#
-
-#source plotting.tcl
-
-if [file exists redefines.tcl] {
-	puts "sourcing redefines.tcl in [pwd]"
-	source redefines.tcl
-}
-
-Object instproc exit args {
-      set ns [Simulator instance]
-      catch "$ns clearTimers"
-      eval exit $args
-}
-
-Class TestSuite
-
-TestSuite instproc init { {dotrace 1} } {
-	global quiet
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_ 
-	$self instvar allchan_ namchan_
-	if [catch "$self get-simulator" ns_] {
-	    set ns_ [new Simulator]
-	}
-	if { $dotrace } {
-                set allchan_ [open all.tr w]
-                $ns_ trace-all $allchan_
-		set namchan_ [open all.nam w]
-		if {$quiet == "false"} {
-                	$ns_ namtrace-all $namchan_
-		}
-	}
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-
-	if { $dotrace } {
-		# XXX
-		if [info exists node_(k1)] {
-			set blink [$ns_ link $node_(r1) $node_(k1)]
-		} else {
-			set blink [$ns_ link $node_(r1) $node_(r2)] 
-		}
-		$blink trace-dynamics $ns_ stdout 
-	}
-}
-
-TestSuite instproc finish file {
-#	global env
-#
-#	THIS CODE IS NOW SUPERSEDED BY THE NEWER EXTERNAL DRIVERS,
-#	raw2xg, and raw2gp, in ~ns/bin.  raw2xg generates output suitable
-#	for xgraph, and raw2gp, that suitable for gnuplot.
-#
-#       To reproduce old functionality:
-#	global PERL
-#	exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-#	  $PERL ../../bin/raw2xg -s 0.01 -m 90 |  \
-#	  xgraph -bb -tk -nl -m -x time -y packets"
-#	
-#       catch "$self exit 0"
-	exit 0
-}
-
-#
-# Arrange for tcp source stats to be dumped for $tcpSrc every
-# $interval seconds of simulation time
-#
-TestSuite instproc tcpDump { tcpSrc interval } {
-	global quiet
-	$self instvar dump_inst_ ns_
-	if ![info exists dump_inst_($tcpSrc)] {
-		set dump_inst_($tcpSrc) 1
-		$ns_ at 0.0 "$self tcpDump $tcpSrc $interval"
-		return
-	}
-	$ns_ at [expr [$ns_ now] + $interval] "$self tcpDump $tcpSrc $interval"
-	set report [$ns_ now]/cwnd=[format "%.4f" [$tcpSrc set cwnd_]]/ssthresh=[$tcpSrc set ssthresh_]/ack=[$tcpSrc set ack_]
-        if {$quiet == "false"} {
-                puts $report
-        }
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-	$self instvar dump_inst_ ns_
-	if ![info exists dump_inst_($tcpSrc)] {
-		set dump_inst_($tcpSrc) 1
-		puts $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]/bugFix=[$tcpSrc set bugFix_]	
-		$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-		return
-	}
-	$ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-	puts $label/time=[$ns_ now]/cwnd=[format "%.4f" [$tcpSrc set cwnd_]]/ssthresh=[$tcpSrc set ssthresh_]/ack=[$tcpSrc set ack_]/rtt=[$tcpSrc set rtt_]	
-}
-
-TestSuite instproc cleanup { tfile testname } {
-	$self instvar ns_ allchan_ namchan_
-	$ns_ halt
-	close $tfile
-	if { [info exists allchan_] } {
-		close $allchan_
-	}       
-	if { [info exists namchan_] } {
-		close $namchan_
-	}       
-	$self finish $testname; # calls finish procedure in test suite file
-}
-
-
-TestSuite instproc openTrace { stopTime testName } {
-	$self instvar ns_ allchan_ namchan_
-	exec rm -f out.tr temp.rands
-	set traceFile [open out.tr w]
-	puts $traceFile "v testName $testName"
-	$ns_ at $stopTime "$self cleanup $traceFile $testName"
-	return $traceFile
-}
-
-TestSuite instproc traceQueues { node traceFile } {
-	$self instvar ns_
-	foreach nbr [$node neighbors] {
-		$ns_ trace-queue $node $nbr $traceFile
-		[$ns_ link $node $nbr] trace-dynamics $ns_ $traceFile
-	}
-}
-
-TestSuite instproc namtraceQueues { node traceFile } {
-	$self instvar ns_
-	foreach nbr [$node neighbors] {
-		$ns_ namtrace-queue $node $nbr $traceFile
-		[$ns_ link $node $nbr] trace-dynamics $ns_ $traceFile "nam"
-	}
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-        global argc argv quiet
-
-        set quiet false
-        switch $argc {
-                1 {
-                        set test $argv
-                        isProc? Test $test
-
-                        set topo ""
-                }
-                2 {
-                        set test [lindex $argv 0]
-                        isProc? Test $test
-
-                        set topo [lindex $argv 1]
-                        if {$topo == "QUIET"} {
-                                set quiet true 
-                                set topo ""
-                        } else {
-                                isProc? Topology $topo
-                        }
-                }
-                3 {
-                        set test [lindex $argv 0]
-                        isProc? Test $test
-
-                        set topo [lindex $argv 1]
-                        isProc? Topology $topo
-
-                        set extra [lindex $argv 2]
-                        if {$extra == "QUIET"} {
-                                set quiet true
-                        }
-                }
-                default {
-                        usage
-                }
-        }
-        set t [new Test/$test $topo]
-        $t run
-}
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/mobility.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/mobility.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/mobility.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/mobility.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,83 +0,0 @@
-#
-# nodes: 5, pause: 400.00, max speed: 20.00  max x = 670.00, max y: 670.00
-#
-set god_ [God instance]
-$node_(0) set X_ 143.437509218780
-$node_(0) set Y_ 94.217567273200
-$node_(0) set Z_ 0.000000000000
-$node_(1) set X_ 304.653244246784
-$node_(1) set Y_ 167.076325969835
-$node_(1) set Z_ 0.000000000000
-$node_(2) set X_ 81.810723227699
-$node_(2) set Y_ 152.825360505610
-$node_(2) set Z_ 0.000000000000
-$node_(3) set X_ 325.834153339995
-$node_(3) set Y_ 354.615563074325
-$node_(3) set Z_ 0.000000000000
-$node_(4) set X_ 23.768638624379
-$node_(4) set Y_ 159.509381009931
-$node_(4) set Z_ 0.000000000000
-$god_ set-dist 0 1 1
-$god_ set-dist 0 2 1
-$god_ set-dist 0 3 2
-$god_ set-dist 0 4 1
-$god_ set-dist 1 2 1
-$god_ set-dist 1 3 1
-$god_ set-dist 1 4 2
-$god_ set-dist 2 3 2
-$god_ set-dist 2 4 1
-$god_ set-dist 3 4 3
-$ns_ at 400.000000000000 "$node_(0) setdest 204.166775406815 360.994443446432 11.451084311191"
-$ns_ at 400.000000000000 "$node_(1) setdest 615.529949830732 411.867351157209 14.464813867968"
-$ns_ at 400.000000000000 "$node_(2) setdest 339.244174366253 646.838874543792 0.028806906205"
-$ns_ at 400.000000000000 "$node_(3) setdest 139.282032746586 603.124495402331 8.459545135266"
-$ns_ at 400.000000000000 "$node_(4) setdest 655.765713025551 624.339402170651 12.009935402613"
-$ns_ at 402.190313067921 "$god_ set-dist 1 2 2"
-$ns_ at 402.190313067921 "$god_ set-dist 2 3 3"
-$ns_ at 406.245213537287 "$god_ set-dist 0 3 1"
-$ns_ at 406.245213537287 "$god_ set-dist 2 3 2"
-$ns_ at 406.245213537287 "$god_ set-dist 3 4 2"
-$ns_ at 409.445211616863 "$god_ set-dist 0 1 2"
-$ns_ at 409.445211616863 "$god_ set-dist 1 2 3"
-$ns_ at 409.445211616863 "$god_ set-dist 1 4 3"
-$ns_ at 412.724403589490 "$god_ set-dist 1 4 2"
-$ns_ at 412.724403589490 "$god_ set-dist 3 4 1"
-$ns_ at 421.330331512029 "$god_ set-dist 0 1 16777215"
-$ns_ at 421.330331512029 "$god_ set-dist 1 2 16777215"
-$ns_ at 421.330331512029 "$god_ set-dist 1 3 16777215"
-$ns_ at 421.330331512029 "$god_ set-dist 1 4 16777215"
-$ns_ at 423.893091118903 "$node_(0) setdest 204.166775406815 360.994443446433 0.000000000000"
-$ns_ at 424.170572475068 "$god_ set-dist 2 4 2"
-$ns_ at 427.355031976147 "$node_(1) setdest 615.529949830732 411.867351157209 0.000000000000"
-$ns_ at 435.324757998609 "$god_ set-dist 0 1 2"
-$ns_ at 435.324757998609 "$god_ set-dist 1 2 3"
-$ns_ at 435.324757998609 "$god_ set-dist 1 3 2"
-$ns_ at 435.324757998609 "$god_ set-dist 1 4 1"
-$ns_ at 442.338397622170 "$god_ set-dist 0 1 3"
-$ns_ at 442.338397622170 "$god_ set-dist 0 4 2"
-$ns_ at 442.338397622170 "$god_ set-dist 1 2 4"
-$ns_ at 442.338397622170 "$god_ set-dist 2 4 3"
-$ns_ at 446.824570750405 "$god_ set-dist 0 1 16777215"
-$ns_ at 446.824570750405 "$god_ set-dist 0 4 16777215"
-$ns_ at 446.824570750405 "$god_ set-dist 1 2 16777215"
-$ns_ at 446.824570750405 "$god_ set-dist 1 3 16777215"
-$ns_ at 446.824570750405 "$god_ set-dist 2 4 16777215"
-$ns_ at 446.824570750405 "$god_ set-dist 3 4 16777215"
-$ns_ at 465.323411734640 "$node_(4) setdest 655.765713025551 624.339402170651 0.000000000000"
-$ns_ at 473.072413525966 "$god_ set-dist 0 3 16777215"
-$ns_ at 473.072413525966 "$god_ set-dist 2 3 16777215"
-$ns_ at 473.153941050381 "$node_(3) setdest 139.282032746586 603.124495402331 0.000000000000"
-#
-# Destination Unreachables: 12
-#
-# Route Changes: 31
-#
-# Link Changes: 10
-#
-# Node | Route Changes | Link Changes
-#    0 |             9 |            4
-#    1 |            18 |            4
-#    2 |            12 |            2
-#    3 |            11 |            5
-#    4 |            12 |            5
-#
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/offtimecdf ns-allinone-2.34-qjump/ns-2.34/tcl/test/offtimecdf
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/offtimecdf	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/offtimecdf	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-1.7 1145774 0.802013
-3.4 1289138 0.902365
-5.1 1348888 0.944188
-6.8 1359278 0.951461
-8.5 1381366 0.966922
-10.2 1407487 0.985206
-11.9 1413285 0.989264
-13.6 1420589 0.994377
-15.3 1420811 0.994532
-17.0 1426298 0.998373
-18.7 1428622 1
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/onoff-30-3-3-1-1-500-10.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/onoff-30-3-3-1-1-500-10.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/onoff-30-3-3-1-1-500-10.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/onoff-30-3-3-1-1-500-10.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,426 +0,0 @@
-$ns_ at 0.0 "$node_(4) off"
-$ns_ at 0.0 "$node_(6) off"
-$ns_ at 0.0 "$node_(24) off"
-$ns_ at 7.0 "$node_(4) on"
-$ns_ at 7.0 "$node_(6) on"
-$ns_ at 7.0 "$node_(24) on"
-$ns_ at 7.0999999999999996 "$node_(1) off"
-$ns_ at 7.0999999999999996 "$node_(5) off"
-$ns_ at 7.0999999999999996 "$node_(9) off"
-$ns_ at 14.1 "$node_(1) on"
-$ns_ at 14.1 "$node_(5) on"
-$ns_ at 14.1 "$node_(9) on"
-$ns_ at 14.199999999999999 "$node_(26) off"
-$ns_ at 14.199999999999999 "$node_(0) off"
-$ns_ at 14.199999999999999 "$node_(20) off"
-$ns_ at 21.199999999999999 "$node_(26) on"
-$ns_ at 21.199999999999999 "$node_(0) on"
-$ns_ at 21.199999999999999 "$node_(20) on"
-$ns_ at 21.300000000000001 "$node_(1) off"
-$ns_ at 21.300000000000001 "$node_(25) off"
-$ns_ at 21.300000000000001 "$node_(0) off"
-$ns_ at 28.300000000000001 "$node_(1) on"
-$ns_ at 28.300000000000001 "$node_(25) on"
-$ns_ at 28.300000000000001 "$node_(0) on"
-$ns_ at 28.400000000000002 "$node_(1) off"
-$ns_ at 28.400000000000002 "$node_(14) off"
-$ns_ at 28.400000000000002 "$node_(25) off"
-$ns_ at 35.400000000000006 "$node_(1) on"
-$ns_ at 35.400000000000006 "$node_(14) on"
-$ns_ at 35.400000000000006 "$node_(25) on"
-$ns_ at 35.500000000000007 "$node_(11) off"
-$ns_ at 35.500000000000007 "$node_(2) off"
-$ns_ at 35.500000000000007 "$node_(16) off"
-$ns_ at 42.500000000000007 "$node_(11) on"
-$ns_ at 42.500000000000007 "$node_(2) on"
-$ns_ at 42.500000000000007 "$node_(16) on"
-$ns_ at 42.600000000000009 "$node_(26) off"
-$ns_ at 42.600000000000009 "$node_(29) off"
-$ns_ at 42.600000000000009 "$node_(16) off"
-$ns_ at 49.600000000000009 "$node_(26) on"
-$ns_ at 49.600000000000009 "$node_(29) on"
-$ns_ at 49.600000000000009 "$node_(16) on"
-$ns_ at 49.70000000000001 "$node_(4) off"
-$ns_ at 49.70000000000001 "$node_(27) off"
-$ns_ at 49.70000000000001 "$node_(16) off"
-$ns_ at 56.70000000000001 "$node_(4) on"
-$ns_ at 56.70000000000001 "$node_(27) on"
-$ns_ at 56.70000000000001 "$node_(16) on"
-$ns_ at 56.800000000000011 "$node_(4) off"
-$ns_ at 56.800000000000011 "$node_(6) off"
-$ns_ at 56.800000000000011 "$node_(15) off"
-$ns_ at 63.800000000000011 "$node_(4) on"
-$ns_ at 63.800000000000011 "$node_(6) on"
-$ns_ at 63.800000000000011 "$node_(15) on"
-$ns_ at 63.900000000000013 "$node_(26) off"
-$ns_ at 63.900000000000013 "$node_(2) off"
-$ns_ at 63.900000000000013 "$node_(9) off"
-$ns_ at 70.900000000000006 "$node_(26) on"
-$ns_ at 70.900000000000006 "$node_(2) on"
-$ns_ at 70.900000000000006 "$node_(9) on"
-$ns_ at 71.0 "$node_(1) off"
-$ns_ at 71.0 "$node_(12) off"
-$ns_ at 71.0 "$node_(10) off"
-$ns_ at 78.0 "$node_(1) on"
-$ns_ at 78.0 "$node_(12) on"
-$ns_ at 78.0 "$node_(10) on"
-$ns_ at 78.099999999999994 "$node_(26) off"
-$ns_ at 78.099999999999994 "$node_(15) off"
-$ns_ at 78.099999999999994 "$node_(27) off"
-$ns_ at 85.099999999999994 "$node_(26) on"
-$ns_ at 85.099999999999994 "$node_(15) on"
-$ns_ at 85.099999999999994 "$node_(27) on"
-$ns_ at 85.199999999999989 "$node_(11) off"
-$ns_ at 85.199999999999989 "$node_(28) off"
-$ns_ at 85.199999999999989 "$node_(5) off"
-$ns_ at 92.199999999999989 "$node_(11) on"
-$ns_ at 92.199999999999989 "$node_(28) on"
-$ns_ at 92.199999999999989 "$node_(5) on"
-$ns_ at 92.299999999999983 "$node_(1) off"
-$ns_ at 92.299999999999983 "$node_(20) off"
-$ns_ at 92.299999999999983 "$node_(28) off"
-$ns_ at 99.299999999999983 "$node_(1) on"
-$ns_ at 99.299999999999983 "$node_(20) on"
-$ns_ at 99.299999999999983 "$node_(28) on"
-$ns_ at 99.399999999999977 "$node_(11) off"
-$ns_ at 99.399999999999977 "$node_(20) off"
-$ns_ at 99.399999999999977 "$node_(22) off"
-$ns_ at 106.39999999999998 "$node_(11) on"
-$ns_ at 106.39999999999998 "$node_(20) on"
-$ns_ at 106.39999999999998 "$node_(22) on"
-$ns_ at 106.49999999999997 "$node_(26) off"
-$ns_ at 106.49999999999997 "$node_(28) off"
-$ns_ at 106.49999999999997 "$node_(9) off"
-$ns_ at 113.49999999999997 "$node_(26) on"
-$ns_ at 113.49999999999997 "$node_(28) on"
-$ns_ at 113.49999999999997 "$node_(9) on"
-$ns_ at 113.59999999999997 "$node_(11) off"
-$ns_ at 113.59999999999997 "$node_(5) off"
-$ns_ at 113.59999999999997 "$node_(0) off"
-$ns_ at 120.59999999999997 "$node_(11) on"
-$ns_ at 120.59999999999997 "$node_(5) on"
-$ns_ at 120.59999999999997 "$node_(0) on"
-$ns_ at 120.69999999999996 "$node_(1) off"
-$ns_ at 120.69999999999996 "$node_(12) off"
-$ns_ at 120.69999999999996 "$node_(6) off"
-$ns_ at 127.69999999999996 "$node_(1) on"
-$ns_ at 127.69999999999996 "$node_(12) on"
-$ns_ at 127.69999999999996 "$node_(6) on"
-$ns_ at 127.79999999999995 "$node_(11) off"
-$ns_ at 127.79999999999995 "$node_(25) off"
-$ns_ at 127.79999999999995 "$node_(2) off"
-$ns_ at 134.79999999999995 "$node_(11) on"
-$ns_ at 134.79999999999995 "$node_(25) on"
-$ns_ at 134.79999999999995 "$node_(2) on"
-$ns_ at 134.89999999999995 "$node_(11) off"
-$ns_ at 134.89999999999995 "$node_(14) off"
-$ns_ at 134.89999999999995 "$node_(20) off"
-$ns_ at 141.89999999999995 "$node_(11) on"
-$ns_ at 141.89999999999995 "$node_(14) on"
-$ns_ at 141.89999999999995 "$node_(20) on"
-$ns_ at 141.99999999999994 "$node_(4) off"
-$ns_ at 141.99999999999994 "$node_(20) off"
-$ns_ at 141.99999999999994 "$node_(15) off"
-$ns_ at 148.99999999999994 "$node_(4) on"
-$ns_ at 148.99999999999994 "$node_(20) on"
-$ns_ at 148.99999999999994 "$node_(15) on"
-$ns_ at 149.09999999999994 "$node_(1) off"
-$ns_ at 149.09999999999994 "$node_(27) off"
-$ns_ at 149.09999999999994 "$node_(13) off"
-$ns_ at 156.09999999999994 "$node_(1) on"
-$ns_ at 156.09999999999994 "$node_(27) on"
-$ns_ at 156.09999999999994 "$node_(13) on"
-$ns_ at 156.19999999999993 "$node_(4) off"
-$ns_ at 156.19999999999993 "$node_(27) off"
-$ns_ at 156.19999999999993 "$node_(5) off"
-$ns_ at 163.19999999999993 "$node_(4) on"
-$ns_ at 163.19999999999993 "$node_(27) on"
-$ns_ at 163.19999999999993 "$node_(5) on"
-$ns_ at 163.29999999999993 "$node_(26) off"
-$ns_ at 163.29999999999993 "$node_(5) off"
-$ns_ at 163.29999999999993 "$node_(16) off"
-$ns_ at 170.29999999999993 "$node_(26) on"
-$ns_ at 170.29999999999993 "$node_(5) on"
-$ns_ at 170.29999999999993 "$node_(16) on"
-$ns_ at 170.39999999999992 "$node_(4) off"
-$ns_ at 170.39999999999992 "$node_(5) off"
-$ns_ at 170.39999999999992 "$node_(29) off"
-$ns_ at 177.39999999999992 "$node_(4) on"
-$ns_ at 177.39999999999992 "$node_(5) on"
-$ns_ at 177.39999999999992 "$node_(29) on"
-$ns_ at 177.49999999999991 "$node_(4) off"
-$ns_ at 177.49999999999991 "$node_(13) off"
-$ns_ at 177.49999999999991 "$node_(25) off"
-$ns_ at 184.49999999999991 "$node_(4) on"
-$ns_ at 184.49999999999991 "$node_(13) on"
-$ns_ at 184.49999999999991 "$node_(25) on"
-$ns_ at 184.59999999999991 "$node_(26) off"
-$ns_ at 184.59999999999991 "$node_(28) off"
-$ns_ at 184.59999999999991 "$node_(22) off"
-$ns_ at 191.59999999999991 "$node_(26) on"
-$ns_ at 191.59999999999991 "$node_(28) on"
-$ns_ at 191.59999999999991 "$node_(22) on"
-$ns_ at 191.6999999999999 "$node_(4) off"
-$ns_ at 191.6999999999999 "$node_(20) off"
-$ns_ at 191.6999999999999 "$node_(25) off"
-$ns_ at 198.6999999999999 "$node_(4) on"
-$ns_ at 198.6999999999999 "$node_(20) on"
-$ns_ at 198.6999999999999 "$node_(25) on"
-$ns_ at 198.7999999999999 "$node_(11) off"
-$ns_ at 198.7999999999999 "$node_(5) off"
-$ns_ at 198.7999999999999 "$node_(9) off"
-$ns_ at 205.7999999999999 "$node_(11) on"
-$ns_ at 205.7999999999999 "$node_(5) on"
-$ns_ at 205.7999999999999 "$node_(9) on"
-$ns_ at 205.89999999999989 "$node_(4) off"
-$ns_ at 205.89999999999989 "$node_(5) off"
-$ns_ at 205.89999999999989 "$node_(17) off"
-$ns_ at 212.89999999999989 "$node_(4) on"
-$ns_ at 212.89999999999989 "$node_(5) on"
-$ns_ at 212.89999999999989 "$node_(17) on"
-$ns_ at 212.99999999999989 "$node_(11) off"
-$ns_ at 212.99999999999989 "$node_(9) off"
-$ns_ at 212.99999999999989 "$node_(10) off"
-$ns_ at 219.99999999999989 "$node_(11) on"
-$ns_ at 219.99999999999989 "$node_(9) on"
-$ns_ at 219.99999999999989 "$node_(10) on"
-$ns_ at 220.09999999999988 "$node_(1) off"
-$ns_ at 220.09999999999988 "$node_(27) off"
-$ns_ at 220.09999999999988 "$node_(28) off"
-$ns_ at 227.09999999999988 "$node_(1) on"
-$ns_ at 227.09999999999988 "$node_(27) on"
-$ns_ at 227.09999999999988 "$node_(28) on"
-$ns_ at 227.19999999999987 "$node_(11) off"
-$ns_ at 227.19999999999987 "$node_(5) off"
-$ns_ at 227.19999999999987 "$node_(29) off"
-$ns_ at 234.19999999999987 "$node_(11) on"
-$ns_ at 234.19999999999987 "$node_(5) on"
-$ns_ at 234.19999999999987 "$node_(29) on"
-$ns_ at 234.29999999999987 "$node_(4) off"
-$ns_ at 234.29999999999987 "$node_(24) off"
-$ns_ at 234.29999999999987 "$node_(9) off"
-$ns_ at 241.29999999999987 "$node_(4) on"
-$ns_ at 241.29999999999987 "$node_(24) on"
-$ns_ at 241.29999999999987 "$node_(9) on"
-$ns_ at 241.39999999999986 "$node_(26) off"
-$ns_ at 241.39999999999986 "$node_(12) off"
-$ns_ at 241.39999999999986 "$node_(27) off"
-$ns_ at 248.39999999999986 "$node_(26) on"
-$ns_ at 248.39999999999986 "$node_(12) on"
-$ns_ at 248.39999999999986 "$node_(27) on"
-$ns_ at 248.49999999999986 "$node_(26) off"
-$ns_ at 248.49999999999986 "$node_(17) off"
-$ns_ at 248.49999999999986 "$node_(29) off"
-$ns_ at 255.49999999999986 "$node_(26) on"
-$ns_ at 255.49999999999986 "$node_(17) on"
-$ns_ at 255.49999999999986 "$node_(29) on"
-$ns_ at 255.59999999999985 "$node_(1) off"
-$ns_ at 255.59999999999985 "$node_(2) off"
-$ns_ at 255.59999999999985 "$node_(16) off"
-$ns_ at 262.59999999999985 "$node_(1) on"
-$ns_ at 262.59999999999985 "$node_(2) on"
-$ns_ at 262.59999999999985 "$node_(16) on"
-$ns_ at 262.69999999999987 "$node_(1) off"
-$ns_ at 262.69999999999987 "$node_(27) off"
-$ns_ at 262.69999999999987 "$node_(5) off"
-$ns_ at 269.69999999999987 "$node_(1) on"
-$ns_ at 269.69999999999987 "$node_(27) on"
-$ns_ at 269.69999999999987 "$node_(5) on"
-$ns_ at 269.7999999999999 "$node_(26) off"
-$ns_ at 269.7999999999999 "$node_(12) off"
-$ns_ at 269.7999999999999 "$node_(15) off"
-$ns_ at 276.7999999999999 "$node_(26) on"
-$ns_ at 276.7999999999999 "$node_(12) on"
-$ns_ at 276.7999999999999 "$node_(15) on"
-$ns_ at 276.89999999999992 "$node_(11) off"
-$ns_ at 276.89999999999992 "$node_(16) off"
-$ns_ at 276.89999999999992 "$node_(12) off"
-$ns_ at 283.89999999999992 "$node_(11) on"
-$ns_ at 283.89999999999992 "$node_(16) on"
-$ns_ at 283.89999999999992 "$node_(12) on"
-$ns_ at 283.99999999999994 "$node_(1) off"
-$ns_ at 283.99999999999994 "$node_(22) off"
-$ns_ at 283.99999999999994 "$node_(27) off"
-$ns_ at 290.99999999999994 "$node_(1) on"
-$ns_ at 290.99999999999994 "$node_(22) on"
-$ns_ at 290.99999999999994 "$node_(27) on"
-$ns_ at 291.09999999999997 "$node_(26) off"
-$ns_ at 291.09999999999997 "$node_(14) off"
-$ns_ at 291.09999999999997 "$node_(16) off"
-$ns_ at 298.09999999999997 "$node_(26) on"
-$ns_ at 298.09999999999997 "$node_(14) on"
-$ns_ at 298.09999999999997 "$node_(16) on"
-$ns_ at 298.19999999999999 "$node_(4) off"
-$ns_ at 298.19999999999999 "$node_(9) off"
-$ns_ at 298.19999999999999 "$node_(17) off"
-$ns_ at 305.19999999999999 "$node_(4) on"
-$ns_ at 305.19999999999999 "$node_(9) on"
-$ns_ at 305.19999999999999 "$node_(17) on"
-$ns_ at 305.30000000000001 "$node_(4) off"
-$ns_ at 305.30000000000001 "$node_(25) off"
-$ns_ at 305.30000000000001 "$node_(13) off"
-$ns_ at 312.30000000000001 "$node_(4) on"
-$ns_ at 312.30000000000001 "$node_(25) on"
-$ns_ at 312.30000000000001 "$node_(13) on"
-$ns_ at 312.40000000000003 "$node_(26) off"
-$ns_ at 312.40000000000003 "$node_(22) off"
-$ns_ at 312.40000000000003 "$node_(18) off"
-$ns_ at 319.40000000000003 "$node_(26) on"
-$ns_ at 319.40000000000003 "$node_(22) on"
-$ns_ at 319.40000000000003 "$node_(18) on"
-$ns_ at 319.50000000000006 "$node_(4) off"
-$ns_ at 319.50000000000006 "$node_(20) off"
-$ns_ at 319.50000000000006 "$node_(28) off"
-$ns_ at 326.50000000000006 "$node_(4) on"
-$ns_ at 326.50000000000006 "$node_(20) on"
-$ns_ at 326.50000000000006 "$node_(28) on"
-$ns_ at 326.60000000000008 "$node_(11) off"
-$ns_ at 326.60000000000008 "$node_(24) off"
-$ns_ at 326.60000000000008 "$node_(18) off"
-$ns_ at 333.60000000000008 "$node_(11) on"
-$ns_ at 333.60000000000008 "$node_(24) on"
-$ns_ at 333.60000000000008 "$node_(18) on"
-$ns_ at 333.7000000000001 "$node_(4) off"
-$ns_ at 333.7000000000001 "$node_(15) off"
-$ns_ at 333.7000000000001 "$node_(17) off"
-$ns_ at 340.7000000000001 "$node_(4) on"
-$ns_ at 340.7000000000001 "$node_(15) on"
-$ns_ at 340.7000000000001 "$node_(17) on"
-$ns_ at 340.80000000000013 "$node_(11) off"
-$ns_ at 340.80000000000013 "$node_(9) off"
-$ns_ at 340.80000000000013 "$node_(10) off"
-$ns_ at 347.80000000000013 "$node_(11) on"
-$ns_ at 347.80000000000013 "$node_(9) on"
-$ns_ at 347.80000000000013 "$node_(10) on"
-$ns_ at 347.90000000000015 "$node_(4) off"
-$ns_ at 347.90000000000015 "$node_(17) off"
-$ns_ at 347.90000000000015 "$node_(20) off"
-$ns_ at 354.90000000000015 "$node_(4) on"
-$ns_ at 354.90000000000015 "$node_(17) on"
-$ns_ at 354.90000000000015 "$node_(20) on"
-$ns_ at 355.00000000000017 "$node_(4) off"
-$ns_ at 355.00000000000017 "$node_(27) off"
-$ns_ at 355.00000000000017 "$node_(28) off"
-$ns_ at 362.00000000000017 "$node_(4) on"
-$ns_ at 362.00000000000017 "$node_(27) on"
-$ns_ at 362.00000000000017 "$node_(28) on"
-$ns_ at 362.10000000000019 "$node_(26) off"
-$ns_ at 362.10000000000019 "$node_(22) off"
-$ns_ at 362.10000000000019 "$node_(17) off"
-$ns_ at 369.10000000000019 "$node_(26) on"
-$ns_ at 369.10000000000019 "$node_(22) on"
-$ns_ at 369.10000000000019 "$node_(17) on"
-$ns_ at 369.20000000000022 "$node_(4) off"
-$ns_ at 369.20000000000022 "$node_(6) off"
-$ns_ at 369.20000000000022 "$node_(29) off"
-$ns_ at 376.20000000000022 "$node_(4) on"
-$ns_ at 376.20000000000022 "$node_(6) on"
-$ns_ at 376.20000000000022 "$node_(29) on"
-$ns_ at 376.30000000000024 "$node_(26) off"
-$ns_ at 376.30000000000024 "$node_(13) off"
-$ns_ at 376.30000000000024 "$node_(15) off"
-$ns_ at 383.30000000000024 "$node_(26) on"
-$ns_ at 383.30000000000024 "$node_(13) on"
-$ns_ at 383.30000000000024 "$node_(15) on"
-$ns_ at 383.40000000000026 "$node_(1) off"
-$ns_ at 383.40000000000026 "$node_(2) off"
-$ns_ at 383.40000000000026 "$node_(12) off"
-$ns_ at 390.40000000000026 "$node_(1) on"
-$ns_ at 390.40000000000026 "$node_(2) on"
-$ns_ at 390.40000000000026 "$node_(12) on"
-$ns_ at 390.50000000000028 "$node_(1) off"
-$ns_ at 390.50000000000028 "$node_(28) off"
-$ns_ at 390.50000000000028 "$node_(12) off"
-$ns_ at 397.50000000000028 "$node_(1) on"
-$ns_ at 397.50000000000028 "$node_(28) on"
-$ns_ at 397.50000000000028 "$node_(12) on"
-$ns_ at 397.60000000000031 "$node_(11) off"
-$ns_ at 397.60000000000031 "$node_(24) off"
-$ns_ at 397.60000000000031 "$node_(27) off"
-$ns_ at 404.60000000000031 "$node_(11) on"
-$ns_ at 404.60000000000031 "$node_(24) on"
-$ns_ at 404.60000000000031 "$node_(27) on"
-$ns_ at 404.70000000000033 "$node_(4) off"
-$ns_ at 404.70000000000033 "$node_(24) off"
-$ns_ at 404.70000000000033 "$node_(14) off"
-$ns_ at 411.70000000000033 "$node_(4) on"
-$ns_ at 411.70000000000033 "$node_(24) on"
-$ns_ at 411.70000000000033 "$node_(14) on"
-$ns_ at 411.80000000000035 "$node_(26) off"
-$ns_ at 411.80000000000035 "$node_(6) off"
-$ns_ at 411.80000000000035 "$node_(25) off"
-$ns_ at 418.80000000000035 "$node_(26) on"
-$ns_ at 418.80000000000035 "$node_(6) on"
-$ns_ at 418.80000000000035 "$node_(25) on"
-$ns_ at 418.90000000000038 "$node_(4) off"
-$ns_ at 418.90000000000038 "$node_(25) off"
-$ns_ at 418.90000000000038 "$node_(24) off"
-$ns_ at 425.90000000000038 "$node_(4) on"
-$ns_ at 425.90000000000038 "$node_(25) on"
-$ns_ at 425.90000000000038 "$node_(24) on"
-$ns_ at 426.0000000000004 "$node_(1) off"
-$ns_ at 426.0000000000004 "$node_(10) off"
-$ns_ at 426.0000000000004 "$node_(22) off"
-$ns_ at 433.0000000000004 "$node_(1) on"
-$ns_ at 433.0000000000004 "$node_(10) on"
-$ns_ at 433.0000000000004 "$node_(22) on"
-$ns_ at 433.10000000000042 "$node_(26) off"
-$ns_ at 433.10000000000042 "$node_(17) off"
-$ns_ at 433.10000000000042 "$node_(25) off"
-$ns_ at 440.10000000000042 "$node_(26) on"
-$ns_ at 440.10000000000042 "$node_(17) on"
-$ns_ at 440.10000000000042 "$node_(25) on"
-$ns_ at 440.20000000000044 "$node_(4) off"
-$ns_ at 440.20000000000044 "$node_(12) off"
-$ns_ at 440.20000000000044 "$node_(9) off"
-$ns_ at 447.20000000000044 "$node_(4) on"
-$ns_ at 447.20000000000044 "$node_(12) on"
-$ns_ at 447.20000000000044 "$node_(9) on"
-$ns_ at 447.30000000000047 "$node_(4) off"
-$ns_ at 447.30000000000047 "$node_(2) off"
-$ns_ at 447.30000000000047 "$node_(17) off"
-$ns_ at 454.30000000000047 "$node_(4) on"
-$ns_ at 454.30000000000047 "$node_(2) on"
-$ns_ at 454.30000000000047 "$node_(17) on"
-$ns_ at 454.40000000000049 "$node_(4) off"
-$ns_ at 454.40000000000049 "$node_(24) off"
-$ns_ at 454.40000000000049 "$node_(27) off"
-$ns_ at 461.40000000000049 "$node_(4) on"
-$ns_ at 461.40000000000049 "$node_(24) on"
-$ns_ at 461.40000000000049 "$node_(27) on"
-$ns_ at 461.50000000000051 "$node_(26) off"
-$ns_ at 461.50000000000051 "$node_(10) off"
-$ns_ at 461.50000000000051 "$node_(24) off"
-$ns_ at 468.50000000000051 "$node_(26) on"
-$ns_ at 468.50000000000051 "$node_(10) on"
-$ns_ at 468.50000000000051 "$node_(24) on"
-$ns_ at 468.60000000000053 "$node_(4) off"
-$ns_ at 468.60000000000053 "$node_(14) off"
-$ns_ at 468.60000000000053 "$node_(9) off"
-$ns_ at 475.60000000000053 "$node_(4) on"
-$ns_ at 475.60000000000053 "$node_(14) on"
-$ns_ at 475.60000000000053 "$node_(9) on"
-$ns_ at 475.70000000000056 "$node_(1) off"
-$ns_ at 475.70000000000056 "$node_(5) off"
-$ns_ at 475.70000000000056 "$node_(15) off"
-$ns_ at 482.70000000000056 "$node_(1) on"
-$ns_ at 482.70000000000056 "$node_(5) on"
-$ns_ at 482.70000000000056 "$node_(15) on"
-$ns_ at 482.80000000000058 "$node_(11) off"
-$ns_ at 482.80000000000058 "$node_(24) off"
-$ns_ at 482.80000000000058 "$node_(13) off"
-$ns_ at 489.80000000000058 "$node_(11) on"
-$ns_ at 489.80000000000058 "$node_(24) on"
-$ns_ at 489.80000000000058 "$node_(13) on"
-$ns_ at 489.9000000000006 "$node_(11) off"
-$ns_ at 489.9000000000006 "$node_(28) off"
-$ns_ at 489.9000000000006 "$node_(20) off"
-$ns_ at 496.9000000000006 "$node_(11) on"
-$ns_ at 496.9000000000006 "$node_(28) on"
-$ns_ at 496.9000000000006 "$node_(20) on"
-$ns_ at 497.00000000000063 "$node_(1) off"
-$ns_ at 497.00000000000063 "$node_(17) off"
-$ns_ at 497.00000000000063 "$node_(28) off"
-$ns_ at 504.00000000000063 "$node_(1) on"
-$ns_ at 504.00000000000063 "$node_(17) on"
-$ns_ at 504.00000000000063 "$node_(28) on"
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/ontimecdf ns-allinone-2.34-qjump/ns-2.34/tcl/test/ontimecdf
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/ontimecdf	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/ontimecdf	1970-01-01 01:00:00.000000000 +0100
@@ -1,51 +0,0 @@
-1e-06 11 5.83155e-06
-2e-06 432 0.000229021
-3e-06 2001 0.00106081
-4e-06 5381 0.00285269
-5e-06 8872 0.00470341
-6e-06 10534 0.00558451
-7e-06 11135 0.00590312
-8e-06 12327 0.00653505
-9e-06 19621 0.0104019
-1e-05 30948 0.0164068
-1.1e-05 42574 0.0225702
-1.2e-05 59162 0.0313642
-1.3e-05 80391 0.0426186
-1.4e-05 95347 0.0505474
-1.5e-05 101321 0.0537144
-1.6e-05 104086 0.0551803
-1.7e-05 107238 0.0568513
-1.8e-05 114220 0.0605527
-1.9e-05 126732 0.0671859
-2e-05 147632 0.0782658
-2.1e-05 180224 0.0955442
-2.2e-05 219678 0.11646
-2.3e-05 270304 0.143299
-2.4e-05 337336 0.178836
-2.5e-05 417354 0.221257
-2.6e-05 499252 0.264674
-2.7e-05 586479 0.310917
-2.8e-05 684495 0.362879
-2.9e-05 785563 0.416459
-3e-05 885006 0.469178
-3.1e-05 980882 0.520006
-3.2e-05 1074679 0.569732
-3.3e-05 1175110 0.622974
-3.4e-05 1287984 0.682813
-3.5e-05 1411461 0.748274
-3.6e-05 1535162 0.813853
-3.7e-05 1640750 0.869829
-3.8e-05 1716344 0.909905
-3.9e-05 1763986 0.935162
-4e-05 1793369 0.950739
-4.1e-05 1811900 0.960563
-4.2e-05 1824321 0.967148
-4.3e-05 1833258 0.971886
-4.4e-05 1840326 0.975633
-4.5e-05 1846438 0.978873
-4.6e-05 1852028 0.981836
-4.7e-05 1857764 0.984877
-4.8e-05 1863759 0.988055
-4.9e-05 1870648 0.991708
-5e-05 1878423 0.995829
-5.1e-05 1886290 1
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/pages ns-allinone-2.34-qjump/ns-2.34/tcl/test/pages
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/pages	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/pages	1970-01-01 01:00:00.000000000 +0100
@@ -1,566 +0,0 @@
-/~menswim/	1936	785533019	786760983	786761000	786761049	787366535	787437861	787437951	
-/	1402	784853729	787744452	787744515	787744563	787744618	787746233	787875968	787876001	787892689	
-/~menswim/team-sml.gif	99653	780622818	
-/~menswim/i-sched.gif	368	780622811	787438080	
-/~menswim/i-season.gif	1435	780622812	
-/~menswim/i-coach.gif	1409	780622808	
-/~menswim/i-roster.gif	1302	780622811	
-/~menswim/i-capt.gif	1206	780622808	
-/~menswim/i-watch.gif	1686	780622813	
-/images/Ihcs.gif	637	784852413	784853840	
-/images/hcsmast.gif	2658	784852413	784853842	
-/images/Isig.gif	525	784852413	784853840	
-/images/Ipubs.gif	393	784852413	784853840	
-/images/Inews.gif	385	784852413	784853840	
-/~menswim/i-record.gif	1437	780622810	
-/images/Idocs.gif	489	784852413	784853840	
-/~menswim/i-top10.gif	1788	780622812	
-/images/Iweb.gif	686	784852413	784853840	
-/images/Chcs.gif	191	784852413	784853840	
-/images/Csig.gif	226	784852413	784853840	
-/images/Cweb.gif	225	784852413	784853840	
-/images/Cnews.gif	239	784852413	784853840	
-/images/Cpubs.gif	199	784852413	784853840	
-/~menswim/i-east.gif	1713	780622809	
-/~menswim/i-ncaa.gif	1748	780622810	
-/images/Cdocs.gif	189	784852413	784853840	
-/~menswim/i-allam.gif	1287	780622807	
-/~menswim/i-93-94.gif	1418	780622807	
-/~menswim/i-92-93.gif	1409	780622806	
-/~menswim/i-harv.gif	1571	780622810	
-/~menswim/i-this.gif	1555	780622812	
-/~menswim/i-blodg.gif	1457	780622808	
-/Iweb.gif	686	784853840	
-/Ipubs.gif	393	784853840	
-/Inews.gif	385	784853840	
-/Ihcs.gif	637	784853840	
-/Isig.gif	525	784853840	
-/Idocs.gif	489	784853840	
-/webservice.html	1498	786178287	787745682	787875645	787875797	787875828	787892905	
-/~perspy/	3856	786274378	786329496	786391298	786391445	786419275	786419337	786576330	786576362	786680144	787307978	787309629	787386131	787386625	787386691	787386723	787387058	787387751	787514590	787865682	787865968	787866751	787867090	787889764	787916310	787918701	787919187	
-/~hnmun/	2445	784705417	787913258	
-/~menswim/index.html	1936	785533019	786760983	786761049	787366484	787366535	787437951	
-/pubs.html	1088	781834408	787562722	787566038	787566210	787566700	787567094	787738398	787745595	787786078	787874171	787875571	787877590	
-/services/studorgs.html	1772	786311918	787280631	
-/~advocate/	2476	785479515	
-/HCR/index.html	192	783073436	786625095	786625139	787877290	
-/Bup.gif	91	777566224	
-/~hruc/	1103	783581828	786316532	786316876	786317185	786317244	786336765	786955174	
-/Bprev.gif	91	777566132	
-/~advocate/seal2.gif	9842	781125932	
-/~hrhillel/	2724	786177344	786338094	786353865	786354265	786489951	786588587	786694383	786744018	786744503	786950733	787548472	
-/~menswim/schedule.html	1701	786209981	786516346	787449435	
-/Bnext.gif	92	777566278	
-/~menswim/links.html	950	786210379	786728183	786728454	786728483	786730168	786758759	786862343	786862379	786863140	
-/~hruc/uc2.gif	3062	783544847	
-/images/advocate.gif	1449	784881669	
-/images/perspy.gif	1730	786311485	
-/images/hrbdc.gif	1798	786202221	
-/images/stahr.gif	1372	784881666	
-/images/menswim.gif	1799	784881672	
-/images/iop.gif	1173	784881670	
-/images/hnmun.gif	1584	784881673	786839737	
-/images/dins.gif	2781	786178939	
-/images/hruc.gif	1350	784881671	
-/images/husn.gif	3090	784945706	
-/HCR/hcrmast.gif	2180	766863566	
-/~perspy/top.gif	11020	786272186	
-/~hruc/news.gif	2006	783545882	
-/~hruc/memb.gif	2047	783545880	
-/~hruc/mins.gif	2010	783545881	
-/~hruc/const.gif	2059	783545879	
-/~hruc/agenda.gif	1999	783545878	
-/~menswim/topfive.html	3749	786210287	
-/~hruc/uclitt.gif	1257	783486332	
-/~hrbdc/	1023	786083635	786867555	786867570	786867587	786869057	
-/docs.html	1046	785736131	786727153	786859908	787745876	787875041	787875673	787892209	
-/~menswim/roster.html	3226	786210098	
-/~menswim/meets/invite.html	2314	786158417	786516430	786516480	786516572	786516700	786516733	786516807	786516995	786517040	786517098	786517115	786517139	786517146	786517203	786517264	787449719	787449743	787449756	
-/~menswim/watch.html	10990	786210131	
-/sigs.html	1318	784582466	787745787	
-/~hub/	672	780637289	787376307	787377529	787377584	787377756	787377780	787378033	787378923	787455465	787648320	787648571	787648643	787648779	787648804	787649593	787786439	787786512	787786638	787786691	787786822	787787178	787787220	787787278	787787335	787787455	787787494	787787529	
-/~menswim/team-big.gif	357307	780622817	
-/~dlopez/	1665	786235639	786746170	787115941	787442277	787442327	787442341	
-/~crimson/news.html	3694	786271332	787014198	787014266	787015005	787015059	787015130	787015245	787015300	787015381	787015437	787016550	787016576	787098719	787098838	787099051	787099548	787695552	787780877	787780987	787781150	787781198	787781239	787781306	787781326	787781365	787782256	787782293	787782682	787782775	787782947	787791270	787791360	787791400	787791552	787893454	787893536	787899858	787899946	
-/intro.html	1436	784351703	786898763	
-/mindex.html	2317	783454815	787890241	787890389	787890821	787890911	787890953	787891056	787891433	787891463	787891511	787892739	787893050	
-/compharv/index.html	209	781683567	787892321	
-/~menswim/captains.html	3125	786210114	
-/~hrbdc/banner.gif	34067	786077393	787190055	
-/news/news.html	1156	784351766	
-/~dlopez/dal7.gif	11530	784010411	
-/~hrhillel/listserv.html	2990	786173883	786488671	786489696	786489738	786770034	786950195	786950633	787009736	787009874	787548114	787606690	787700773	787904643	
-/webteam.html	527	782770553	787874447	
-/~menswim/blodgett.html	1117	786210344	
-/~stahr/	1176	783460149	
-/~perspy/sites.html	2483	786176861	786510780	786572581	786572658	786572686	786572899	786573097	786573151	786573184	786573210	786573309	786573398	786573518	786573586	786573661	786573697	786573709	786574676	
-/~hnmun/links.html	1759	785901343	
-/HCR/	192	783073436	786625139	787877243	787877290	
-/~dlopez/bomb2.gif	615	783146505	
-/~menswim/records.html	1505	786210158	
-/~menswim/esway.gif	32768	780622806	
-/~menswim/carver.gif	31528	780622805	
-/~hrhillel/menu.html	654	786087541	786488977	786588462	786694453	786769985	786872680	786950070	786950825	787009605	787269456	787285737	787548043	787606146	787798770	787904589	
-/index.html	1402	784853729	787744618	787746151	787746175	787746214	787746233	787876001	787892689	
-/HCR/94oct20/index.html	1534	783073301	787741637	
-/~dins/	1027	786140031	787639887	
-/~crimson/	1436	785629703	787703350	787703386	
-/~menswim/outlook.html	5676	786210052	
-/~menswim/about.html	1988	786210354	786344072	786344104	786344135	787449921	
-/~advocate/summer94/uncle.html	1354	781126865	
-/sigs/gho.html	3018	785735220	
-/%7Eadvocate/	2476	785479515	
-/home/eekim.html	2362	785284738	
-/~iop/	695	786070512	
-/~menswim/blodgett.gif	95535	780622804	
-/~crimson/issue.html	1000	786270828	787014069	787014613	787014794	787014821	787782024	
-/~osterber/	266	781110624	
-/~menswim/topten.html	2794	786210182	
-/~dins/spnhd.gif	2425	786001539	
-/~stahr/images/stahr_icon.gif	546	776402557	
-/~stahr/images/net_astro_icon.gif	466	775878673	
-/~stahr/images/dome_icon.gif	403	775803806	
-/~hrhillel/post.html	3699	786175994	786353558	786354691	786489179	786588445	786694437	787009343	787285711	787606377	787812603	
-/~hnmun/tasum.html	42863	784116528	
-/uc.html	594	777565470	787891648	787891678	
-/HCR/94oct20/chicago/chicago.html	9801	783207220	787740975	
-/~stahr/images/stars_icon.gif	156	775880351	
-/~stahr/images/stahr_logo_2.gif	5559	783370632	
-/~stahr/images/astrobook_icon.gif	464	775879788	
-/~menswim/ncaa.html	1068	786210236	
-/~stahr/images/harvard_icon.gif	2063	775803458	
-/~hnmun/specpol.html	3184	783334697	
-/~hnmun/overview.html	8956	786076882	787912864	788023345	788023545	788023677	788129079	788171136	788171217	
-/HCR/94oct20/chicago/buttons1.gif	1005	783069364	
-/~menswim/coaches.html	4221	786210083	
-/~menswim/allam.html	6158	786210257	
-/~hnmun/staff.html	3083	784022450	786330544	
-/general_info/membership.html	2278	780555043	787877046	
-/HCR/94oct20/chicago/startup2.gif	15112	783069364	
-/HCR/94oct20/chicago/resizer1.gif	867	783069365	
-/~iop/iop1.gif	30399	784580805	
-/~hrbdc/links.html	1249	786229125	786869196	786869260	786996897	786996919	786996999	
-/HCR/94oct20/doom.html	5771	783069366	787741542	
-/~dlopez/links.html	15977	784767968	787114418	787114850	787115009	787115024	787116258	787389665	787389700	787390273	787390337	787390477	
-/~dins/index.html	1027	786140031	787639887	
-/~menswim/ab-harv.html	3003	786210331	
-/~hrbdc/members/	801	786079819	787120538	
-/HCR/94oct20/doombox.gif	17369	783069366	
-/HCR/94oct20/doomscrn.gif	71034	783069367	
-/~hnmun/staffpages/vessey.html	3875	785912996	
-/images/Bup.gif	91	777566224	
-/images/Bnext.gif	92	777566278	
-/HCR/94oct20/doomsday.html	6313	783072005	787741571	787743109	
-/HCR/94oct20/doomsday.gif	69141	783069367	
-/~hrhillel/election.html	866	785545981	786588493	786950884	787548026	787605896	787619806	787700662	787861190	
-/images/Bprev.gif	91	777566132	
-/~crimson/construction.gif	291	785108604	
-/search.html	188	783454920	787899321	787899344	787899421	
-/~menswim/keith.gif	48029	780622813	
-/~menswim/flocco.gif	38719	780622806	
-/~stahr/images/homepage_icon.gif	3670	775803460	
-/~menswim/mike.gif	43424	780622814	
-/~dins/uc.html	266	786001790	
-/~advocate/summer94/nocturne.html	27268	781126956	
-/~advocate/advocate.html	2476	785479515	
-/%7Emenswim/	1936	785533019	786761049	787366535	787437951	
-/~dins/rost.html	646	786138369	
-/home/lakers2.gif	255	785286002	
-/home/eekpic.gif	575	783284720	
-/compharv/cahcov_small.gif	19291	781682908	
-/HCR/94oct20/warp.html	14431	783073365	787740909	
-/%7Emenswim/team-sml.gif	99653	780622818	
-/~crimson/sports.html	1900	786094038	787099192	787788451	787789303	787789949	787894176	787900032	787900055	787900130	787900175	787900228	
-/~hrbdc/nl/	378	786048113	
-/~hrbdc/announce/	372	786230747	787906137	787906215	
-/~crimson/wrldnews.html	651	785611376	787790764	787790779	787893806	
-/~crimson/letedit.html	3476	785630212	787786137	787898311	787900406	787900449	
-/~crimson/index.html	1436	785629703	787703386	
-/~crimson/feature.html	10887	785611375	787785918	787785949	787893983	787894028	787902275	
-/restricted/phd.html	11107	785396639	787816615	
-/~perspy/staff.html	1773	786273666	786347473	786347556	786347585	786347620	786347770	786347889	787309394	787309459	
-/~crimson/world.gif	1042	785611352	
-/~crimson/editorl.html	815	785611375	787786475	787786506	787786632	787786668	787786697	787900613	
-/~crimson/calligra.gif	933	785611351	
-/~advocate/summer94/modest.html	2524	784967134	
-/general_info/server.html	528	781685622	787893312	787893355	
-/general_info/about.html	889	781685245	787877535	787893205	
-/%7Emenswim/i-sched.gif	368	780622811	787438080	
-/%7Emenswim/i-coach.gif	1409	780622808	
-/~hrhillel/candles.html	897	786087443	786488761	787009676	787605826	787766339	
-/~crimson/sun.gif	901	785611352	
-/~crimson/mailbox.gif	902	785611352	
-/~crimson/football.gif	974	785611352	
-/general_info/help.html	2162	777584157	787876725	787876771	787876830	787893491	787898411	
-/%7Emenswim/i-season.gif	1435	780622812	
-/%7Emenswim/i-roster.gif	1302	780622811	
-/%7Emenswim/i-capt.gif	1206	780622808	
-/~stafford/	645	781832611	
-/%7Emenswim/i-watch.gif	1686	780622813	
-/%7Emenswim/i-top10.gif	1788	780622812	
-/%7Emenswim/i-this.gif	1555	780622812	
-/%7Emenswim/i-record.gif	1437	780622810	
-/%7Emenswim/i-ncaa.gif	1748	780622810	
-/%7Emenswim/i-harv.gif	1571	780622810	
-/%7Emenswim/i-east.gif	1713	780622809	
-/%7Emenswim/i-blodg.gif	1457	780622808	
-/%7Emenswim/i-93-94.gif	1418	780622807	
-/%7Emenswim/i-92-93.gif	1409	780622806	
-/%7Emenswim/i-allam.gif	1287	780622807	
-/sigs/lecture.html	1405	784764593	
-/icons/text.xbm	527	758260397	
-/HCR/apr14/index.html	1403	781025099	787742449	
-/~perspy/nov94/prop187.html	9782	786242096	786447129	786575057	786575124	
-/~menswim/easterns.html	2593	786210221	
-/~iop/events.html	1047	786071051	
-/~dins/desc.html	1697	786134967	
-/icons/back.xbm	506	758260385	
-/~menswim/93-94.html	677	786210307	
-/~dins/aud.html	745	786139667	
-/~advocate/summer94/scribler.html	5208	781475747	
-/news/changes.html	358	784351861	
-/documentation/constitution.html	7406	784239640	786859670	
-/~stahr/info/info.html	704	779567472	
-/~stahr/images/button1.gif	86	776059718	
-/~menswim/not-avail.html	298	786210411	
-/~iop/index.html	695	786070512	
-/~hnmun/appinfo.html	1484	784705381	787701412	
-/~advocate/submit.html	2077	781128132	
-/sigs/minsky_small.gif	7696	783931915	
-/sigs/bmandel_small.gif	6415	783931914	
-/HCR/may12/index.html	1104	781024221	787742766	
-/~stahr/sky/sky.html	128	776061376	
-/~iop/construct.html	73	784589805	
-/~hrbdc/nl/nl0994.ps	49152	786037266	
-/~dins/quest.html	376	786138763	
-/~advocate/summer94/poems.html	25332	781126976	
-/~advocate/summer94/kaufmann.html	9589	781126942	
-/~menswim/meets/columbia.html	4551	785282261	787449617	787449636	
-/~hrbdc/logo48x60.gif	2280	786181053	
-/~hrbdc/documents/	468	786081037	786869315	
-/home/csepulv.html	496	782706673	
-/~menswim/comments.html	1077	782274976	
-/icons/image.xbm	509	758292467	
-/general_info/reach.html	741	781685435	787893520	
-/HCR/94oct20/chicago/desktop1.html	3109	783478392	
-/~hnmun/index.html	2445	784705417	787913258	
-/~dlopez/temp/trekmov.html	504	784013460	787741403	787741423	
-/~crimson/staff.html	200	785630259	
-/news/calendar.html	1664	785735640	786658314	787177059	
-/comments.html	1401	785973083	787717228	787811662	787816135	
-/HCR/94oct20/frompres.html	1726	783072510	787740852	
-/~stahr/lmo/lmo.html	1535	780891138	
-/~menswim/meets/invite/day1/trials.html	26388	786155669	786401487	786422801	
-/~menswim/meets/invite/day1/psych.html	20511	786155646	786335342	
-/~menswim/meets/army.html	4941	785384325	787449672	
-/~iop/studygroups.html	2356	784673188	
-/~crimson/aboutthc.html	1368	785630074	
-/~advocate/summer94/acts.html	874	781126925	
-/HCR/94oct20/chicago/nethood1.gif	4531	783069364	
-/HCR/94oct20/chicago/mycomp2.gif	9679	783069364	
-/HCR/94oct20/chicago/mycomp1.gif	6202	783069364	
-/HCR/94oct20/WORMs.html	8131	783069363	787741272	
-/%7Ehnmun/	2445	784705417	787913258	
-/~stahr/stahr/stahr.html	904	779496962	
-/~menswim/meets/intersquad.html	2277	785226013	787449570	
-/~husn/	864	784861796	
-/~hnmun/comments.html	1102	784702454	788129106	
-/~advocate/summer94/notes.html	1405	781126964	
-/documentation/bylaws.html	987	784239757	
-/~stahr/internet/internet.html	1750	780877803	
-/~stahr/harvard/harvard.html	812	783366082	
-/~menswim/93-94/roster.html	3657	780622078	
-/~iop/whatis.html	1298	784600070	
-/~iop/committees.html	2542	786069583	
-/~hnmun/staffpages/shetty.html	2083	784054148	
-/~crimson/aboutfm.html	822	785629990	
-/~advocate/exec.html	1049	781126120	
-/news/94sep25.html	883	780555000	
-/help.html	264	781685729	
-/HCR/94oct20/hascs.html	6746	783069367	787741604	
-/~stahr/index.html	1176	783460149	
-/~stahr/images/lmo1.gif	41967	780891165	
-/~perspy/nov94/soph.html	10597	786243412	786447097	
-/~perspy/comments.html	1514	786222063	787918507	
-/~iop/coolpeople.html	933	786070368	
-/~crimson/advert.html	321	785630099	
-/~advocate/subscribe.html	724	781131045	
-/compharv/ch1.html	4119	781154407	
-/HCR/apr14/apr14lnx.html	6075	781025285	787742212	
-/HCR/94oct20/rcd.gif	27554	783069367	
-/~stahr/info/faq.html	3883	779566397	
-/~stahr/images/stahr_logo_s.gif	1680	776059311	
-/~menswim/93-94/top-5.html	1531	780633950	
-/~hnmun/staffpages/saul.html	570	783334566	
-/~dlopez/temp/map/testmap.html	73	783410453	
-/~crimson/subscrip.html	426	785563960	
-/~crimson/comments.html	1181	785629883	
-/~advocate/summer94/truth.html	1306	781126991	
-/services/html-guide/html.html	963	780004351	
-/compharv/intro.html	3361	781683974	
-/%7Emenswim/team-big.gif	357307	780622817	
-/~stahr/stahr/calendar.html	921	783365731	
-/~stahr/images/shield2.gif	7189	775317658	
-/~menswim/meets/invite/day2/trials.html	35506	786155979	786478251	
-/~menswim/93-94/honors.html	1143	782259911	
-/~hnmun/staffpages/helsinger.html	2884	786080056	787391921	
-/~hcr/94oct20/doomscrn.gif	71034	783069367	
-/~hcr/94oct20/doombox.gif	17369	783069366	
-/~hcr/94oct20/chicago/startup2.gif	15112	783069364	
-/~dlopez/temp/restricted/classified.html	19	786235572	
-/services/html-guide/elements/books.gif	7413	777451762	
-/compharv/cahcov.gif	261683	781565930	
-/~stahr/members/kobayashi.html	643	780876642	
-/~menswim/93-94/schedule.html	1289	780633523	
-/~jus/	714	784701861	
-/~hnmun/regform.html	1037	784101809	
-/~dlopez/temp/map/report6.gif	83932	783410386	
-/sigs/naggum1.html	1483	784765039	
-/sigs/minsky.gif	89104	783042357	
-/compharv/part1.html	750	781384209	
-/HCR/94oct20/credits.html	567	783072798	
-/HCR/94oct20/chicago/menus1.html	2143	783207554	
-/HCR/94oct20/cat.html	4147	783069363	787741318	
-/%7Emenswim/watch.html	10990	786210131	
-/%7Emenswim/index.html	1936	785533019	786761049	787366535	787437951	
-/%7Eadvocate/seal2.gif	9842	781125932	
-/~stahr/members/index.html	659	783365869	
-/~menswim/meets/invite/day2/finals.html	41113	786155989	786510382	
-/~hcr/hcrback.gif	1361	766863505	
-/~hcr/background.html	1184	781855420	
-/services/html-guide/elements/shelf.gif	1672	777533954	
-/members/eekim/	2362	785284738	
-/compharv/table.html	1228	781384734	
-/compharv/part2.html	883	781384331	
-/compharv/ch2.html	18163	782616665	
-/compharv/ch10.html	4709	781220076	
-/HCR/may12/x.html	9877	781024355	787742807	
-/HCR/may12/digim.html	7516	781024278	787742596	
-/HCR/may12/cpsr.html	3954	781024266	787742548	
-/HCR/background.html	1184	781855420	
-/HCR/94oct20/chicago/menus1.gif	4579	783069364	
-/HCR/94oct20/chicago/control1.gif	12002	783069364	
-/HCR/94oct20/	1544	783073301	
-/%7Emenswim/links.html	950	786210379	786730168	786758759	786863140	
-/~stahr/stahr/news.html	1655	783365609	
-/~hcr/hcrcred.gif	1232	766863533	
-/~hcr/dosemu.gif	14096	785364165	786606962	
-/~hcr/94oct20/doomsday.gif	69141	783069367	
-/~dlopez/temp/org_template.html	511	783318706	
-/members/eekim/lakers2.gif	255	785286002	
-/members/eekim/eekpic.gif	575	783284720	
-/compharv/ch11.html	13618	781220942	
-/HCR/may12/x.gif	16041	768729819	
-/HCR/may12/excelsior.html	3562	777592226	787742648	
-/HCR/may12/borland.html	3395	781024253	787742511	
-/HCR/hcrback.gif	1361	766863505	
-/HCR/apr14/crime.html	6444	781024783	787742376	
-/HCR/94oct20/warpbg.html	2979	783073235	
-/HCR/94oct20/chicago/chicago1.gif	8615	783069364	
-/HCR/94oct20/chicago/chicago.map	373	783217225	
-/HCR/94oct20/chess.html	4676	783206174	787741496	
-/%7Emenswim/topfive.html	3749	786210287	
-/%7Emenswim/blodgett.html	1117	786210344	
-/%7Emenswim/blodgett.gif	95535	780622804	
-/~stahr/stahr/intro.html	1964	783365287	
-/~stahr/lmo/openhouse.html	932	779566553	
-/~stahr/lmo/classes.html	1392	780877715	
-/~husn/calendar.html	337	784861809	
-/~hrbdc/documents/latin_results.txt	1045	786080724	
-/~hrbdc/documents/dance_archive.txt	6363	786080679	
-/~hcr/94oct20/rcd.gif	27554	783069367	
-/~dlopez/temp/map/first.html	24	783409253	
-/~dlopez/eggs.html	1267	783571442	
-/~advocate/summer94/bishop.html	25681	781126934	
-/sigs/bmandel.gif	71840	783364245	
-/news/94aug22.html	788	780554697	
-/compharv/winlogo.gif	3453	782615190	
-/compharv/ch3.html	49243	781229604	
-/compharv/ch17.html	5509	781383868	
-/compharv/ch15.html	7253	781383119	
-/compharv/ch12.html	5639	781229973	
-/compharv/about.html	1266	781684114	
-/compharv/ColorMac.gif	688	782616352	
-/HCR/may12/inline2.gif	9066	768729556	
-/HCR/may12/inline1.gif	3260	768729556	
-/HCR/may12/hcstidbits.html	2037	781024316	787742742	
-/HCR/may12/gonsalve.gif	62374	768729556	
-/HCR/may12/frompres.html	4156	781024298	787742712	
-/HCR/may12/fcorbett.gif	32639	768729555	
-/HCR/may12/executor.html	6198	777592042	787742681	
-/HCR/may12/ex.gif	8841	768729555	
-/HCR/may12/editor.html	2601	781024288	787742621	
-/HCR/apr14/hsdn.html	19060	781025088	787742429	
-/HCR/apr14/apr14res.html	4782	781025377	787742305	
-/HCR/apr14/apr14qu.html	5596	781025474	787742275	
-/HCR/apr14/apr14mav.html	4979	781025153	787742245	
-/HCR/apr14/apr14dis.html	5430	781025008	787742152	
-/HCR/apr14/apr14cdr2.html	3339	781025737	787742122	
-/HCR/apr14/apr14cdr1.html	3764	781025668	787742096	
-/HCR/apr14/apr14cd.html	3705	781024635	787741744	
-/HCR/94oct20/chicago/programs.html	2222	783071589	
-/HCR/94oct20/chicago/program2.gif	8941	783069365	
-/HCR/94oct20/chicago/program1.gif	14766	783069364	
-/HCR/94oct20/chicago/control1.html	2533	783478577	
-/HCR/94oct20/chessdl.gif	91517	783069364	
-/HCR/94oct20/chesscup.gif	10887	783069363	
-/%7Emenswim/roster.html	3226	786210098	
-/%7Emenswim/outlook.html	5676	786210052	
-/%7Emenswim/captains.html	3125	786210114	
-/%7Emenswim/ab-harv.html	3003	786210331	
-/~stahr/stahr/membership.html	1027	783365767	
-/~hrbdc/documents/ndcaspeeds.txt	779	786080818	
-/~hcr/94oct20/credits.html	566	783072798	787898974	
-/~hcr/94oct20/chessdl.gif	91517	783069364	
-/~hcr/94oct20/chesscup.gif	10887	783069363	
-/~hcr/94may12/x.gif	16041	768729819	
-/~hcr/94may12/screen.gif	8866	768729557	
-/~hcr/94may12/gonsalve.gif	62374	768729556	
-/~hcr/94may12/fcorbett.gif	32639	768729555	
-/~hcr/94may12/ex.gif	8841	768729555	
-/services/html-guide/obsolete.html	2372	780005574	
-/compharv/part3.html	1085	781384372	
-/compharv/ch6.html	7652	781154576	
-/compharv/ch5.html	24697	781384615	
-/compharv/ch4.html	10199	781154522	
-/compharv/ch16.html	17369	781383733	
-/compharv/ch13.html	11720	781230478	
-/compharv/OS2view.gif	37209	782616343	
-/compharv/	209	781683567	787892321	
-/HCR/may12/screen.gif	8866	768729557	
-/HCR/apr14/quicken.gif	35546	766864019	
-/HCR/apr14/quake.gif	93441	766864012	
-/HCR/apr14/maven.gif	2801	766863995	
-/HCR/apr14/letter.gif	11019	766863969	
-/HCR/apr14/jobsear.gif	9013	766863961	
-/HCR/apr14/crime.gif	79167	766863902	
-/HCR/apr14/cdbut.gif	492	766863889	
-/HCR/apr14/at1500bt.html	3304	781025578	787742339	
-/HCR/apr14/apr14ed.html	2477	781024620	787742177	
-/HCR/94oct20/chicago/taskbar1.html	1540	783071644	
-/HCR/94oct20/chicago/mapsubst.html	1475	783071385	
-/HCR/94oct20/chicago/explorer.gif	12324	783069364	
-/%7Estahr/images/stars_icon.gif	156	775880351	
-/%7Estahr/images/stahr_logo_2.gif	5559	783370632	
-/%7Estahr/images/stahr_icon.gif	546	776402557	
-/%7Estahr/images/net_astro_icon.gif	466	775878673	
-/%7Estahr/images/harvard_icon.gif	2063	775803458	
-/%7Estahr/images/dome_icon.gif	403	775803806	
-/%7Estahr/images/astrobook_icon.gif	464	775879788	
-/%7Estahr/	1176	783460149	
-/%7Emenswim/ncaa.html	1068	786210236	
-/%7Emenswim/mike.gif	43424	780622814	
-/%7Emenswim/keith.gif	48029	780622813	
-/%7Emenswim/flocco.gif	38719	780622806	
-/%7Emenswim/esway.gif	47501	780622806	
-/%7Emenswim/easterns.html	2593	786210221	
-/%7Emenswim/coaches.html	4221	786210083	
-/%7Emenswim/carver.gif	31528	780622805	
-/%7Ehnmun/staffpages/vessey.html	3875	785912996	
-/%7Ehcr/hcrtoc.gif	1476	766863589	
-/%7Ehcr/hcrmast.gif	2180	766863566	
-/%7Eadvocate/summer94/scribler.html	5208	781475747	
-/%7Eadvocate/summer94/nocturne.html	27268	781126956	
-/%7Eadvocate/exec.html	1049	781126120	
-/~maa/	23	783577813	
-/~jus-cs/	619	785094500	
-/~hwe/	40	780636993	
-/~hruc/facebook/test.html	1147	783494472	
-/~hcr/may12/x.gif	16041	768729819	
-/~hcr/may12/screen.gif	8866	768729557	
-/~hcr/may12/inline2.gif	9066	768729556	
-/~hcr/may12/inline1.gif	3260	768729556	
-/~hcr/may12/gonsalve.gif	62374	768729556	
-/~hcr/may12/fcorbett.gif	32639	768729555	
-/~hcr/may12/ex.gif	8841	768729555	
-/~hcr/apr14/quicken.gif	35546	766864019	
-/~hcr/apr14/quake.gif	93441	766864012	
-/~hcr/apr14/maven.gif	2801	766863995	
-/~hcr/apr14/linuxscn.gif	20091	766863975	
-/~hcr/apr14/letter.gif	11019	766863969	
-/~hcr/apr14/jobsear.gif	9013	766863961	
-/~hcr/apr14/crime.gif	79167	766863902	
-/~hcr/apr14/cdbut.gif	492	766863889	
-/~hcr/apr14/ati.gif	53188	766863881	
-/~hcr/apr14/Homer-Wohoo.au	6681	766863944	
-/~hcr/94may12/inline2.gif	9066	768729556	
-/~hcr/94may12/inline1.gif	3260	768729556	
-/~hcr/94apr14/quicken.gif	35546	766864019	
-/~hcr/94apr14/quake.gif	93441	766864012	
-/~hcr/94apr14/maven.gif	2801	766863995	
-/~hcr/94apr14/linuxscn.gif	20091	766863975	
-/~hcr/94apr14/letter.gif	11019	766863969	
-/~hcr/94apr14/jobsear.gif	9013	766863961	
-/~hcr/94apr14/crime.gif	79167	766863902	
-/~hcr/94apr14/cdbut.gif	492	766863889	
-/~hcr/94apr14/ati.gif	53188	766863881	
-/~dlopez/temp/restricted/.htaccess	76	786235532	
-/~dlopez/temp/map/third.html	24	783409279	
-/~dlopez/temp/map/second.html	25	783409264	
-/~dlopez/temp/map/fourth.html	25	783409291	
-/~dlopez/temp/mail.html	992	784012477	
-/~dlopez/temp/dal6.gif	1351	781924423	
-/services/html-guide/me.html	1037	780004824	
-/services/html-guide/index.html	11680	780005843	
-/services/html-guide/forms.html	4329	780005199	
-/services/html-guide/files/perl1	2030	777617700	
-/services/html-guide/elements/dot.gif	151	763533392	
-/restricted/.htaccess	76	783930221	
-/members/csepulv/	496	782706673	
-/icons/menu.xbm	527	758260392	
-/fas_faq.html	54200	782706910	
-/compharv/ch8.html	7449	781154605	
-/compharv/ch7.html	10187	781154591	
-/compharv/ch14.html	8747	781230407	
-/HCR/apr14/ati.gif	53188	766863881	
-/HCR/apr14/	1408	781025099	
-/HCR/94oct20/chicago/taskbar1.gif	3242	783069366	
-/HCR/94oct20/chicago/explorer.html	1952	783078101	
-/HCR/../webteam.html	571	782770553	
-/HCR/../index.html	1418	784853729	
-/?menswim	1418	784853729	
-/../Bup.gif	91	777566224	
-/../Bprev.gif	91	777566132	
-/../Bnext.gif	92	777566278	
-/%7Estahr/sky/sky.html	128	776061376	
-/%7Estahr/lmo/lmo.html	1535	780891138	
-/%7Estahr/images/shield2.gif	7189	775317658	
-/%7Estahr/images/lmo1.gif	41967	780891165	
-/%7Estahr/images/homepage_icon.gif	3670	775803460	
-/%7Estahr/harvard/harvard.html	812	783366082	
-/%7Eperspy/top.gif	11020	786272186	
-/%7Emenswim/topten.html	2794	786210182	
-/%7Emenswim/records.html	1505	786210158	
-/%7Eiop/whatis.html	1298	784600070	
-/%7Eiop/iop1.gif	30399	784580805	
-/%7Eiop/coolpeople.html	933	786070368	
-/%7Eiop/construct.html	73	784589805	
-/%7Eiop/committees.html	2542	786069583	
-/%7Eiop/	695	786070512	
-/%7Ehruc/uc2.gif	3062	783544847	
-/%7Ehruc/news.gif	2006	783545882	
-/%7Ehruc/mins.gif	2010	783545881	
-/%7Ehruc/memb.gif	2047	783545880	
-/%7Ehruc/const.gif	2059	783545879	
-/%7Ehruc/agenda.gif	1999	783545878	
-/%7Ehrbdc/members/	759	786079819	
-/%7Ehrbdc/banner.gif	36420	786077393	
-/%7Ehrbdc/	1071	786083635	
-/%7Ehnmun/specpol.html	3184	783334697	
-/%7Ehnmun/overview.html	146	786076882	
-/%7Ehnmun/links.html	1759	785901343	
-/%7Ehcr/94oct20/rcd.gif	27554	783069367	
-/%7Edins/spnhd.gif	2425	786001539	
-/%7Edins/rost.html	646	786138369	
-/%7Edins/	1028	786140031	
-/%7Eadvocate/summer94/vague.html	1814	781127000	
-/%7Eadvocate/summer94/uncle.html	1354	781126865	
-/%7Eadvocate/summer94/truth.html	1306	781126991	
-/%7Eadvocate/summer94/poems.html	25332	781126976	
-/%7Eadvocate/summer94/notes.html	1405	781126964	
-/%7Eadvocate/summer94/modest.html	2524	784967134	
-/%7Eadvocate/summer94/kaufmann.html	9589	781126942	
-/%7Eadvocate/summer94/bishop.html	25681	781126934	
-/%7Eadvocate/summer94/acts.html	874	781126925	
-/%7Eadvocate/subscribe.html	724	781131045	
-/%7Eadvocate/submit.html	2077	781128132	
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/queuemon-test.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/queuemon-test.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/queuemon-test.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/queuemon-test.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,72 +0,0 @@
-source ../lib/ns-queue.tcl
-set ns [new Simulator]
-
-$ns color 0 blue
-$ns color 1 red
-$ns color 2 white
-
-set n1 [$ns node]
-set n2 [$ns node]
-set n3 [$ns node]
-
-set f [open out.tr w]
-$ns trace-all $f
-set nf [open out.nam w]
-$ns namtrace-all $nf
-
-$ns duplex-link $n1 $n2 500kb 2ms DropTail
-$ns duplex-link $n2 $n3 1Mb 10ms DropTail
-
-$ns duplex-link-op $n1 $n2 orient right-down
-$ns duplex-link-op $n2 $n3 orient right
-
-$ns duplex-link-op $n2 $n3 queuePos 0.5
-
-set udp1 [new Agent/UDP]
-$ns attach-agent $n1 $udp1
-set cbr1 [new Application/Traffic/CBR]
-$cbr1 set packetSize_ 1024
-$cbr1 attach-agent $udp1
-
-set null1 [new Agent/Null]
-$ns attach-agent $n3 $null1
-
-$ns connect $udp1 $null1
-
-$ns at 0.0 "$cbr1 start"
-
-set tcp [new Agent/TCP]
-$tcp set class_ 1
-$tcp set packetSize_ 1024
-set sink [new Agent/TCPSink]
-$ns attach-agent $n1 $tcp
-$ns attach-agent $n3 $sink
-$ns connect $tcp $sink
-set ftp [new Source/FTP]
-$ftp set agent_ $tcp
-$ns at 2.0 "$ftp start"
-
-$ns at 20.0 "finish"
-
-proc do_nam {} {
-	puts "running nam..."
-	exec nam out.nam &
-}
-
-proc finish {} {
-	global ns f nf
-	close $f
-	close $nf
-	$ns flush-trace
-	do_nam
-	exit 0
-}
-
-$ns monitor-queue $n1 $n2 [$ns get-ns-traceall]
-set l12 [$ns link $n1 $n2]
-$l12 set qBytesEstimate_ 0
-$l12 set qPktsEstimate_ 0
-set queueSampleInterval 0.5
-$ns at [$ns now] "$l12 queue-sample-timeout"
-
-$ns run
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/README ns-allinone-2.34-qjump/ns-2.34/tcl/test/README
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/README	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/README	1970-01-01 01:00:00.000000000 +0100
@@ -1,369 +0,0 @@
-Some notes on the test suite
-
----------------------------
-
-To run the test suites in this directory:
-
-./test-all-red
-./test-all-sack
-./test-all-schedule
-./test-all-tcp
-./test-all-red-v1
-./test-all-cbq-v1
-./test-all-sack-v1
-./test-all-v1
-./test-all-mcast
-
-OR, just for validation purposes:
-
-./test-all-red quiet
-./test-all-sack quiet
-./test-all-schedule quiet
-./test-all-tcp quiet
-./test-all-red-v1 quiet
-./test-all-cbq-v1 quiet
-./test-all-sack-v1 quiet  
-./test-all-v1 quiet
-./test-all-mcast
-
-----------------------------
-
-Each of the test suites has been split off into three parts, two of
-which are common to all of them.  The common parts are:
-
-I)  The topologies library, stored in topologies.tcl
-
-    This contains a catalogue of topologies used in the test suite.
-    Currently, four topologies are defined (net0 through net3).
-
-    Variants of the topology are classified according to the following
-    criteria:
-
-    Name of	Qs on Fall-	Dynamic		 Routing	 MultiPath
-    Variant	back links	 Links?		Protocol?	Forwarding?
-  -----------------------------------------------------------------------------
-  <none>	 DropTail	   no		 Static		    NO
-  net#-		 DropTail	   yes		 Static		    NO
-  net#-Session	 DropTail	   yes		 Session	    NO
-  net#-DV	 DropTail	   yes		   DV		    NO
-  net#RED-Session   RED		   yes		 Session	    NO
-  net#RED-DV	    RED		   yes		   DV		    NO
-  net#-DVm0	 DropTail	   no		   DV		    YES
-  net#-DVm1	 DropTail	   yes		   DV		    YES
-  net#RED-DVm0	 DropTail	   no		   DV		    YES
-  net#RED-DVm1	 DropTail	   yes		   DV		    YES
-
-    Note that the RED variants are only defined if the backbone links
-    themselves use RED queues.
-
-NOTE:  All tests that use dynamic links (otehr than net#-) use a
-tracefile to generate the dynamics events.  The variant net#- currently
-uses an Exponential distribution to decide link failure and recovery
-times.  It also writes out the trace file `dyn.tr' that is used by the
-other variants.
-
-The initialiser for each topology also invokes the instance procedure
-``config''.  Each test-suite that is defined could individually
-reconfigure a particular topology to suite its needs.  As an example,
-this feature is used by the RED test suites to redefine ``linterm_''
-for the backbone links in the net2 topology.
-
-The class hierarchy for the topologies is:
-
-    SkelTopology
-    |
-    +-----  NodeTopology/4nodes
-    |       |
-    |       +-----  Topology/net0
-    |       |       |
-    |       |       +-----  Topology/net0-
-    |       |       +-----  Topology/net0-Session
-    |       |       .
-    |       .       .
-    |       .       +-----  Topology/net0-DVm1
-    |       .
-    |
-    +-----  NodeTopology/6nodes
-    |
-    |
-    .
-    .
-    .
-
-The base class for all topologies is the Class SkelTopology.  It
-provides one ``useful'' method: add-fallback-links.  The method 
-adds fallback paths between pairs of nodes, each link in the path
-having identical characteristics.
-
-Different node topology classes are derived from the skeleton topology
-class.  There are three currently defined, NodeTopology/4nodes,
-NodeTopology/6nodes, and NodeTopology/8nodes.  The node count
-indicates the number of nodes in the topology, less those used for
-alternate (fallback) paths.  The constructor for each class
-instantiates each of the nodes in that topology.
-
-Each topology is then derived from the appropriate NodeTopology.
-Four basic topologies are currently defined, Topology/net0 through
-Topology/net4. 
-
-
-1.  net0:  Simple 4 node topology (+1 fallback node) shown as:
-
-		   s1        __ b1 __
-		     \      /  0.8Mb \
-	      8Mb,5ms \    /   100ms  \ 
-		        r1 ------------ k1
-              8Mb,5ms /    0.8Mb, 100ms
-		     /
-		   s2
-		Queue limit on <r1, k1> = 6
-
-    Variants defined: net0-, net0-Session, net0-DV, net0-DVm0, and net0-DVm1.
-    Cost on link <r1, k1> = 2 for net0-DVm0 and net0-DVm1.
-
-2.  net1:  Another simple 4 node topology (+1 fallback node) shown as:
-
-		   s1        __ b1 __
-		     \      /  1.5Mb \
-             10Mb,5ms \    /   100ms  \ 
-		        r1 ------------ k1
-             10Mb,5ms /    1.5Mb, 100ms
-		     /
-		   s2
-		Queue limit on <r1, k1> = 23
-
-    Variants defined: net1-, net1-Session, net1-DV, net1-DVm0, net1-DVm1.
-    Cost on link <r1, k1> = 2 for net1-DVm0 and net1-DVm1.
-
-3.  net2: Simple 6 node topology (+1 fallback node) shown as:
-
-	        s1       __b1__       s3
-	          \     /1.5 Mb\     /
-	  10Mb,2ms \   /  10ms  \   / 10Mb,4ms
-	            r1 ---------- r2
-	  10Mb,3ms /   1.5Mb 20ms   \ 10Mb,5ms
-		  /        RED       \
-	        s2                    s4 
-
-    Variants defined: net2-, net2-Session, net2-DV, net2-DVm0, net2-DVm1,
-	net2RED-Session, net2RED-DV, net2RED-DVm0, net2RED-DVm1.
-    Cost on link <r1, r2> = 2 for *-DVm0, *-DVm1 topology variants.
-    Note that, unlike the earlier topologies, the delay on the fallback
-    path is the same as the main path,
-    		i.e. delay(r1,b1) + delay(b1,r2) = delay(r1,r2).
-
-4.  net3: Simple 8 node topology (+3 fallback nodes) shown as:
-
-            s1       __b1__        __b2__        __b3__       s3
-              \     /1.5 Mb\      /1.5 Mb\      /1.5 Mb\     /
-      10Mb,2ms \   /  10ms  \    /  10ms  \    /  10ms  \   / 10Mb,4ms
-                r1 ---------- r2 ---------- r3 ---------- r4
-      10Mb,3ms /   1.5Mb,20ms    1.5Mb 20ms    1.5Mb 20ms   \ 10Mb,5ms
-	      /        RED           RED           RED       \
-            s2                                                s4 
-
-    Variants defined: net2-, net2-Session, net2-DV, net2-DVm0, net2-DVm1,
-	net2RED-Session, net2RED-DV, net2RED-DVm0, net2RED-DVm1.
-    Cost on link <r1, r2>, <r2, r3>, <r3, r4> = 2 for *-DVm0, *-DVm1
-	topology variants.
-
-
-II)	misc.tcl defines the base class TestSuite for the tests.
-It also defines the routines common to all the test suites.
-
-The class hierarchy for TestSuite is:
-
-	TestSuite
-	    |
-	    +-----  Test/tahoe
-	    |
-	    +-----  Test/phaseSack1
-	    .
-	    .
-	    .
-
-
-The constructor instantiates the appropriate topology.  It will
-check that the test will run on the specified topology (or its
-variant).  The testName is set to "test:topology".  It also
-enables a global trace file, all.tr.
-
-Other routines defined includes the procedure finish.  Unlike in
-the ns-1 test suites, this routine does not process the trace
-file.  It is upto an external test suite driver to process the
-output traces appropriately.  This permits us to flexibly use
-either gnuplot, xgraph, or nam as desired.
-
-tcpDump and tcpDumpAll are identical to the ns-1 test suite.
-openTrace differs, only in that, it adds the line "v testName
-$testName_" to the trace file, out.tr.  Most of the tests gather
-traces at the node `r1'.
-
-New routines traceQueues, usage, and runTest are also defined.
-
-	- traceQueues will trace the queues of all links incident on a
-	  specified now.  This allows us to trace tcp acks, as well as
-	  traffic through alternate paths conveniently.
-	- usage is a global procedure that simple prints out the usage
-	  relevant for the particular test suite being used.
-	- runTest is a static (?) procedure that should be invoked by
-	  the test suite.  It checks that the specified test and
-	  topology are correctly defined.  It instantiates the test, and
-	  then "run"s the test.
-	
-In addition, misc.tcl will source tcl/test/redefines.tcl, if present.
-This allows us (allowed me) to selectively redefine procedures
-embedded in ns for debugging, or additional tracing.
-
-
-III)	The test suites themselves are in individual files.  Currently,
-the three are routed, red, and sack.  `routed' is identical to the v2
-test suite.  Each of these define a series of tests.  The format of a
-test-suite file is:
-
-	set dir [pwd]
-	catch "cd tcl/test"
-	source misc.tcl
-	source topologies.tcl
-	catch "cd $dir"
-
-	define test 1
-	define test 2
-	.
-	.
-	.
-	TestSuite runTest
-
-The template for a typical test is:
-
----------------------------------------------------------------------------
-Class Test/tahoe1 -superclass TestSuite
-Test/tahoe1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo	;# topology variant to run test on
-	set defNet_	net0	;# default topology, used in 2 ways
-				 # 1.  topology used, if $topo == ""
-				 # 2.  to verify that variant is derived 
-				 #     from $defNet_
-	set test_	tahoe	;# identity of test.  really an
-				 # ns-1 compatibility artifact.
-
-	$self next
-}
-
-Test/tahoe1 instproc run {} {
-	$self instvar ns_	;# handle for the simulator
-	$self instvar node_	;# array of nodes, key = name, val = handle
-	$self instvar testName_	;# usually $test_:$net_
-
-	# various Transport configurations, elided for brevity.
-	# See actual test suites for details.
-
-	# Trace only the bottleneck link
-	#
-	# Actually, we now trace all activity at the node around the
-	# bottleneck link.  This allows us to track acks, as well
-	# packets taking any alternate paths around the bottleneck
-	# link.
-	#
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
----------------------------------------------------------------------------
-
-STATUS OF THE CURRENT TEST SUITES:
-
-test-suite-routed.tcl	This suite is identical to the basic ns-2 test
-	suite.   This name is a very bad misnomer, as there is no
-	separate routed test suite.
-
-	The telnet test requires a TELNET source, therefore cannot
-	currently run.  Hence, it is X'd out.
-
-test-suite-red.tcl	This suite adds additional configuration to the
-	net2 topology.  Queue plotting is still untested in ns-2.
-	Unlike the finish routine, we have left the trace processing
-	routines in plotQueue in the suite.  This suite also redefines
-	the tcpDumpAll procedure for its use.
-
-	Tests red_twoway, red_twowaybytes require the TELNET source.
-	The flow tests have not even been converted into ns-2 format.
-	The tests themselves have been X'd out.
-
-test-suite-sack.tcl	The tests in this routing previously used a
-	different tracing routine, openTraces.  It looks like this was
-	done to gather traces of returning acks.  The new traceQueues
-	procedure should supercede this routine?
-
-	Tests delayedSack and timersSack are commented out.  Is this right?
-
-IV)	In addition, there are driver routines to run these tests, or process
-the results.  
-
-1.  ktest-all <suite> [<test> ...]
-
-	Given a <suite>, ktest-all will run all the specified <test>s
-	from test-suite-<suite>.tcl, against all the topologies
-	defined in topologies in tcl.  If no test is specified, then
-	it will run all the tests defined in test-suite-<suite>.tcl.
-
-	The suite will compare the results of all.tr against a
-	previously computed result stored in test-output-raw (The result
-	is stored the first time the test is run). It will also plot
-	the results stored in out.tr.  If $DISPLAY is set, then xgraph
-	is used to show on the screen.  Otherwise, gnuplot is used to
-	generate a postscript file that is stored in ps-files.
-
-	The program also checks if a new result differs from the
-	previously computed result.  Core dumps are saved in the crash
-	subdirectory.
-
-2.  rt <suite> <test> [<topology>]
-
-	`rt' will run one <test> from test-suite-<suite>.tcl, for a
-	particular <topology>.  If the topology is unspecified, the
-	default topology applicable for that test will be used.
-
-The next set of programs are useful in processing trace files.
-
-1.  getrc [-b] [-o outfile] -s node1 [-d node2] [tracefile] 
-
-	Extract trace lines that match certain characteristics.
-
-	-s node1	extract all packets from node1.
-	-b -s node1	extract all packets to or from node1.
-	-s node1 -d node2	extract packets on link <node1 -> node2>
-	-b -s node1 -d node2	extract pkts. on link <node1 <-> node2>.
-
-2.  raw2xg [-a] [tracefile]
-
-	Translate the trace file into a format palatable to xgraph.
-	The -a option will extract acks in addition to tcp traffic.
-
-	The conversion algorithms used to be in the finish procedures
-	of the ns-1 test suite.
-
-3.  raw2gp [-a] [tracefile]
-
-	Translate the trace file into a format palatable to gnuplot.
-	The output data is placed into separate files called `packets',
-	`drops', `acks', `link-fails', and `link-recovery'.  The output
-	from raw2gp is a set of commands that can processed by gnuplot.
-	
-Other useful aliases are:
-
-	alias xg	'xgraph -bb -tk -nl -m -x time -y packets'
-	alias raw2nam	'awk -f tcl/nam-demo/nstonam.awk'
-	alias gvl	'ghostview -landscape -'
-
-
-As an example, 
-
-	% getrc -s 2 -d 3 test-output-raw/tahoe | raw2xg | xg
-
-will generate the graph of tahoe1, similar to that produced by
-
-	% ./ns test-suite.tcl tahoe1
-
-in the ns-1 test suites.
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/recommended-defaults.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/recommended-defaults.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/recommended-defaults.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/recommended-defaults.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-# Sally's recommended defaults, not yet incorporated into ns-default.tcl.
-# This file is in progress.
-Agent/TCP set singledup_ 1
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/Release.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/Release.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/Release.txt	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/Release.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,31 +0,0 @@
-Verification tests that should be run before a release:
-
-In ns-2:
-./test-all quiet
-
-In ns-2/tcl/test:
-./test-all-red quiet
-./test-all-sack quiet
-./test-all-schedule quiet
-./test-all-tcp quiet
-./test-all-cbq quiet
-./test-all-red-v1 quiet
-./test-all-cbq-v1 quiet
-./test-all-sack-v1 quiet  
-./test-all-v1 quiet
-./test-all-mcast
-
-Each of the above tests passes the validation test if the last
-line of the printout is the following:
-
-"All test output agrees with reference output"
-
---------------------------------------------------------------
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/remove.com ns-allinone-2.34-qjump/ns-2.34/tcl/test/remove.com
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/remove.com	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/remove.com	1970-01-01 01:00:00.000000000 +0100
@@ -1,37 +0,0 @@
-#!/bin/sh
-# To remove temporary files in tcl/test.
-# To run: "./remove.com" or "sh remove.com".
-# For the first command, you might have to first make this file executable.
-#
-rm -f temp* *.ps *core
-rm -f t?.tcl ? ecn all packets out drops acks 
-rm -f *.tr *.tr1 *.nam *.xgr
-rm -f all.*  *.png
-rm -f fairflow.* srr_out.txt
-rm -f t t? t.*
-rm -f chart? 
-rm -f flow? flows? 
-rm -rf line?
-rm -rf Host_A Host_B queue
-for i in simple tcp full monitor red sack schedule cbq red-v1 cbq-v1 sack-v1 \
-  v1 \
-vegas-v1 rbp tcp-init-win tcpVariants ecn manual-routing hier-routing \
-intserv webcache mcast newreno srm session mixmode algo-routing vc \
-simultaneous lan wireless-lan ecn-ack mip energy wireless-gridkeeper mcache \
-satellite wireless-lan-newnode wireless-lan-aodv WLtutorial aimd greis \
-rfc793edu friendly rfc2581 links wireless-tdma rio testReno LimTransmit \
-pushback diffserv tcp-init-win-full ecn ecn-full simple-full \
-red-pd tcpReset LimTransmit pi adaptive-red gk rem vq sack-full \
-testReno-full testReno-bayfull source-routing snoop diffusion3 broken \
-tcpHighspeed smac quiescent example examples quickstart tcpOptions t \
-tagged-trace misc message jobs webtraf sctp xcp smac-multihop \
-rng wpan packmime delaybox oddBehaviors wireless-infra
-do
-	echo test-output-$i
-	rm -f test-output-$i/*.test
-	rm -f test-output-$i/*[a-y,A-R,T-Z,0-9]
-done
-# Don't remove *.gz, CVS.
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/route-test.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/route-test.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/route-test.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/route-test.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,14 +0,0 @@
-set r [new RouteLogic]
-foreach pair "{1 2} {1 5} {2 3} {3 5} {5 0} {3 4}" {
-    set src [lindex $pair 0]
-    set dst [lindex $pair 1]
-    $r insert $src $dst
-    $r insert $dst $src
-}
-$r compute
-set L "0 1 2 3 4 5"
-foreach i $L {
-	foreach j $L {
-		puts "$i -> $j via [$r cmd lookup $i $j]"
-	}
-}
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/rtts.awk ns-allinone-2.34-qjump/ns-2.34/tcl/test/rtts.awk
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/rtts.awk	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/rtts.awk	1970-01-01 01:00:00.000000000 +0100
@@ -1,40 +0,0 @@
-# This prints the RTT in seconds, and the fraction of packets with that RTT.
-# Input file:
-###########################################
-# Distribution of RTTs, 10 ms bins
-# 0 to 10 ms: fraction 0.003 number 488
-# 160 to 170 ms: fraction 0.000 number 80
-###########################################
-{
-if (NR==1) {
-   thisbin = 0;
-   binsize = 0;
-   maxbin = 200;
-}
-if ($1=="Distribution"&&$3=="RTTs,") {
-  binsize = $4;
-  halfbin = binsize / 2;
-}
-if (binsize > 0) {
-  if ($2=="to"&&$4=="ms:") {
-     bin = $3;
-     frac = $6;
-     if (bin > 0) {
-       for (i=thisbin; i<bin; i += binsize) {
-    	 avertt = (i-halfbin)/1000; 
-    	 if (avertt < 0) avertt = 0;
-    	 printf "%4.3f 0.0\n", avertt;
-       }
-       avertt = (bin - halfbin)/1000;
-       if (avertt < 0) avertt = 0;
-       printf "%4.3f %5.3f\n", avertt, frac;
-       thisbin = bin + binsize;
-    }
-  }
-}
-}
-END{
-  for (i=thisbin; i<=maxbin; i += binsize) {
-     avertt = (i-halfbin)/1000;
-     printf "%4.3f 0.0\n", avertt;
-}}
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/sack.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/sack.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/sack.tcl	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/sack.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,575 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/sack.tcl,v 1.2 2005/05/29 15:35:19 sfloyd Exp $
-#
-
-#
-# This file uses the ns-1 interfaces, not the newere v2 interfaces.
-# Don't copy this code for use in new simulations,
-# copy the new code with the new interfaces!
-#
-
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP/Newreno set newreno_changes1_ 0
-# The default is being changed to 1 on 5/5/03, to reflect RFC 2582.
-Agent/TCP/Newreno set partial_window_deflation_ 0
-# The default is being changed to 1 on 5/5/03, to reflect RFC 2582.
-Agent/TCP set singledup_ 0
-# The default has been changed to 1
-
-#
-# Create a simple four node topology:
-#
-#        s1
-#         \ 
-#  8Mb,0ms \  0.8Mb,100ms
-#           r1 --------- k1
-#  8Mb,0ms /
-#         /
-#        s2
-#
-# one drop
-proc create_testnet { } {
-
-	global mod s1 s2 r1 r2 k1
-	global mod ns_tcp ns_tcpnewreno
-	set mod 100
-	set s1 [ns node]
-	set s2 [ns node]
-	set r1 [ns node]
-	set k1 [ns node]
-	set r2 [ns node]
-
-	ns_duplex $s1 $r1 8Mb 0.1ms drop-tail
-	ns_duplex $s2 $r1 8Mb 0.1ms drop-tail
-	ns_duplex $r1 $r2 8Mb 0.001ms drop-tail
-	set L [ns_duplex $r2 $k1 800Kb 100ms drop-tail]
-	[lindex $L 0] set queue-limit 6
-	[lindex $L 1] set queue-limit 6
-	# maxburst must be set to an integer.
-
-	set ns_tcp(maxburst) maxBurst
-	set ns_tcp(bug-fix) false
-	set ns_tcpnewreno(changes) 0
-}
-
-#
-# Create a simple six node topology:
-#
-#        s1		    s3
-#         \ 		    /
-# 10Mb,2ms \  1.5Mb,20ms   / 10Mb,4ms
-#           r1 --------- r2
-# 10Mb,3ms /		   \ 10Mb,5ms
-#         /		    \
-#        s2		    s4 
-#
-proc create_testnet2 { } {
-
-	global mod s1 s2 r1 r2 r2 s3 s4
-	global mod ns_tcp
-	set s1 [ns node]
-	set s2 [ns node]
-	set r1 [ns node]
-	set r2 [ns node]
-	set s3 [ns node]
-	set s4 [ns node]
-
-	ns_duplex $s1 $r1 10Mb 2ms drop-tail
-	ns_duplex $s2 $r1 10Mb 3ms drop-tail
-	set L [ns_duplex $r1 $r2 1.5Mb 20ms red]
-	[lindex $L 0] set queue-limit 25
-	[lindex $L 1] set queue-limit 25
-	ns_duplex $s3 $r2 10Mb 4ms drop-tail
-	ns_duplex $s4 $r2 10Mb 5ms drop-tail
-	set ns_tcp(maxburst) maxBurst
-	set ns_tcp(bug-fix) false
-}
-
-proc finish { file mod } {
-
-	set f [open temp.rands w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-	
-	exec rm -f temp.p 
-	exec touch temp.p
-	#
-	# split queue/drop events into two separate files.
-	# we don't bother checking for the link we're interested in
-	# since we know only such events are in our trace file
-	#
-	exec awk {
-		{
-			if (($1 == "+" || $1 == "-" ) && \
-			    ($5 == "tcp" || $5 == "ack"))\
-					print $2, $8*(mod+10) + ($11 % mod) 
-		}
-	} mod=$mod out.tr > temp.p
-
-	exec rm -f temp.d
-	exec touch temp.d
-	exec awk {
-		{
-			if ($1 == "d")
-				print $2, $8*(mod+10) + ($11 % mod) 
-		}
-	} mod=$mod out.tr > temp.d
-
-        exec rm -f temp.p1
-	exec touch temp.p1
-        exec awk {
-                {
-                        if (($1 == "-" ) && \
-                            ($5 == "tcp" || $5 == "ack"))\
-                                        print $2, $8*(mod+10) + ($11 % mod) 
-                }
-        } mod=$mod out.tr1 > temp.p1
-
-	puts $f \"packets
-	flush $f
-	exec cat temp.p >@ $f
-	flush $f
-        puts $f \n\"acks
-        flush $f
-        exec cat temp.p1 >@ $f
-	# insert dummy data sets so we get X's for marks in data-set 4
-#	puts $f [format "\n\"skip-1\n0 1\n\n\"skip-2\n0 1\n\n"]
-	puts $f [format "\n\"skip-1\n0 1\n\n"]
-
-	puts $f \"drops
-	flush $f
-	#
-	# Repeat the first line twice in the drops file because
-	# often we have only one drop and xgraph won't print marks
-	# for data sets with only one point.
-	#
-	exec head -1 temp.d >@ $f
-	exec cat temp.d >@ $f
-	close $f
-#	exec csh figure.com $file &
-	puts stdout "Calling xgraph."
-	exec xgraph -bb -tk -nl -m -ly 0,$mod -x time -y packet temp.rands &
-#	exec xgraph -bb -tk -nl -m -x time -y packet temp.rands &
-	
-	exit 0
-}
-
-proc openTrace { stopTime testName mod } {
-	exec rm -f out.tr temp.rands
-	global r1 k1    
-	set traceFile [open out.tr w]
-	ns at $stopTime \
-		"close $traceFile ; finish $testName $mod"
-	set T [ns trace]
-	$T attach $traceFile
-	return $T
-}
-
-
-proc openTraces { stopTime testName filename node1 node2 mod } {
-        global s1 s2 r1 r2 k1
-        exec rm -f $filename temp.rands
-        set traceFile [open $filename w]
-        ns at $stopTime \
-                "close $traceFile"
-        set T [ns trace]
-        $T attach $traceFile
-        [ns link $node1 $node2] trace $T
-}
-
-proc openTraces1 { stopTime testName filename node1 node2 mod } {
-        global s1 s2 r1 r2 k1
-        exec rm -f $filename temp.rands
-        set traceFile [open $filename w]
-        ns at $stopTime \
-                "close $traceFile ; finish $testName $mod"
-        set T1 [ns trace]
-        $T1 attach $traceFile
-        [ns link $node1 $node2] trace $T1
-}
-
-proc test_one_drop {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set mod 60
-	set endtime 6.0
-	[ns link $r2 $k1] set queue-limit 8
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 28
-	set ftp1 [$tcp1 source ftp]
-
-	set tcp2 [ns_create_connection tcp-reno $s1 tcp-sink $k1 1]
-	$tcp2 set window 8
-	set ftp2 [$tcp2 source ftp]
-	$ftp2 set maxpkts 12
-
-	set tcp3 [ns_create_connection tcp-reno $s1 tcp-sink $k1 2]
-	$tcp3 set window 8
-	set ftp3 [$tcp3 source ftp]
-	$ftp3 set maxpkts 10
-
-	ns at 1.0 "$ftp1 start"
-	ns at 1.2 "$ftp2 start"
-	ns at 1.2 "$ftp3 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_one_drop out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_one_drop out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_two_drops {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set mod 60
-	set endtime 6.0
-	[ns link $r2 $k1] set queue-limit 8
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 28
-	set ftp1 [$tcp1 source ftp]
-
-	set tcp2 [ns_create_connection tcp-reno $s1 tcp-sink $k1 1]
-	$tcp2 set window 8
-	set ftp2 [$tcp2 source ftp]
-	$ftp2 set maxpkts 12
-
-	set tcp3 [ns_create_connection tcp-reno $s1 tcp-sink $k1 2]
-	$tcp3 set window 8
-	set ftp3 [$tcp3 source ftp]
-	$ftp3 set maxpkts 11
-
-	ns at 1.0 "$ftp1 start"
-	ns at 1.2 "$ftp2 start"
-	ns at 1.2 "$ftp3 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_two_drops out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_two_drops out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_three_drops {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set mod 60
-	set endtime 6.0
-	[ns link $r2 $k1] set queue-limit 8
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 28
-	set ftp1 [$tcp1 source ftp]
-
-	set tcp2 [ns_create_connection tcp-reno $s1 tcp-sink $k1 1]
-	$tcp2 set window 8
-	set ftp2 [$tcp2 source ftp]
-	$ftp2 set maxpkts 12
-
-	set tcp3 [ns_create_connection tcp-reno $s1 tcp-sink $k1 2]
-	$tcp3 set window 8
-	set ftp3 [$tcp3 source ftp]
-	$ftp3 set maxpkts 12
-
-	ns at 1.0 "$ftp1 start"
-	ns at 1.2 "$ftp2 start"
-	ns at 1.18 "$ftp3 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_three_drops out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_three_drops out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_four_drops {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set mod 60
-	set endtime 6.0
-	[ns link $r2 $k1] set queue-limit 8
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 28
-	set ftp1 [$tcp1 source ftp]
-
-	set tcp2 [ns_create_connection tcp-reno $s1 tcp-sink $k1 1]
-	$tcp2 set window 8
-	set ftp2 [$tcp2 source ftp]
-	$ftp2 set maxpkts 12
-
-	set tcp3 [ns_create_connection tcp-reno $s1 tcp-sink $k1 2]
-	$tcp3 set window 8
-	set ftp3 [$tcp3 source ftp]
-	$ftp3 set maxpkts 13
-
-	ns at 1.0 "$ftp1 start"
-	ns at 1.2 "$ftp2 start"
-	ns at 1.2 "$ftp3 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_four_drops out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_four_drops out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_many_drops {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set mod 60
-	set endtime 6.0
-	[ns link $r2 $k1] set queue-limit 8
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 28
-	set ftp1 [$tcp1 source ftp]
-
-	set tcp2 [ns_create_connection tcp-reno $s1 tcp-sink $k1 1]
-	$tcp2 set window 8
-	set ftp2 [$tcp2 source ftp]
-	$ftp2 set maxpkts 12
-
-	set tcp3 [ns_create_connection tcp-reno $s1 tcp-sink $k1 2]
-	$tcp3 set window 8
-	set ftp3 [$tcp3 source ftp]
-	$ftp3 set maxpkts 16
-
-	ns at 1.0 "$ftp1 start"
-	ns at 1.2 "$ftp2 start"
-	ns at 1.2 "$ftp3 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_many_drops out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_many_drops out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-#
-# In the following tests, the TCP connection has two related parameters,
-# "window", for the receiver's advertised window, and "maxcwnd",
-# for the max congestion window.
-#
-proc test_one_14 {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set endtime 5.0
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 28
-	$tcp1 set maxcwnd 14
-	set ftp1 [$tcp1 source ftp]
-
-	ns at 1.0 "$ftp1 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_one_14 out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_one_14 out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_one_15 {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set endtime 5.0
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 30
-	$tcp1 set maxcwnd 15
-	set ftp1 [$tcp1 source ftp]
-
-	ns at 1.0 "$ftp1 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_one_15 out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_one_15 out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_one_20 {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set endtime 10.0
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 40
-	$tcp1 set maxcwnd 20
-	set ftp1 [$tcp1 source ftp]
-
-	ns at 1.0 "$ftp1 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_one_20 out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_one_20 out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_one_26 {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set endtime 10.0
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 52 
-	$tcp1 set maxcwnd 26
-	set ftp1 [$tcp1 source ftp]
-
-	ns at 1.0 "$ftp1 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_one_26 out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_one_26 out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-# delayed ack not implemented for sack.
-# proc test_one_40 {} { 
-#         global mod s1 s2 r1 r2 r2 s3 s4
-#         create_testnet2
-#         [ns link $r1 $r2] set queue-limit 29
-#         set tcp1 [ns_create_connection tcp $s1 tcp-sink-da $r2 0]
-#         $tcp1 set window 40
-# 
-#         set ftp1 [$tcp1 source ftp]
-#         ns at 0.0 "$ftp1 start"
-# 
-#         # trace only the bottleneck link
-# 	openTraces 5.0 test_type_one_40 out $r1 $r2 $k1
-# 
-#         ns run
-# }
-
-proc test_two_2 {} {
-	global mod s1 s2 r1 r2 k1 
-	create_testnet
-	set endtime 8.0
-
-	[ns link $r2 $k1] set queue-limit 8
-	[ns link $k1 $r2] set queue-limit 8
-	
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 200
-	$tcp1 set maxcwnd 100
-
-	set tcp2 [ns_create_connection tcp $s2 tcp-sink $k1 1]
-	$tcp2 set window 32
-	$tcp2 set window 16
-
-	set ftp1 [$tcp1 source ftp]
-	set ftp2 [$tcp2 source ftp]
-
-	ns at 1.0 "$ftp1 start"
-	ns at 0.5 "$ftp2 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_two_2 out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_two_2 out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_two_A {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set endtime 10.0
-	[ns link $r2 $k1] set queue-limit 9
-
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 100
-	$tcp1 set maxcwnd 50
-
-	set tcp2 [ns_create_connection tcp $s2 tcp-sink $k1 1]
-	$tcp2 set window 40
-	$tcp2 set maxcwnd 20
-
-	set ftp1 [$tcp1 source ftp]
-	set ftp2 [$tcp2 source ftp]
-
-	ns at 1.0 "$ftp1 start"
-	ns at 1.0 "$ftp2 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_two_A out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_two_A out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-proc test_two_B {} {
-	global mod s1 s2 r1 r2 k1
-	create_testnet
-	set endtime 10.0
-	[ns link $s2 $r1] set delay 200ms
-	[ns link $r1 $s2] set delay 200ms
-	[ns link $r2 $k1] set queue-limit 11
-	[ns link $k1 $r2] set queue-limit 11
-	
-	set tcp1 [ns_create_connection tcp $s1 tcp-sink $k1 0]
-	$tcp1 set window 60
-	$tcp1 set maxcwnd 30 
-
-	set tcp2 [ns_create_connection tcp $s2 tcp-sink $k1 1]
-	$tcp2 set window 60
-	$tcp2 set maxcwnd 30
-
-	set ftp1 [$tcp1 source ftp]
-	set ftp2 [$tcp2 source ftp]
-
-	ns at 0.0 "$ftp1 start"
-	ns at 0.0 "$ftp2 start"
-
-	# trace only the bottleneck link
-	openTraces $endtime test_type_two_B out.tr $r2 $k1 $mod
-	openTraces1 $endtime test_type_two_B out.tr1 $r2 $r1 $mod
-
-	ns run
-}
-
-if { $argc != 1 } {
-	puts stderr {usage: ns test-suite.tcl [ 1 2 3 ... ]}
-	exit 1
-}
-if { "[info procs test_$argv]" != "test_$argv" } {
-	puts stderr "sack.tcl: no such test: $argv"
-}
-test_$argv
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/scen-800x800-30-500-1.0-1 ns-allinone-2.34-qjump/ns-2.34/tcl/test/scen-800x800-30-500-1.0-1
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/scen-800x800-30-500-1.0-1	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/scen-800x800-30-500-1.0-1	1970-01-01 01:00:00.000000000 +0100
@@ -1,597 +0,0 @@
-#
-# nodes: 30, pause: 500.00, max speed: 1.00  max x = 800.00, max y: 800.00
-#
-$node_(0) set X_ 723.456384912808
-$node_(0) set Y_ 731.461871344851
-$node_(0) set Z_ 0.000000000000
-$node_(1) set X_ 79.672341826670
-$node_(1) set Y_ 653.049151496507
-$node_(1) set Z_ 0.000000000000
-$node_(2) set X_ 597.089781113624
-$node_(2) set Y_ 87.951706386163
-$node_(2) set Z_ 0.000000000000
-$node_(3) set X_ 604.329310234555
-$node_(3) set Y_ 162.717648290225
-$node_(3) set Z_ 0.000000000000
-$node_(4) set X_ 395.514958142620
-$node_(4) set Y_ 219.901853890612
-$node_(4) set Z_ 0.000000000000
-$node_(5) set X_ 690.458534570501
-$node_(5) set Y_ 536.591138912256
-$node_(5) set Z_ 0.000000000000
-$node_(6) set X_ 87.272174319895
-$node_(6) set Y_ 383.433871874572
-$node_(6) set Z_ 0.000000000000
-$node_(7) set X_ 373.084936072488
-$node_(7) set Y_ 38.520901293566
-$node_(7) set Z_ 0.000000000000
-$node_(8) set X_ 220.788075121008
-$node_(8) set Y_ 385.178754637724
-$node_(8) set Z_ 0.000000000000
-$node_(9) set X_ 99.329537939313
-$node_(9) set Y_ 631.544234119335
-$node_(9) set Z_ 0.000000000000
-$node_(10) set X_ 763.943403902160
-$node_(10) set Y_ 396.790061309846
-$node_(10) set Z_ 0.000000000000
-$node_(11) set X_ 50.560786595954
-$node_(11) set Y_ 175.140363050293
-$node_(11) set Z_ 0.000000000000
-$node_(12) set X_ 384.081941629082
-$node_(12) set Y_ 65.193300721144
-$node_(12) set Z_ 0.000000000000
-$node_(13) set X_ 503.805278077115
-$node_(13) set Y_ 255.309089006097
-$node_(13) set Z_ 0.000000000000
-$node_(14) set X_ 579.859151930609
-$node_(14) set Y_ 92.767012157595
-$node_(14) set Z_ 0.000000000000
-$node_(15) set X_ 735.173414951115
-$node_(15) set Y_ 59.585735598966
-$node_(15) set Z_ 0.000000000000
-$node_(16) set X_ 657.458264652143
-$node_(16) set Y_ 301.054591809832
-$node_(16) set Z_ 0.000000000000
-$node_(17) set X_ 624.524814893367
-$node_(17) set Y_ 388.564466845486
-$node_(17) set Z_ 0.000000000000
-$node_(18) set X_ 202.994616786011
-$node_(18) set Y_ 530.524502541119
-$node_(18) set Z_ 0.000000000000
-$node_(19) set X_ 525.314679213692
-$node_(19) set Y_ 163.814010538741
-$node_(19) set Z_ 0.000000000000
-$node_(20) set X_ 422.075269918065
-$node_(20) set Y_ 219.061887354697
-$node_(20) set Z_ 0.000000000000
-$node_(21) set X_ 173.140964728554
-$node_(21) set Y_ 380.194346391176
-$node_(21) set Z_ 0.000000000000
-$node_(22) set X_ 326.380133763600
-$node_(22) set Y_ 670.908454337557
-$node_(22) set Z_ 0.000000000000
-$node_(23) set X_ 758.392646476825
-$node_(23) set Y_ 705.210008763369
-$node_(23) set Z_ 0.000000000000
-$node_(24) set X_ 464.617911545537
-$node_(24) set Y_ 33.239758028403
-$node_(24) set Z_ 0.000000000000
-$node_(25) set X_ 260.613212842062
-$node_(25) set Y_ 126.268467731753
-$node_(25) set Z_ 0.000000000000
-$node_(26) set X_ 594.137279562088
-$node_(26) set Y_ 65.258127105358
-$node_(26) set Z_ 0.000000000000
-$node_(27) set X_ 793.342317595805
-$node_(27) set Y_ 104.332536502046
-$node_(27) set Z_ 0.000000000000
-$node_(28) set X_ 716.941082401049
-$node_(28) set Y_ 28.772550460655
-$node_(28) set Z_ 0.000000000000
-$node_(29) set X_ 380.255617730856
-$node_(29) set Y_ 556.167539811285
-$node_(29) set Z_ 0.000000000000
-$god_ set-dist 0 1 7
-$god_ set-dist 0 2 3
-$god_ set-dist 0 3 3
-$god_ set-dist 0 4 4
-$god_ set-dist 0 5 1
-$god_ set-dist 0 6 6
-$god_ set-dist 0 7 4
-$god_ set-dist 0 8 5
-$god_ set-dist 0 9 7
-$god_ set-dist 0 10 2
-$god_ set-dist 0 11 5
-$god_ set-dist 0 12 4
-$god_ set-dist 0 13 3
-$god_ set-dist 0 14 3
-$god_ set-dist 0 15 4
-$god_ set-dist 0 16 2
-$god_ set-dist 0 17 2
-$god_ set-dist 0 18 6
-$god_ set-dist 0 19 3
-$god_ set-dist 0 20 3
-$god_ set-dist 0 21 6
-$god_ set-dist 0 22 7
-$god_ set-dist 0 23 1
-$god_ set-dist 0 24 4
-$god_ set-dist 0 25 4
-$god_ set-dist 0 26 3
-$god_ set-dist 0 27 3
-$god_ set-dist 0 28 4
-$god_ set-dist 0 29 6
-$god_ set-dist 1 2 4
-$god_ set-dist 1 3 4
-$god_ set-dist 1 4 3
-$god_ set-dist 1 5 6
-$god_ set-dist 1 6 2
-$god_ set-dist 1 7 4
-$god_ set-dist 1 8 2
-$god_ set-dist 1 9 1
-$god_ set-dist 1 10 6
-$god_ set-dist 1 11 3
-$god_ set-dist 1 12 4
-$god_ set-dist 1 13 4
-$god_ set-dist 1 14 4
-$god_ set-dist 1 15 5
-$god_ set-dist 1 16 5
-$god_ set-dist 1 17 5
-$god_ set-dist 1 18 1
-$god_ set-dist 1 19 4
-$god_ set-dist 1 20 4
-$god_ set-dist 1 21 2
-$god_ set-dist 1 22 1
-$god_ set-dist 1 23 7
-$god_ set-dist 1 24 4
-$god_ set-dist 1 25 4
-$god_ set-dist 1 26 5
-$god_ set-dist 1 27 5
-$god_ set-dist 1 28 5
-$god_ set-dist 1 29 2
-$god_ set-dist 2 3 1
-$god_ set-dist 2 4 1
-$god_ set-dist 2 5 2
-$god_ set-dist 2 6 3
-$god_ set-dist 2 7 1
-$god_ set-dist 2 8 2
-$god_ set-dist 2 9 4
-$god_ set-dist 2 10 2
-$god_ set-dist 2 11 3
-$god_ set-dist 2 12 1
-$god_ set-dist 2 13 1
-$god_ set-dist 2 14 1
-$god_ set-dist 2 15 1
-$god_ set-dist 2 16 1
-$god_ set-dist 2 17 2
-$god_ set-dist 2 18 3
-$god_ set-dist 2 19 1
-$god_ set-dist 2 20 1
-$god_ set-dist 2 21 3
-$god_ set-dist 2 22 4
-$god_ set-dist 2 23 3
-$god_ set-dist 2 24 1
-$god_ set-dist 2 25 2
-$god_ set-dist 2 26 1
-$god_ set-dist 2 27 1
-$god_ set-dist 2 28 1
-$god_ set-dist 2 29 3
-$god_ set-dist 3 4 1
-$god_ set-dist 3 5 2
-$god_ set-dist 3 6 3
-$god_ set-dist 3 7 2
-$god_ set-dist 3 8 2
-$god_ set-dist 3 9 4
-$god_ set-dist 3 10 2
-$god_ set-dist 3 11 3
-$god_ set-dist 3 12 1
-$god_ set-dist 3 13 1
-$god_ set-dist 3 14 1
-$god_ set-dist 3 15 1
-$god_ set-dist 3 16 1
-$god_ set-dist 3 17 1
-$god_ set-dist 3 18 3
-$god_ set-dist 3 19 1
-$god_ set-dist 3 20 1
-$god_ set-dist 3 21 3
-$god_ set-dist 3 22 4
-$god_ set-dist 3 23 3
-$god_ set-dist 3 24 1
-$god_ set-dist 3 25 2
-$god_ set-dist 3 26 1
-$god_ set-dist 3 27 1
-$god_ set-dist 3 28 1
-$god_ set-dist 3 29 3
-$god_ set-dist 4 5 3
-$god_ set-dist 4 6 2
-$god_ set-dist 4 7 1
-$god_ set-dist 4 8 1
-$god_ set-dist 4 9 3
-$god_ set-dist 4 10 3
-$god_ set-dist 4 11 2
-$god_ set-dist 4 12 1
-$god_ set-dist 4 13 1
-$god_ set-dist 4 14 1
-$god_ set-dist 4 15 2
-$god_ set-dist 4 16 2
-$god_ set-dist 4 17 2
-$god_ set-dist 4 18 2
-$god_ set-dist 4 19 1
-$god_ set-dist 4 20 1
-$god_ set-dist 4 21 2
-$god_ set-dist 4 22 3
-$god_ set-dist 4 23 4
-$god_ set-dist 4 24 1
-$god_ set-dist 4 25 1
-$god_ set-dist 4 26 2
-$god_ set-dist 4 27 2
-$god_ set-dist 4 28 2
-$god_ set-dist 4 29 2
-$god_ set-dist 5 6 5
-$god_ set-dist 5 7 3
-$god_ set-dist 5 8 4
-$god_ set-dist 5 9 6
-$god_ set-dist 5 10 1
-$god_ set-dist 5 11 4
-$god_ set-dist 5 12 3
-$god_ set-dist 5 13 2
-$god_ set-dist 5 14 2
-$god_ set-dist 5 15 3
-$god_ set-dist 5 16 1
-$god_ set-dist 5 17 1
-$god_ set-dist 5 18 5
-$god_ set-dist 5 19 2
-$god_ set-dist 5 20 2
-$god_ set-dist 5 21 5
-$god_ set-dist 5 22 6
-$god_ set-dist 5 23 1
-$god_ set-dist 5 24 3
-$god_ set-dist 5 25 3
-$god_ set-dist 5 26 2
-$god_ set-dist 5 27 2
-$god_ set-dist 5 28 3
-$god_ set-dist 5 29 5
-$god_ set-dist 6 7 3
-$god_ set-dist 6 8 1
-$god_ set-dist 6 9 1
-$god_ set-dist 6 10 5
-$god_ set-dist 6 11 1
-$god_ set-dist 6 12 3
-$god_ set-dist 6 13 3
-$god_ set-dist 6 14 3
-$god_ set-dist 6 15 4
-$god_ set-dist 6 16 4
-$god_ set-dist 6 17 4
-$god_ set-dist 6 18 1
-$god_ set-dist 6 19 3
-$god_ set-dist 6 20 3
-$god_ set-dist 6 21 1
-$god_ set-dist 6 22 2
-$god_ set-dist 6 23 6
-$god_ set-dist 6 24 3
-$god_ set-dist 6 25 2
-$god_ set-dist 6 26 4
-$god_ set-dist 6 27 4
-$god_ set-dist 6 28 4
-$god_ set-dist 6 29 2
-$god_ set-dist 7 8 2
-$god_ set-dist 7 9 4
-$god_ set-dist 7 10 3
-$god_ set-dist 7 11 2
-$god_ set-dist 7 12 1
-$god_ set-dist 7 13 2
-$god_ set-dist 7 14 1
-$god_ set-dist 7 15 2
-$god_ set-dist 7 16 2
-$god_ set-dist 7 17 2
-$god_ set-dist 7 18 3
-$god_ set-dist 7 19 1
-$god_ set-dist 7 20 1
-$god_ set-dist 7 21 3
-$god_ set-dist 7 22 4
-$god_ set-dist 7 23 4
-$god_ set-dist 7 24 1
-$god_ set-dist 7 25 1
-$god_ set-dist 7 26 1
-$god_ set-dist 7 27 2
-$god_ set-dist 7 28 2
-$god_ set-dist 7 29 3
-$god_ set-dist 8 9 2
-$god_ set-dist 8 10 4
-$god_ set-dist 8 11 2
-$god_ set-dist 8 12 2
-$god_ set-dist 8 13 2
-$god_ set-dist 8 14 2
-$god_ set-dist 8 15 3
-$god_ set-dist 8 16 3
-$god_ set-dist 8 17 3
-$god_ set-dist 8 18 1
-$god_ set-dist 8 19 2
-$god_ set-dist 8 20 2
-$god_ set-dist 8 21 1
-$god_ set-dist 8 22 2
-$god_ set-dist 8 23 5
-$god_ set-dist 8 24 2
-$god_ set-dist 8 25 2
-$god_ set-dist 8 26 3
-$god_ set-dist 8 27 3
-$god_ set-dist 8 28 3
-$god_ set-dist 8 29 1
-$god_ set-dist 9 10 6
-$god_ set-dist 9 11 2
-$god_ set-dist 9 12 4
-$god_ set-dist 9 13 4
-$god_ set-dist 9 14 4
-$god_ set-dist 9 15 5
-$god_ set-dist 9 16 5
-$god_ set-dist 9 17 5
-$god_ set-dist 9 18 1
-$god_ set-dist 9 19 4
-$god_ set-dist 9 20 4
-$god_ set-dist 9 21 2
-$god_ set-dist 9 22 1
-$god_ set-dist 9 23 7
-$god_ set-dist 9 24 4
-$god_ set-dist 9 25 3
-$god_ set-dist 9 26 5
-$god_ set-dist 9 27 5
-$god_ set-dist 9 28 5
-$god_ set-dist 9 29 2
-$god_ set-dist 10 11 4
-$god_ set-dist 10 12 3
-$god_ set-dist 10 13 2
-$god_ set-dist 10 14 2
-$god_ set-dist 10 15 3
-$god_ set-dist 10 16 1
-$god_ set-dist 10 17 1
-$god_ set-dist 10 18 5
-$god_ set-dist 10 19 2
-$god_ set-dist 10 20 2
-$god_ set-dist 10 21 5
-$god_ set-dist 10 22 6
-$god_ set-dist 10 23 2
-$god_ set-dist 10 24 3
-$god_ set-dist 10 25 3
-$god_ set-dist 10 26 2
-$god_ set-dist 10 27 2
-$god_ set-dist 10 28 3
-$god_ set-dist 10 29 5
-$god_ set-dist 11 12 2
-$god_ set-dist 11 13 3
-$god_ set-dist 11 14 3
-$god_ set-dist 11 15 4
-$god_ set-dist 11 16 3
-$god_ set-dist 11 17 4
-$god_ set-dist 11 18 2
-$god_ set-dist 11 19 3
-$god_ set-dist 11 20 2
-$god_ set-dist 11 21 1
-$god_ set-dist 11 22 3
-$god_ set-dist 11 23 5
-$god_ set-dist 11 24 2
-$god_ set-dist 11 25 1
-$god_ set-dist 11 26 3
-$god_ set-dist 11 27 4
-$god_ set-dist 11 28 4
-$god_ set-dist 11 29 3
-$god_ set-dist 12 13 1
-$god_ set-dist 12 14 1
-$god_ set-dist 12 15 2
-$god_ set-dist 12 16 2
-$god_ set-dist 12 17 2
-$god_ set-dist 12 18 3
-$god_ set-dist 12 19 1
-$god_ set-dist 12 20 1
-$god_ set-dist 12 21 3
-$god_ set-dist 12 22 4
-$god_ set-dist 12 23 4
-$god_ set-dist 12 24 1
-$god_ set-dist 12 25 1
-$god_ set-dist 12 26 1
-$god_ set-dist 12 27 2
-$god_ set-dist 12 28 2
-$god_ set-dist 12 29 3
-$god_ set-dist 13 14 1
-$god_ set-dist 13 15 2
-$god_ set-dist 13 16 1
-$god_ set-dist 13 17 1
-$god_ set-dist 13 18 3
-$god_ set-dist 13 19 1
-$god_ set-dist 13 20 1
-$god_ set-dist 13 21 3
-$god_ set-dist 13 22 4
-$god_ set-dist 13 23 3
-$god_ set-dist 13 24 1
-$god_ set-dist 13 25 2
-$god_ set-dist 13 26 1
-$god_ set-dist 13 27 2
-$god_ set-dist 13 28 2
-$god_ set-dist 13 29 3
-$god_ set-dist 14 15 1
-$god_ set-dist 14 16 1
-$god_ set-dist 14 17 2
-$god_ set-dist 14 18 3
-$god_ set-dist 14 19 1
-$god_ set-dist 14 20 1
-$god_ set-dist 14 21 3
-$god_ set-dist 14 22 4
-$god_ set-dist 14 23 3
-$god_ set-dist 14 24 1
-$god_ set-dist 14 25 2
-$god_ set-dist 14 26 1
-$god_ set-dist 14 27 1
-$god_ set-dist 14 28 1
-$god_ set-dist 14 29 3
-$god_ set-dist 15 16 2
-$god_ set-dist 15 17 2
-$god_ set-dist 15 18 4
-$god_ set-dist 15 19 1
-$god_ set-dist 15 20 2
-$god_ set-dist 15 21 4
-$god_ set-dist 15 22 5
-$god_ set-dist 15 23 4
-$god_ set-dist 15 24 2
-$god_ set-dist 15 25 3
-$god_ set-dist 15 26 1
-$god_ set-dist 15 27 1
-$god_ set-dist 15 28 1
-$god_ set-dist 15 29 4
-$god_ set-dist 16 17 1
-$god_ set-dist 16 18 4
-$god_ set-dist 16 19 1
-$god_ set-dist 16 20 1
-$god_ set-dist 16 21 4
-$god_ set-dist 16 22 5
-$god_ set-dist 16 23 2
-$god_ set-dist 16 24 2
-$god_ set-dist 16 25 2
-$god_ set-dist 16 26 1
-$god_ set-dist 16 27 1
-$god_ set-dist 16 28 2
-$god_ set-dist 16 29 4
-$god_ set-dist 17 18 4
-$god_ set-dist 17 19 1
-$god_ set-dist 17 20 2
-$god_ set-dist 17 21 4
-$god_ set-dist 17 22 5
-$god_ set-dist 17 23 2
-$god_ set-dist 17 24 2
-$god_ set-dist 17 25 3
-$god_ set-dist 17 26 2
-$god_ set-dist 17 27 2
-$god_ set-dist 17 28 2
-$god_ set-dist 17 29 4
-$god_ set-dist 18 19 3
-$god_ set-dist 18 20 3
-$god_ set-dist 18 21 1
-$god_ set-dist 18 22 1
-$god_ set-dist 18 23 6
-$god_ set-dist 18 24 3
-$god_ set-dist 18 25 3
-$god_ set-dist 18 26 4
-$god_ set-dist 18 27 4
-$god_ set-dist 18 28 4
-$god_ set-dist 18 29 1
-$god_ set-dist 19 20 1
-$god_ set-dist 19 21 3
-$god_ set-dist 19 22 4
-$god_ set-dist 19 23 3
-$god_ set-dist 19 24 1
-$god_ set-dist 19 25 2
-$god_ set-dist 19 26 1
-$god_ set-dist 19 27 2
-$god_ set-dist 19 28 1
-$god_ set-dist 19 29 3
-$god_ set-dist 20 21 3
-$god_ set-dist 20 22 4
-$god_ set-dist 20 23 3
-$god_ set-dist 20 24 1
-$god_ set-dist 20 25 1
-$god_ set-dist 20 26 1
-$god_ set-dist 20 27 2
-$god_ set-dist 20 28 2
-$god_ set-dist 20 29 3
-$god_ set-dist 21 22 2
-$god_ set-dist 21 23 6
-$god_ set-dist 21 24 3
-$god_ set-dist 21 25 2
-$god_ set-dist 21 26 4
-$god_ set-dist 21 27 4
-$god_ set-dist 21 28 4
-$god_ set-dist 21 29 2
-$god_ set-dist 22 23 7
-$god_ set-dist 22 24 4
-$god_ set-dist 22 25 4
-$god_ set-dist 22 26 5
-$god_ set-dist 22 27 5
-$god_ set-dist 22 28 5
-$god_ set-dist 22 29 1
-$god_ set-dist 23 24 4
-$god_ set-dist 23 25 4
-$god_ set-dist 23 26 3
-$god_ set-dist 23 27 3
-$god_ set-dist 23 28 4
-$god_ set-dist 23 29 6
-$god_ set-dist 24 25 1
-$god_ set-dist 24 26 1
-$god_ set-dist 24 27 2
-$god_ set-dist 24 28 2
-$god_ set-dist 24 29 3
-$god_ set-dist 25 26 2
-$god_ set-dist 25 27 3
-$god_ set-dist 25 28 3
-$god_ set-dist 25 29 3
-$god_ set-dist 26 27 1
-$god_ set-dist 26 28 1
-$god_ set-dist 26 29 4
-$god_ set-dist 27 28 1
-$god_ set-dist 27 29 4
-$god_ set-dist 28 29 4
-$ns_ at 500.000000000000 "$node_(0) setdest 307.842101656341 302.202811216911 0.903310488351"
-$ns_ at 500.000000000000 "$node_(1) setdest 751.502814826703 107.809459090041 0.941973777411"
-$ns_ at 500.000000000000 "$node_(2) setdest 602.622227619548 271.780136339819 0.760939630528"
-$ns_ at 500.000000000000 "$node_(3) setdest 89.896771348876 495.036140288656 0.090512838252"
-$ns_ at 500.000000000000 "$node_(4) setdest 199.418065406761 419.425468319972 0.604808032297"
-$ns_ at 500.000000000000 "$node_(5) setdest 6.879477950791 423.385925020740 0.809052748940"
-$ns_ at 500.000000000000 "$node_(6) setdest 599.641717100362 578.339837730295 0.197066557675"
-$ns_ at 500.000000000000 "$node_(7) setdest 78.108014943662 761.407227383507 0.214089137590"
-$ns_ at 500.000000000000 "$node_(8) setdest 156.908537512236 361.790107339984 0.757917980045"
-$ns_ at 500.000000000000 "$node_(9) setdest 261.993032056976 116.890014011245 0.713081988335"
-$ns_ at 500.000000000000 "$node_(10) setdest 615.182860077103 178.329861610250 0.487480302077"
-$ns_ at 500.000000000000 "$node_(11) setdest 65.149951008039 575.226649879488 0.792881293550"
-$ns_ at 500.000000000000 "$node_(12) setdest 764.721114131639 667.765888847444 0.926618064205"
-$ns_ at 500.000000000000 "$node_(13) setdest 535.844731924638 342.409932754746 0.604675140947"
-$ns_ at 500.000000000000 "$node_(14) setdest 620.075548323704 9.741226587741 0.650994085976"
-$ns_ at 500.000000000000 "$node_(15) setdest 206.082854877563 434.542109996679 0.186553874596"
-$ns_ at 500.000000000000 "$node_(16) setdest 328.776396946753 144.903775736912 0.247198673533"
-$ns_ at 500.000000000000 "$node_(17) setdest 534.485029277345 689.887538464594 0.674824483040"
-$ns_ at 500.000000000000 "$node_(18) setdest 620.069640758346 710.452775577977 0.724749711641"
-$ns_ at 500.000000000000 "$node_(19) setdest 694.723359782237 215.508476361204 0.563702992396"
-$ns_ at 500.000000000000 "$node_(20) setdest 124.954964272115 118.084632281540 0.810518575701"
-$ns_ at 500.000000000000 "$node_(21) setdest 308.562023692571 401.932474764237 0.098879648879"
-$ns_ at 500.000000000000 "$node_(22) setdest 696.207037855540 351.685855682856 0.480220967171"
-$ns_ at 500.000000000000 "$node_(23) setdest 59.036530951198 226.975749154225 0.476770295493"
-$ns_ at 500.000000000000 "$node_(24) setdest 62.685415174616 753.772895349343 0.826316006357"
-$ns_ at 500.000000000000 "$node_(25) setdest 714.495662149743 528.594384560676 0.107277225282"
-$ns_ at 500.000000000000 "$node_(26) setdest 6.660322847732 740.046107702031 0.443666005690"
-$ns_ at 500.000000000000 "$node_(27) setdest 555.646424224908 349.452440957465 0.558969352625"
-$ns_ at 500.000000000000 "$node_(28) setdest 478.328053105673 59.588971386121 0.889802674199"
-$ns_ at 500.000000000000 "$node_(29) setdest 730.836841020730 774.787683732325 0.320751470646"
-#
-# Destination Unreachables: 0
-#
-# Route Changes: 0
-#
-# Link Changes: 0
-#
-# Node | Route Changes | Link Changes
-#    0 |             0 |            0
-#    1 |             0 |            0
-#    2 |             0 |            0
-#    3 |             0 |            0
-#    4 |             0 |            0
-#    5 |             0 |            0
-#    6 |             0 |            0
-#    7 |             0 |            0
-#    8 |             0 |            0
-#    9 |             0 |            0
-#   10 |             0 |            0
-#   11 |             0 |            0
-#   12 |             0 |            0
-#   13 |             0 |            0
-#   14 |             0 |            0
-#   15 |             0 |            0
-#   16 |             0 |            0
-#   17 |             0 |            0
-#   18 |             0 |            0
-#   19 |             0 |            0
-#   20 |             0 |            0
-#   21 |             0 |            0
-#   22 |             0 |            0
-#   23 |             0 |            0
-#   24 |             0 |            0
-#   25 |             0 |            0
-#   26 |             0 |            0
-#   27 |             0 |            0
-#   28 |             0 |            0
-#   29 |             0 |            0
-#
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/seqnos.awk ns-allinone-2.34-qjump/ns-2.34/tcl/test/seqnos.awk
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/seqnos.awk	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/seqnos.awk	1970-01-01 01:00:00.000000000 +0100
@@ -1,37 +0,0 @@
-# This prints the Seqnos, and the fraction of packets with that Seqno.
-# Input file:
-###########################################
-# Distribution of Seqnos, 100 seqnos per bins
-# 0 to 99: fraction 0.111 number 9384
-# 100 to 199: fraction 0.095 number 8101
-# 200 to 299: fraction 0.095 number 8021
-###########################################
-{
-if (NR==1) {
-   thisbin = 0
-   binsize = 0
-   maxbin = 1000
-}
-if ($1=="Distribution"&&$3=="Seqnos,") {
-  binsize = $4
-  halfbin = binsize/2
-}
-if (binsize > 0) {
-if ($2=="to"&&$4=="seqnos:") {
-   bin = $3;
-   frac = $6;
-   for (i=thisbin; i<bin; i += binsize) {
-	aveSeqno = i - halfbin 
-	if (aveSeqno < 0) aveSeqno = 0;
-	printf "%4.3f 0.0\n", aveSeqno;
-   }
-   aveSeqno = bin - halfbin;
-   if (aveSeqno < 0) aveSeqno = 0;
-   printf "%4.3f %5.3f\n", aveSeqno, frac
-   thisbin = bin + binsize
-}}}
-END{
-  for (i=thisbin; i<=maxbin; i += binsize) {
-     aveSeqno = i - halfbin;
-     printf "%4.3f 0.0\n", aveSeqno;
-}}
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/session-hier-1000.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/session-hier-1000.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/session-hier-1000.tcl	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/session-hier-1000.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-# test for memory usage for 1000 node hier topology using session sim
-
-set ns [new SessionSim]
-$ns set-address-format hierarchical
-source ./hts1000.tcl
-set linkBW 5Mb
-global n ns
-
-$ns namtrace-all [open session-hier-1000.nam w]
-
-create-hier-topology $linkBW
-
-set udp [new Agent/UDP]
-$ns attach-agent $n(500) $udp
-set cbr [new Application/Traffic/CBR]
-$cbr attach-agent $udp
-$udp set dst_ 0x8002
-$ns create-session $n(500) $udp
-
-set rcvr0 [new Agent/LossMonitor]
-set rcvr1 [new Agent/LossMonitor]
-set rcvr2 [new Agent/LossMonitor]
-
-$ns attach-agent $n(0) $rcvr0
-$ns attach-agent $n(1) $rcvr1
-$ns attach-agent $n(2) $rcvr2
-
-$ns at 0.2 "$n(0) join-group $rcvr0 0x8002"
-$ns at 0.2 "$n(1) join-group $rcvr1 0x8002"
-$ns at 0.2 "$n(2) join-group $rcvr2 0x8002"
-
-$ns at 1.0 "$cbr start"
-
-$ns at 3.0 "finish"
-proc finish {} {
-    global ns
-    $ns flush-trace
-    puts "running nam..."
-    exec nam out.nam &
-    exit 0
-}
-
-$ns run
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/sflowcdf ns-allinone-2.34-qjump/ns-2.34/tcl/test/sflowcdf
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/sflowcdf	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/sflowcdf	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-1 1308 0.953353
-2 56 0.994169
-3 6 0.998542
-4 2 1
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/sk-30-1-1-1-1-6-64.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/sk-30-1-1-1-1-6-64.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/sk-30-1-1-1-1-6-64.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/sk-30-1-1-1-1-6-64.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,31 +0,0 @@
-#
-# nodes: 30, send rate: 0.167
-# seed: 0.0
-#
-#
-# node 7 is ready to send data type 0 at time 0.036182026954452516
-#
-set src_(0) [new Agent/Diff_Sink]
-$ns_ attach-agent $node_(7) $src_(0)
-$ns_ put-in-list $src_(0)
-$src_(0) set packetSize_ 64
-$src_(0) set interval_ 0.167
-$src_(0) data-type 0
-$src_(0) always-max-rate
-$src_(0) $opt(duplicate)
-$node_(7) color red
-$ns_ at 0.036182026954452516 "$src_(0) ready"
-
-#
-# node 3 expresses interest type 0 at time 0.036182026954452516
-#
-set sk_(0) [new Agent/Diff_Sink]
-$ns_ attach-agent $node_(3) $sk_(0)
-$ns_ put-in-list $sk_(0)
-$sk_(0) set packetSize_ 64
-$sk_(0) set interval_ 0.167
-$sk_(0) data-type 0
-$sk_(0) always-max-rate
-$sk_(0) $opt(duplicate)
-$node_(3) color blue
-$ns_ at 0.036182026954452516 "$sk_(0) announce"
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/sk-30-3-3-1-1-6-64.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/sk-30-3-3-1-1-6-64.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/sk-30-3-3-1-1-6-64.tcl	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/sk-30-3-3-1-1-6-64.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,82 +0,0 @@
-#
-# nodes: 30, send rate: 0.167
-# seed: 0.0
-#
-#
-# node 7 is ready to send data type 0 at time 0.036182026954452516
-#
-set src_(0) [new Agent/Diff_Sink]
-$ns_ attach-agent $node_(7) $src_(0)
-$ns_ put-in-list $src_(0)
-$src_(0) set packetSize_ 64
-$src_(0) set interval_ 0.167
-$src_(0) data-type 0
-$src_(0) set fid_ 0
-$src_(0) $opt(duplicate)
-$node_(7) color red
-$ns_ at 0.036182026954452516 "$src_(0) ready"
-#
-# node 8 is ready to send data type 0 at time 0.036182026954452516
-#
-set src_(1) [new Agent/Diff_Sink]
-$ns_ attach-agent $node_(8) $src_(1)
-$ns_ put-in-list $src_(1)
-$src_(1) set packetSize_ 64
-$src_(1) set interval_ 0.167
-$src_(1) data-type 0
-$src_(1) set fid_ 0
-$src_(1) $opt(duplicate)
-$node_(8) color red
-$ns_ at 0.036182026954452516 "$src_(1) ready"
-#
-# node 19 is ready to send data type 0 at time 0.036182026954452516
-#
-set src_(2) [new Agent/Diff_Sink]
-$ns_ attach-agent $node_(19) $src_(2)
-$ns_ put-in-list $src_(2)
-$src_(2) set packetSize_ 64
-$src_(2) set interval_ 0.167
-$src_(2) data-type 0
-$src_(2) set fid_ 0
-$src_(2) $opt(duplicate)
-$node_(19) color red
-$ns_ at 0.036182026954452516 "$src_(2) ready"
-#
-# node 3 expresses interest type 0 at time 0.036182026954452516
-#
-set sk_(0) [new Agent/Diff_Sink]
-$ns_ attach-agent $node_(3) $sk_(0)
-$ns_ put-in-list $sk_(0)
-$sk_(0) set packetSize_ 64
-$sk_(0) set interval_ 0.167
-$sk_(0) data-type 0
-$sk_(0) set fid_ 1
-$sk_(0) $opt(duplicate)
-$node_(3) color blue
-$ns_ at 0.036182026954452516 "$sk_(0) announce"
-#
-# node 21 expresses interest type 0 at time 0.036182026954452516
-#
-set sk_(1) [new Agent/Diff_Sink]
-$ns_ attach-agent $node_(21) $sk_(1)
-$ns_ put-in-list $sk_(1)
-$sk_(1) set packetSize_ 64
-$sk_(1) set interval_ 0.167
-$sk_(1) data-type 0
-$sk_(1) set fid_ 1
-$sk_(1) $opt(duplicate)
-$node_(21) color blue
-$ns_ at 0.036182026954452516 "$sk_(1) announce"
-#
-# node 23 expresses interest type 0 at time 0.036182026954452516
-#
-set sk_(2) [new Agent/Diff_Sink]
-$ns_ attach-agent $node_(23) $sk_(2)
-$ns_ put-in-list $sk_(2)
-$sk_(2) set packetSize_ 64
-$sk_(2) set interval_ 0.167
-$sk_(2) data-type 0
-$sk_(2) set fid_ 1
-$sk_(2) $opt(duplicate)
-$node_(23) color blue
-$ns_ at 0.036182026954452516 "$sk_(2) announce"
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/support.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/support.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/support.tcl	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/support.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,40 +0,0 @@
-TestSuite instproc June01defaults {} {
-	 Agent/TCP set windowInit_ 2
-	 Agent/TCP set singledup_ 1
-	 Agent/TCP set minrto_ 1
-	 Agent/TCP set syn_ true
-	 Agent/TCP set delay_growth_ true
-}
-
-TestSuite instproc dropPkts { link fid pkts {delayPkt no} {delay -1}} {
-    set emod [new ErrorModule Fid]
-    set errmodel1 [new ErrorModel/List]
-    if {$delayPkt != "no"} {
-        $errmodel1 set delay_pkt_ $delayPkt
-    }
-    if {$delay != -1} {
-        $errmodel1 set delay_ $delay
-    }
-    $errmodel1 droplist $pkts
-    $link errormodule $emod
-    $emod insert $errmodel1
-    $emod bind $errmodel1 $fid
-}
-
-TestSuite instproc dropPktsPeriodic { link fid offset period {delayPkt no} {delay -1}} {
-    set emod [new ErrorModule Fid]
-    set errmodel1 [new ErrorModel/Periodic]
-    $errmodel1 unit pkt
-    $errmodel1 set offset_ $offset
-    $errmodel1 set period_ $period
-    if {$delayPkt != "no"} {
-        $errmodel1 set delay_pkt_ $delayPkt
-    }
-    if {$delay != -1} {
-        $errmodel1 set delay_ $delay
-    }
-    $link errormodule $emod
-    $emod insert $errmodel1
-    $emod bind $errmodel1 $fid
-}
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-1000.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-1000.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-1000.tcl	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-1000.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,68 +0,0 @@
-#test-1000.tcl
-# Test for comparing flat rtg with hier routing using topology generated by 
-# GaTech topology generator (1000 node transit-stub graph converted to 
-# flat topology
-
-
-set ns [new Simulator]
-source ./ts1000.tcl
-set linkBW 5Mb
-global n ns
-
-# $ns namtrace-all [open out-1000.nam w]
-# $ns trace-all [open out-1000.tr w]
-
-create-topology $linkBW
-
-set udp0 [new Agent/UDP]
-$ns attach-agent $n(0) $udp0
-set cbr0 [new Application/Traffic/CBR]
-$cbr0 attach-agent $udp0
-
-set udp1 [new Agent/UDP]
-$ns attach-agent $n(500) $udp1
-set cbr1 [new Application/Traffic/CBR]
-$cbr1 attach-agent $udp1
-$udp1 set class_ 1
-
-set null0 [new Agent/Null]
-$ns attach-agent $n(10) $null0
-
-set null1 [new Agent/Null]
-$ns attach-agent $n(600) $null1
-
-$ns connect $udp0 $null0
-$ns connect $udp1 $null1
-
-$ns at 1.0 "$cbr0 start"
-$ns at 1.1 "$cbr1 start"
-
-set tcp [new Agent/TCP]
-$tcp set class_ 2
-set sink [new Agent/TCPSink]
-$ns attach-agent $n(0) $tcp
-$ns attach-agent $n(5) $sink
-$ns connect $tcp $sink
-set ftp [new Source/FTP]
-$ftp set agent_ $tcp
-$ns at 1.2 "$ftp start"
-$ns at 3.0 "finish"
-
-puts [$cbr0 set packetSize_]
-puts [$cbr0 set interval_]
-
-$ns at 3.0 "finish"
-
-proc finish {} {
-    global ns 
-    $ns flush-trace
-    puts "running nam..."
-    exec nam out.nam &
-    exit 0
-}
-
-$ns run
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-adaptive-red ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-adaptive-red
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-adaptive-red	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-adaptive-red	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-adaptive-red,v 1.1 2001/06/15 00:31:37 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-adaptive-red quiet".
-
-file="test-suite-adaptive-red.tcl"
-directory="test-output-adaptive-red"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-aimd ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-aimd
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-aimd	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-aimd	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-aimd,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-
-file="test-suite-aimd.tcl"
-##
-directory="test-output-aimd"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-algo-routing ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-algo-routing
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-algo-routing	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-algo-routing	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-#! /bin/sh
-
-file="test-suite-algo-routing.tcl"
-directory="test-output-algo-routing"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-broken ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-broken
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-broken	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-broken	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-# To run in quiet mode:  "./test-all-broken quiet".
-
-file="test-suite-broken.tcl"
-directory="test-output-broken"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-cbq ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-cbq
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-cbq	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-cbq	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-cbq,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-cbq quiet".
-
-file="test-suite-cbq.tcl"
-directory="test-output-cbq"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-delaybox ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-delaybox
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-delaybox	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-delaybox	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-delaybox,v 1.1 2006/02/02 18:19:44 mweigle Exp $
-#
-#
-# To run in quiet mode:  "./test-all-DelayBox quiet".
-
-file="test-suite-delaybox.tcl"
-directory="test-output-delaybox"
-version="v2"
-
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-diffserv ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-diffserv
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-diffserv	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-diffserv	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-diffserv quiet".
-#
-
-f="diffserv"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-#echo "arg=$@"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-diffusion3 ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-diffusion3
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-diffusion3	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-diffusion3	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 2001 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-diffusion3 QUIET".
-#
-
-f="diffusion3"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-ecn ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-ecn
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-ecn	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-ecn	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-ecn,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-ecn quiet".
-
-file="test-suite-ecn.tcl"
-directory="test-output-ecn"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-ecn-ack ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-ecn-ack
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-ecn-ack	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-ecn-ack	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-ecn-ack,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-ecn-ack quiet".
-
-file="test-suite-ecn-ack.tcl"
-directory="test-output-ecn-ack"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-ecn-full ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-ecn-full
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-ecn-full	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-ecn-full	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-ecn-full,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-ecn-full quiet".
-
-file="test-suite-ecn-full.tcl"
-directory="test-output-ecn-full"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-energy ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-energy
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-energy	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-energy	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-energy quiet".
-#
-
-f="energy"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-friendly ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-friendly
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-friendly	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-friendly	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-friendly,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-
-file="test-suite-friendly.tcl"
-##
-directory="test-output-friendly"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-frto ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-frto
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-frto	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-frto	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-#
-# To run in quiet mode:  "./test-all-frto quiet".
-
-file="test-suite-frto.tcl"
-directory="test-output-frto"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-full ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-full
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-full	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-full	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-full,v 1.3 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-full quiet".
-
-file="test-suite-full.tcl"
-directory="test-output-full"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-full-fixes ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-full-fixes
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-full-fixes	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-full-fixes	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-full-fixes,v 1.1 2005/06/19 16:10:23 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-full-fixes quiet".
-
-file="test-suite-full-fixes.tcl"
-directory="test-output-full-fixes"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-gk ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-gk
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-gk	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-gk	1970-01-01 01:00:00.000000000 +0100
@@ -1,47 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-#
-# To run in quiet mode:  "./test-all-gk quiet".
-
-file="test-suite-gk.tcl"
-directory="test-output-gk"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-greis ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-greis
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-greis	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-greis	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-#! /bin/sh
-
-file="test-suite-greis.tcl"
-directory="test-output-greis"
-version="v2"
-./test-all-template1 $file $directory $version $@
\ No newline at end of file
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-hier-routing ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-hier-routing
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-hier-routing	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-hier-routing	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-hier-routing quiet".
-#
-
-f="hier-routing"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-intserv ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-intserv
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-intserv	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-intserv	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-intserv,v 1.1 1998/07/29 00:15:36 breslau Exp $
-#
-#
-# To run in quiet mode:  "./test-all-intserv quiet".
-
-file="test-suite-intserv.tcl"
-directory="test-output-intserv"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-jobs ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-jobs
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-jobs	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-jobs	1970-01-01 01:00:00.000000000 +0100
@@ -1,49 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 2000-2002, by the Rector and Board of Visitors of the 
-# University of Virginia.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, 
-# with or without modification, are permitted provided 
-# that the following conditions are met:
-#
-# Redistributions of source code must retain the above 
-# copyright notice, this list of conditions and the following 
-# disclaimer. 
-#
-# Redistributions in binary form must reproduce the above 
-# copyright notice, this list of conditions and the following 
-# disclaimer in the documentation and/or other materials provided 
-# with the distribution. 
-#
-# Neither the name of the University of Virginia nor the names 
-# of its contributors may be used to endorse or promote products 
-# derived from this software without specific prior written 
-# permission. 
-#
-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
-# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
-# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
-# DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE 
-# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
-# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
-# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
-# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
-# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
-# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
-# THE POSSIBILITY OF SUCH DAMAGE.
-#                                                                      
-# $Id: test-all-jobs,v 1.1 2003/02/02 22:20:36 xuanc Exp $                  
-#                                                                     
-# To run in quiet mode:  "./test-all-jobs quiet".
-#
-
-f="jobs"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-lan ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-lan
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-lan	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-lan	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-hier-routing quiet".
-#
-
-f="lan"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-LimTransmit ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-LimTransmit
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-LimTransmit	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-LimTransmit	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-LimTransmit,v 1.1 2001/06/16 23:24:43 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-LimTransmit quiet".
-
-file="test-suite-LimTransmit.tcl"
-directory="test-output-LimTransmit"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-links ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-links
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-links	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-links	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-links,v 1.1 2000/05/27 23:49:24 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-links quiet".
-
-file="test-suite-links.tcl"
-directory="test-output-links"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-linkstate ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-linkstate
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-linkstate	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-linkstate	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-linkstate,v 1.1 2000/07/27 01:29:17 haoboy Exp $
-#
-#
-# To run in quiet mode:  "./test-all-eqp quiet".
-
-file="test-suite-linkstate.tcl"
-directory="test-output-linkstate"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-manual-routing ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-manual-routing
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-manual-routing	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-manual-routing	1970-01-01 01:00:00.000000000 +0100
@@ -1,35 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-manual-routing,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-
-feature="manual-routing"
-file="test-suite-$feature.tcl"
-directory="test-output-$feature"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mcache ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mcache
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mcache	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mcache	1970-01-01 01:00:00.000000000 +0100
@@ -1,54 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) Xerox Corporation 1998. All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify it
-# under the terms of the GNU General Public License as published by the
-# Free Software Foundation; either version 2 of the License, or (at your
-# option) any later version.
-# 
-# This program is distributed in the hope that it will be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License along
-# with this program; if not, write to the Free Software Foundation, Inc.,
-# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-# Linking this file statically or dynamically with other modules is making
-# a combined work based on this file.  Thus, the terms and conditions of
-# the GNU General Public License cover the whole combination.
-# 
-# In addition, as a special exception, the copyright holders of this file
-# give you permission to combine this file with free software programs or
-# libraries that are released under the GNU LGPL and with code included in
-# the standard release of ns-2 under the Apache 2.0 license or under
-# otherwise-compatible licenses with advertising requirements (or modified
-# versions of such code, with unchanged license).  You may copy and
-# distribute such a system following the terms of the GNU GPL for this
-# file and the licenses of the other code concerned, provided that you
-# include the source code of that other code when and as the GNU GPL
-# requires distribution of source code.
-# 
-# Note that people who make modified versions of this file are not
-# obligated to grant this special exception for their modified versions;
-# it is their choice whether to do so.  The GNU General Public License
-# gives permission to release a modified version without this exception;
-# this exception also makes it possible to release a modified version
-# which carries forward this exception.
-#
-# Test suite for web caching code. Based on test-all-full by Kevin.
-#
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-mcache,v 1.3 2005/08/26 05:05:30 tomh Exp $
-
-file="test-suite-mcache.tcl"
-directory="test-output-mcache"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mcast ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mcast
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mcast	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mcast	1970-01-01 01:00:00.000000000 +0100
@@ -1,7 +0,0 @@
-#! /bin/sh
-
-file="test-suite-mcast.tcl"
-directory="test-output-mcast"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-message ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-message
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-message	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-message	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-# To test message passing developed by tim.
-#
-# To run in quiet mode:  "./test-all-message quiet".
-
-file="test-suite-message.tcl"
-directory="test-output-message"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mip ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mip
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mip	2015-03-04 17:49:02.774750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mip	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-#! /bin/sh
-
-file="test-suite-mip.tcl"
-directory="test-output-mip"
-version="v2"
-./test-all-template1 $file $directory $version $@
\ No newline at end of file
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-misc ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-misc
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-misc	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-misc	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-misc,v 1.1 2001/12/18 21:26:11 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-red quiet".
-
-file="test-suite-misc.tcl"
-directory="test-output-misc"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mixmode ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mixmode
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mixmode	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mixmode	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-#! /bin/sh
-
-file="test-suite-mixmode.tcl"
-directory="test-output-mixmode"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-monitor ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-monitor
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-monitor	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-monitor	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-monitor quiet".
-#
-
-f="monitor"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mpls ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mpls
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-mpls	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-mpls	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-mpls,v 1.1 2000/08/29 19:28:04 haoboy Exp $
-#
-#
-# To run in quiet mode:  "./test-all-red quiet".
-
-file="test-suite-mpls.tcl"
-directory="test-output-mpls"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-newreno ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-newreno
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-newreno	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-newreno	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-newreno,v 1.1 1998/08/29 23:33:07 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-newreno quiet".
-
-file="test-suite-newreno.tcl"
-directory="test-output-newreno"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-nixvec ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-nixvec
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-nixvec	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-nixvec	1970-01-01 01:00:00.000000000 +0100
@@ -1,28 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-nixvecquiet"
-#
-
-f="nixvec"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-alloc-address.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-alloc-address.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-alloc-address.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-alloc-address.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,25 +0,0 @@
-# test-alloc-address.tcl 
-# a simple test to check if ns-address formatting API's are working. 
-
-set ns [new Simulator]
-Simulator set EnableMcast_ 1
-# 5 possible address formatting APIs and their combo thereof:
-
-$ns set-address-format def
-#$ns set-address-format expanded
-#$ns set-address-format hierarchical
-#$ns set-address-format hierarchical 3 3 3 5
-
-#$ns expand-port-field-bits 24
-
-set Mcastshift [AddrParams McastShift]
-set Portmask [AddrParams PortMask]
-set Portshift [AddrParams PortShift]
-set Nodemask [AddrParams NodeMask 1]
-set Nodeshift [AddrParams NodeShift 1]
-
-puts "mcastshift = $Mcastshift"
-puts "portmask= $Portmask"
-puts "portshift = $Portshift"
-puts "nodemask(1) = $Nodemask"
-puts "nodeshift(1) = $Nodeshift"
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-oddBehaviors ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-oddBehaviors
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-oddBehaviors	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-oddBehaviors	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-# To run in quiet mode:  "./test-all-oddBehaviors quiet".
-
-file="test-suite-oddBehaviors.tcl"
-directory="test-output-oddBehaviors"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-packmime ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-packmime
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-packmime	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-packmime	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-packmime,v 1.1 2006/02/02 18:19:44 mweigle Exp $
-#
-#
-# To run in quiet mode:  "./test-all-PackMime quiet".
-
-file="test-suite-packmime.tcl"
-directory="test-output-packmime"
-version="v2"
-
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-pi ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-pi
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-pi	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-pi	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 2001  International Computer Science Institute
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by ACIRI, the AT&T
-#      Center for Internet Research at ICSI (the International Computer
-#      Science Institute).
-# 4. Neither the name of ACIRI nor of ICSI may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY ICSI AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL ICSI OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-#
-# To run in quiet mode:  "./test-all-pi quiet".
-
-file="test-suite-pi.tcl"
-directory="test-output-pi"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-pktExample ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-pktExample
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-pktExample	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-pktExample	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-file="test-suite-pktExample.tcl"
-##
-directory="test-output-examples"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-plm ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-plm
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-plm	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-plm	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-plm,v 1.1 2000/07/19 21:39:38 haoboy Exp $
-#
-#
-# To run in quiet mode:  "./test-all-plm quiet".
-
-file="test-suite-plm.tcl"
-directory="test-output-plm"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-pushback ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-pushback
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-pushback	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-pushback	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 2000  International Computer Science Institute
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by ACIRI, the AT&T 
-#      Center for Internet Research at ICSI (the International Computer
-#      Science Institute).
-# 4. Neither the name of ACIRI nor of ICSI may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY ICSI AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL ICSI OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# To run in quiet mode:  "./test-all-pushback quiet".
-
-file="test-suite-pushback.tcl"
-directory="test-output-pushback"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-quickstart ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-quickstart
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-quickstart	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-quickstart	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-file="test-suite-quickstart.tcl"
-##
-directory="test-output-quickstart"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-quiescent ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-quiescent
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-quiescent	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-quiescent	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-file="test-suite-quiescent.tcl"
-##
-directory="test-output-quiescent"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rap ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rap
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rap	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rap	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-rap,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-rap quiet".
-
-file="test-suite-rap.tcl"
-directory="test-output-rap"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rbp ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rbp
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rbp	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rbp	1970-01-01 01:00:00.000000000 +0100
@@ -1,34 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1997 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-rbp,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-
-file="test-suite-rbp.tcl"
-directory="test-output-rbp"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-realaudio ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-realaudio
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-realaudio	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-realaudio	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-realaudio quiet".
-#
-
-f="realaudio"
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-red ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-red
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-red	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-red	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-red,v 1.3 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-red quiet".
-
-file="test-suite-red.tcl"
-directory="test-output-red"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-red-pd ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-red-pd
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-red-pd	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-red-pd	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 2000  International Computer Science Institute
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by ACIRI, the AT&T 
-#      Center for Internet Research at ICSI (the International Computer
-#      Science Institute).
-# 4. Neither the name of ACIRI nor of ICSI may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY ICSI AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL ICSI OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# To run in quiet mode:  "./test-all-red-pd quiet".
-
-file="test-suite-red-pd.tcl"
-directory="test-output-red-pd"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rem ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rem
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rem	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rem	1970-01-01 01:00:00.000000000 +0100
@@ -1,47 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-#
-# To run in quiet mode:  "./test-all-rem quiet".
-
-file="test-suite-rem.tcl"
-directory="test-output-rem"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rfc2581 ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rfc2581
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rfc2581	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rfc2581	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-#
-# To run in quiet mode:  "./test-all-rfc2581 quiet".
-
-file="test-suite-rfc2581.tcl"
-directory="test-output-rfc2581"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rfc793edu ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rfc793edu
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rfc793edu	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rfc793edu	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-#
-# To run in quiet mode:  "./test-all-rfc793edu quiet".
-
-file="test-suite-rfc793edu.tcl"
-directory="test-output-rfc793edu"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rio ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rio
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rio	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rio	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-rio,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-rio quiet".
-
-file="test-suite-rio.tcl"
-directory="test-output-rio"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rng ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rng
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rng	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rng	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-rng quiet".
-#
-
-
-f="rng"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
\ No newline at end of file
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rr ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rr
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-rr	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-rr	1970-01-01 01:00:00.000000000 +0100
@@ -1,50 +0,0 @@
-#! /bin/sh
-# script to run all tests in test-suite.tcl
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# Test suite for SRR, contributed by Chuanxing Guo.
-
-f="srr"
-file="test-suite-$f.tcl"
-directory="test-output-schedule"
-version="v1"
-
-if [ $# -ge 1 ]
-then
-        flag=$1
-        ./test-all-template1 $file $directory $version $flag
-else
-        #echo "testing: srr"
-        ./test-all-template1 $file $directory $version srr
-fi
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-sack ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-sack
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-sack	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-sack	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-sack,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-
-file="test-suite-sack.tcl"
-##
-directory="test-output-sack"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-sack-full ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-sack-full
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-sack-full	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-sack-full	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-sack-full,v 1.1 2001/08/18 00:15:08 kfall Exp $
-
-file="test-suite-sack-full.tcl"
-##
-directory="test-output-sack-full"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-satellite ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-satellite
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-satellite	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-satellite	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-satellite,v 1.1 1999/06/29 02:28:31 tomh Exp $
-#
-#
-# To run in quiet mode:  "./test-all-satellite quiet".
-
-file="test-suite-satellite.tcl"
-directory="test-output-satellite"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-schedule ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-schedule
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-schedule	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-schedule	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-schedule,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-schedule quiet".
-
-file="test-suite-schedule.tcl"
-directory="test-output-schedule"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-sctp ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-sctp
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-sctp	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-sctp	1970-01-01 01:00:00.000000000 +0100
@@ -1,47 +0,0 @@
-#! /bin/sh
-#
-# This script contains an outline for the test suite scripts
-#
-# Copyright (c) 2002 by the Protocol Engineering Lab, University of Delaware
-# All rights reserved.
-#
-# Armando L. Caro Jr. <acaro@@cis,udel,edu>
-# Janardhan Iyengar   <iyengar@@cis,udel,edu>
-# Gerard J Heinz II   <heinz@@cis,udel,edu>
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-#
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-#
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-#
-# 3. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-file="test-suite-sctp.tcl"   # name of the ns script
-directory="test-output-sctp" # subdirectory to hold the results
-version="v2"                 # ns version number
-
-# pass all of the arguments to the test-all-template1 script, which
-# will run through all of the test cases defined in test-suite-sctp.tcl.
-
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-session ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-session
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-session	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-session	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-#! /bin/sh
-
-file="test-suite-session.tcl"
-directory="test-output-session"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-simple ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-simple
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-simple	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-simple	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-simple,v 1.1 1998/07/06 20:43:52 heideman Exp $
-#
-#
-# To run in quiet mode:  "./test-all-red quiet".
-
-file="test-suite-simple.tcl"
-directory="test-output-simple"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-simple-full ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-simple-full
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-simple-full	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-simple-full	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-simple-full,v 1.2 2001/05/27 19:36:48 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-red quiet".
-
-file="test-suite-simple-full.tcl"
-directory="test-output-simple-full"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-simultaneous ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-simultaneous
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-simultaneous	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-simultaneous	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-
-NS=../../ns
-ALLSCHEDULERS="List Calendar Heap Splay Map"
-
-tlist=""
-quiet=""
-while test $# -ge 1
-do
-	case $1 in
-	quiet|QUIET) quiet=QUIET;;
-	*) tlist="$tlist $1";;
-	esac
-	shift
-done
-
-if test "$tlist" = ""; then
-    tlist=$ALLSCHEDULERS
-fi
-
-echo Tests: $tlist
-some_failed=false
-for sched in $tlist; do
-    echo Running test $sched:
-    echo $NS test-suite-simultaneous.tcl $sched $quiet
-    if $NS test-suite-simultaneous.tcl $sched $quiet; then
-	echo Test output agrees with reference output
-    else
-	some_failed=true
-	echo Test output differs from reference output
-	echo "See URL \"http://www.isi.edu/nsnam/ns/ns-problems.html\"."
-    fi
-done
-
-if test "$some_failed" = true ; then
-	echo Some test failed.
-	exit 1
-else
-	echo All test output agrees with reference output.
-	exit 0
-fi
-    
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-sliding-window ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-sliding-window
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-sliding-window	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-sliding-window	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-sliding-window quiet".
-#
-
-f="sliding-window"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-smac ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-smac
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-smac	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-smac	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-smac quiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-
-f="smac"	
-file="test-suite-$f.tcl"
-directory="test-output-smac"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-smac-multihop ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-smac-multihop
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-smac-multihop	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-smac-multihop	1970-01-01 01:00:00.000000000 +0100
@@ -1,56 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 2000 by the University of Southern California
-# All rights reserved.
-#
-#  This program is free software; you can redistribute it and/or
-#  modify it under the terms of the GNU General Public License,
-#  version 2, as published by the Free Software Foundation.
-#
-#  This program is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#  GNU General Public License for more details.
-#
-#  You should have received a copy of the GNU General Public License along
-#  with this program; if not, write to the Free Software Foundation, Inc.,
-#  59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
-#
-#  The copyright of this module includes the following
-#  linking-with-specific-other-licenses addition:
-#
-#  In addition, as a special exception, the copyright holders of
-#  this module give you permission to combine (via static or
-#  dynamic linking) this module with free software programs or
-#  libraries that are released under the GNU LGPL and with code
-#  included in the standard release of ns-2 under the Apache 2.0
-#  license or under otherwise-compatible licenses with advertising
-#  requirements (or modified versions of such code, with unchanged
-#  license).  You may copy and distribute such a system following the
-#  terms of the GNU GPL for this module and the licenses of the
-#  other code concerned, provided that you include the source code of
-#  that other code when and as the GNU GPL requires distribution of
-#  source code.
-#
-#  Note that people who make modified versions of this module
-#  are not obligated to grant this special exception for their
-#  modified versions; it is their choice whether to do so.  The GNU
-#  General Public License gives permission to release a modified
-#  version without this exception; this exception also makes it
-#  possible to release a modified version which carries forward this
-#  exception.
-#
-# Contributed by Yuan Li(USC/ISI)
-# To run in quiet mode:  "./test-all-smac-multihop quiet".
-#
-                                                                                                                                                            
-#
-#
-                                                                                                                                                            
-feature="smac-multihop"
-file="test-suite-$feature.tcl"
-directory="test-output-$feature"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-snoop ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-snoop
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-snoop	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-snoop	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 2001 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-snoop QUIET".
-#
-
-f="snoop"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-source-routing ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-source-routing
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-source-routing	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-source-routing	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# Contributed by Rishi Bhargava <rishi_bhargava@yahoo.com> May, 2001.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-source-routing,v 1.1 2001/05/29 20:53:31 haldar Exp $
-#
-
-feature="source-routing"
-file="test-suite-$feature.tcl"
-directory="test-output-$feature"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-srm ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-srm
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-srm	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-srm	1970-01-01 01:00:00.000000000 +0100
@@ -1,34 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-#
-
-
-feature="srm"
-file="test-suite-$feature.tcl"
-directory="test-output-$feature"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tagged-trace ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tagged-trace
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tagged-trace	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tagged-trace	1970-01-01 01:00:00.000000000 +0100
@@ -1,27 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 2002 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-
-# To run in quiet mode:  "./test-all-tagged-trace QUIET".
-
-f="tagged-trace"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcp ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcp
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcp	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcp	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-tcp,v 1.4 1998/07/09 21:11:47 heideman Exp $
-#
-#
-# To run in quiet mode:  "./test-all-tcp quiet".
-
-file="test-suite-tcp.tcl"
-directory="test-output-tcp"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpHighspeed ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpHighspeed
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpHighspeed	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpHighspeed	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-file="test-suite-tcpHighspeed.tcl"
-##
-directory="test-output-tcpHighspeed"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcp-init-win ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcp-init-win
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcp-init-win	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcp-init-win	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-tcp-init-win,v 1.3 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-*** quiet".
-
-file="test-suite-tcp-init-win.tcl"
-directory="test-output-tcp-init-win"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcp-init-win-full ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcp-init-win-full
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcp-init-win-full	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcp-init-win-full	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-tcp-init-win-full,v 1.1 2001/05/28 01:05:29 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-*** quiet".
-
-file="test-suite-tcp-init-win-full.tcl"
-directory="test-output-tcp-init-win-full"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpLinux ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpLinux
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpLinux	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpLinux	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-file="test-suite-tcpLinux.tcl"
-##
-directory="test-output-tcpLinux"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpOptions ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpOptions
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpOptions	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpOptions	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-# To run in quiet mode:  "./test-all-tcpOptions quiet".
-
-file="test-suite-tcpOptions.tcl"
-directory="test-output-tcpOptions"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpReset ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpReset
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpReset	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpReset	1970-01-01 01:00:00.000000000 +0100
@@ -1,41 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-# To run in quiet mode:  "./test-all-tcpReset quiet".
-
-file="test-suite-tcpReset.tcl"
-directory="test-output-tcpReset"
-version="v2"
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpVariants ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpVariants
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tcpVariants	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tcpVariants	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-tcpVariants,v 1.2 2000/10/03 03:12:03 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-tcpVariants quiet".
-
-file="test-suite-tcpVariants.tcl"
-directory="test-output-tcpVariants"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-template1 ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-template1
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-template1	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-template1	1970-01-01 01:00:00.000000000 +0100
@@ -1,157 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-template1,v 1.38 2007/06/11 00:51:15 tom_henderson Exp $
-#
-# The initial version of this script was written and contributed 
-# by Matt Mathis (mathis@psc.edu).
-#
-
-file=$1; shift
-directory=$1; shift
-
-version=$1; shift
-if test "$version" = "v2"; then
-	tests=`awk '/^Class Test\//{ print substr($2,index($2, "/")+1) }' $file`
-else
-	tests=`awk '/^proc test_/{ print substr($2,index($2, "_")+1) }' $file`
-fi
-
-quiet=false
-new=false
-alltests=true
-case $# in
-quiet|QUIET) quiet=true;;
-esac
-# echo "num=$#, args $@"
-while test $# -ge 1
-do
-	case $1 in
-	quiet|QUIET) quiet=true;;
-	new|NEW) new=true;;
-	*) alltests=false; tlist="$tlist $1";;
-	esac
-	shift
-done
-test="$@"
-datafile="temp.rands"
-NS=${NS:-../../ns}
-
-if $alltests
-then
-	:
-else
-	tests=$tlist
-fi
-
-if [ ! -d $directory ]; then
-	if $new
-	then
-		mkdir $directory
-	else
-		echo "no saved test output.  do cvs update -d"
-		echo "or re-run your test with \"new\" as the last argument."
-		exit 1
-	fi
-fi
-
-echo Tests: $tests
-success="true"
-number=0
-for t in $tests; do
-
-    # Beware that xgraph is run asynchronously, and if it
-    # is slow to launch, you may get an incorrect graph
-    sleep 1
-    if $quiet
-    then
-	qflag="QUIET"
-    else
-	qflag=""
-    fi
-    echo Running test $t:
-    echo $NS $file $t $qflag
-    case $file in
-    *-session.tcl | *-mixmode.tcl)
-	$NS $file $t > temp.rands ;;
-    *-mpls.tcl | *-webtraf.tcl | *-message.tcl)
-	$NS $file $t $qflag > temp.rands ;;
-    *)
-	$NS $file $t $qflag ;;
-    esac
-    if test $? = 2 ; then 
-	echo "Test not implemented"
-	continue
-    fi
-    if [ -f $datafile ]; then
-	if [ ! -f $directory/$t.gz ]; then
-	    echo saving output for future validation
-	    success="unknown"
-	    cp $datafile $datafile.bk; gzip -f $datafile  
-	    cp $datafile.bk $datafile
-	    mv $datafile.gz $directory/$t.gz
-	else
-            # OLD: gzip -dc $directory/$t.gz | cmp -s - $datafile
-            # Deleted because it is not supported in Mac OS X, for "cmp".
-	    gzip -dc $directory/$t.gz > temp.randsgz
-            cmp -s temp.randsgz $datafile
-	    if [ $? = 0 ]; then
-		echo Test output agrees with reference output
-	    else
-		echo Test output differs from reference output
-		success="false"
-		cp $datafile $directory/$t.test
-		gzip -dc $directory/$t.gz > $directory/$t
-		echo "Diagnose with: diff $directory/$t.test $directory/$t"
-		echo "Or see URL \"http://www.isi.edu/nsnam/ns/ns-problems.html\"."
-	    fi
-	 fi
-    else
-	success="unknown"
-    fi
-    if $quiet
-    then
-	:
-    else
-        echo 'next?'
-        read answer
-    fi
-done
-# sucess can be true, false, or unknown
-if test "$success" = true; then
-	echo All test output agrees with reference output.
-	exit 0
-else
-	echo Some test failed.
-	exit 1
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-template1.win ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-template1.win
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-template1.win	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-template1.win	1970-01-01 01:00:00.000000000 +0100
@@ -1,151 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-template1.win,v 1.3 2007/06/17 21:52:06 tom_henderson Exp $
-#
-# The initial version of this script was written and contributed 
-# by Matt Mathis (mathis@psc.edu).
-#
-
-file=$1; shift
-directory=$1; shift
-
-version=$1; shift
-if test "$version" = "v2"; then
-	tests=`awk '/^Class Test\//{ print substr($2,index($2, "/")+1) }' $file`
-else
-	tests=`awk '/^proc test_/{ print substr($2,index($2, "_")+1) }' $file`
-fi
-
-quiet=false
-new=false
-alltests=true
-# echo "num=$#, args $@"
-while test $# -ge 1
-do
-	case $1 in
-	quiet|QUIET) quiet=true;;
-	new|NEW) new=true;;
-	*) alltests=false; tlist="$tlist $1";;
-	esac
-	shift
-done
-test="$@"
-datafile="temp.rands"
-NS=${NS:-../../ns}
-
-if $alltests
-then
-	:
-else
-	tests=$tlist
-fi
-
-if [ ! -d $directory ]; then
-	if $new
-	then
-		mkdir $directory
-	else
-		echo "no saved test output.  do cvs update -d"
-		echo "or re-run your test with \"new\" as the last argument."
-		exit 1
-	fi
-fi
-
-echo Tests: $tests
-success="true"
-number=0
-for t in $tests; do
-
-    # Beware that xgraph is run asynchronously, and if it
-    # is slow to launch, you may get an incorrect graph
-    if $quiet
-    then
-        echo $NS $file $t QUIET
-	if (test "$file" = "test-suite-session.tcl") || (test "$file" = "test-suite-mixmode.tcl")
-	then
-	    $NS $file $t > temp.rands
-	else 
-	    $NS $file $t QUIET
-	fi
-    else 
-	echo
-        echo Running test $t:
-	echo $NS $file $t
-	if (test "$file" = "test-suite-session.tcl") || (test "$file" = "test-suite-mixmode.tcl")
-	then
-	    $NS $file $t > temp.rands
-	else 
-	   $NS $file $t 
-	fi
-    fi
-    if [ -f $datafile ]; then
-	if [ ! -f $directory/$t.gz ]; then
-	    echo saving output for future validation
-	    success="unknown"
-	    cp $datafile $datafile.bk; gzip $datafile  
-	    cp $datafile.bk $datafile
-	    mv $datafile.gz $directory/$t.gz
-	else
-	    gzip -dc $directory/$t.gz | perl -ne 'print $_;' | cmp -s - $datafile
-	    if [ $? = 0 ]; then
-		echo Test output agrees with reference output
-	    else
-		echo Test output differs from reference output
-		success="false"
-		cp $datafile $directory/$t.test
-		gzip -dc $directory/$t.gz > $directory/$t
-		echo "Diagnose with: diff $directory/$t.test $directory/$t"
-		echo "Or see URL \"http://www.isi.edu/nsnam/ns/ns-problems.html\"."
-
-	    fi
-	 fi
-    else
-	success="unknown"
-    fi
-    if $quiet
-    then
-	:
-    else
-        echo 'next?'
-        read answer
-    fi
-done
-# sucess can be true, false, or unknown
-if "$success" = true; then
-	echo All test output agrees with reference output.
-	exit 0
-else
-	echo Some test failed.
-	exit 1
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-testReno ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-testReno
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-testReno	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-testReno	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-testReno,v 1.2 2000/10/03 03:12:04 sfloyd Exp $
-#
-#
-# To run in quiet mode:  "./test-all-testReno quiet".
-
-file="test-suite-testReno.tcl"
-directory="test-output-testReno"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-testReno-bayfull ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-testReno-bayfull
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-testReno-bayfull	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-testReno-bayfull	1970-01-01 01:00:00.000000000 +0100
@@ -1,49 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-testReno-bayfull,v 1.1 2001/07/23 18:18:06 haldar Exp $
-#
-#
-# To run in quiet mode:  "./test-all-testReno-bayfull quiet".
-
-file="test-suite-testReno-bayfull.tcl"
-directory="test-output-testReno-bayfull"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-testReno-baytcp ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-testReno-baytcp
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-testReno-baytcp	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-testReno-baytcp	1970-01-01 01:00:00.000000000 +0100
@@ -1,49 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-testReno-baytcp,v 1.1 2001/07/19 22:16:12 haldar Exp $
-#
-#
-# To run in quiet mode:  "./test-all-testReno-full quiet".
-
-file="test-suite-testReno.tcl"
-directory="test-output-testReno"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-testReno-full ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-testReno-full
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-testReno-full	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-testReno-full	1970-01-01 01:00:00.000000000 +0100
@@ -1,48 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-testReno-full,v 1.1 2001/07/03 16:51:00 haldar Exp $
-#
-#
-# To run in quiet mode:  "./test-all-testReno-full quiet".
-
-file="test-suite-testReno-full.tcl"
-directory="test-output-testReno-full"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tmix ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tmix
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-tmix	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-tmix	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-tmix,v 1.1 2008/10/09 15:45:58 mweigle Exp $
-#
-#
-# To run in quiet mode:  "./test-all-tmix quiet".
-
-file="test-suite-tmix.tcl"
-directory="test-output-tmix"
-version="v2"
-
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-vc ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-vc
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-vc	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-vc	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-#! /bin/sh
-
-file="test-suite-vc.tcl"
-directory="test-output-vc"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-vq ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-vq
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-vq	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-vq	1970-01-01 01:00:00.000000000 +0100
@@ -1,47 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-#
-# To run in quiet mode:  "./test-all-vq quiet".
-
-file="test-suite-vq.tcl"
-directory="test-output-vq"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-webcache ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-webcache
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-webcache	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-webcache	1970-01-01 01:00:00.000000000 +0100
@@ -1,54 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) Xerox Corporation 1998. All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify it
-# under the terms of the GNU General Public License as published by the
-# Free Software Foundation; either version 2 of the License, or (at your
-# option) any later version.
-# 
-# This program is distributed in the hope that it will be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License along
-# with this program; if not, write to the Free Software Foundation, Inc.,
-# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-# Linking this file statically or dynamically with other modules is making
-# a combined work based on this file.  Thus, the terms and conditions of
-# the GNU General Public License cover the whole combination.
-# 
-# In addition, as a special exception, the copyright holders of this file
-# give you permission to combine this file with free software programs or
-# libraries that are released under the GNU LGPL and with code included in
-# the standard release of ns-2 under the Apache 2.0 license or under
-# otherwise-compatible licenses with advertising requirements (or modified
-# versions of such code, with unchanged license).  You may copy and
-# distribute such a system following the terms of the GNU GPL for this
-# file and the licenses of the other code concerned, provided that you
-# include the source code of that other code when and as the GNU GPL
-# requires distribution of source code.
-# 
-# Note that people who make modified versions of this file are not
-# obligated to grant this special exception for their modified versions;
-# it is their choice whether to do so.  The GNU General Public License
-# gives permission to release a modified version without this exception;
-# this exception also makes it possible to release a modified version
-# which carries forward this exception.
-#
-# Test suite for web caching code. Based on test-all-full by Kevin.
-#
-# $Header
-
-file="test-suite-webcache.tcl"
-directory="test-output-webcache"
-version="v2"
-if [ $# -ge 1 ]
-then
-	flag=$*
-	./test-all-template1 $file $directory $version $flag
-else
-	./test-all-template1 $file $directory $version
-fi
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-webtraf ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-webtraf
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-webtraf	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-webtraf	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-all-webtraf,v 1.2 2003/01/05 18:56:48 xuanc Exp $
-#
-#
-# To run in quiet mode:  "./test-all-webtraf quiet".
-
-file="test-suite-webtraf.tcl"
-directory="test-output-webtraf"
-version="v2"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-diffusion ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-diffusion
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-diffusion	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-diffusion	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-diffusion quiet".
-#
-
-f="wireless-diffusion"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-gridkeeper ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-gridkeeper
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-gridkeeper	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-gridkeeper	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-
-f="wireless-gridkeeper"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-infra ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-infra
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-infra	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-infra	1970-01-01 01:00:00.000000000 +0100
@@ -1,31 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-f="wireless-infra"
-file="test-suite-$f.tcl"
-directory="test-output-wireless-infra"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-infra-mobility ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-infra-mobility
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-infra-mobility	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-infra-mobility	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-
-f="wireless-infra-mobility"
-file="test-suite-$f.tcl"
-directory="test-output-wireless-infra"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-
-echo "OBSOLETE TEST."
-exit 0
-
-f="wireless-lan"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-aodv ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-aodv
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-aodv	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-aodv	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-
-f="wireless-lan-aodv"	
-file="test-suite-$f.tcl"
-directory="test-output-wireless-lan"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-ap ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-ap
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-ap	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-ap	1970-01-01 01:00:00.000000000 +0100
@@ -1,33 +0,0 @@
-  #! /bin/sh
- 
-  #
-  # Copyright (c) 1998 University of Southern California.
-  # All rights reserved.
-  #
-  # Redistribution and use in source and binary forms are permitted
-  # provided that the above copyright notice and this paragraph are
-  # duplicated in all such forms and that any documentation, advertising
-  # materials, and other materials related to such distribution and use
-  # acknowledge that the software was developed by the University of
-  # Southern California, Information Sciences Institute.  The name of the
-  # University may not be used to endorse or promote products derived
-  # from
-  # this software without specific prior written permission.
-  #
-  # THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-  # WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-  # MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-  #
-  # To run in quiet mode:  "./test-all-wireless-lanquiet".
-  #
-  # Please notice that the new script will reuse the reference output
-  # of wireless lan to make sure that new interface does not change
-  # the behavior of the protocols
- 
-  f="wireless-lan-ap"
-  file="test-suite-$f.tcl"
-  directory="test-output-wireless-lan-ap"
-  version="v2"
-  ./test-all-template1 $file $directory $version $@
- 
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-ap1 ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-ap1
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-ap1	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-ap1	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-
-f="wireless-lan-ap1"	
-file="test-suite-$f.tcl"
-directory="test-output-wireless-lan"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-gaf ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-gaf
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-gaf	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-gaf	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-
-f="wireless-lan-gaf"	
-file="test-suite-$f.tcl"
-directory="test-output-wireless-lan"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-newnode ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-newnode
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-newnode	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-newnode	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-
-f="wireless-lan-newnode"	
-file="test-suite-$f.tcl"
-directory="test-output-wireless-lan"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-newnode-80211Ext ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-newnode-80211Ext
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-newnode-80211Ext	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-newnode-80211Ext	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-
-f="wireless-lan-newnode-80211Ext"	
-file="test-suite-$f.tcl"
-directory="test-output-wireless-lan-newnode-80211Ext"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-tora ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-tora
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-lan-tora	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-lan-tora	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-lanquiet".
-#
-# Please notice that the new script will reuse the reference output
-# of wireless lan to make sure that new interface does not change
-# the behavior of the protocols
-
-f="wireless-lan-tora"	
-file="test-suite-$f.tcl"
-directory="test-output-wireless-lan"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-shadowing ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-shadowing
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-shadowing	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-shadowing	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998, 2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-shadowing quiet".
-#
-
-f="wireless-shadowing"	
-file="test-suite-$f.tcl"
-directory="test-output-wireless-shadowing"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-tdma ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-tdma
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wireless-tdma	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wireless-tdma	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-wireless-tdma quiet".
-#
-
-f="wireless-tdma"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-#echo "arg=$@"
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-WLtutorial ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-WLtutorial
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-WLtutorial	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-WLtutorial	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-WLtutorial quiet".
-#
-
-f="WLtutorial"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"	
-./test-all-template1 $file $directory $version $@
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wpan ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wpan
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-wpan	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-wpan	1970-01-01 01:00:00.000000000 +0100
@@ -1,43 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 2003-2004 Samsung Advanced Institute of Technology and
-# The City University of New York. All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by the Joint Lab of Samsung 
-#      Advanced Institute of Technology and The City University of New York.
-# 4. Neither the name of Samsung Advanced Institute of Technology nor of 
-#    The City University of New York may be used to endorse or promote 
-#    products derived from this software without specific prior written 
-#    permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE JOINT LAB OF SAMSUNG ADVANCED INSTITUTE
-# OF TECHNOLOGY AND THE CITY UNIVERSITY OF NEW YORK ``AS IS'' AND ANY EXPRESS 
-# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
-# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN 
-# NO EVENT SHALL SAMSUNG ADVANCED INSTITUTE OR THE CITY UNIVERSITY OF NEW YORK 
-# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
-# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
-# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
-# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-file="test-suite-wpan.tcl"   # test script
-directory="test-output-wpan" # output directory
-version="v2"                 # ns version
-
-# call test-all-template1 script, which will then run through all the tests 
-# defined in test-suite-wpan.tcl.
-
-./test-all-template1 $file $directory $version $@
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-xcp ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-xcp
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-all-xcp	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-all-xcp	1970-01-01 01:00:00.000000000 +0100
@@ -1,30 +0,0 @@
-#! /bin/sh
-
-#
-# Copyright (c) 2001 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived 
-# from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# To run in quiet mode:  "./test-all-xcp QUIET".
-#
-
-f="xcp"	
-file="test-suite-$f.tcl"
-directory="test-output-$f"
-version="v2"
-./test-all-template1 $file $directory $version $@
-rm -rf xcp*.tr ft_red*.tr
-
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/cautious2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/cautious2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/cautious3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/cautious3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/cautious.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/cautious.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAdapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAdapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAllAdapt1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAllAdapt1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAllAdaptECN.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAllAdaptECN.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAllAdapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAllAdapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAutothresh.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAutothresh.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAutowq.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/fastlinkAutowq.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/fastlink.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/fastlink.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/longlinkAdapt1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/longlinkAdapt1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/longlinkAdapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/longlinkAdapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/longlink.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/longlink.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/notcautious.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/notcautious.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red1AdaptECN.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red1AdaptECN.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red1AdaptFeng.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red1AdaptFeng.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red1Adapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red1Adapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red1ECN.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red1ECN.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red2A-Adapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red2A-Adapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red2-AdaptFeng.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red2-AdaptFeng.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red2Adapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red2Adapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red3Adapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red3Adapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red4Adapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red4Adapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/red5Adapt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/red5Adapt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/transient1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/transient1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/transient2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/transient2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-adaptive-red/transient.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-adaptive-red/transient.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/binomial1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/binomial1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/binomial2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/binomial2.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/.cvsignore	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,22 +0,0 @@
-*.test
-binomial1
-binomial2
-ssthreshA
-ssthresh_secondA
-tcpA_newreno
-tcpA_precise_newreno
-tcpA_precise_reno
-tcpA_precise_tahoe
-tcpA_reno
-tcpA_tahoe
-tcpB
-tcp_newreno
-tcp_reno
-tcp_sack
-tcp_tahoe
-timeouts
-ssthresh_second
-ssthresh
-tcpA_precise
-tcpA
-tcp
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/ssthreshA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/ssthreshA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/ssthresh.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/ssthresh.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/ssthresh_secondA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/ssthresh_secondA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/ssthresh_second.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/ssthresh_second.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpA_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpA_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpA_precise.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpA_precise.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpA_precise_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpA_precise_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpA_precise_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpA_precise_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpA_precise_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpA_precise_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpA_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpA_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpA_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpA_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcpB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcpB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcp_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcp_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcp_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcp_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcp_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcp_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/tcp_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/tcp_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-aimd/timeouts.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-aimd/timeouts.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-algo-routing/Algo1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-algo-routing/Algo1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-algo-routing/Algo2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-algo-routing/Algo2.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-algo-routing/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-algo-routing/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-algo-routing/.cvsignore	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-algo-routing/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-*.test
-Algo1
-Algo2
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-broken/tahoe4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-broken/tahoe4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-broken/tahoe4-nobugfix.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-broken/tahoe4-nobugfix.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/AO.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/AO.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/.cvsignore	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,24 +0,0 @@
-*.test
-AO
-EXTRA1
-EXTRA2
-FORMAL_TCP
-MAX1
-MAX2
-MIN1
-MIN3
-MIN4
-MIN6
-PRR
-TL
-TwoAO2
-TwoAO3
-TwoDynamic1WRR
-TwoF
-TwoTL
-TwoWRR
-FORMAL
-TwoAO
-TwoDynamic1
-TwoDynamic
-WRR
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/EXTRA1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/EXTRA1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/EXTRA2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/EXTRA2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/FORMAL.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/FORMAL.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/FORMAL_TCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/FORMAL_TCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/MAX1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/MAX1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/MAX2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/MAX2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/MIN1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/MIN1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/MIN3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/MIN3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/MIN4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/MIN4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/MIN6.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/MIN6.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/PRR.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/PRR.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TL.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TL.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoAO2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoAO2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoAO3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoAO3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoAO.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoAO.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoDynamic1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoDynamic1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoDynamic1WRR.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoDynamic1WRR.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoDynamic.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoDynamic.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoTL.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoTL.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/TwoWRR.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/TwoWRR.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq/WRR.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq/WRR.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq-v1/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq-v1/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-cbq-v1/.cvsignore	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-cbq-v1/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,20 +0,0 @@
-*.test
-cbqAO
-cbqExtra1
-cbqExtra2
-cbqFor
-cbqForOld
-cbqMax1
-cbqMax2
-cbqMin1
-cbqMin3
-cbqMin4
-cbqMin6
-cbqPRR
-cbqTL
-cbqTwoAO
-cbqTwoAO2
-cbqTwoAO3
-cbqTwoF
-cbqTwoTL
-cbqWRR
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-delaybox/full-asymmetric.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-delaybox/full-asymmetric.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-delaybox/full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-delaybox/full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-delaybox/oneway-asymmetric.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-delaybox/oneway-asymmetric.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-delaybox/oneway.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-delaybox/oneway.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffserv/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffserv/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffserv/.cvsignore	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffserv/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-*.test
-srtcm
-tb
-trtcm
-tsw2cm
-tsw3cm
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffserv/srtcm.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffserv/srtcm.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffserv/tb.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffserv/tb.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffserv/trtcm.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffserv/trtcm.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffserv/tsw2cm.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffserv/tsw2cm.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffserv/tsw3cm.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffserv/tsw3cm.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/1pp-10n-1s-4r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/1pp-10n-1s-4r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/1pp-10n-4s-1r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/1pp-10n-4s-1r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/1pp-5n-1s-1r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/1pp-5n-1s-1r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/2pp-10n-1s-4r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/2pp-10n-1s-4r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/2pp-10n-4s-1r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/2pp-10n-4s-1r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/2pp-5n-1s-1r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/2pp-5n-1s-1r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/gear-2pp-10n-4s-1r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/gear-2pp-10n-4s-1r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/gear-2pp-5n-1s-1r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/gear-2pp-5n-1s-1r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/gear-push-10n-1s-4r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/gear-push-10n-1s-4r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/push-10n-1s-4r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/push-10n-1s-4r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/push-10n-4s-1r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/push-10n-4s-1r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/push-5n-1s-1r.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/push-5n-1s-1r.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-diffusion3/simple-ping.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-diffusion3/simple-ping.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/.cvsignore	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,88 +0,0 @@
-*.test
-ecn1
-ecn_burstyEcn1_sack
-ecn_burstyEcn_newreno
-ecn_burstyEcn_reno
-ecn_burstyEcn_sack
-ecn_burstyEcn_tahoe
-ecn_bursty_newreno
-ecn_bursty_reno
-ecn_bursty_sack
-ecn_bursty_tahoe
-ecn_drop1_newreno_delack
-ecn_drop1_reno_delack
-ecn_drop1_sack_delack
-ecn_drop1_tahoe_delack
-ecn_drop2_tahoe
-ecn_drop_newreno_delack
-ecn_drop_reno_delack
-ecn_drop_sack_delack
-ecn_drop_tahoe_delack
-ecn_fourdrops_sack
-ecn_noBugfix_reno
-ecn_noBugfix_sack
-ecn_noBugfix_tahoe
-ecn_nodrop_newreno_delack
-ecn_nodrop_reno_delack
-ecn_nodrop_sack_delack
-ecn_nodrop_tahoe_delack
-ecn_noecn_newreno
-ecn_noecn_reno
-ecn_noecn_sack
-ecn_noecn_tahoe
-ecn_secondpkt1Ecn_tahoe
-ecn_secondpktEcn_newreno
-ecn_secondpktEcn_reno
-ecn_secondpktEcn_sack
-ecn_secondpktEcn_tahoe
-ecn_secondpkt_newreno
-ecn_secondpkt_reno
-ecn_secondpkt_sack
-ecn_secondpkt_tahoe
-ecn_smallwin1Ecn_reno
-ecn_smallwin1Ecn_sack
-ecn_smallwin1Ecn_tahoe
-ecn_smallwin2Ecn_tahoe
-ecn_smallwin3Ecn_tahoe
-ecn_smallwinEcn_newreno_delack
-ecn_smallwinEcn_reno_delack
-ecn_smallwinEcn_sack_delack
-ecn_smallwinEcn_tahoe_delack
-ecn_smallwin_newreno
-ecn_smallwin_reno
-ecn_smallwin_sack
-ecn_smallwin_tahoe
-ecn_timeout1_newreno
-ecn_timeout1_reno
-ecn_timeout1_sack
-ecn_timeout2_tahoe
-ecn_timeout3_tahoe
-ecn_timeout_newreno
-ecn_timeout_reno
-ecn_timeout_sack
-ecn_timeout_tahoe
-ecn_twoecn_newreno_delack
-ecn_twoecn_reno_delack
-ecn_twoecn_sack_delack
-ecn_twoecn_tahoe_delack
-ecn_drop1_newreno
-ecn_drop1_reno
-ecn_drop1_sack
-ecn_drop1_tahoe
-ecn_drop_newreno
-ecn_drop_reno
-ecn_drop_sack
-ecn_drop_tahoe
-ecn_nodrop_newreno
-ecn_nodrop_reno
-ecn_nodrop_sack
-ecn_nodrop_tahoe
-ecn_smallwinEcn_newreno
-ecn_smallwinEcn_reno
-ecn_smallwinEcn_sack
-ecn_smallwinEcn_tahoe
-ecn_twoecn_newreno
-ecn_twoecn_reno
-ecn_twoecn_sack
-ecn_twoecn_tahoe
-ecn
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn1_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn1_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_burstyEcn_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_bursty_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_bursty_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_bursty_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_bursty_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_bursty_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_bursty_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_bursty_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_bursty_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_newreno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_newreno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_reno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_reno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_sack_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_sack_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_tahoe_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_tahoe_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop1_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop2_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop2_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop_newreno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop_newreno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop_reno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop_reno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop_sack_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop_sack_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop_tahoe_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop_tahoe_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_drop_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_drop_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_fourdrops_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_fourdrops_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_noBugfix_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_noBugfix_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_noBugfix_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_noBugfix_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_noBugfix_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_noBugfix_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_newreno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_newreno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_reno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_reno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_sack_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_sack_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_tahoe_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_tahoe_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_nodrop_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_noecn_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_noecn_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_noecn_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_noecn_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_noecn_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_noecn_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_noecn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_noecn_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt1Ecn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt1Ecn_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpktEcn_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpktEcn_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpktEcn_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpktEcn_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpktEcn_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpktEcn_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpktEcn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpktEcn_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_secondpkt_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin1Ecn_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin1Ecn_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin1Ecn_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin1Ecn_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin1Ecn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin1Ecn_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin2Ecn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin2Ecn_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin3Ecn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin3Ecn_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_newreno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_newreno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_reno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_reno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_sack_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_sack_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_tahoe_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_tahoe_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwinEcn_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_smallwin_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout1_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout1_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout1_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout1_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout1_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout1_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout2_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout2_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout3_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout3_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_timeout_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_timeout_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_newreno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_newreno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_reno_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_reno_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_sack_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_sack_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_tahoe_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_tahoe_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn/ecn_twoecn_tahoe.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/.cvsignore	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-*.test
-ecn_ack
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/ecn_ack_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/ecn_ack_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/ecn_ack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/ecn_ack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/ecnsetup.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/ecnsetup.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack0A.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack0A.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack0_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack0_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack0.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack0.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack-15.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack-15.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack1_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack1_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack2a_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack2a_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack2b_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack2b_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack2_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack2_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3a_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3a_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3b_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3b_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3c_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3c_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3d_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3d_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3e_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3e_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3f_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3f_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3g_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3g_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack3h_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack3h_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack4c_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack4c_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack-4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack-4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack-4-maxconnect.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack-4-maxconnect.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack-5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack-5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack-5-maxconnect.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack-5-maxconnect.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack_fulltcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-ack/synack_many_fulltcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-ack/synack_many_fulltcp.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/.cvsignore	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,13 +0,0 @@
-*.test
-ecn_burstyEcn_reno_full
-ecn_bursty_reno_full
-ecn_drop1_reno_full
-ecn_drop_reno_full
-ecn_full
-ecn_noBugfix_reno_full
-ecn_nodrop_reno_full
-ecn_noecn_reno_full
-ecn_smallwin_reno_full
-ecn_timeout1_reno_full
-ecn_timeout_reno_full
-ecn_twoecn_reno_full
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn1_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn1_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_burstyEcn_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_bursty_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_bursty_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_bursty_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_bursty_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_bursty_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_bursty_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_bursty_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_bursty_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_newreno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_newreno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_reno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_reno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_sack_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_sack_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_tahoe_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_tahoe_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop1_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop2_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop2_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_newreno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_newreno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_reno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_reno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_sack_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_sack_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_tahoe_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_tahoe_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_drop_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_fourdrops_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_fourdrops_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_noBugfix_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_noBugfix_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_noBugfix_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_noBugfix_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_noBugfix_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_noBugfix_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_newreno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_newreno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_reno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_reno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_sack_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_sack_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_tahoe_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_tahoe_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_nodrop_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_noecn_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_noecn_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_noecn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_noecn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_noecn_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_noecn_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_noecn_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_noecn_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpktEcn_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpktEcn_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpktEcn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpktEcn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpktEcn_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpktEcn_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpktEcn_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpktEcn_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpkt_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpkt_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpkt_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpkt_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpkt_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpkt_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpkt_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_secondpkt_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin1Ecn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin1Ecn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin1Ecn_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin1Ecn_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin1Ecn_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin1Ecn_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin2Ecn_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin2Ecn_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin3Ecn_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin3Ecn_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_newreno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_newreno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_reno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_reno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_sack_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_sack_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_tahoe_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_tahoe_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwinEcn_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_smallwin_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout1_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout1_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout1_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout1_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout1_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout1_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout2_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout2_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout3_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout3_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_timeout_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_newreno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_newreno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_reno_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_reno_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_sack_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_sack_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_tahoe_full_delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_tahoe_full_delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-ecn-full/ecn_twoecn_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-energy/aodv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-energy/aodv.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-energy/brdcast0.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-energy/brdcast0.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-energy/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-energy/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-energy/.cvsignore	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-energy/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-*.test
-aodv
-dsdv
-dsr
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-energy/dsdv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-energy/dsdv.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-energy/dsr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-energy/dsr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-examples/oneTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-examples/oneTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-examples/oneTFRC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-examples/oneTFRC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-examples/twoTCPs.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-examples/twoTCPs.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/BadParams.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/BadParams.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/.cvsignore	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,34 +0,0 @@
-*.test
-BadParams
-HighLossConservative
-HighLossTCP
-impulseCA
-impulseDiscountCA
-impulseMultReportCA
-impulseMultReportDiscountCA
-impulseTcp
-manyDrops
-OnlyTcp
-printLosses
-randomized1CA
-randomizedCA
-slowStartCA
-slowStartDiscountCA
-slowStartEWMA
-slowStartFixed
-slowStartTcp
-smoothCA
-twoDrops
-two-friendlyCA
-HighLoss
-impulseDiscount
-impulseMultReportDiscount
-impulseMultReport
-impulse
-randomized1
-randomized
-slowStartDiscount
-slowStart
-slow
-smooth
-two-friendly
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/delayedTCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/delayedTCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/delayedTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/delayedTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/delayedTFRC1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/delayedTFRC1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/delayedTFRC2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/delayedTFRC2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/delayedTFRC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/delayedTFRC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/droppedTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/droppedTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/droppedTFRC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/droppedTFRC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/ecn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/ecn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/goodTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/goodTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/goodTFRC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/goodTFRC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/HighLossConservative.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/HighLossConservative.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/HighLoss.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/HighLoss.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/HighLossImprecise.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/HighLossImprecise.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/HighLossMinRTO.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/HighLossMinRTO.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/HighLossShort.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/HighLossShort.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/HighLossTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/HighLossTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/idleTcp1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/idleTcp1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/idleTcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/idleTcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/idleTfrc1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/idleTfrc1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/idleTfrc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/idleTfrc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulseCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulseCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulseDiscountCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulseDiscountCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulseDiscount.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulseDiscount.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulse.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulse.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulseMultReportCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulseMultReportCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulseMultReportDiscountCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulseMultReportDiscountCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulseMultReportDiscount.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulseMultReportDiscount.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulseMultReport.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulseMultReport.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/impulseTcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/impulseTcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/initRate.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/initRate.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/initRateLarge.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/initRateLarge.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/initRateLarger.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/initRateLarger.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/initRateNo_ss_changes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/initRateNo_ss_changes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/initRateRFC3390.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/initRateRFC3390.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/manyDrops.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/manyDrops.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/noVoip.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/noVoip.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/OnlyTcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/OnlyTcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/printLosses.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/printLosses.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/printLossesShort3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/printLossesShort3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/printLossesShort.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/printLossesShort.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/randomized1CA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/randomized1CA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/randomized1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/randomized1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/randomizedCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/randomizedCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/randomized.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/randomized.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/shortIdleTcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/shortIdleTcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slow.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slow.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slowStartCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slowStartCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slowStartDiscount1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slowStartDiscount1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slowStartDiscountCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slowStartDiscountCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slowStartDiscount.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slowStartDiscount.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slowStartEWMA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slowStartEWMA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slowStartFixed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slowStartFixed.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slowStart.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slowStart.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/slowStartTcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/slowStartTcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/smoothCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/smoothCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/smooth.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/smooth.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/statsTFRC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/statsTFRC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/TFRC_CBR.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/TFRC_CBR.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/TFRC_FTP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/TFRC_FTP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/tfrcOnly.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/tfrcOnly.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/tfrcOnlyHighLoss1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/tfrcOnlyHighLoss1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/tfrcOnlyHighLoss.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/tfrcOnlyHighLoss.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/twoDrops.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/twoDrops.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/two-friendlyCA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/two-friendlyCA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/two-friendly.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/two-friendly.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/voipEcn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/voipEcn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/voip.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/voip.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/voipHeader.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/voipHeader.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-friendly/voipNoHeader.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-friendly/voipNoHeader.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-frto/delaySpikesSack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-frto/delaySpikesSack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-frto/dropsNDelaySpikes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-frto/dropsNDelaySpikes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-frto/immediateAck.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-frto/immediateAck.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-frto/immediateAckNewReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-frto/immediateAckNewReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-frto/immediateAckReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-frto/immediateAckReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-frto/noImmediateAckNewReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-frto/noImmediateAckNewReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-frto/noImmediateAckSack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-frto/noImmediateAckSack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-frto/spikeNDupAck.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-frto/spikeNDupAck.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/close.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/close.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/.cvsignore	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,30 +0,0 @@
-*.test
-SSR
-SSR2
-close
-delack
-droppedfastrexmit
-droppedfin
-droppedfirstseg
-droppedlastseg
-droppednearfin
-droppednearretransmit
-droppedretransmit
-droppedsecondseg
-droppedsyn
-ecn1
-ecn2
-full
-iw=4
-oneway_bsdcompat
-simul-close
-simul-open
-smallpkts
-telnet
-telnet2
-tsopt
-twoway
-twoway1
-twoway_bsdcompat
-twowayrandom
-winlimited
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/delack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/delack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppedfastrexmit.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppedfastrexmit.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppedfin.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppedfin.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppedfirstseg.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppedfirstseg.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppedlastseg.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppedlastseg.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppednearfin.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppednearfin.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppednearretransmit.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppednearretransmit.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppedretransmit.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppedretransmit.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppedsecondseg.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppedsecondseg.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/droppedsyn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/droppedsyn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/ecn1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/ecn1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/ecn2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/ecn2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/iw=4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/iw=4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/oneway_bsdcompat.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/oneway_bsdcompat.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/simul-close.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/simul-close.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/simul-open.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/simul-open.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/smallpkts.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/smallpkts.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/SSR2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/SSR2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/SSR.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/SSR.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/telnet2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/telnet2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/telnet.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/telnet.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/tsopt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/tsopt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/twoway1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/twoway1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/twoway_bsdcompat.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/twoway_bsdcompat.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/twoway.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/twoway.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/twowayrandom.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/twowayrandom.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full/winlimited.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full/winlimited.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/ecn-drop-synack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/ecn-drop-synack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/ecn-rexmt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/ecn-rexmt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/reno-drop-lastack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/reno-drop-lastack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/reno-drop-passive-fin.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/reno-drop-passive-fin.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/reno-drop-synack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/reno-drop-synack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/reno-msg_eof-fin.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/reno-msg_eof-fin.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/sack-burst-2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/sack-burst-2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/sack-burst.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/sack-burst.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/sack-dropwin.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/sack-dropwin.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/sack-ecn-drop-mark.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/sack-ecn-drop-mark.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/sack-illegal-sack-block.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/sack-illegal-sack-block.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-full-fixes/sack-send-past-fin.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-full-fixes/sack-send-past-fin.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-gk/gk1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-gk/gk1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-gk/gk2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-gk/gk2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-gk/gk_twoway.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-gk/gk_twoway.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/.cvsignore	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,8 +0,0 @@
-*.test
-example1a
-example1b
-example2
-example3
-example4
-ping
-example1
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/example1a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/example1a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/example1b.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/example1b.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/example1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/example1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/example2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/example2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/example3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/example3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/example4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/example4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/ping.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/ping.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-greis/pingOneWay.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-greis/pingOneWay.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/.cvsignore	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,8 +0,0 @@
-*.test
-hier-cmcast-bc
-hier-deDM
-hier-session-bc
-hier-simple-bc
-hier-cmcast
-hier-session
-hier-simple
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/hier-cmcast-bc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/hier-cmcast-bc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/hier-cmcast.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/hier-cmcast.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/hier-deDM.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/hier-deDM.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/hier-session-bc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/hier-session-bc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/hier-session.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/hier-session.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/hier-simple-bc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/hier-simple-bc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-hier-routing/hier-simple.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-hier-routing/hier-simple.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-intserv/ACTO.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-intserv/ACTO.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-intserv/ACTP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-intserv/ACTP.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-intserv/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-intserv/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-intserv/.cvsignore	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-intserv/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-*.test
-ACTO
-ACTP
-HB
-MS
-Param
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-intserv/HB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-intserv/HB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-intserv/MS.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-intserv/MS.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-intserv/Param.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-intserv/Param.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-jobs/jobs-lossdel.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-jobs/jobs-lossdel.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-jobs/jobs-rate.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-jobs/jobs-rate.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/congested.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/congested.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/.cvsignore	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-*.test
-lan-broadcast
-lan-routing-flat
-lan-routing-hier
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/lan-abstract.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/lan-abstract.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/lan-broadcast.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/lan-broadcast.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/lan-mactrace.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/lan-mactrace.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/lan-routing-flat.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/lan-routing-flat.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/lan-routing-flat-qlimit.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/lan-routing-flat-qlimit.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-lan/lan-routing-hier.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-lan/lan-routing-hier.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-LimTransmit/nodrop_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-LimTransmit/nodrop_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-LimTransmit/onedrop_ECN_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-LimTransmit/onedrop_ECN_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-LimTransmit/onedrop_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-LimTransmit/onedrop_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-LimTransmit/onedrop_SA_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-LimTransmit/onedrop_SA_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/changeBandwidth.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/changeBandwidth.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/changeDelay1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/changeDelay1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/changeDelay2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/changeDelay2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/changeDelay.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/changeDelay.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/change_queue.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/change_queue.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/channelAllocDelay1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/channelAllocDelay1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/channelAllocDelay.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/channelAllocDelay.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/.cvsignore	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,5 +0,0 @@
-*.test
-changeBandwidth
-changeDelay
-links1
-links
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/delayPacket1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/delayPacket1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/delayPacket.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/delayPacket.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/delaySpike1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/delaySpike1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/delaySpike.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/delaySpike.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/delaySpikes1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/delaySpikes1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/delaySpikes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/delaySpikes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/dropPacket.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/dropPacket.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/links1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/links1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/links.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/links.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-links/queue_shrink.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-links/queue_shrink.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-linkstate/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-linkstate/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-linkstate/.cvsignore	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-linkstate/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-*.test
-eqp
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-linkstate/eqp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-linkstate/eqp.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-manual-routing/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-manual-routing/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-manual-routing/.cvsignore	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-manual-routing/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-*.test
-one_client
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-manual-routing/one_client.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-manual-routing/one_client.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/.cvsignore	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-*.test
-media1
-media2
-media3a
-media4a
-media5a
-media5b
-media3
-media4
-media5
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media3a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media3a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media4a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media4a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media5a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media5a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media5b.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media5b.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcache/media5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcache/media5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/CtrMcast1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/CtrMcast1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/CtrMcast2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/CtrMcast2.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/.cvsignore	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,16 +0,0 @@
-*.test
-CtrMcast2
-detailedDM2
-detailedDM3
-detailedDM6
-detailedDM7
-CtrMcast1
-detailedDM1
-detailedDM4
-detailedDM5
-ST1
-DM1
-DM2
-DM3
-DM4
-DM5
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/detailedDM1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/detailedDM1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/detailedDM2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/detailedDM2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/detailedDM3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/detailedDM3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/detailedDM4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/detailedDM4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/detailedDM5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/detailedDM5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/detailedDM6.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/detailedDM6.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/detailedDM7.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/detailedDM7.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/DM1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/DM1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/DM2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/DM2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/DM3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/DM3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/DM4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/DM4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/DM5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/DM5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mcast/ST1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mcast/ST1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-message/wired.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-message/wired.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mip/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mip/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mip/.cvsignore	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mip/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-*.test
-mip-adv-multi
-mip-adv-one
-mip-adv-zero
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mip/mip-adv-multi.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mip/mip-adv-multi.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mip/mip-adv-one.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mip/mip-adv-one.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mip/mip-adv-zero.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mip/mip-adv-zero.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-misc/stats64.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-misc/stats64.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/.cvsignore	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-*.test
-Mixmode10
-Mixmode2
-Mixmode3
-Mixmode4
-Mixmode5
-Mixmode6
-Mixmode7
-Mixmode8
-Mixmode9
-Mixmode1
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode10.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode10.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode6.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode6.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode7.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode7.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode8.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode8.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mixmode/Mixmode9.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mixmode/Mixmode9.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-monitor/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-monitor/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-monitor/.cvsignore	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-monitor/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-*.test
-tcp-monitor
-tcp
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-monitor/tcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-monitor/tcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-monitor/tcp-monitor.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-monitor/tcp-monitor.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mpls/control-driven.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mpls/control-driven.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mpls/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mpls/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mpls/.cvsignore	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mpls/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,5 +0,0 @@
-*.test
-control-driven
-data-driven
-reroute
-simple
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mpls/data-driven.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mpls/data-driven.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mpls/reroute.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mpls/reroute.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-mpls/simple.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-mpls/simple.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/.cvsignore	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,15 +0,0 @@
-*.test
-newreno1_A
-newreno1_B0
-newreno2_A_bugfix
-newreno2_B_bugfix
-newreno_B
-reno2_bugfix
-newreno1_B
-newreno1
-newreno2_A
-newreno2_B
-newreno
-reno1
-reno2
-reno
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/impatient1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/impatient1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/impatient2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/impatient2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/impatient3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/impatient3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/impatient4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/impatient4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1A_A_BF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1A_A_BF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1A_A_BF_LC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1A_A_BF_LC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1A_A.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1A_A.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1A_A_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1A_A_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_A_BF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_A_BF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_A_BF_LC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_A_BF_LC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_A.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_A.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_A_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_A_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_B0.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_B0.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_B_BF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_B_BF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_B_BF_LC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_B_BF_LC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_BF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_BF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_B.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_B.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1_B_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1_B_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno2_A_bugfix.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno2_A_bugfix.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno2_A_bugfix_LC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno2_A_bugfix_LC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno2_A.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno2_A.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno2_A_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno2_A_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno2_B_bugfix.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno2_B_bugfix.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno2_B_bugfix_LC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno2_B_bugfix_LC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno2_B.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno2_B.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno2_B_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno2_B_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno5_LC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno5_LC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno5_noBF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno5_noBF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno5_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno5_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno5_noLT_LC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno5_noLT_LC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno5_noLT_noBF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno5_noLT_noBF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno6.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno6.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_B.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_B.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_B_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_B_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_dup_ack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_dup_ack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_dup.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_dup.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_dup_ts.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_dup_ts.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_dup_tsh.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_dup_tsh.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss_ackf.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss_ackf.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss_ack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss_ack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss_ts.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss_ts.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss_tsh.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/newreno_rto_loss_tsh.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno2_bugfix.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno2_bugfix.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno2_bugfix_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno2_bugfix_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno2_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno2_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno5a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno5a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno5a_noLT_noBF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno5a_noLT_noBF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno5_noBF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno5_noBF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno5_noLT_noBF.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno5_noLT_noBF.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/reno_noLT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/reno_noLT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/sack5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/sack5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/slow1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/slow1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/slow2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/slow2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/slow3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/slow3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-newreno/slow4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-newreno/slow4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-nixvec/NixVec.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-nixvec/NixVec.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-nixvec/NoNixVec.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-nixvec/NoNixVec.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-nixvec/quite.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-nixvec/quite.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-oddBehaviors/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-oddBehaviors/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-oddBehaviors/.cvsignore	2015-03-04 17:49:02.786750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-oddBehaviors/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-*.test
-onedrop_reno
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-oddBehaviors/onedrop_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-oddBehaviors/onedrop_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-oddBehaviors/onedrop_sack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-oddBehaviors/onedrop_sack1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-oddBehaviors/onedrop_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-oddBehaviors/onedrop_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/1node-http_1_0_ecn+B.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/1node-http_1_0_ecn+B.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/1node-http_1_0_ecn+.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/1node-http_1_0_ecn+.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/1node-http_1_0.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/1node-http_1_0.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/1node-http_1_1_ecn+B.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/1node-http_1_1_ecn+B.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/1node-http_1_1_ecn+.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/1node-http_1_1_ecn+.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/1node-http_1_1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/1node-http_1_1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/2node-http_1_1_ecn+B.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/2node-http_1_1_ecn+B.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/2node-http_1_1_ecn+.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/2node-http_1_1_ecn+.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-packmime/2node-http_1_1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-packmime/2node-http_1_1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pi/ecn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pi/ecn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pi/pi1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pi/pi1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pi/pi2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pi/pi2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pi/pi_twowaybytes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pi/pi_twowaybytes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pi/pi_twoway.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pi/pi_twoway.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-plm/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-plm/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-plm/.cvsignore	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-plm/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-*.test
-PLM
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-plm/PLM.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-plm/PLM.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/A_ACC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/A_ACC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/A_noACC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/A_noACC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/A_Push.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/A_Push.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/cbrs1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/cbrs1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/cbrs-acc1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/cbrs-acc1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/cbrs-acc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/cbrs-acc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/cbrs.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/cbrs.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/demo-acc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/demo-acc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/demo.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/demo.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/onoff-acc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/onoff-acc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/onoff.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/onoff.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/slowgrow-acc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/slowgrow-acc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/slowgrow.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/slowgrow.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/tcp1-acc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/tcp1-acc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/tcp1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/tcp1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/tcp2-acc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/tcp2-acc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/tcp2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/tcp2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/tcp-acc.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/tcp-acc.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-pushback/tcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-pushback/tcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/bad_router.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/bad_router.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/changing_rtt1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/changing_rtt1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/changing_rtt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/changing_rtt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/high_request.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/high_request.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/many_requests1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/many_requests1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/many_requests2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/many_requests2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/many_requests3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/many_requests3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/many_requests.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/many_requests.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/no_acks_back.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/no_acks_back.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/no_quickstart.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/no_quickstart.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/pkt_drops.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/pkt_drops.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/quickstart1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/quickstart1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/quickstart2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/quickstart2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/quickstart3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/quickstart3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/quickstart4full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/quickstart4full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/quickstart4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/quickstart4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/quickstart.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/quickstart.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/rate_request1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/rate_request1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/rate_request2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/rate_request2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/rate_request3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/rate_request3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/rate_request4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/rate_request4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/rate_request.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/rate_request.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/routers1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/routers1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/routers2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/routers2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/routers3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/routers3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/routers4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/routers4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/routers5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/routers5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/routers6.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/routers6.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/small-request.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/small-request.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/stats1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/stats1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quickstart/stats.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quickstart/stats.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tcp_cbr_CWV.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tcp_cbr_CWV.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tcp_cbr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tcp_cbr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tcp_onoff.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tcp_onoff.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tcp_telnet_CWV.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tcp_telnet_CWV.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tcp_telnet.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tcp_telnet.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tfrc_cbr_conservative.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tfrc_cbr_conservative.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tfrc_cbr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tfrc_cbr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tfrc_onoff.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tfrc_onoff.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tfrc_onoff_oldcode.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tfrc_onoff_oldcode.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-quiescent/tfrc_telnet.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-quiescent/tfrc_telnet.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rap/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rap/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rap/.cvsignore	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rap/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,7 +0,0 @@
-*.test
-diff_decrease_rap
-diff_increase_rap
-fourdrops_rap
-onedrop_rap
-threedrops_rap
-twodrops_rap
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rap/diff_decrease_rap.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rap/diff_decrease_rap.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rap/diff_increase_rap.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rap/diff_increase_rap.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rap/fourdrops_rap.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rap/fourdrops_rap.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rap/onedrop_rap.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rap/onedrop_rap.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rap/threedrops_rap.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rap/threedrops_rap.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rap/twodrops_rap.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rap/twodrops_rap.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/.cvsignore	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,8 +0,0 @@
-*.test
-reno_pacing
-vegas_pacing_rate
-vegas_pacing_cwnd
-reno_slow_start_restart
-reno_no_slow_start_restart
-vegas_slow_start_restart
-vegas_no_slow_start_restart
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/reno_no_slow_start_restart.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/reno_no_slow_start_restart.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/reno_pacing.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/reno_pacing.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/reno_slow_start_restart.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/reno_slow_start_restart.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/vegas_no_slow_start_restart.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/vegas_no_slow_start_restart.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/vegas_pacing_cwnd.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/vegas_pacing_cwnd.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/vegas_pacing_rate.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/vegas_pacing_rate.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rbp/vegas_slow_start_restart.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rbp/vegas_slow_start_restart.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-realaudio/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-realaudio/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-realaudio/.cvsignore	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-realaudio/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-*.test
-realaudio
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-realaudio/realaudio.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-realaudio/realaudio.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/congested1_mark_p.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/congested1_mark_p.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/congested2_mark_p.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/congested2_mark_p.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/congested.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/congested.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/congested_mark_p.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/congested_mark_p.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/.cvsignore	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,15 +0,0 @@
-*.test
-ecn
-flows_combined
-flows_forced
-flows_unforced
-red1
-red2
-red_twoway
-red_twowaybytes
-red_twowaybytes.Z
-gentleBadParams
-gentleEcn
-ungentleBadParams
-gentle
-ungentle
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/ecn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/ecn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/flows_combined.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/flows_combined.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/flows_forced.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/flows_forced.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/flows_unforced.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/flows_unforced.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/gentleBadParams.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/gentleBadParams.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/gentleEcn1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/gentleEcn1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/gentleEcn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/gentleEcn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/gentle.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/gentle.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/q_weight_auto.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/q_weight_auto.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/q_weight.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/q_weight.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/red1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/red1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/red2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/red2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/red_twowaybytes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/red_twowaybytes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/red_twoway.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/red_twoway.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/ungentleBadParams.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/ungentleBadParams.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red/ungentle.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red/ungentle.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-pd/cbrs.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-pd/cbrs.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-pd/cbrs-noidle.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-pd/cbrs-noidle.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-pd/complete.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-pd/complete.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-pd/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-pd/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-pd/.cvsignore	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-pd/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,5 +0,0 @@
-*.test
-complete
-frp
-simple
-unresponsive
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-pd/frp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-pd/frp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-pd/simple.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-pd/simple.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-pd/unresponsive.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-pd/unresponsive.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-v1/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-v1/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-red-v1/.cvsignore	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-red-v1/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-*.test
-ecn
-flows
-flows1
-flowsAll
-red1
-red1_bytes
-red2
-red_twoway
-red_twowaybytes
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rem/ecn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rem/ecn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rem/rem1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rem/rem1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rem/rem2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rem/rem2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rem/rem_twowayecn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rem/rem_twowayecn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rem/rem_twoway.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rem/rem_twoway.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2001/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2001/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2001/.cvsignore	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2001/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-*.test
-CVS
-CVS
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/.cvsignore	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,9 +0,0 @@
-*.test
-immediateAckNewReno
-immediateAckReno
-immediateAckSack
-noImmediateAckNewReno
-noImmediateAckReno
-noImmediateAckSack
-immediateAck
-noImmediateAck
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/immediateAck.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/immediateAck.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/immediateAckNewReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/immediateAckNewReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/immediateAckReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/immediateAckReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/immediateAckSack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/immediateAckSack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/noImmediateAck.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/noImmediateAck.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/noImmediateAckNewReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/noImmediateAckNewReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/noImmediateAckReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/noImmediateAckReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc2581/noImmediateAckSack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc2581/noImmediateAckSack.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/.cvsignore	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,9 +0,0 @@
-*.test
-jacobson88-noss
-jacobson88-ss
-rto-karn
-rto-nokarn
-rtt-jacobson
-rtt-rfc793
-seqno-fastrtx
-seqno-nofastrtx
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/jacobson88-noss.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/jacobson88-noss.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/jacobson88-ss.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/jacobson88-ss.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/rto-karn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/rto-karn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/rto-nokarn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/rto-nokarn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/rtt-jacobson.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/rtt-jacobson.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/rtt-rfc793.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/rtt-rfc793.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/seqno-fastrtx.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/seqno-fastrtx.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rfc793edu/seqno-nofastrtx.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rfc793edu/seqno-nofastrtx.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rio/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rio/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rio/.cvsignore	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rio/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-*.test
-gentle
-notGentle
-proportional
-strict
-tagging
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rio/gentle.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rio/gentle.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rio/notGentle.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rio/notGentle.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rio/proportional.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rio/proportional.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rio/strict.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rio/strict.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rio/tagging.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rio/tagging.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-rng/rngtest.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-rng/rngtest.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/.cvsignore	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,14 +0,0 @@
-*.test
-sack1
-sack1a
-sack1aa
-sack1b
-sack1c
-sack1z
-sack3
-sack5
-sack5a
-sackB2
-sackB4
-sackB4a
-sack1d
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/FalsePipe1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/FalsePipe1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/FalsePipe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/FalsePipe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack1aa.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack1aa.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack1a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack1a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack1b.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack1b.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack1c.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack1c.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack1d.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack1d.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack1z.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack1z.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack5a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack5a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sackB2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sackB2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sackB4a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sackB4a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sackB4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sackB4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack_dupacks1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack_dupacks1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack_dupacks.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack_dupacks.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack/sack_finiteflow.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack/sack_finiteflow.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack1aa.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack1aa.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack1a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack1a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack1b.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack1b.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack1c.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack1c.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack1z.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack1z.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack5a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack5a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sack5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sack5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sackB2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sackB2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sackB4a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sackB4a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-full/sackB4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-full/sackB4.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-v1/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-v1/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sack-v1/.cvsignore	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sack-v1/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,13 +0,0 @@
-*.test
-phaseSack
-phaseSack2
-phaseSack3
-sack1
-sack1a
-sack1b
-sack1c
-sack3
-sack4
-sack5
-sackB2
-sackB4
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-satellite/aloha.collisions.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-satellite/aloha.collisions.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-satellite/aloha.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-satellite/aloha.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-satellite/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-satellite/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-satellite/.cvsignore	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-satellite/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-*.test
-aloha
-mixed
-repeater
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-satellite/mixed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-satellite/mixed.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-satellite/mixed.legacy.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-satellite/mixed.legacy.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-satellite/repeater.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-satellite/repeater.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-satellite/wired.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-satellite/wired.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/.cvsignore	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-*.test
-drr
-fifo-droptail
-fifo-red
-fifo.Z
-sfq.test
-fq_small_queue
-fifo
-fq
-sfq
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/drr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/drr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/fifo-droptail.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/fifo-droptail.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/fifo.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/fifo.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/fifo-red.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/fifo-red.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/fq.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/fq.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/fq_small_queue.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/fq_small_queue.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/sfq.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/sfq.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-schedule/srr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-schedule/srr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-2packetsTimeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-2packetsTimeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-AMR-Exceeded.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-AMR-Exceeded.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-burstAfterFastRtxRecovery-2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-burstAfterFastRtxRecovery-2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-burstAfterFastRtxRecovery.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-burstAfterFastRtxRecovery.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-2paths-1path-fails.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-2paths-1path-fails.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-2paths-64K.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-2paths-64K.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-2paths-64K-withloss.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-2paths-64K-withloss.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-3paths-1path-fails.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-3paths-1path-fails.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-3paths-64K.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-3paths-64K.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-multihome2-2Timeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-multihome2-2Timeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-packet-loss-dest-conf.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-packet-loss-dest-conf.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-2paths-1path-fails.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-2paths-1path-fails.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-3paths-1path-fails.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-3paths-1path-fails.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-packet-loss-dest-conf.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-packet-loss-dest-conf.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-Rtx-cwnd.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-Rtx-cwnd.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-Rtx-ssthresh.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-Rtx-ssthresh.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-Timeout-pmr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-pf-Timeout-pmr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-Rtx-cwnd.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-Rtx-cwnd.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-Rtx-ssthresh.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-Rtx-ssthresh.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-Timeout-pmr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cmt-Timeout-pmr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cwndFreeze.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cwndFreeze.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-cwndFreeze-multistream.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-cwndFreeze-multistream.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-hbAfterRto-2packetsTimeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-hbAfterRto-2packetsTimeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-hbAfterRto-multihome2-2Timeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-hbAfterRto-multihome2-2Timeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-hugeRwnd.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-hugeRwnd.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-initRtx.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-initRtx.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-mfrHbAfterRto-Rta2-2FRsTimeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-mfrHbAfterRto-Rta2-2FRsTimeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome1-2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome1-2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2AMR-Exceeded.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2AMR-Exceeded.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Failover0.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Failover0.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Failover1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Failover1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Failover.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Failover.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Rtx1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Rtx1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Rtx3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Rtx3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Timeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2Timeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2TimeoutRta0.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2TimeoutRta0.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2TimeoutRta2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-2TimeoutRta2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-R-2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome2-R-2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multihome3-3Timeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multihome3-3Timeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsSameWnd-1-delayed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsSameWnd-1-delayed.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsSameWnd-1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsSameWnd-1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsSameWnd-2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsSameWnd-2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsSameWnd-3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsSameWnd-3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsTwoWnds-1-delayed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleDropsTwoWnds-1-delayed.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleFastRtx-2packetsTimeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleFastRtx-2packetsTimeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleFastRtx-multihome2-2Timeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleFastRtx-multihome2-2Timeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleRtx-early.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleRtx-early.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-multipleRtx.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-multipleRtx.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-newReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-newReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-noEarlyHBs.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-noEarlyHBs.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-packet-loss-dest-conf.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-packet-loss-dest-conf.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-Rel1-Loss2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-Rel1-Loss2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-smallRwnd.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-smallRwnd.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-timestamp-multihome2-2Rtx3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-timestamp-multihome2-2Rtx3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-timestamp-multihome2-2Timeout.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-timestamp-multihome2-2Timeout.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-zeroRtx-burstLoss.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-zeroRtx-burstLoss.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sctp/sctp-zeroRtx.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sctp/sctp-zeroRtx.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-session/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-session/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-session/.cvsignore	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-session/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,5 +0,0 @@
-*.test
-Session1
-Session2
-Session3
-Session4
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-session/Session1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-session/Session1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-session/Session2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-session/Session2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-session/Session3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-session/Session3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-session/Session4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-session/Session4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/bug.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/bug.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/.cvsignore	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,24 +0,0 @@
-*.test
-bug
-delayed
-manyflows
-no_bug
-phase1
-phase2
-reno1
-reno2
-reno3
-reno4a
-reno5
-renoA
-stats1
-tahoe1
-tahoe2
-tahoe3
-tahoe4
-telnet
-timers
-phase
-reno4
-reno
-stats
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/delayed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/delayed.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_burstyEcn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_burstyEcn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_bursty_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_bursty_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_drop1_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_drop1_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_drop_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_drop_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_noBugfix_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_noBugfix_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_nodrop_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_nodrop_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_noecn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_noecn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_secondpktEcn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_secondpktEcn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_secondpkt_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_secondpkt_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_smallwinEcn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_smallwinEcn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_smallwin_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_smallwin_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_timeout1_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_timeout1_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_timeout_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_timeout_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/ecn_twoecn_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/ecn_twoecn_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/manyflows.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/manyflows.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/no_bug.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/no_bug.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/phase1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/phase1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/phase2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/phase2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/phase.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/phase.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/reno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/reno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/reno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/reno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/reno3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/reno3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/reno4a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/reno4a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/reno4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/reno4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/reno5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/reno5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/reno5_nobug.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/reno5_nobug.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/renoA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/renoA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/stats1aBytes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/stats1aBytes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/stats1a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/stats1a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/stats1Bytes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/stats1Bytes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/stats1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/stats1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/stats2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/stats2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/stats3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/stats3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/stats4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/stats4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/statsECN.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/statsECN.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/stats.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/stats.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/statsHeaders.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/statsHeaders.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/statsTFRC.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/statsTFRC.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/tahoe1Bytes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/tahoe1Bytes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/tahoe1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/tahoe1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/tahoe1REDbytes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/tahoe1REDbytes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/tahoe1RED.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/tahoe1RED.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/tahoe2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/tahoe2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/tahoe3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/tahoe3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/tahoe3RED.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/tahoe3RED.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/tahoe4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/tahoe4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/telnet.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/telnet.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple/timers.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple/timers.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/bug.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/bug.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/delayed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/delayed.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/manyflows.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/manyflows.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/no_bug.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/no_bug.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/phase1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/phase1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/phase2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/phase2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/phase.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/phase.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/reno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/reno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/reno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/reno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/reno3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/reno3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/reno4a.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/reno4a.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/reno4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/reno4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/reno5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/reno5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/reno5_nobug.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/reno5_nobug.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/renoA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/renoA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/stats1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/stats1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/stats.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/stats.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/tahoe1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/tahoe1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/tahoe2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/tahoe2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/tahoe3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/tahoe3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/tahoe4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/tahoe4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/telnet.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/telnet.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-simple-full/timers.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-simple-full/timers.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sliding-window/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sliding-window/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sliding-window/.cvsignore	2015-03-04 17:49:02.774750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sliding-window/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-*.test
-sliding-loss
-sliding-normal
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sliding-window/sliding-loss.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sliding-window/sliding-loss.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-sliding-window/sliding-normal.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-sliding-window/sliding-normal.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/brdcast1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/brdcast1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/brdcast1_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/brdcast1_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/brdcast2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/brdcast2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/brdcast2_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/brdcast2_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast10.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast10.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast10_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast10_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast11.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast11.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast11_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast11_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast12.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast12.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast12_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast12_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast1_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast1_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast2_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast2_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast3_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast3_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast4_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast4_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast5_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast5_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast6.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast6.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast6_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast6_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast7.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast7.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast7_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast7_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast8.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast8.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast8_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast8_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast9.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast9.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac/unicast9_sync.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac/unicast9_sync.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-smac-multihop/smac-multihop.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-smac-multihop/smac-multihop.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-snoop/simple.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-snoop/simple.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-source-routing/source_rtg.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-source-routing/source_rtg.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-srm/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-srm/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-srm/.cvsignore	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-srm/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,5 +0,0 @@
-*.test
-srm-adapt-rep
-srm-adapt-req
-srm-chain
-srm-star
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-srm/srm-adapt-rep.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-srm/srm-adapt-rep.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-srm/srm-adapt-req.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-srm/srm-adapt-req.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-srm/srm-chain.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-srm/srm-chain.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-srm/srm-star.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-srm/srm-star.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tagged-trace/Format-simple.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tagged-trace/Format-simple.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tagged-trace/simple.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tagged-trace/simple.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tagged-trace/wireless.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tagged-trace/wireless.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/.cvsignore	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-*.test
-ecn
-stats1
-timers1
-timers2
-timers3
-timers4
-timers5
-quiescent_100ms_coarse
-quiescent_100ms_fine
-quiescent_1ms_coarse
-quiescent_1ms_fine
-quiescent_500ms_coarse
-quiescent_500ms_fine
-quiescentB_qoption
-timersA1
-timersA2
-timersA3
-underutilized_100ms_control_Newreno
-underutilized_100ms_control_Q
-underutilized_100ms_control_Reno
-underutilized_100ms_control_Sack
-underutilized_100ms_Q
-quiescent_100ms
-quiescentB
-timersA
-timers
-underutilized_100ms_control
-underutilized_100ms
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/dialup1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/dialup1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/dialup.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/dialup.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/ecn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/ecn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescent_100ms_coarse.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescent_100ms_coarse.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescent_100ms_fine.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescent_100ms_fine.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescent_100ms.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescent_100ms.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescent_1ms_coarse.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescent_1ms_coarse.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescent_1ms_fine.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescent_1ms_fine.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescent_500ms_coarse.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescent_500ms_coarse.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescent_500ms_fine.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescent_500ms_fine.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescentB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescentB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/quiescentB_qoption.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/quiescentB_qoption.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/stats1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/stats1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timers1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timers1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timers2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timers2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timers3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timers3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timers4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timers4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timers5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timers5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timersA1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timersA1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timersA2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timersA2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timersA3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timersA3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timersAfix.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timersAfix.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timersA.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timersA.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timers_backoffs.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timers_backoffs.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/timers.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/timers.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control_Newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control_Newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control_Q.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control_Q.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control_Reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control_Reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control_Sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_control_Sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_Q.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp/underutilized_100ms_Q.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcp1A.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcp1A.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcp1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcp1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed1A.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed1A.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed5.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed5.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed6.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed6.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpHighspeed/tcpHighspeed.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/.cvsignore	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,17 +0,0 @@
-*.test
-newreno1
-newreno2
-newreno3
-newreno4
-sack1
-sack2
-sack3
-sack4
-tahoe1
-tahoe2
-tahoe3
-tahoe4
-reno1
-reno2
-reno3
-reno4
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/droppedPKT1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/droppedPKT1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/droppedPKT2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/droppedPKT2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/droppedPKT3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/droppedPKT3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/droppedPKT.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/droppedPKT.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/droppedSYN1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/droppedSYN1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/droppedSYN.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/droppedSYN.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/newreno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/newreno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/newreno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/newreno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/newreno3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/newreno3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/newreno4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/newreno4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/reno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/reno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/reno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/reno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/reno3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/reno3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/reno4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/reno4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/sack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/sack1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/sack2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/sack2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/sack3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/sack3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/sack4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/sack4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/slowLink1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/slowLink1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/slowLink2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/slowLink2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/slowLink.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/slowLink.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/tahoe1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/tahoe1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/tahoe2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/tahoe2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/tahoe3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/tahoe3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win/tahoe4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win/tahoe4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/newreno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/newreno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/newreno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/newreno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/newreno3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/newreno3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/newreno4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/newreno4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/reno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/reno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/reno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/reno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/reno3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/reno3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/reno4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/reno4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/sack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/sack1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/sack2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/sack2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/sack3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/sack3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/sack4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/sack4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/slowLink1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/slowLink1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/slowLink2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/slowLink2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/slowLink.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/slowLink.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe1A.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe1A.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcp-init-win-full/tahoe4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxBase.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxBase.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_bic.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_bic.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_compound.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_compound.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_cubic.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_cubic.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_highspeed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_highspeed.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_htcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_htcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_hybla.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_hybla.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_illinois.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_illinois.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_lp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_lp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_scalable.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_scalable.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_vegas.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_vegas.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_veno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_veno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_westwood.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_westwood.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_yeah.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxDropTail_yeah.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_bic.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_bic.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_compound.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_compound.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_cubic.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_cubic.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_highspeed.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_highspeed.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_htcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_htcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_hybla.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_hybla.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_illinois.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_illinois.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_lp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_lp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_scalable.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_scalable.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_vegas.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_vegas.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_veno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_veno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_westwood.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_westwood.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_yeah.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpLinux/tcpLinuxRED_yeah.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/.cvsignore	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,17 +0,0 @@
-*.test
-onedrop_newreno_full
-onedrop_numdup4_newreno_full
-onedrop_numdup4_reno_full
-onedrop_numdup4_sack_full
-onedrop_numdup4_tahoe_full
-onedrop_reno_full
-onedrop_sack_full
-onedrop_tahoe_full
-onedrop_newreno
-onedrop_numdup4_newreno
-onedrop_numdup4_reno
-onedrop_numdup4_sack
-onedrop_numdup4_tahoe
-onedrop_reno
-onedrop_sack
-onedrop_tahoe
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_newreno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_newreno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_reno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_reno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_sack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_sack1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_tahoe1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_tahoe1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/maxburst_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_numdup4_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/onedrop_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeoutsA_tahoe1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeoutsA_tahoe1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeoutsA_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeoutsA_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno_noexitFR.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_newreno_noexitFR.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno_noexitFR.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_reno_noexitFR.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_sack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_sack1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_sack2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_sack2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_sack3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_sack3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_tahoe1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_tahoe1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_tahoe2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_tahoe2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_tahoe3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_tahoe3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpOptions/timeouts_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/reset1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/reset1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/resetDelAck1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/resetDelAck1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/resetDelAck2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/resetDelAck2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/resetDelAck3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/resetDelAck3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/resetDelAck.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/resetDelAck.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/reset.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/reset.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/resetNewreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/resetNewreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/resetReno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/resetReno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpReset/resetSack1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpReset/resetSack1.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/.cvsignore	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-*.test
-fourdrops_fack
-fourdrops_newreno_full
-fourdrops_reno_full
-fourdrops_sack_full
-fourdrops_sackRH
-fourdrops_tahoe_full
-onedrop_fack
-onedrop_newreno_full
-onedrop_reno_full
-onedrop_sack_full
-onedrop_sackRH
-onedrop_SA_newreno
-onedrop_SA_reno
-onedrop_SA_sack
-onedrop_SA_tahoe
-onedrop_tahoe_full
-threedrops_fack
-threedrops_newreno_full
-threedrops_reno_full
-threedrops_sack_full
-threedrops_sackRH
-threedrops_tahoe_full
-twodrops_fack
-twodrops_newreno_full
-twodrops_reno_full
-twodrops_sack_full
-twodrops_sackRH
-twodrops_tahoe_full
-fourdrops_newreno
-fourdrops_reno
-fourdrops_sack
-fourdrops_tahoe
-onedrop_newreno
-onedrop_reno
-onedrop_sack
-onedrop_tahoe
-threedrops_newreno
-threedrops_reno
-threedrops_sack
-threedrops_tahoe
-twodrops_newreno
-twodrops_reno
-twodrops_sack
-twodrops_tahoe
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_fack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_fack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_sackRH.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_sackRH.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_SA_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_SA_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_SA_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_SA_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_SA_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_SA_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_SA_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_SA_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/fourdrops_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_partial_ack_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_partial_ack_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_SA_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_SA_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_SA_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_SA_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_SA_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_SA_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_SA_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_SA_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple2_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_partial_ack_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_partial_ack_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_SA_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_SA_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_SA_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_SA_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_SA_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_SA_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_SA_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_SA_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/multiple_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/multiple_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_fack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_fack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_sackRH.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_sackRH.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_SA_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_SA_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_SA_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_SA_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_SA_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_SA_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_SA_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_SA_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/onedrop_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_fack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_fack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_sackRH.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_sackRH.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_SA_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_SA_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_SA_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_SA_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_SA_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_SA_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_SA_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_SA_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/threedrops_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_fack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_fack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_newreno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_newreno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_reno_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_reno_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_sack_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_sack_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_sackRH.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_sackRH.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_SA_newreno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_SA_newreno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_SA_reno.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_SA_reno.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_SA_sack.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_SA_sack.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_SA_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_SA_tahoe.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_tahoe_full.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_tahoe_full.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_tahoe.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tcpVariants/twodrops_tahoe.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/.cvsignore	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-*.test
-NewReno_TCP2
-Sack_TCP2
-Tahoe_TCP2_without_Fast_Retransmit
-Tahoe_TCP_without_Fast_Retransmit
-NewReno_TCP
-Reno_TCP2
-Reno_TCP
-Sack_TCP
-Tahoe_TCP2
-Tahoe_TCP
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/NewReno_TCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/NewReno_TCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/NewReno_TCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/NewReno_TCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/Reno_TCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/Reno_TCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/Reno_TCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/Reno_TCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/Sack_TCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/Sack_TCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/Sack_TCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/Sack_TCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/Tahoe_TCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/Tahoe_TCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/Tahoe_TCP2_without_Fast_Retransmit.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/Tahoe_TCP2_without_Fast_Retransmit.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/Tahoe_TCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/Tahoe_TCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno/Tahoe_TCP_without_Fast_Retransmit.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno/Tahoe_TCP_without_Fast_Retransmit.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-bayfull/Reno_FullTCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-bayfull/Reno_FullTCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-bayfull/Reno_FullTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-bayfull/Reno_FullTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/NewReno_FullTCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/NewReno_FullTCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/NewReno_FullTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/NewReno_FullTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/Reno_BayFullTCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/Reno_BayFullTCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/Reno_BayFullTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/Reno_BayFullTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/Reno_FullTCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/Reno_FullTCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/Reno_FullTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/Reno_FullTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/Sack_FullTCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/Sack_FullTCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/Sack_FullTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/Sack_FullTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/Tahoe_FullTCP2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/Tahoe_FullTCP2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-testReno-full/Tahoe_FullTCP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-testReno-full/Tahoe_FullTCP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tmix/Lossless-alt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tmix/Lossless-alt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tmix/Lossless-orig.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tmix/Lossless-orig.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tmix/Lossy-alt.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tmix/Lossy-alt.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-tmix/Lossy-orig.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-tmix/Lossy-orig.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-v1/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-v1/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-v1/.cvsignore	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-v1/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,22 +0,0 @@
-*.test
-bug
-delayed
-no_bug
-phase1
-phase2
-reno1
-reno2
-reno3
-reno4a
-reno5
-renoA
-stats
-tahoe1
-tahoe2
-tahoe3
-tahoe4
-telnet
-timers
-phase
-reno4
-reno
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vc/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vc/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vc/.cvsignore	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vc/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-*.test
-VC1
-VC2
-VC3
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vc/VC1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vc/VC1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vc/VC2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vc/VC2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vc/VC3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vc/VC3.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vegas-v1/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vegas-v1/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vegas-v1/.cvsignore	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vegas-v1/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-*.test
-one_14
-one_drop
-two_2
-two_A
-two_B
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vq/ecn.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vq/ecn.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vq/vq1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vq/vq1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vq/vq2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vq/vq2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vq/vq_twowaybytes.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vq/vq_twowaybytes.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-vq/vq_twoway.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-vq/vq_twoway.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/cache0f-inv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/cache0f-inv.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/cache0f-ottl.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/cache0f-ottl.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/cache0f-push.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/cache0f-push.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/cache0f-ttl.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/cache0f-ttl.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/cache0-inv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/cache0-inv.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/cache0-ottl.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/cache0-ottl.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/cache0-push.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/cache0-push.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/cache0-ttl.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/cache0-ttl.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/.cvsignore	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,40 +0,0 @@
-*.test
-Liveness
-Mcast-PB
-Mcast-PBP
-Mcast-PBU-MP
-Mcast-PBU
-PagePool
-SimpleTcp
-TLC1-dreq
-TLC1
-TLC1f
-TcpApp-2node
-cache0-inv
-cache0-ottl
-cache0-push
-cache0-ttl
-cache0f-inv
-cache0f-ottl
-cache0f-push
-cache0f-ttl
-http1
-http1f
-http2
-http2f
-http3
-http3f
-http4
-http4f
-mcast-dreq
-mmcast-PB
-mmcast-PBU
-mottl-PB
-mttl-PB
-ottl-PB
-ttl-PB
-Mcast-PBPtr
-Mcast-PBtr
-Mcast-PBUtr
-ottl-PBtr
-ttl-PBtr
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/http1f.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/http1f.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/http1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/http1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/http2f.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/http2f.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/http2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/http2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/http3f.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/http3f.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/http3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/http3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/http4f.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/http4f.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/http4.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/http4.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/Liveness.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/Liveness.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/mcast-dreq.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/mcast-dreq.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/Mcast-PB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/Mcast-PB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/Mcast-PBP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/Mcast-PBP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/Mcast-PBPtr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/Mcast-PBPtr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/Mcast-PBtr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/Mcast-PBtr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/Mcast-PBU.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/Mcast-PBU.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/Mcast-PBU-MP.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/Mcast-PBU-MP.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/Mcast-PBUtr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/Mcast-PBUtr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/mmcast-PB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/mmcast-PB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/mmcast-PBU.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/mmcast-PBU.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/mottl-PB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/mottl-PB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/mttl-PB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/mttl-PB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/ottl-PB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/ottl-PB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/ottl-PBtr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/ottl-PBtr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/PagePool.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/PagePool.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/SimpleTcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/SimpleTcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/TcpApp-2node.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/TcpApp-2node.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/TLC1-dreq.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/TLC1-dreq.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/TLC1f.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/TLC1f.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/TLC1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/TLC1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/ttl-PB.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/ttl-PB.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webcache/ttl-PBtr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webcache/ttl-PBtr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webtraf/1s-1p.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webtraf/1s-1p.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webtraf/1s-2p.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webtraf/1s-2p.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webtraf/3s-2p.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webtraf/3s-2p.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webtraf/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webtraf/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webtraf/.cvsignore	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webtraf/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-*.test
-1s-1p
-1s-2p
-3s-2p
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webtraf/fcfs.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webtraf/fcfs.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-webtraf/stf.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-webtraf/stf.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-diffusion/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-diffusion/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-diffusion/.cvsignore	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-diffusion/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,6 +0,0 @@
-*.test
-diff-prob
-diff-rate-default
-diff-rate-other
-flooding
-omnimcast
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-diffusion/diff-prob.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-diffusion/diff-prob.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-diffusion/diff-rate-default.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-diffusion/diff-rate-default.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-diffusion/diff-rate-other.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-diffusion/diff-rate-other.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-diffusion/flooding.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-diffusion/flooding.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-diffusion/omnimcast.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-diffusion/omnimcast.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-gridkeeper/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-gridkeeper/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-gridkeeper/.cvsignore	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-gridkeeper/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-*.test
-dsdv
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-gridkeeper/dsdv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-gridkeeper/dsdv.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-infra/wireless-infra.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-infra/wireless-infra.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-infra/wireless-infra-mobility.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-infra/wireless-infra-mobility.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/aodv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/aodv.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/.cvsignore	2015-03-04 17:49:02.774750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,9 +0,0 @@
-*.test
-aodv
-dsdv-wired-cum-wireless
-dsdv-wireless-mip
-dsr
-new-dsdv-wired-cum-wireless
-new-dsdv-wireless-mip
-tora
-dsdv
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/dsdv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/dsdv.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/dsdv-wired-cum-wireless.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/dsdv-wired-cum-wireless.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/dsdv-wireless-mip.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/dsdv-wireless-mip.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/dsr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/dsr.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/gaf.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/gaf.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/new-dsdv-wired-cum-wireless.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/new-dsdv-wired-cum-wireless.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/new-dsdv-wireless-mip.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/new-dsdv-wireless-mip.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan/tora.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan/tora.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan-newnode-80211Ext/broadcast.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan-newnode-80211Ext/broadcast.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-lan-newnode-80211Ext/unicast.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-lan-newnode-80211Ext/unicast.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-shadowing/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-shadowing/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-shadowing/.cvsignore	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-shadowing/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-*.test
-dsdv
-dsr
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-shadowing/dsdv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-shadowing/dsdv.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-shadowing/dsr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-shadowing/dsr.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-tdma/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-tdma/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-tdma/.cvsignore	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-tdma/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-*.test
-dsdv
-dsr
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-tdma/dsdv.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-tdma/dsdv.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wireless-tdma/dsr.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wireless-tdma/dsr.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-WLtutorial/.cvsignore ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-WLtutorial/.cvsignore
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-WLtutorial/.cvsignore	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-WLtutorial/.cvsignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-wireless1
-wireless2
-wireless3
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-WLtutorial/wireless1.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-WLtutorial/wireless1.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-WLtutorial/wireless2.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-WLtutorial/wireless2.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-WLtutorial/wireless3.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-WLtutorial/wireless3.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-wpan/wpan.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-wpan/wpan.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-xcp/parking-lot-topo.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-xcp/parking-lot-topo.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-xcp/simple-full-xcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-xcp/simple-full-xcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-xcp/simple-xcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-xcp/simple-xcp.gz differ
Binary files ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-output-xcp/xcp-tcp.gz and ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-output-xcp/xcp-tcp.gz differ
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-sack ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-sack
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-sack	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-sack	1970-01-01 01:00:00.000000000 +0100
@@ -1,62 +0,0 @@
-###############################################################
-# This file is now obsolete.
-# Use "./test-all-tcpVariants" instead. 
-###############################################################
-### #! /bin/sh
-### #holes=2		* from NSA in packet.h
-### sed -e 's/maxBurst/0/' sack.tcl > t		# for tahoe, reno
-### sed -e 's/maxBurst/4/' sack.tcl > t1		# for newreno, sack, fack
-### sed -e 's/type/taho/' t > t0.tcl
-### sed -e 's/connection tcp /connection tcp-reno /' -e s/type/reno/ t > t1.tcl
-### sed -e 's/connection tcp /connection tcp-newreno /' -e s/type/newr/ t1 > t3.tcl
-### sed -e 's/connection tcp /connection tcp-sack1 /' t1 > t2
-### sed -e 's/tcp-sink/sack1-tcp-sink/' -e 's/type/sck1/' t2 > t4.tcl
-### 
-### # fack with overdamping and rampdown
-### sed -e 's/connection tcp /connection tcp-fack /' t > t3
-### sed -e 's/tcp-sink/sack1-tcp-sink/' -e 's/type/fackOR/' t3 > t5.tcl
-### 
-### # fack without overdamping and rampdown
-### sed -e 's/tcp-sink/sack1-tcp-sink/' -e 's/type/fack/' t3 > t4
-### awk ' {print } ; /global mod ns_tcp/ { print "\tglobal mod ns_facktcp" ; \
-###  print "\tset ns_facktcp(ss-div4) 0" ; print "\tset ns_facktcp(rampdown) 0" \
-###  } ' t4 > t6.tcl
-### 
-### # newreno with ssthresh estimator
-### sed -e 's/tcpnewreno(changes) 0/tcpnewreno(changes) 1/' t3.tcl > t7.tcl
-### 
-### # vegas
-### sed -e 's/connection tcp /connection tcp-vegas /' -e s/type/vegas/ t > t8.tcl
-### 
-### 
-### for t in one_drop two_drops three_drops four_drops many_drops ; do
-###     echo
-###     echo Running test $t
-###     echo 'Tahoe:'
-###     ../../ns t0.tcl $t
-###     sleep 1
-###     echo 'Reno:'
-###     ../../ns t1.tcl $t
-###     sleep 1
-###     echo 'New Reno without Sack:'
-###     ../../ns t3.tcl $t
-###     sleep 1
-###     echo 'Sack1:'
-###     ../../ns t4.tcl $t
-###     sleep 1
-### #    echo 'Vegas:'
-### #    ../../ns t8.tcl $t
-### #    sleep 1
-### #    echo 'Fack with OverDamping and Rampdown:'
-### #    ../../ns t5.tcl $t
-### #    sleep 1
-### #    echo 'Fack without OverDamping and Rampdown:'
-### #    ../../ns t6.tcl $t
-### #    sleep 1
-### #    echo 'New Reno without Sack, but with ssthresh estimator:'
-### #    ../../ns t7.tcl $t
-###     echo 'next?'
-###     read answer
-### done
-### 
-### # ns t0.tcl one_40
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-adaptive-red.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-adaptive-red.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-adaptive-red.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-adaptive-red.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,802 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-adaptive-red.tcl,v 1.27 2006/06/14 01:12:28 sallyfloyd Exp $
-#
-# To run all tests: test-all-adaptive-red
-
-set dir [pwd]
-catch "cd tcl/test"
-catch "cd $dir"
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# Queue/RED set bottom_ 0.01
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set bugfix_ss_ 0
-# A new variable on 6/13/06.
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	## exec csh gnuplotA1.com temp.rands $testName_
-	## exec csh gnuplotQueue.com temp.queue $testName_
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set redq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$redq trace curq_
-	$redq trace ave_
-	$redq attach $tchan_
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    # A 1500-byte packet has a transmission time of 0.008 seconds.
-    # A queue of 25 1500-byte packets would be 0.2 seconds. 
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}   
-
-Class Topology/netfast -superclass Topology
-Topology/netfast instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 15Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 1000
-    $ns queue-limit $node_(r2) $node_(r1) 1000
-    $ns duplex-link $node_(s3) $node_(r2) 100Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 100Mb 5ms DropTail
-}   
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 10ms RED
-    $ns duplex-link $node_(r2) $node_(r1) 1.5Mb 10ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 3ms DropTail
-}   
-
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 1000Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 1000Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 10Mb 10ms RED
-    $ns duplex-link $node_(r2) $node_(r1) 10Mb 10ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 1000
-    $ns queue-limit $node_(r2) $node_(r1) 1000
-    $ns duplex-link $node_(s3) $node_(r2) 1000Mb 2ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 1000Mb 3ms DropTail
-}
-
-Class Topology/netlong -superclass Topology
-Topology/netlong instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 100ms RED
-    $ns duplex-link $node_(r2) $node_(r1) 1.5Mb 100ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 3ms DropTail
-}   
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for RED gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-			else if ($1 == "a" && NF>2)
-				print $2, $3 >> "temp.a";
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q temp.a 
-	exec touch temp.a temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	puts $f \n\"ave_queue
-	exec cat temp.a >@ $f
-	###puts $f \n"thresh
-	###puts $f 0 [[ns link $r1 $r2] get thresh]
-	###puts $f $end [[ns link $r1 $r2] get thresh]
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-TestSuite instproc maketraffic {{stoptime 50.0} {window 15} {starttime 3.0}} {
-    $self instvar ns_ node_ testName_ net_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ $window
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ $window
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at $starttime "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-}
-
-TestSuite instproc maketraffic1 {window time} {
-    $self instvar ns_ node_ testName_ net_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 2]
-    $tcp1 set window_ $window
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 3]
-    $tcp2 set window_ $window
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $ns_ at $time "$ftp1 start"
-    $ns_ at [expr 2 * $time] "$ftp2 start"
-}
-
-TestSuite instproc automatic queue {
-    $queue set thresh_ 0
-    $queue set maxthresh_ 0
-    $queue set q_weight_ 0
-}
-
-#####################################################################
-
-Class Test/red1 -superclass TestSuite
-Test/red1 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ red1
-    $self next pktTraceFile
-}
-Test/red1 instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    $self maketraffic 
-    $ns_ run
-}
-
-Class Test/red1Adapt -superclass TestSuite
-Test/red1Adapt instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ net2 
-    set test_ red1Adapt
-    $self next pktTraceFile
-}
-Test/red1Adapt instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    set forwq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $forwq set adaptive_ 1 
-    $self automatic $forwq
-    $self maketraffic
-    $ns_ run   
-}
-
-Class Test/red1ECN -superclass TestSuite
-Test/red1ECN instproc init {} {
-    $self instvar net_ test_
-    set net_ net2
-    set test_ red1ECN
-    Queue/RED set setbit_ true
-    Agent/TCP set ecn_ 1
-    Test/red1ECN instproc run {} [Test/red1 info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/red1AdaptECN -superclass TestSuite
-Test/red1AdaptECN instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ net2
-    set test_ red1AdaptECN
-    Queue/RED set setbit_ true
-    Agent/TCP set ecn_ 1
-    Test/red1AdaptECN instproc run {} [Test/red1Adapt info instbody run ]
-    $self next pktTraceFile
-}
-
-
-Class Test/red1AdaptFeng -superclass TestSuite
-Test/red1AdaptFeng instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ net2 
-    set test_ red1AdaptFeng
-    Queue/RED set alpha_ 3.0
-    Queue/RED set beta_ 2.0
-    Queue/RED set feng_adaptive_ 1
-    Test/red1AdaptFeng instproc run {} [Test/red1Adapt info instbody run ]
-    $self next pktTraceFile
-}
-
-#####################################################################
-
-Class Test/fastlink -superclass TestSuite
-Test/fastlink instproc init {} {
-    $self instvar net_ test_
-    set net_ netfast 
-    set test_ fastlink
-    $self next pktTraceFile
-}
-Test/fastlink instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    $self maketraffic 5.0 100 1.5
-    $self maketraffic1 100 0.5
-    $ns_ run
-}
-
-Class Test/fastlinkAutowq -superclass TestSuite
-Test/fastlinkAutowq instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ netfast 
-    set test_ fastlinkAutowq
-    Queue/RED set q_weight_ 0
-    Test/fastlinkAutowq instproc run {} [Test/fastlink info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/fastlinkAutothresh -superclass TestSuite
-Test/fastlinkAutothresh instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ netfast 
-    set test_ fastlinkAutothresh
-    Queue/RED set thresh_ 0 
-    Queue/RED set maxthresh_ 0
-    Test/fastlinkAutothresh instproc run {} [Test/fastlink info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/fastlinkAdapt -superclass TestSuite
-Test/fastlinkAdapt instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ netfast 
-    set test_ fastlinkAdapt
-    Queue/RED set adaptive_ 1
-    Test/fastlinkAdapt instproc run {} [Test/fastlink info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/fastlinkAllAdapt -superclass TestSuite
-Test/fastlinkAllAdapt instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ netfast 
-    set test_ fastlinkAllAdapt
-    Queue/RED set adaptive_ 1
-    Queue/RED set q_weight_ 0
-    Queue/RED set thresh_ 0
-    Queue/RED set maxthresh_ 0
-    Test/fastlinkAllAdapt instproc run {} [Test/fastlink info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/fastlinkAllAdaptECN -superclass TestSuite
-Test/fastlinkAllAdaptECN instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ netfast 
-    set test_ fastlinkAllAdaptECN
-    Queue/RED set adaptive_ 1
-    Queue/RED set q_weight_ 0
-    Queue/RED set thresh_ 0
-    Queue/RED set maxthresh_ 0
-    Queue/RED set setbit_ true
-    Agent/TCP set ecn_ 1
-    Test/fastlinkAllAdaptECN instproc run {} [Test/fastlink info instbody run ]
-    $self next pktTraceFile
-}
-
-# Changing upper bound for max_p 
-Class Test/fastlinkAllAdapt1 -superclass TestSuite
-Test/fastlinkAllAdapt1 instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ netfast 
-    set test_ fastlinkAllAdapt1
-    Queue/RED set adaptive_ 1
-    Queue/RED set q_weight_ 0
-    Queue/RED set thresh_ 0
-    Queue/RED set maxthresh_ 0
-    Queue/RED set top_ 0.2
-    Queue/RED set bottom_ 0.1
-    Test/fastlinkAllAdapt1 instproc run {} [Test/fastlink info instbody run ]
-    $self next pktTraceFile
-}
-
-#####################################################################
-
-Class Test/longlink -superclass TestSuite
-Test/longlink instproc init {} {
-    $self instvar net_ test_
-    set net_ netlong 
-    set test_ longlink
-    $self next pktTraceFile
-}
-Test/longlink instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    $self maketraffic 50.0 100 1.5
-    $self maketraffic1 100 0.5
-    $ns_ run
-}
-
-Class Test/longlinkAdapt -superclass TestSuite
-Test/longlinkAdapt instproc init {} {
-    $self instvar net_ test_
-    set net_ netlong 
-    Queue/RED set adaptive_ 1
-    Queue/RED set thresh_ 0
-    Queue/RED set maxthresh_ 0
-    Queue/RED set q_weight_ 0
-    set test_ longlinkAdapt
-    Test/longlinkAdapt instproc run {} [Test/longlink info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/longlinkAdapt1 -superclass TestSuite
-Test/longlinkAdapt1 instproc init {} {
-    $self instvar net_ test_
-    set net_ netlong 
-    Queue/RED set adaptive_ 1
-    Queue/RED set thresh_ 0
-    Queue/RED set maxthresh_ 0
-    Queue/RED set q_weight_ -1.0
-    set test_ longlinkAdapt1
-    Test/longlinkAdapt1 instproc run {} [Test/longlink info instbody run ]
-    $self next pktTraceFile
-}
-
-#####################################################################
-
-# This reuses connection state, with $nums effective TCP connections,
-#   reusing state from $conns underlying TCP connections.
-TestSuite instproc newtraffic { num window packets start interval conns} {
-    $self instvar ns_ node_ testName_ net_
-
-    for {set i 0} {$i < $conns } {incr i} {
-       	set tcp($i) [$ns_ create-connection-list TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 2]
-	set source($i) [lindex $tcp($i) 0]
-	set sink($i) [lindex $tcp($i) 1]
-       	$source($i) set window_ $window
-	set ftp($i) [$source($i) attach-app FTP]
-	$ns_ at 0.0 "$ftp($i) produce 0"
-    }
-    for {set i 0} {$i < $num } {incr i} {
-        set tcpnum [ expr $i % $conns ]
-	set time [expr $start + $i * $interval]
-	$ns_ at $time  "$source($tcpnum) reset"
-	$ns_ at $time  "$sink($tcpnum) reset"
-        $ns_ at $time  "$ftp($tcpnum) producemore $packets"
-    }
-}
-
-Class Test/red2 -superclass TestSuite
-Test/red2 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ red2
-    $self next pktTraceFile
-}
-Test/red2 instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    $self maketraffic 
-    $self newtraffic 20 20 1000 25 0.1 20
-    $ns_ run
-}
-
-Class Test/red2Adapt -superclass TestSuite
-Test/red2Adapt instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ net2 
-    set test_ red2Adapt
-    $self next pktTraceFile
-}
-Test/red2Adapt instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    set forwq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $forwq set adaptive_ 1 
-    $self automatic $forwq
-    $self maketraffic
-    $self newtraffic 20 20 1000 25 0.1 20
-    $ns_ run   
-}
-
-Class Test/red2A-Adapt -superclass TestSuite
-Test/red2A-Adapt instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ net2 
-    set test_ red2A-Adapt
-    Queue/RED set alpha_ 0.02
-    Queue/RED set beta_ 0.8
-    Test/red2A-Adapt instproc run {} [Test/red2Adapt info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/red2-AdaptFeng -superclass TestSuite
-Test/red2-AdaptFeng instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ net2 
-    set test_ red2-AdaptFeng
-    Queue/RED set alpha_ 3
-    Queue/RED set beta_ 2
-    Queue/RED set feng_adaptive_ 1
-    Test/red2-AdaptFeng instproc run {} [Test/red2Adapt info instbody run ]
-    $self next pktTraceFile
-}
-
-
-#####################################################################
-
-Class Test/red3 -superclass TestSuite
-Test/red3 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ red3
-    $self next pktTraceFile
-}
-Test/red3 instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    $self maketraffic 
-    $self newtraffic 15 20 300 0 0.1 15
-    $ns_ run
-}
-
-Class Test/red3Adapt -superclass TestSuite
-Test/red3Adapt instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ net2 
-    set test_ red3Adapt
-    $self next pktTraceFile
-}
-Test/red3Adapt instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    set forwq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $forwq set adaptive_ 1 
-    $self automatic $forwq
-
-    $self maketraffic
-    $self newtraffic 15 20 300 0 0.1 15
-    $ns_ run   
-}
-
-Class Test/red4Adapt -superclass TestSuite
-Test/red4Adapt instproc init {} {
-    $self instvar net_ test_ ns_
-    set net_ net2 
-    set test_ red4Adapt
-    Queue/RED set alpha_ 0.02
-    Queue/RED set beta_ 0.8
-    Test/red4Adapt instproc run {} [Test/red3Adapt info instbody run ]
-    $self next pktTraceFile
-}
-
-TestSuite instproc printall { fmon } {
-        puts "aggregate per-link total_drops [$fmon set pdrops_]"
-        puts "aggregate per-link total_packets [$fmon set pdepartures_]"
-}
-
-
-# Class Test/red5 -superclass TestSuite
-# Test/red5 instproc init {} {
-#     $self instvar net_ test_ ns_
-#     set net_ net2 
-#     set test_ red5
-#     Queue/RED set alpha_ 0.02
-#     Queue/RED set beta_ 0.8
-#     $self next pktTraceFile
-# }
-# Test/red5 instproc run {} {
-#     $self instvar ns_ node_ testName_ net_
-#     $self setTopo
-#     set slink [$ns_ link $node_(r1) $node_(r2)]; # link to collect stats on
-#     set fmon [$ns_ makeflowmon Fid]
-#     $ns_ attach-fmon $slink $fmon
-#     $self maketraffic
-#     $self newtraffic 20 20 300 0 0.001 10
-#     # To run many flows:
-#     # $self newtraffic 4000 20 300 0 0.005 500
-#     # $self newtraffic 40000 20 300 0 0.001 500
-#     $ns_ at 49.99 "$self printall $fmon" 
-#     $ns_ run
-# }
-
-#####################################################################
-
-Class Test/transient -superclass TestSuite
-Test/transient instproc init {} {
-    $self instvar net_ test_
-    set net_ netfast 
-    set test_ transient
-    $self next pktTraceFile
-}
-Test/transient instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-    set stoptime 5.0
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 100
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 1000
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.5 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/transient1 -superclass TestSuite
-Test/transient1 instproc init {} {
-    $self instvar net_ test_
-    set net_ netfast 
-    set test_ transient1
-    Queue/RED set q_weight_ 0
-    Test/transient1 instproc run {} [Test/transient info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/transient2 -superclass TestSuite
-Test/transient2 instproc init {} {
-    $self instvar net_ test_
-    set net_ netfast 
-    set test_ transient2
-    Queue/RED set q_weight_ 0.0001
-    Test/transient2 instproc run {} [Test/transient info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/notcautious -superclass TestSuite
-Test/notcautious instproc init {} {
-    $self instvar net_ test_
-    set net_ net4
-    set test_ notcautious
-    Queue/RED set cautious_ 0
-    $self next pktTraceFile
-}
-Test/notcautious instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    Queue/RED set q_weight_ -1
-    Queue/RED set adaptive_ 1
-    Queue/RED set thresh 0
-    Queue/RED set maxthresh 0
-    $self setTopo
-    set stoptime 5.0
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 600
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 600
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-    
-Class Test/cautious -superclass TestSuite
-Test/cautious instproc init {} {
-    $self instvar net_ test_
-    set net_ net4
-    set test_ cautious
-    Queue/RED set cautious_ 1
-    Test/cautious instproc run {} [Test/notcautious info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/cautious2 -superclass TestSuite
-Test/cautious2 instproc init {} {
-    $self instvar net_ test_
-    set net_ net4
-    set test_ cautious2
-    Queue/RED set cautious_ 2
-    Test/cautious2 instproc run {} [Test/notcautious info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/cautious3 -superclass TestSuite
-Test/cautious3 instproc init {} {
-    $self instvar net_ test_
-    set net_ net4
-    set test_ cautious3
-    Queue/RED set cautious_ 3
-    Queue/RED set idle_pktsize_ 100
-    Test/cautious3 instproc run {} [Test/notcautious info instbody run ]
-    $self next pktTraceFile
-}
-
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-aimd.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-aimd.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-aimd.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-aimd.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,527 +0,0 @@
-
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-aimd.tcl,v 1.23 2006/01/25 22:02:04 sallyfloyd Exp $
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-#Agent/TCP set oldCode_ true
-
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-# Uncomment the line below to use a random seed for the
-#  random number generator.
-# ns-random 0
-
-TestSuite instproc finish file {
-        global quiet PERL
-	$self instvar cwnd_chan_
-
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -s 0.01 -m 90 -t $file > temp1.rands
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -nl -m -x time -y packets temp1.rands &
-        }
-        if { [info exists cwnd_chan_] } {
-                $self plot_cwnd
-    		exec cp temp.cwnd temp.rands
-        }
-        ## now use default graphing tool to make a data file
-        ## if so desired
-#       exec csh figure2.com $file
-#	exec csh gnuplotA.com temp.rands $file
-###        exit 0
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    Queue/RED set gentle_ true
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 5ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 50
-    $ns queue-limit $node_(r2) $node_(r1) 50
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-Class Test/tcp -superclass TestSuite
-Test/tcp instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcp
-    set guide_	"Sack TCP."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    $self next pktTraceFile
-}
-Test/tcp instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ dumpfile_ sender_ receiver_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TCP set window_ 20
-    set stopTime  20.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tcp1 [$ns_ create-connection $sender_ $node_(s1) $receiver_ $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at $stopTime0 "$ftp1 stop"
-
-    set tcp2 [$ns_ create-connection $sender_ $node_(s2) $receiver_ $node_(s4) 1]
-    set ftp2 [$tcp2 attach-app FTP]
-    $ns_ at 10.0 "$ftp2 start"
-    $ns_ at 15.0 "$ftp2 stop"
-
-
-    ###$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    ## $ns_ at $stopTime3 "exec cp temp.cwnd temp.rands; exit 0"
-    $ns_ at $stopTime2 "exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/tcpA -superclass TestSuite
-Test/tcpA instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpA{increase_0.41,decrease_0.75}
-    set guide_	"Sack TCP, increase_num_ 0.41, decrease_num_ 0.75"
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Test/tcpA instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/tcpA_precise -superclass TestSuite
-Test/tcpA_precise instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpA_precise{increase_0.41,decrease_0.75}
-    set guide_	\
-    "Sack TCP, increase_num_ 0.41, decrease_num_ 0.75, precisionReduce_ true"
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Agent/TCP set precisionReduce_ true
-    Test/tcpA_precise instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/tcpB -superclass TestSuite
-Test/tcpB instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpB{increase_1.00,decrease_0.875}
-    set guide_	\
-    "Sack TCP, increase_num_ 1.0, decrease_num_ 0.875"
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set increase_num_ 1.0
-    Agent/TCP set decrease_num_ 0.875
-    Test/tcpB instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-
-TestSuite instproc emod {} {
-        $self instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc set_lossylink {} {
-        $self instvar lossylink_ ns_ node_
-        set lossylink_ [$ns_ link $node_(r1) $node_(r2)]
-        set em [new ErrorModule Fid]
-        set errmodel [new ErrorModel/Periodic]
-        $errmodel unit pkt
-        $lossylink_ errormodule $em
-}
-
-
-# Drop the specified packet.
-TestSuite instproc drop_pkt { number } {
-    $self instvar ns_ lossmodel
-    set lossmodel [$self setloss]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ 10000
-}
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 0
-}
-
-# First retransmit timeout, ssthresh decreased by half.
-Class Test/ssthresh -superclass TestSuite
-Test/ssthresh instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	ssthresh
-    set guide_	"Retransmit Timeout with Sack TCP."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    $self next pktTraceFile
-}
-Test/ssthresh instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ dumpfile_ sender_ receiver_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    $self set_lossylink
-    Agent/TCP set window_ 8
-    set stopTime  2.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-    set tcp1 [$ns_ create-connection $sender_ $node_(s1) $receiver_ $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp1
-    $self drop_pkts {30 31 32 33 34 35 36}
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at $stopTime0 "$ftp1 stop"
-    
-    ###$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    ## $ns_ at $stopTime3 "exec cp temp.cwnd temp.rands; exit 0"
-    $ns_ at $stopTime2 "exit 0"
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/ssthreshA -superclass TestSuite
-Test/ssthreshA instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	ssthreshA
-    set guide_	\
-    "Retransmit Timeout with Sack TCP, increase_num_ 0.41, decrease_num_ 0.75."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Test/ssthreshA instproc run {} [Test/ssthresh info instbody run ]
-    $self next pktTraceFile
-}
-
-# Second retransmit timeout, ssthresh_second decrease depends on decrease_num_.
-Class Test/ssthresh_second -superclass TestSuite
-Test/ssthresh_second instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	ssthresh_second
-    set guide_	"Two Retransmit Timeouts with Sack TCP."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    $self next pktTraceFile
-}
-Test/ssthresh_second instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ dumpfile_ sender_ receiver_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    $self set_lossylink
-    Agent/TCP set window_ 8
-    set stopTime  2.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-    set tcp1 [$ns_ create-connection $sender_ $node_(s1) $receiver_ $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp1
-    $self drop_pkts {30 31 32 33 34 35 36   120 121 122 123 124 125 126}
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at $stopTime0 "$ftp1 stop"
-    
-    ###$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    ## $ns_ at $stopTime3 "exec cp temp.cwnd temp.rands; exit 0"
-    $ns_ at $stopTime2 "exit 0"
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/ssthresh_secondA -superclass TestSuite
-Test/ssthresh_secondA instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	ssthresh_secondA
-    set guide_	"Two Retransmit Timeouts with Sack TCP,
-    increase_num_ 0.41, decrease_num_ 0.75."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Test/ssthresh_secondA instproc run {} [Test/ssthresh_second info instbody run ]
-    $self next pktTraceFile
-}
-
-###################################################3
-
-Class Test/tcp_tahoe -superclass TestSuite
-Test/tcp_tahoe instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcp_tahoe
-    set guide_	"Tahoe TCP"
-    set sender_ TCP
-    set receiver_ TCPSink
-    Test/tcp_tahoe instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-Class Test/tcpA_tahoe -superclass TestSuite
-Test/tcpA_tahoe instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpA_tahoe{increase_0.41,decrease_0.75}
-    set guide_  "Tahoe TCP, increase_num_ 0.41, decrease_num_ 0.75"
-    set sender_ TCP
-    set receiver_ TCPSink
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Test/tcpA_tahoe instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-Class Test/tcpA_precise_tahoe -superclass TestSuite
-Test/tcpA_precise_tahoe instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpA_precise_tahoe{increase_0.41,decrease_0.75}
-    set guide_  \
-    "Tahoe TCP, increase_num_ 0.41, decrease_num_ 0.75, precisionReduce_ true"
-    set sender_ TCP
-    set receiver_ TCPSink
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Agent/TCP set precisionReduce_ true
-    Test/tcpA_precise_tahoe instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/tcp_reno -superclass TestSuite
-Test/tcp_reno instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcp_reno
-    set guide_  "Reno TCP"
-    set sender_ TCP/Reno
-    set receiver_ TCPSink
-    Test/tcp_reno instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-Class Test/tcpA_reno -superclass TestSuite
-Test/tcpA_reno instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpA_reno{increase_0.41,decrease_0.75}
-    set guide_  "Reno TCP, increase_num_ 0.41, decrease_num_ 0.75"
-    set sender_ TCP/Reno
-    set receiver_ TCPSink
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Test/tcpA_reno instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-Class Test/tcpA_precise_reno -superclass TestSuite
-Test/tcpA_precise_reno instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpA_precise_reno{increase_0.41,decrease_0.75}
-    set guide_  \
-    "Reno TCP, increase_num_ 0.41, decrease_num_ 0.75, precisionReduce_ true"
-    set sender_ TCP/Reno
-    set receiver_ TCPSink
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Agent/TCP set precisionReduce_ true
-    Test/tcpA_precise_reno instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/tcp_newreno -superclass TestSuite
-Test/tcp_newreno instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcp_newreno
-    set guide_  "NewReno TCP"
-    set sender_ TCP/Newreno
-    set receiver_ TCPSink
-    Test/tcp_newreno instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-Class Test/tcpA_newreno -superclass TestSuite
-Test/tcpA_newreno instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpA_newreno{increase_0.41,decrease_0.75}
-    set guide_  "NewReno TCP, increase_num_ 0.41, decrease_num_ 0.75"
-    set sender_ TCP/Newreno
-    set receiver_ TCPSink
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Test/tcpA_newreno instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-Class Test/tcpA_precise_newreno -superclass TestSuite
-Test/tcpA_precise_newreno instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	tcpA_precise_newreno{increase_0.41,decrease_0.75}
-    set guide_  \
-    "NewReno TCP, increase_num_ 0.41, decrease_num_ 0.75, precisionReduce_ true"
-    set sender_ TCP/Newreno
-    set receiver_ TCPSink
-    Agent/TCP set increase_num_ 0.41
-    Agent/TCP set decrease_num_ 0.75
-    Agent/TCP set precisionReduce_ true
-    Test/tcpA_precise_newreno instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-
-############################################################
-
-
-# IIAD, Inverse Increase Additive Decrease
-Class Test/binomial1 -superclass TestSuite
-Test/binomial1 instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	binomial1{IIAD}
-    set guide_	"TCP with IIAD"
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set decrease_num_ 0.33
-    Agent/TCP set precisionReduce_ true
-    Agent/TCP set k_parameter_ 1.0
-    Agent/TCP set l_parameter_ 0.0
-    Agent/TCP set windowOption_ 6
-    Test/binomial1 instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-
-# SQRT, Square Root
-Class Test/binomial2 -superclass TestSuite
-Test/binomial2 instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2
-    set test_	binomial2{SQRT}
-    set guide_	"TCP with SQRT"
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set decrease_num_ 0.33
-    Agent/TCP set precisionReduce_ true
-    Agent/TCP set k_parameter_ 0.5
-    Agent/TCP set l_parameter_ 0.5
-    Agent/TCP set windowOption_ 6
-    Test/binomial2 instproc run {} [Test/tcp info instbody run ]
-    $self next pktTraceFile
-}
-
-TestSuite runTest 
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-algo-routing.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-algo-routing.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-algo-routing.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-algo-routing.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,356 +0,0 @@
-# This test suite is for validating the algorithmic routing support
-# in ns.
-#
-# To run all tests:  test-all-algo-routing
-#
-# To run individual tests:
-# ns test-suite-algo-routing.tcl Algo1
-# ns test-suite-algo-routing.tcl Algo2
-# ...
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-mixmode.tcl
-#
-
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_
-	set ns_ [new Simulator]
-	#$ns_ use-scheduler List
-        $ns_ multicast
-
-	$ns_ trace-all [open temp.rands w]
-	$ns_ namtrace-all [open temp.rands.nam w]
-	$ns_ color 1 red
-	$ns_ color 0 blue
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-}
-
-TestSuite instproc finish args {
-	$self instvar ns_
-	
-	$ns_ flush-trace
-	exit 0
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv
-
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-			set a [lindex $argv 1]
-			if {$a == "QUIET"} {
-				set topo ""
-			} else {
-				set topo $a
-				isProc? Topology $topo
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-# Skeleton topology base class
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-   $self instvar node_
-    set n1 [lindex $nodelist 0]
-    foreach n2 [lrange $nodelist 1 end] {
-	if ![info exists node_($n2)] {
-	    set node_($n2) [$ns node]
-	}
-	$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-	foreach opt $args {
-	    set cmd [lindex $opt 0]
-	    set val [lindex $opt 1]
-	    if {[llength $opt] > 2} {
-		set x1 [lindex $opt 2]
-		set x2 [lindex $opt 3]
-	    } else {
-		set x1 $n1
-		set x2 $n2
-	    }
-	    $ns $cmd $node_($x1) $node_($x2) $val
-	    $ns $cmd $node_($x2) $node_($x1) $val
-	}
-	set n1 $n2
-    }
-}
-
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-NodeTopology/6nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-    set node_(n3) [$ns node]
-    set node_(n4) [$ns node]
-    set node_(n5) [$ns node]
-}
-
-
-Class Topology/net6 -superclass NodeTopology/6nodes
-
-#
-# Create a simple six node topology:
-#
-#                  n0
-#                 /  \                    
-#               n1    n2
-#              /  \  /  \
-#             n3   n4   n5
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net6 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    Simulator set NumberInterfaces_ 1
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n5) 1.5Mb 10ms DropTail 
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class NodeTopology/3nodes -superclass SkelTopology
-NodeTopology/3nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-}
-
-Class Topology/net3 -superclass NodeTopology/3nodes
-#
-# Create a simple six node topology:
-#
-#                  n0
-#                 /  \                    
-#               n1 -- n2
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net3 instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail 
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-# Definition of test-suite tests
-# Testing algorithmic routing in a simple topology
-Class Test/Algo1 -superclass TestSuite
-Test/Algo1 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net3
-	set test_	Algo1
-	set net_	$net
-	$self next
-}
-
-Test/Algo1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-        $ns_ rtproto Algorithmic
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $mrthandle set_c_rp $node_(n2)
-	}
-
-        if {$mrthandle != ""} {
-	    $ns_ at 0.3 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n1) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	$udp0 set class_ 1
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 0.1 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.1 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.1 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 0.5 "$self finish [list $rcvr0 $rcvr1 $rcvr2]"
-	$ns_ run
-}
-
-# Testing algorithmic routing with multicast in a simple topology
-Class Test/Algo2 -superclass TestSuite
-Test/Algo2 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net6
-	set test_	Algo2
-	set net_	$net
-	$self next
-}
-
-Test/Algo2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set grp0 [Node allocaddr]
-        $ns_ rtproto Algorithmic
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $mrthandle set_c_rp $node_(n2)
-	}
-
-        if {$mrthandle != ""} {
-	    $ns_ at 0.3 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n4) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	$udp0 set class_ 1
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-	set rcvr4 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n4) $rcvr4
-	set rcvr5 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n5) $rcvr5
-
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 0.1 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.1 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.1 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.1 "$node_(n2) join-group $rcvr2 $grp0"
-	$ns_ at 0.1 "$node_(n4) join-group $rcvr4 $grp0"
-	$ns_ at 0.1 "$node_(n5) join-group $rcvr5 $grp0"
-	
-	$ns_ at 0.5 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3 $rcvr4 $rcvr5]"
-	$ns_ run
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-broken.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-broken.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-broken.tcl	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-broken.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,383 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-broken.tcl,v 1.10 2006/01/24 23:00:06 sallyfloyd Exp $
-#
-# To run all tests: test-all-ecn-full
-
-##To run tests:
-## set test=ecn_twoecn_reno
-## ../../ns test-suite-ecn-full.tcl $test'_full'
-## ../../ns test-suite-ecn.tcl $test
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-
-catch "cd $dir"
-set scale 0.00001
-set wrap [expr 90 * 1000 + 40]
-Agent/TCP/FullTcp set segsize_ 960
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Topology instproc makenodes ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-}
-
-Topology instproc createlinks ns {  
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}
-
-# 
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 100ms bottleneck.
-# Queue-limit on bottleneck is 6 packets.
-# 
-Class Topology/net0 -superclass Topology
-Topology/net0 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 200ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 11
-    $ns queue-limit $node_(k1) $node_(r1) 11
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
-}
-
-Class Topology/net2-lossy -superclass Topology
-Topology/net2-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
- 
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-} 
-
-TestSuite instproc finish file {
-	global quiet PERL wrap scale
-	$self instvar ns_ tchan_ testName_ cwnd_chan_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	   $PERL ../../bin/raw2xg -a -e -s $scale -m $wrap -t $file > temp.rands
-	exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	  $PERL ../../bin/raw2xg -a -e -s $scale -m $wrap -t $file > temp1.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-# The line below plots both data and ack packets.
-#        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-#                     temp1.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	if { [info exists cwnd_chan_] && $quiet == "false" } {
-		$self plot_cwnd 
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set redq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$redq trace curq_
-	$redq trace ave_
-	$redq attach $tchan_
-}
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for RED gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-			else if ($1 == "a" && NF>2)
-				print $2, $3 >> "temp.a";
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q temp.a 
-	exec touch temp.a temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	puts $f \n\"ave_queue
-	exec cat temp.a >@ $f
-	###puts $f \n"thresh
-	###puts $f 0 [[ns link $r1 $r2] get thresh]
-	###puts $f $end [[ns link $r1 $r2] get thresh]
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-TestSuite instproc emod {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-	return $errmodule
-}
-
-TestSuite instproc setloss {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        set errmodel [$errmodule errormodels]
-        if { [llength $errmodel] > 1 } {
-                puts "droppedfin: confused by >1 err models..abort"
-                exit 1
-        }
-	return $errmodel
-}
-
-TestSuite instproc ecnsetup { tcptype {stoptime 3.0} { tcp1fid 0 } { delack 0 }} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-##
-##  Agent/TCP set maxburst_ 4
-##
-    set delay 10ms
-    $ns_ delay $node_(r1) $node_(r2) $delay
-    $ns_ delay $node_(r2) $node_(r1) $delay
-
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $redq set setbit_ true
-    $self tcpconnection $tcptype $tcp1fid $delack 1
-
-    #$self enable_tracequeue $ns_
-        
-    # trace only the bottleneck link
-    ##$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-}
-
-TestSuite instproc tcpconnection { tcptype tcpfid delack dump } {
-    $self instvar ns_ node_
-    if {$tcptype == "Reno" } {
-      set tcp [$ns_ create-connection-list TCP/FullTcp $node_(s1) \
-	  TCP/FullTcp $node_(s3) $tcpfid]
-    } else {
-      set tcp [$ns_ create-connection-list TCP/FullTcp/$tcptype $node_(s1) \
-	  TCP/FullTcp/$tcptype $node_(s3) $tcpfid]
-    }
-    set tcp1 [lindex $tcp 0]
-    set sink [lindex $tcp 1]
-    $sink listen
-    $sink set ecn_ 1
- 
-    if {$delack == 1} {
-	$sink set interval_ 100ms
-    }
-    $tcp1 set window_ 30
-    $tcp1 set ecn_ 1
-
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-    if { $dump == 1 } {
-	$self tcpDump $tcp1 5.0
-        $self enable_tracecwnd $ns_ $tcp1
-    }
-}
-
-TestSuite instproc second_tcp { tcptype starttime } {
-    $self instvar ns_ node_
-    if {$tcptype == "Tahoe"} {
-      set tcp [$ns_ create-connection TCP $node_(s1) \
-         TCPSink $node_(s3) 2]
-    } elseif {$tcptype == "Sack1"} {
-      set tcp [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          TCPSink/Sack1  $node_(s3) 2]
-    } else {
-      set tcp [$ns_ create-connection TCP/$tcptype $node_(s1) \
-         TCPSink $node_(s3) 2]
-    }
-    $tcp set window_ 30
-    $tcp set ecn_ 1
-    set ftp [$tcp attach-app FTP]
-    $ns_ at $starttime "$ftp start"
-}
-
-# TestSuite instproc second_tcp { tcptype starttime } {
-#     $self tcpconnection $tcptype 2 0 0 
-# }
-
-# Drop the specified packet.
-TestSuite instproc drop_pkt { number } {
-    $self instvar ns_ lossmodel
-    set lossmodel [$self setloss]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ 10000
-}
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_ errmodel1
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-
-}
-
-# Bug-fix doesn't seem to be working as it should here...
-Class Test/tahoe4 -superclass TestSuite
-Test/tahoe4 instproc init {} {
-        $self instvar net_ test_
-        set net_        net0
-        set test_       tahoe4
-        $self next
-}
-Test/tahoe4 instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
- 
-        set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-        $tcp1 set window_ 30
-        set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-        $tcp2 set window_ 30
- 
-        set ftp1 [$tcp1 attach-app FTP]
-        set ftp2 [$tcp2 attach-app FTP]
- 
-        $ns_ at 0.0 "$ftp1 start"
-        $ns_ at 0.0 "$ftp2 start"
- 
-        $self tcpDump $tcp1 5.0
- 
-        # Trace only the bottleneck link
-        $self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-        $ns_ run
-}
- 
-Class Test/tahoe4-nobugfix -superclass TestSuite
-Test/tahoe4-nobugfix instproc init {} {
-        $self instvar net_ test_
-        set net_        net0
-        set test_       tahoe4-nobugfix
-        Agent/TCP set bugFix_ false
-        Test/tahoe4-nobugfix instproc run {} [Test/tahoe4 info instbody run ]
-        $self next pktTraceFile
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-cbq.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-cbq.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-cbq.tcl	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-cbq.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1353 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-cbq.tcl,v 1.36 2006/01/24 23:00:06 sallyfloyd Exp $
-#
-#
-# This test suite reproduces the tests from the following note:
-# Floyd, S., Ns Simulator Tests for Class-Based Queueing, February 1996.
-# URL ftp://ftp.ee.lbl.gov/papers/cbqsims.ps.Z.
-#
-# To run individual tests:
-# 	./ns test-suite-cbq.tcl cbqPRR 
-# 	./ns test-suite-cbq.tcl cbqWRR
-# 	...
-#
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-source topologies.tcl
-catch "cd $dir"
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-TestSuite instproc make_queue { cl qlim } {
-	$self instvar cbq_qtype_
-	set q [new Queue/$cbq_qtype_]
-	$q set limit_ $qlim
-	$cl install-queue $q
-}
-
-TestSuite instproc make_fmon cbqlink {
-	$self instvar ns_ fmon_
-	set fmon_ [$ns_ makeflowmon Fid]
-	$ns_ attach-fmon $cbqlink $fmon_
-}
-
-# ~/newr/rm/testB
-# Create a flat link-sharing structure.
-#
-#	3 leaf classes:
-#		vidClass	(32%), pri 1
-#		audioClass	(03%), pri 1
-#		dataClass	(65%), pri 2
-#
-
-TestSuite instproc create_flat { audborrowok audxdelay} {
-	$self instvar topclass_ vidclass_ audioclass_ dataclass_
-	$self instvar cbq_qtype_
-
-	set qlim 20
-	set cbq_qtype_ DropTail
-
-	set topclass_ [new CBQClass]
-	# (topclass_ doesn't have a queue)
-	$topclass_ setparams none 0 0.98 auto 8 2 0
-
- 	set vidclass_ [new CBQClass]
-	$self make_queue $vidclass_ $qlim
-	$vidclass_ setparams $topclass_ true 0.32 auto 1 1 0
-
-	set audioclass_ [new CBQClass]
-	$self make_queue $audioclass_ $qlim
-	$audioclass_ setparams $topclass_ $audborrowok 0.03 auto 1 1 $audxdelay
-
-	set dataclass_ [new CBQClass]
-	$self make_queue $dataclass_ $qlim
-	$dataclass_ setparams $topclass_ true 0.65 auto 2 1 0
-}
-
-TestSuite instproc insert_flat cbqlink {
-	$self instvar topclass_ vidclass_ audioclass_ dataclass_
-
-	#
-	# note: auto settings for maxidle are resolved in insert
-	# (see tcl/lib/ns-queue.tcl)
-	#
-
- 	$cbqlink insert $topclass_
-	$cbqlink insert $vidclass_
- 	$cbqlink insert $audioclass_
-        $cbqlink insert $dataclass_
-
-	$cbqlink bind $vidclass_ 2;# fid 2
- 	$cbqlink bind $audioclass_ 1;# fid 1
-	$cbqlink bind $dataclass_ 3; # fid 3
-}
-
-TestSuite instproc create_flat2 { audmaxidle audxdelay } {
-	$self instvar topclass_ audioclass_ dataclass_
-	$self instvar cbq_qtype_
-
-	set qlim 1000
-	set cbq_qtype_ DropTail
-
-	set topclass_ [new CBQClass]
-	# (topclass_ doesn't have a queue)
-	$topclass_ setparams none false 0.97 1.0 8 2 0
-
-	set audioclass_ [new CBQClass]
-	$self make_queue $audioclass_ $qlim
-	$audioclass_ setparams $topclass_ false 0.30 $audmaxidle 1 1 $audxdelay
-
-	set dataclass_ [new CBQClass]
-	$self make_queue $dataclass_ $qlim
-	$dataclass_ setparams $topclass_ true 0.30 auto 2 1 0
-}
-
-TestSuite instproc create_flat3 { rootbw rootmaxidle } {
-	$self instvar topclass_ audioclass_ dataclass_
-	$self instvar cbq_qtype_
-
-	set qlim 20
-	set cbq_qtype_ DropTail
-
-	set topclass_ [new CBQClass]
-	# (topclass_ doesn't have a queue)
-	$topclass_ setparams none false $rootbw $rootmaxidle 8 2 0
-
-	set audioclass_ [new CBQClass]
-	$self make_queue $audioclass_ $qlim
-	$audioclass_ setparams $topclass_ true 0.01 auto 1 1 0
-
-	set dataclass_ [new CBQClass]
-	$self make_queue $dataclass_ $qlim
-	$dataclass_ setparams $topclass_ true 0.99 auto 2 1 0
-}
-
-TestSuite instproc create_flat4 { rootbw rootmaxidle {audiobw 0.01} 
-   {databw 0.99} {qlim 20} } {
-	$self instvar topclass_ audioclass_ dataclass_
-	$self instvar cbq_qtype_
-
-	set cbq_qtype_ DropTail
-
-	set topclass_ [new CBQClass]
-	# (topclass_ doesn't have a queue)
-	$topclass_ setparams none false $rootbw $rootmaxidle 8 2 0
-
-	set audioclass_ [new CBQClass]
-	$self make_queue $audioclass_ $qlim
-	$audioclass_ setparams $topclass_ true $audiobw auto 1 1 0
-
-	set dataclass_ [new CBQClass]
-	$self make_queue $dataclass_ $qlim
-	$dataclass_ setparams $topclass_ true $databw auto 1 1 0
-}
-
-TestSuite instproc insert_flat2 cbqlink {
-	$self instvar topclass_ audioclass_ dataclass_
-
-	#
-	# note: auto settings for maxidle are resolved in insert
-	# (see tcl/lib/ns-queue.tcl)
-	#
-
- 	$cbqlink insert $topclass_
- 	$cbqlink insert $audioclass_
-        $cbqlink insert $dataclass_
-
- 	$cbqlink bind $audioclass_ 1;# fid 1
-	$cbqlink bind $dataclass_ 2; # fid 2
-}
-
-# Create a two-agency link-sharing structure.
-#
-#	4 leaf classes for 2 "agencies":
-#		vidAClass	(30%), pri 1
-#		dataAClass	(40%), pri 2
-#		vidBClass	(10%), pri 1
-#		dataBClass	(20%), pri 2
-#
-TestSuite instproc create_twoagency { } {
-
-	$self instvar cbqalgorithm_
-	$self instvar topClass_ topAClass_ topBClass_
-
-	set qlim 20
-
-	set topClass_ [new CBQClass]
-	set topAClass_ [new CBQClass]
-	set topBClass_ [new CBQClass]
-
-	if { $cbqalgorithm_ == "ancestor-only" } { 
-		# For Ancestor-Only link-sharing. 
-		# Maxidle should be smaller for AO link-sharing.
-		$topClass_ setparams none 0 0.97 auto 8 3 0
-		$topAClass_ setparams $topClass_ 1 0.69 auto 8 2 0
-		$topBClass_ setparams $topClass_ 1 0.29 auto 8 2 0
-	} elseif { $cbqalgorithm_ == "top-level" } {
-		# For Top-Level link-sharing?
-		# borrowing from $topAClass_ is occuring before from $topClass
-		# yellow borrows from $topBClass_
-		# Goes green borrow from $topClass_ or from $topAClass?
-		# When $topBClass_ is unsatisfied, there is no borrowing from
-		#  $topClass_ until a packet is sent from the yellow class.
-		$topClass_ setparams none 0 0.97 0.001 8 3 0
-		$topAClass_ setparams $topClass_ 1 0.69 auto 8 2 0
-		$topBClass_ setparams $topClass_ 1 0.29 auto 8 2 0
-	} elseif { $cbqalgorithm_ == "formal" } {
-		# For Formal link-sharing
-		# The allocated bandwidth can be exact for parent classes.
-		$topClass_ setparams none 0 1.0 1.0 8 3 0
-		$topAClass_ setparams $topClass_ 1 0.7 1.0 8 2 0
-		$topBClass_ setparams $topClass_ 1 0.3 1.0 8 2 0
-	}
-
-	$self instvar vidAClass_ vidBClass_ dataAClass_ dataBClass_
-
-	set vidAClass_ [new CBQClass]
-	$vidAClass_ setparams $topAClass_ 1 0.3 auto 1 1 0
-	set dataAClass_ [new CBQClass]
- 	$dataAClass_ setparams $topAClass_ 1 0.4 auto 2 1 0
- 	set vidBClass_ [new CBQClass]
- 	$vidBClass_ setparams $topBClass_ 1 0.1 auto 1 1 0
- 	set dataBClass_ [new CBQClass]
- 	$dataBClass_ setparams $topBClass_ 1 0.2 auto 2 1 0
-
-	# (topclass_ doesn't have a queue)
-	$self instvar cbq_qtype_
-	set cbq_qtype_ DropTail
-	$self make_queue $vidAClass_ $qlim
-	$self make_queue $dataAClass_ $qlim
-	$self make_queue $vidBClass_ $qlim
-	$self make_queue $dataBClass_ $qlim
-}
-
-TestSuite instproc insert_twoagency cbqlink {
-
-	$self instvar topClass_ topAClass_ topBClass_
-	$self instvar vidAClass_ vidBClass_
-	$self instvar dataAClass_ dataBClass_
-
-	$cbqlink insert $topClass_
- 	$cbqlink insert $topAClass_
- 	$cbqlink insert $topBClass_
-	$cbqlink insert $vidAClass_
-	$cbqlink insert $vidBClass_
-        $cbqlink insert $dataAClass_
-        $cbqlink insert $dataBClass_
-
-	$cbqlink bind $vidAClass_ 1
-	$cbqlink bind $dataAClass_ 2
-	$cbqlink bind $vidBClass_ 3
-	$cbqlink bind $dataBClass_ 4
-}
-
-# display graph of results
-TestSuite instproc finish testname {
-	global quiet 
-	$self instvar tmpschan_ tmpqchan_ topo_
-	$topo_ instvar cbqlink_
-
-	set graphfile temp.rands
-	set bw [[$cbqlink_ set link_] set bandwidth_]
-	set maxbytes [expr $bw / 8.0]
-
-	set awkCode  {
-		$2 == fid { print $1, $3/maxbytes }
-	}
-	set awkCodeAll {
-		$2 == fid { print time, sum; sum = 0 }
-		{
-			sum += $3/maxbytes;
-			if (NF==3)
-				time = $1;
-			else
-				time = 0;
-		}
-	}
-
-	if { [info exists tmpschan_] } {
-		close $tmpschan_
-	}
-	if { [info exists tmpqchan_] } {
-		close $tmpqchan_
-	}
-
-	set f [open $graphfile w]
-	puts $f "TitleText: $testname"
-	puts $f "Device: Postscript"
-	
-	exec rm -f temp.p
-	exec touch temp.p
-	foreach i { 1 2 3 4 } {
-		exec echo "\n\"flow $i" >> temp.p
-		exec awk $awkCode fid=$i maxbytes=$maxbytes temp.s > temp.$i
-		exec cat temp.$i >> temp.p
-		exec echo " " >> temp.p
-	}
-
-	exec awk $awkCodeAll fid=1 maxbytes=$maxbytes temp.s > temp.all
-	exec echo "\n\"all " >> temp.p  
-	exec cat temp.all >> temp.p 
-
-	exec cat temp.p >@ $f
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y bandwidth $graphfile &
-	}
-#	exec csh figure2.com $file
-	
-	exit 0
-}
-
-#
-# Save the number of bytes sent by each class in each time interval.
-# File: temp.s
-#
-TestSuite instproc cbrDump4 { linkno interval stopTime maxBytes } {
-	set dumpfile temp.s
-	$self instvar oldbytes_
-	$self instvar ns_
-
-	TestSuite instproc cdump { lnk interval file }  {
-	  global quiet
-	  $self instvar oldbytes_
-	  $self instvar ns_ fmon_
-	  set now [$ns_ now]
-	  set fcl [$fmon_ classifier]
-	  set fids { 1 2 3 4 }
-
-	  if {$quiet == "false"} {
-	  	puts "$now"
-	  }
-	  foreach i $fids {
-		  set flow($i) [$fcl lookup auto 0 0 $i]
-		  if { $flow($i) != "" } {
-			  set bytes($i) [$flow($i) set bdepartures_]
-			  puts $file "$now $i [expr $bytes($i) - $oldbytes_($i)]"
-			  set oldbytes_($i) $bytes($i)
-		  }
-	  }
-	  $ns_ at [expr $now + $interval] "$self cdump $lnk $interval $file"
-	}
-
-	set fids { 1 2 3 4 }
-	foreach i $fids {
-		set oldbytes_($i) 0
-	}
-
-	$self instvar tmpschan_
-	set f [open $dumpfile w]
-	set tmpschan_ $f
-	puts $f "maxbytes $maxBytes"
-	$ns_ at 0.0 "$self cdump $linkno $interval $f"
-
-	TestSuite instproc cdumpdel file {
-	  $self instvar ns_ fmon_
-	  set now [$ns_ now]
-	  set fcl [$fmon_ classifier]
-
-	  set fids { 1 2 3 4 }
-	  foreach i $fids {
-		  set flow [$fcl lookup auto 0 0 $i]
-		  if { $flow != "" } {
-			  set dsamp [$flow get-delay-samples]
-			  puts $file "$now $i [$dsamp mean]"
-		  }
-	  }
-	}
-	$self instvar tmpqchan_
-	set f1 [open temp.q w]
-	set tmpqchan_ $f1
-	puts $f1 "delay"
-	$ns_ at $stopTime "$self cdumpdel $f1"
-}
-
-#
-# Save the queueing delay seen by each class.
-# File: temp.q
-# Format: time, class, delay
-#
-# proc cbrDumpDel { linkno stopTime } {
-# 	proc cdump { lnk file }  {
-# 	  set timenow [ns now]
-# 	  # format: time, class, delay
-# 	  puts $file "$timenow 1 [$lnk stat 1 mean-qsize]"
-# 	  puts $file "$timenow 2 [$lnk stat 2 mean-qsize]"
-# 	  puts $file "$timenow 3 [$lnk stat 3 mean-qsize]"
-# 	  puts $file "$timenow 4 [$lnk stat 4 mean-qsize]"
-# 	}
-# 	set f1 [open temp.q w]
-# 	puts $f1 "delay"
-# 	ns at $stopTime "cdump $linkno $f1"
-# 	ns at $stopTime "close $f1"
-# }
-
-#
-# Create three CBR connections.
-#
-TestSuite instproc three_cbrs {} {
-	$self instvar ns_ node_
-	set udp1 [$ns_ create-connection UDP $node_(s1) LossMonitor $node_(r2) 1]
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-	$cbr1 set packetSize_ 190
-	$cbr1 set rate_ 1.52Mb; # interval of 0.001
-
-	set udp2 [$ns_ create-connection UDP $node_(s2) LossMonitor $node_(r2) 2]
-	set cbr2 [new Application/Traffic/CBR]
-	$cbr2 attach-agent $udp2
-	$cbr2 set packetSize_ 500
-	$cbr2 set rate_ 2Mb; # interval of 0.002
-
-	set udp3 [$ns_ create-connection UDP $node_(s3) LossMonitor $node_(r2) 3]
-	set cbr3 [new Application/Traffic/CBR]
-	$cbr3 attach-agent $udp3
-	$cbr3 set packetSize_ 1000 
-	$cbr3 set rate_ 1.6Mb; # interval of 0.005
-
-	$ns_ at 0.0 "$cbr1 start; $cbr2 start; $cbr3 start"
-        $ns_ at 4.0 "$cbr3 stop"
-        $ns_ at 8.0 "$cbr3 start"
-        $ns_ at 12.0 "$cbr2 stop"
-        $ns_ at 18.0 "$cbr2 start"
-	$ns_ at 20.0 "$cbr1 stop"
-        $ns_ at 24.0 "$cbr1 start"
-}
-
-#
-# Create two CBR connections.
-#
-TestSuite instproc two_cbrs { ps1 ps2 int1 int2 dostop } {
-	$self instvar ns_ node_
-	set udp1 [$ns_ create-connection UDP $node_(s1) LossMonitor $node_(r2) 1]
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-	$cbr1 set packetSize_ $ps1 
-	$cbr1 set rate_ [expr $ps1 * 8/ [$ns_ delay_parse $int1]]
-
-	set udp2 [$ns_ create-connection UDP $node_(s2) LossMonitor $node_(r2) 2]
-	set cbr2 [new Application/Traffic/CBR]
-	$cbr2 attach-agent $udp2
-	$cbr2 set packetSize_ $ps2 
-	$cbr2 set rate_ [expr $ps2 * 8/ [$ns_ delay_parse $int2]]
-
-	$ns_ at 0.0 "$cbr1 start; $cbr2 start"
-	if { $dostop } {
-		$ns_ at 0.002 "$cbr1 stop"
-		$ns_ at 1.0 "$cbr1 start"
-		$ns_ at 1.08 "$cbr1 stop"
-	}
-}
-
-TestSuite instproc four_cbrs {} {
-	$self instvar ns_ node_
-	set udp1 [$ns_ create-connection UDP $node_(s1) LossMonitor $node_(r2) 1]
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-	$cbr1 set packetSize_ 190
-	$cbr1 set rate_ 1.52Mb; # interval of 0.001
-
-	set udp2 [$ns_ create-connection UDP $node_(s2) LossMonitor $node_(r2) 2]
-	set cbr2 [new Application/Traffic/CBR]
-	$cbr2 attach-agent $udp2
-	$cbr2 set packetSize_ 1000 
-	$cbr2 set rate_ 1.6Mb; # interval of 0.005
-
-	set udp3 [$ns_ create-connection UDP $node_(s3) LossMonitor $node_(r2) 3]
-	set cbr3 [new Application/Traffic/CBR]
-	$cbr3 attach-agent $udp3
-	$cbr3 set packetSize_ 500
-	$cbr3 set rate_ 2Mb; # interval of 0.002
-
-	set udp4 [$ns_ create-connection UDP $node_(s3) LossMonitor $node_(r2) 4]
-	set cbr4 [new Application/Traffic/CBR]
-	$cbr4 attach-agent $udp4
-	$cbr4 set packetSize_ 1000 
-	$cbr4 set rate_ 1.6Mb; # interval of 0.005
-
-	$ns_ at 0.0 "$cbr1 start; $cbr2 start; $cbr3 start; $cbr4 start"
-	$ns_ at 12.0 "$cbr1 stop"
-	$ns_ at 16.0 "$cbr1 start"
-	$ns_ at 36.0 "$cbr1 stop"
-	$ns_ at 20.0 "$cbr2 stop"
-	$ns_ at 24.0 "$cbr2 start"
-	$ns_ at 4.0 "$cbr3 stop"
-	$ns_ at 8.0 "$cbr3 start"
-	$ns_ at 36.0 "$cbr3 stop"
-	$ns_ at 28.0 "$cbr4 stop"
-	$ns_ at 32.0 "$cbr4 start"
-}
-
-TestSuite instproc four_tcps {} {
-	$self instvar ns_ node_
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(r2) 1]
-	set ftp1 [$tcp1 attach-app FTP]
-	$tcp1 set packetSize_ 190
-
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(r2) 2]
-	set ftp2 [$tcp2 attach-app FTP]
-	$tcp2 set packetSize_ 1000 
-
-	set tcp3 [$ns_ create-connection TCP $node_(s3) TCPSink $node_(r2) 3]
-	set ftp3 [$tcp3 attach-app FTP]
-	$tcp3 set packetSize_ 500
-
-	set tcp4 [$ns_ create-connection TCP $node_(s3) TCPSink $node_(r2) 4]
-	set ftp4 [$tcp4 attach-app FTP]
-	$tcp4 set packetSize_ 1000 
-
-	$ns_ at 0.0 "$ftp1 start; $ftp2 start; $ftp3 start; $ftp4 start"
-	$ns_ at 12.0 "$ftp1 stop"
-	$ns_ at 16.0 "$ftp1 start"
-	$ns_ at 36.0 "$ftp1 stop"
-	$ns_ at 20.0 "$ftp2 stop"
-	$ns_ at 24.0 "$ftp2 start"
-	$ns_ at 4.0 "$ftp3 stop"
-	$ns_ at 8.0 "$ftp3 start"
-	$ns_ at 36.0 "$ftp3 stop"
-	$ns_ at 28.0 "$ftp4 stop"
-	$ns_ at 32.0 "$ftp4 start"
-}
-
-#
-# Figure 10 from the link-sharing paper. 
-# ~/newr/rm/testB.com
-# 
-
-Class Test/WRR -superclass TestSuite
-Test/WRR instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ cbq1-wrr
-	set test_ CBQ_WRR
-	$self next 0
-}
-
-Test/WRR instproc run {} {
-	$self instvar cbqalgorithm_ ns_ net_ topo_
-	set cbqalgorithm_ top-level
-	set stopTime 28.1
-	set maxbytes 187500
-
-	$topo_ instvar cbqlink_
-	$self create_flat true 0
-	$self insert_flat $cbqlink_
-	$self three_cbrs
-	$self make_fmon $cbqlink_
-	[$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-	$self openTrace $stopTime CBQ_WRR
-
-	$ns_ run
-}
-
-Class Test/PRR -superclass TestSuite
-Test/PRR instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ cbq1-prr
-	set test_ CBQ_PRR
-	$self next 0
-}
-
-#
-# Figure 10, but packet-by-packet RR, and Formal.
-# 
-Test/PRR instproc run {} {
-	$self instvar cbqalgorithm_ ns_ net_ topo_
-	set cbqalgorithm_ formal
-	set stopTime 28.1
-	set maxbytes 187500
-
-	$topo_ instvar cbqlink_
-	$self create_flat true 0
-	$self insert_flat $cbqlink_
-	$self three_cbrs
-	$self make_fmon $cbqlink_
-	[$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-	$self openTrace $stopTime CBQ_PRR
-
-	$ns_ run
-}
-
-
-# Figure 12 from the link-sharing paper.
-# WRR, Ancestor-Only link-sharing.
-# ~/newr/rm/testA.com
-# 
-
-Class Test/AO -superclass TestSuite
-Test/AO instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ cbq1-wrr
-	set test_ CBQ_AO
-	$self next 0
-}
-Test/AO instproc run {} {
-	$self instvar cbqalgorithm_ ns_ net_ topo_
-	set stopTime 40.1
-	set maxbytes 187500
-	set cbqalgorithm_ ancestor-only
-
-	$topo_ instvar cbqlink_
-	$self create_twoagency
-	$self insert_twoagency $cbqlink_
-	$self four_cbrs
-	$self make_fmon $cbqlink_
-	[$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-	$self openTrace $stopTime CBQ_AO
-
-	$ns_ run
-}
-
-#
-# Figure 13 from the link-sharing paper.
-# WRR, Top link-sharing.
-# ~/newr/rm/testA.com
-#
-Class Test/TL -superclass TestSuite
-Test/TL instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ cbq1-wrr
-	set test_ CBQ_TL
-	$self next 0
-}
-Test/TL instproc run {} {
-	$self instvar cbqalgorithm_ ns_ net_ topo_
-	set stopTime 40.1
-	set maxbytes 187500
-	set cbqalgorithm_ top-level
-
-	$topo_ instvar cbqlink_
-	$self create_twoagency
-	$self insert_twoagency $cbqlink_
-	$self four_cbrs
-	$self make_fmon $cbqlink_
-	[$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-	$self openTrace $stopTime CBQ_TL
-
-	$ns_ run
-}
-
-#
-# Figure 11 from the link-sharing paper.
-# WRR, Formal (new) link-sharing.
-# ~/newr/rm/testA.com
-#
-
-Class Test/FORMAL -superclass TestSuite
-Test/FORMAL instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ cbq1-wrr
-	set test_ CBQ_FORMAL
-	$self next 0
-}
-Test/FORMAL instproc run {} {
-	$self instvar cbqalgorithm_ ns_ net_ topo_
-	set stopTime 40.1
-	set maxbytes 187500
-	set cbqalgorithm_ formal
-
-	$topo_ instvar cbqlink_
-	$self create_twoagency
-	$self insert_twoagency $cbqlink_
-	$self four_cbrs
-	$self make_fmon $cbqlink_
-	[$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-	$self openTrace $stopTime CBQ_FORMAL
-
-	$ns_ run
-}
-
-#
-# WRR, Formal link-sharing, with TCP instead of UDP traffic.
-#
-
-Class Test/FORMAL_TCP -superclass TestSuite
-Test/FORMAL_TCP instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ cbq1-wrr
-	set test_ CBQ_FORMAL_TCP
-	$self next 0
-}
-Test/FORMAL_TCP instproc run {} {
-	$self instvar cbqalgorithm_ ns_ net_ topo_
-	set stopTime 40.1
-	set maxbytes 187500
-	set cbqalgorithm_ formal
-
-	$topo_ instvar cbqlink_
-	$self create_twoagency
-	$self insert_twoagency $cbqlink_
-	$self four_tcps
-	$self make_fmon $cbqlink_
-	[$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-	$self openTrace $stopTime CBQ_FORMAL_TCP
-
-	$ns_ run
-}
-
-TestSuite instproc finish_max tname {
-	global quiet PERL
-        $self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 out.tr | \
-          $PERL ../../bin/raw2xg -s 0.01 -m 90 -t $tname > temp.rands
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-        }
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-        if { [info exists tchan_] && $quiet == "false" } {
-                $self plotQueue $testName_
-        }
-        $ns_ halt
-}
-
-
-#
-# Figure 11 from the link-sharing paper, but Formal (old) link-sharing.
-# WRR. 
-# ~/newr/rm/testA.com DELETED
-#
-
-# 
-# To send five back-to-back packets for $audClass,
-#   maxidle should be 0.004 seconds
-# To send 50 back-to-back packets, maxidle should be 0.25 seconds
-
-Class Test/MAX1 -superclass TestSuite
-Test/MAX1 instproc init topo { 
-        $self instvar net_ defNet_ test_
-	Queue set limit_ 1000
-        set net_ $topo
-        set defNet_ cbq1-wrr
-        set test_ CBQ_MAX1
-        $self next 0
-}
-Test/MAX1 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 2.1
-        set maxbytes 187500
-        set cbqalgorithm_ formal
- 
-        $topo_ instvar cbqlink_
-        $self create_flat2 0.25 0
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 1000 1000 0.001 0.01 1
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	TestSuite instproc finish tname { $self finish_max $tname }
-	$self traceQueues $node_(r1) [$self openTrace $stopTime CBQ_MAX1]
-        $ns_ run
-}
-
-Class Test/MAX2 -superclass TestSuite
-Test/MAX2 instproc init topo { 
-        $self instvar net_ defNet_ test_
-	Queue set limit_ 1000
-        set net_ $topo
-        set defNet_ cbq1-wrr
-        set test_ CBQ_MAX2
-        $self next 0
-}
-Test/MAX2 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 2.1
-        set maxbytes 187500
-        set cbqalgorithm_ formal
- 
-        $topo_ instvar cbqlink_
-        $self create_flat2 0.004 0
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 1000 1000 0.001 0.01 1
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	TestSuite instproc finish tname { $self finish_max $tname }
-	$self traceQueues $node_(r1) [$self openTrace $stopTime CBQ_MAX2]
-        $ns_ run
-}
-
-#
-# Set "extradelay" to 0.024 seconds for a steady-state burst of 2 
-#
-Class Test/EXTRA1 -superclass TestSuite
-Test/EXTRA1 instproc init topo { 
-        $self instvar net_ defNet_ test_
-        Queue set limit_ 1000
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_EXTRA1
-        $self next 0
-}
-Test/EXTRA1 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 2.1
-        set maxbytes 187500
-        set cbqalgorithm_ formal
-        
-        $topo_ instvar cbqlink_ 
-        $self create_flat2 auto 0.024
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 1000 1000 0.015 0.01 0
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-        TestSuite instproc finish tname { $self finish_max $tname }
-        $self traceQueues $node_(r1) [$self openTrace $stopTime CBQ_EXTRA1]
-        $ns_ run
-}
-
-
-#
-# Set "extradelay" to 0.12 seconds for a steady-state burst of 8 
-#
-
-Class Test/EXTRA2 -superclass TestSuite
-Test/EXTRA2 instproc init topo { 
-        $self instvar net_ defNet_ test_
-        Queue set limit_ 1000
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_EXTRA2
-        $self next 0
-}
-Test/EXTRA2 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 2.1
-        set maxbytes 187500
-        set cbqalgorithm_ formal
-        
-        $topo_ instvar cbqlink_ 
-        $self create_flat2 auto 0.12
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 1000 1000 0.015 0.01 0
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-        TestSuite instproc finish tname { $self finish_max $tname }
-        $self traceQueues $node_(r1) [$self openTrace $stopTime CBQ_EXTRA2]
-        $ns_ run
-}
-
-# With Packet-by-Packet Round-robin, it is necessary either to
-# set a positive value for extradelay, or a negative value for minidle
-#
-Class Test/MIN1 -superclass TestSuite
-Test/MIN1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ cbq1-prr
-	set test_ CBQ_MIN1
-	$self next 0
-}
-
-Test/MIN1 instproc run {} {
-	$self instvar cbqalgorithm_ ns_ net_ topo_
-	set cbqalgorithm_ formal
-	set stopTime 4.1
-	set maxbytes 187500
-
-	$topo_ instvar cbqlink_
-	$self create_flat false 0
-	$self insert_flat $cbqlink_
-	$self three_cbrs
-	$self make_fmon $cbqlink_
-	[$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-	$self openTrace $stopTime CBQ_MIN1
-
-	$ns_ run
-}
-
-#
-# Min2 is deprecated
-#
-
-#
-# Min3 is like Min1, except extradelay is set to 0.2
-#
-Class Test/MIN3 -superclass TestSuite
-Test/MIN3 instproc init topo {
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_MIN3
-        $self next 0
-}   
-
-Test/MIN3 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_
-        set cbqalgorithm_ formal
-        set stopTime 4.1
-        set maxbytes 187500
-    
-        $topo_ instvar cbqlink_
-        $self create_flat false 0.20
-        $self insert_flat $cbqlink_
-        $self three_cbrs
-        $self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-    
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_MIN3
-    
-        $ns_ run
-}   
-
-#
-# Min1, but with Ancestor-Only link-sharing.
-# 
-Class Test/MIN4 -superclass TestSuite
-Test/MIN4 instproc init topo {
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr  
-        set test_ CBQ_MIN4
-        $self next 0
-}   
-    
-Test/MIN4 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_
-        set cbqalgorithm_ ancestor-only
-        set stopTime 4.1
-        set maxbytes 187500
-    
-        $topo_ instvar cbqlink_
-        $self create_flat false 0
-        $self insert_flat $cbqlink_
-        $self three_cbrs
-        $self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_MIN4
-    
-        $ns_ run
-}   
-
-#
-# Min5 is deprecated
-#
-
-# 
-#
-# Min6 is like Min4, except extradelay is set to 0.2
-#
-Class Test/MIN6 -superclass TestSuite
-Test/MIN6 instproc init topo {
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_MIN6
-        $self next 0
-}   
-    
-Test/MIN6 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_
-        set cbqalgorithm_ ancestor-only
-        set stopTime 4.1
-        set maxbytes 187500
-    
-        $topo_ instvar cbqlink_
-        $self create_flat false 0.20
-        $self insert_flat $cbqlink_
-        $self three_cbrs
-        $self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-    
-   	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_MIN6
-    
-        $ns_ run
-}   
-
-#
-# With Formal link-sharing, the dataClass gets most of the bandwidth.
-# With Ancestor-Only link-sharing, the audioClass generally gets
-#   to borrow from the not-overlimit root class.
-# With Top-Level link-sharing, the audioClass is often blocked
-#   from borrowing by an underlimit dataClass
-# With Ancestor-Only link-sharing, the top class cannot be
-#   allocated 100% of the link bandwidth.
-#
-Class Test/TwoAO -superclass TestSuite
-Test/TwoAO instproc init topo {
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_TwoAO
-        $self next 0
-}   
-Test/TwoAO instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 8.1
-        set maxbytes 187500
-        set cbqalgorithm_ ancestor-only
-    
-        $topo_ instvar cbqlink_
-        $self create_flat3 0.98 1.0
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 190 500 0.001 0.002 0
-	$self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_TwoAO
-    
-        $ns_ run
-}   
-
-# This has a smaller value for maxidle for the root class. 
-Class Test/TwoAO2 -superclass TestSuite
-Test/TwoAO2 instproc init topo {
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_TwoAO2
-        $self next 0
-}   
-Test/TwoAO2 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 8.1
-        set maxbytes 187500
-        set cbqalgorithm_ ancestor-only
-    
-        $topo_ instvar cbqlink_
-        $self create_flat3 0.98 0.005
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 190 500 0.001 0.002 0 
-	$self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-    
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_TwoAO2
-    
-        $ns_ run
-}   
-
-Class Test/TwoAO3 -superclass TestSuite
-Test/TwoAO3 instproc init topo {
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_TwoAO3
-        $self next 0
-}   
-Test/TwoAO3 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 8.1
-        set maxbytes 187500
-        set cbqalgorithm_ ancestor-only
-    
-        $topo_ instvar cbqlink_
-        $self create_flat3 0.99 auto
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 190 500 0.001 0.002 0 
-	$self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-    
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_TwoAO3
-    
-        $ns_ run
-}   
-
-#
-# With Formal link-sharing, the dataClass gets most of the bandwidth.
-# With Ancestor-Only link-sharing, the audioClass generally gets
-#   to borrow from the not-overlimit root class.
-# With Top-Level link-sharing, the audioClass is often blocked
-#   from borrowing by an underlimit dataClass
-#
-
-Class Test/TwoTL -superclass TestSuite
-Test/TwoTL instproc init topo {
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_TwoTL
-        $self next 0
-}   
-Test/TwoTL instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 8.1
-        set maxbytes 187500
-        set cbqalgorithm_ top-level
-    
-        $topo_ instvar cbqlink_
-        $self create_flat3 1.0 auto
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 190 500 0.001 0.002 0 
-	$self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-    
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_TwoTL
-    
-        $ns_ run
-}   
-
-#
-# With Formal link-sharing, the dataClass gets most of the bandwidth.
-# With Ancestor-Only link-sharing, the audioClass generally gets
-#   to borrow from the not-overlimit root class.
-# With Top-Level link-sharing, the audioClass is often blocked
-#   from borrowing by an underlimit dataClass
-#
-Class Test/TwoF -superclass TestSuite
-Test/TwoF instproc init topo {
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_TwoF
-        $self next 0
-}   
-Test/TwoF instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        set stopTime 8.1
-        set maxbytes 187500
-        set cbqalgorithm_ formal
-    
-        $topo_ instvar cbqlink_
-        $self create_flat3 1.0 auto
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 190 500 0.001 0.002 0 
-	$self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-    
-	$self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_TwoF
-    
-        $ns_ run
-}   
-
-#
-# This tests the dynamic allocation of bandwidth to classes.
-#
-Class Test/TwoDynamic -superclass TestSuite
-Test/TwoDynamic instproc init topo { 
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_TwoDynamic
-        $self next 0
-} 
-Test/TwoDynamic instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        $self instvar topclass_ audioclass_ dataclass_
-
-        set stopTime 8.1
-        set maxbytes 187500
-        set cbqalgorithm_ formal
-
-        $topo_ instvar cbqlink_ 
-        $self create_flat3 1.0 auto
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 190 500 0.001 0.002 0
-        $self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-        $self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_TwoDynamic
-
-        $ns_ at 2.0 "$audioclass_ newallot 0.4; $dataclass_ newallot 0.6"
-        $ns_ at 5.0 "$audioclass_ newallot 0.2; $dataclass_ newallot 0.8"
-
-        $ns_ run
-}
-
-#
-# This tests the dynamic allocation of bandwidth to classes.
-# For this test the two classes have the same priority level.
-# This is packet-by-packet round robin.
-#
-# At time 6.0, each class is allocated 80% of the link bandwidth.
-# Because this is packet-by-packet round robin, bandwidth is distributed
-# according to the packet sizes of the two classes;  the Audio class
-# has 190-byte packets, while the Data class has 500-byte packets.
-#
-Class Test/TwoDynamic1 -superclass TestSuite
-Test/TwoDynamic1 instproc init topo { 
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-prr
-        set test_ CBQ_TwoDynamic1
-        $self next 0
-} 
-Test/TwoDynamic1 instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        $self instvar topclass_ audioclass_ dataclass_
-
-        set stopTime 8.1
-        set maxbytes 187500
-        set cbqalgorithm_ formal
-
-        $topo_ instvar cbqlink_ 
-        $self create_flat4 1.0 auto
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 190 500 0.001 0.002 0
-        $self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-        $self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_TwoDynamic1
-
-        $ns_ at 2.0 "$audioclass_ newallot 0.4; $dataclass_ newallot 0.6"
-        $ns_ at 4.0 "$audioclass_ newallot 0.2; $dataclass_ newallot 0.8"
-	$ns_ at 6.0 "$audioclass_ newallot 0.8; $dataclass_ newallot 0.8"
-
-        $ns_ run
-}
-
-# This tests the dynamic allocation of bandwidth to classes.
-# For this test the two classes have the same priority level.
-# This is weighted round robin.
-#
-# At time 6.0, each class is allocated 80% of the link bandwidth.
-# Because this is weighted round robin, each class receives
-# half of the link bandwidth. 
-#
-Class Test/TwoDynamic1WRR -superclass TestSuite
-Test/TwoDynamic1WRR instproc init topo { 
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-wrr
-        set test_ CBQ_TwoDynamic1WRR
-        $self next 0
-} 
-Test/TwoDynamic1WRR instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_
-        $self instvar topclass_ audioclass_ dataclass_
-
-        set stopTime 8.1
-        set maxbytes 187500
-        set cbqalgorithm_ formal
-
-        $topo_ instvar cbqlink_ 
-        $self create_flat4 1.0 auto
-        $self insert_flat2 $cbqlink_
-        $self two_cbrs 190 500 0.001 0.002 0
-        $self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
-        $self cbrDump4 $cbqlink_ 1.0 $stopTime $maxbytes
-        $self openTrace $stopTime CBQ_TwoDynamic1WRR
-
-        $ns_ at 2.0 "$audioclass_ newallot 0.4; $dataclass_ newallot 0.6"
-        $ns_ at 4.0 "$audioclass_ newallot 0.2; $dataclass_ newallot 0.8"
-	$ns_ at 6.0 "$audioclass_ newallot 0.8; $dataclass_ newallot 0.8"
-
-        $ns_ run
-}
-
-# This tests the dynamic allocation of bandwidth to classes.
-# For this test the two classes have the same priority level.
-# This is weighted round robin.
-#
-# The purpose of this test is to illustrate the number of bytes
-# in a single round of the weighted round robin.
-#
-Class Test/TwoWRR -superclass TestSuite
-Test/TwoWRR instproc init topo { 
-        $self instvar net_ defNet_ test_
-        set net_ $topo
-        set defNet_ cbq1-wrr
-        set test_ CBQ_TwoWRR
-        $self next 0
-} 
-Test/TwoWRR instproc run {} {
-        $self instvar cbqalgorithm_ ns_ net_ topo_ node_ test_
-        $self instvar topclass_ audioclass_ dataclass_
-
-        set stopTime 0.4
-        set maxbytes 187500
-        set cbqalgorithm_ formal
-
-        $topo_ instvar cbqlink_ 
-	$self create_flat4 1.0 auto 0.039 .961 200
-        $self insert_flat2 $cbqlink_
-	$self two_cbrs 40 1000 0.002 0.005 0
-        $self make_fmon $cbqlink_
-        [$cbqlink_ queue] algorithm $cbqalgorithm_
-
- 	TestSuite instproc finish tname { $self finish_max $tname }
-	$self traceQueues $node_(r1) [$self openTrace $stopTime $test_]
-
-	$ns_ at 0.1 "$audioclass_ newallot 0.075; $dataclass_ newallot 0.925"
-	$ns_ at 0.2 "$audioclass_ newallot 0.138; $dataclass_ newallot 0.862"
-	$ns_ at 0.3 "$audioclass_ newallot 0.069; $dataclass_ newallot 0.431"
-
-        $ns_ run
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-delaybox.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-delaybox.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-delaybox.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-delaybox.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,259 +0,0 @@
-# test-suite-DelayBox.tcl
-#
-# Based on ns/tcl/test/test-suite-full.tcl
-#
-# Modified by Michele Weigle, UNC-Chapel Hill, Dec 2003
-#
-
-#*************************************************************************
-# Tests to validate DelayBox
-#
-#  oneway - one-way TCP
-#  oneway-asymmetric - one-way TCP and delay only on the data path
-#  full - Full-TCP
-#  full-asymmetric - Full-TCP and delay only on the data path
-#*************************************************************************
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set SetCWRonRetransmit_ false
-# The default is being changed to true.
-
-
-# Agent/TCP/FullTcp set debug_ true;
-
-source misc.tcl
-
-TestSuite instproc finish testname {
-	$self instvar ns_
-	$ns_ halt
-}
-
-Class SkelTopology
-Class Topology -superclass SkelTopology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/DB -superclass Topology
-
-#
-# DelayBox test topology
-#
-#           s1                      k1
-#             \                    /
-#  100Mb, 1ms  \    100Mb, 1ms    / 100Mb, 1ms
-#               r1 ----------- r2 
-#  100Mb, 1ms  /                 \ 100Mb, 1ms
-#             /                   \
-#          s2                       k2
-#
-Topology/DB instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns DelayBox]
-    set node_(r2) [$ns DelayBox]
-    set node_(k1) [$ns node]
-    set node_(k2) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 100Mb 1ms DropTail
-    $ns duplex-link $node_(k1) $node_(r2) 100Mb 1ms DropTail
-    $ns duplex-link $node_(k2) $node_(r2) 100Mb 1ms DropTail
-}
-
-TestSuite instproc setup tcptype {
-    $self instvar ns_ node_ testName_
-
-    # clear output files
-    exec rm -f temp.rands
-
-    Trace set show_tcphdr_ 1 
-    Agent/TCP set minrto_ 1;     # ns-2.27 value
-
-    set stopt 10
-
-    # create TCP Agents
-    if {$tcptype == "FullTcp"} {
-        set src(0) [new Agent/TCP/FullTcp]
-        set sink(0) [new Agent/TCP/FullTcp]
-        set src(1) [new Agent/TCP/FullTcp]
-        set sink(1) [new Agent/TCP/FullTcp]
-    } elseif {$tcptype == "oneway"} {
-        set src(0) [new Agent/TCP]
-        set sink(0) [new Agent/TCPSink]
-        set src(1) [new Agent/TCP]
-        set sink(1) [new Agent/TCPSink]
-    }
-
-    # setup TCP Agents and connections
-    $ns_ attach-agent $node_(s1) $src(0)
-    $src(0) set fid_ 0
-    $ns_ attach-agent $node_(k1) $sink(0)
-    $sink(0) set fid_ 0
-    $ns_ attach-agent $node_(s2) $src(1)
-    $src(1) set fid_ 1
-    $ns_ attach-agent $node_(k2) $sink(1)
-    $sink(1) set fid_ 1
-
-    # make the connections
-    $ns_ connect $src(0) $sink(0)
-    $sink(0) listen
-    $ns_ connect $src(1) $sink(1)
-    $sink(1) listen
-    
-    # schedule flows
-    $ns_ at 0.7 "$src(0) advance 50"
-    $ns_ at 0.8 "$src(1) advance 50"
-    $ns_ at 2.0 "$src(0) close"
-    $ns_ at 2.0 "$src(1) close"
-    $ns_ at $stopt "$self finish $testName_"
-
-   # setup tracing
-    set trace_file [open temp.rands w]
-    $ns_ trace-queue $node_(s1) $node_(r1) $trace_file
-    $ns_ trace-queue $node_(r1) $node_(s1) $trace_file
-    $ns_ trace-queue $node_(s2) $node_(r1) $trace_file
-    $ns_ trace-queue $node_(r1) $node_(s2) $trace_file
-    $ns_ trace-queue $node_(r1) $node_(r2) $trace_file
-    $ns_ trace-queue $node_(r2) $node_(r1) $trace_file
-    $ns_ trace-queue $node_(k1) $node_(r2) $trace_file
-    $ns_ trace-queue $node_(r2) $node_(k1) $trace_file
-    $ns_ trace-queue $node_(k2) $node_(r2) $trace_file
-    $ns_ trace-queue $node_(r2) $node_(k2) $trace_file
-
-    # create random variables
-    set srcd_rng [new RNG];
-    set src_delay [new RandomVariable/Uniform];   # delay 20-50 ms
-    $src_delay set min_ 20
-    $src_delay set max_ 50
-    $src_delay use-rng $srcd_rng
-
-    set srcbw_rng [new RNG];
-    set src_bw [new RandomVariable/Uniform];      # bw 1-20 Mbps
-    $src_bw set min_ 1
-    $src_bw set max_ 20
-    $src_delay use-rng $srcbw_rng
-
-    set sinkd_rng [new RNG];
-    set sink_delay [new RandomVariable/Uniform];   # delay 1-20 ms
-    $sink_delay set min_ 1
-    $sink_delay set max_ 20
-    $sink_delay use-rng $sinkd_rng
-
-    set sinkbw_rng [new RNG];
-    set sink_bw [new RandomVariable/Constant];      # bw 100 Mbps
-    $sink_bw set val_ 100
-    $sink_bw use-rng $sinkbw_rng
-
-    set loss_rng [new RNG];
-    set loss_rate [new RandomVariable/Uniform];    # loss 0-1%
-    $loss_rate set min_ 0
-    $loss_rate set max_ 0.01
-    $loss_rate use-rng $loss_rng
-    
-    # setup rules for DelayBoxes
-    $node_(r1) add-rule [$node_(s1) id] [$node_(k1) id] $src_delay \
-	    $loss_rate $src_bw
-    $node_(r1) add-rule [$node_(s2) id] [$node_(k2) id] $src_delay \
-	    $loss_rate $src_bw
-    $node_(r2) add-rule [$node_(s1) id] [$node_(k1) id] $sink_delay \
-	    $loss_rate $sink_bw
-    $node_(r2) add-rule [$node_(s2) id] [$node_(k2) id] $sink_delay \
-	    $loss_rate $sink_bw
-}
-
-
-#
-# oneway
-#
-Class Test/oneway -superclass TestSuite
-Test/oneway instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ oneway
-	$self next 0
-}
-
-Test/oneway instproc run {} {
-	$self instvar ns_ 
-        $self setup oneway
-	$ns_ run
-}
-
-#
-# oneway-asymmetric
-#
-Class Test/oneway-asymmetric -superclass TestSuite
-Test/oneway-asymmetric instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ oneway-asymmetric
-	$self next 0
-}
-
-Test/oneway-asymmetric instproc run {} {
-	$self instvar ns_ node_ 
-        $self setup oneway
-
-        $node_(r1) set-asymmetric
-        $node_(r2) set-asymmetric
-
-	$ns_ run
-}
-
-#
-# full
-#
-Class Test/full -superclass TestSuite
-Test/full instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ full
-	$self next 0
-}
-
-Test/full instproc run {} {
-	$self instvar ns_
-        $self setup FullTcp
-	$ns_ run
-}
-
-#
-# full-asymmetric
-#
-Class Test/full-asymmetric -superclass TestSuite
-Test/full-asymmetric instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ full-asymmetric
-	$self next 0
-}
-
-Test/full-asymmetric instproc run {} {
-	$self instvar ns_ node_
-        $self setup FullTcp
-
-        $node_(r1) set-asymmetric
-        $node_(r2) set-asymmetric
-
-	$ns_ run
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-diffserv.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-diffserv.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-diffserv.tcl	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-diffserv.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,388 +0,0 @@
-#
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-# This test suite is for validating the diffserv module ported from Nortel
-# To run all tests: test-all-diffserv
-#
-# To run individual test:
-# ns test-suite-diffserv.tcl tb | tsw2cm | tsw3cm | srtcm | trtcm
-#
-# To view a list of available test to run with this script:
-# ns test-suite-diffserv.tcl
-#
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-
-# The topology used in the test suite is:
-#
-#    s1 -------
-#        10 Mb  \
-#         5 ms   \
-#                 e1 ----- core ------ e2 ------ dest
-#                /   10 Mb       5 Mb      10 Mb 
-#               /     5 ms       5 ms       5 ms
-#    s2 -------
-#        10 Mb
-#         5 ms
-#
-
-Class TestSuite
-
-# With Policy as Token Bucket
-Class Test/tb -superclass TestSuite
-
-# With Policy as Time Sliding Window Two Color Marker (tsw2cm)
-Class Test/tsw2cm -superclass TestSuite
-
-# With Policy as Time Sliding Window Two Color Marker (tsw3cm)
-Class Test/tsw3cm -superclass TestSuite
-
-# With Policy as Single Rate Three Color Marker (srtcm)
-Class Test/srtcm -superclass TestSuite
-
-# With Policy as Two Rate Three Color Marker (trtcm)
-Class Test/trtcm -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: tb tsw2cm tsw3cm srtcm trtcm"
-	exit 1
-}
-
-# Set up parameters for ds redqs for a link.
-TestSuite instproc create_q {qec_ qce_ s1 s2 d1 d2} {
-    $self instvar packetSize_ testName_
-    $self instvar cir0 cbs0 pir0 pbs0 ebs0 rate0 cir1 cbs1 pir1 pbs1 ebs1 rate1
-
-    # Set DS RED parameters from Edge to Core:
-    $qec_ meanPktSize $packetSize_
-    $qec_ set numQueues_ 1
-    $qec_ setNumPrec 2
-
-    switch $testName_ {
-	"tb" {          # Token bucket policy
-	    $qec_ addPolicyEntry [$s1 id] [$d1 id] TokenBucket 10 $cir0 $cbs0
-	    $qec_ addPolicyEntry [$s2 id] [$d2 id] TokenBucket 10 $cir1 $cbs1
-	    $qec_ addPolicerEntry TokenBucket 10 11
-	}
-
-	"tsw2cm" { 	# TSW2CM policy
-	    $qec_ addPolicyEntry [$s1 id] [$d1 id] TSW2CM 10 $cir0
-	    $qec_ addPolicyEntry [$s2 id] [$d2 id] TSW2CM 10 $cir1
-	    $qec_ addPolicerEntry TSW2CM 10 11
-	}
-
-	"tsw3cm" { 	# TSW3CM policy
-	    $qec_ setNumPrec 3
-	    $qec_ addPolicyEntry [$s1 id] [$d1 id] TSW3CM 10 $cir0 $pir0
-	    $qec_ addPolicyEntry [$s2 id] [$d2 id] TSW3CM 10 $cir1 $pir1
-	    $qec_ addPolicerEntry TSW3CM 10 11 12
-	    $qec_ addPHBEntry 12 0 2
-	    $qec_ configQ 0 2  5 10 0.20
-	}
-
-	"srtcm" { 	# SRTCM policy
-	    $qec_ setNumPrec 3
-	    $qec_ addPolicyEntry [$s1 id] [$d1 id] srTCM 10 $cir0 $cbs0 $ebs0
-	    $qec_ addPolicyEntry [$s2 id] [$d2 id] srTCM 10 $cir1 $cbs1 $ebs1
-	    $qec_ addPolicerEntry srTCM 10 11 12
-	    $qec_ addPHBEntry 12 0 2
-	    $qec_ configQ 0 2  5 10 0.20
-	}
-	
-	"trtcm" { 	# TRTCM policy
-	    $qec_ setNumPrec 3
-	    $qec_ addPolicyEntry [$s1 id] [$d1 id] trTCM 10 $cir0 $cbs0 $pir0 $pbs0
-	    $qec_ addPolicyEntry [$s2 id] [$d2 id] trTCM 10 $cir1 $cbs1 $pir1 $pbs1
-	    $qec_ addPolicerEntry trTCM 10 11 12
-	    $qec_ addPHBEntry 12 0 2
-	    $qec_ configQ 0 2  5 10 0.20
-	}
-
-	default {error "Unknow policer!!! exist"}
-    }
-
-    $qec_ addPHBEntry 10 0 0
-    $qec_ addPHBEntry 11 0 1
-    $qec_ configQ 0 0 20 40 0.02
-    $qec_ configQ 0 1 10 20 0.10
-
-    # Set DS RED parameters from Core to Edge:
-    $qce_ meanPktSize $packetSize_
-    $qce_ set numQueues_ 1
-    $qce_ setNumPrec 2
-    $qce_ addPHBEntry 10 0 0
-    $qce_ addPHBEntry 11 0 1
-    $qce_ configQ 0 0 20 40 0.02
-    $qce_ configQ 0 1 10 20 0.10
-
-    if {$testName_ == "tsw3cm" || $testName_ == "srtcm" || $testName_ == "trtcm"} {
-	$qce_ setNumPrec 3
-	$qce_ addPHBEntry 12 0 2
-	$qce_ configQ 0 2  5 10 0.20
-    }
-}
-
-
-# Create the simulation scenario for the test suite.
-TestSuite instproc create-scenario {} { 
-    global quiet
-    $self instvar ns_ packetSize_ finishTime_ testName_ rate0 rate1
-
-    # Set up the network topology shown above:
-    set s1 [$ns_ node]
-    set s2 [$ns_ node]
-    set e1 [$ns_ node]
-    set core [$ns_ node]
-    set e2 [$ns_ node]
-    set dest [$ns_ node]
-
-    $ns_ duplex-link $s1 $e1 10Mb 5ms DropTail
-    $ns_ duplex-link $s2 $e1 10Mb 5ms DropTail
-    
-    $ns_ simplex-link $e1 $core 10Mb 5ms dsRED/edge
-    $ns_ simplex-link $core $e1 10Mb 5ms dsRED/core
-    
-    $ns_ simplex-link $core $e2 5Mb 5ms dsRED/core
-    $ns_ simplex-link $e2 $core 5Mb 5ms dsRED/edge
-    
-    $ns_ duplex-link $e2 $dest 10Mb 5ms DropTail
-
-    # Config each RED queue.
-    set qE1C [[$ns_ link $e1 $core] queue]
-    set qE2C [[$ns_ link $e2 $core] queue]
-    set qCE1 [[$ns_ link $core $e1] queue]
-    set qCE2 [[$ns_ link $core $e2] queue]
-
-    # Set DS RED parameters for Qs:
-    $self create_q $qE1C $qCE1 $s1 $s2 $dest $dest
-    $self create_q $qE2C $qCE2 $dest $dest $s1 $s2
-    
-    # Set up one CBR connection between each source and the destination:
-    set udp0 [new Agent/UDP]
-    $ns_ attach-agent $s1 $udp0
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 attach-agent $udp0
-    $cbr0 set packet_size_ $packetSize_
-    $udp0 set packetSize_ $packetSize_
-    $cbr0 set rate_ $rate0
-    set null0 [new Agent/Null]
-    $ns_ attach-agent $dest $null0
-    $ns_ connect $udp0 $null0
-    $ns_ at 0.0 "$cbr0 start"
-    $ns_ at $finishTime_ "$cbr0 stop"
-
-    set udp1 [new Agent/UDP]
-    $ns_ attach-agent $s2 $udp1
-    set cbr1 [new Application/Traffic/CBR]
-    $cbr1 attach-agent $udp1
-    $cbr1 set packet_size_ $packetSize_
-    $udp1 set packetSize_ $packetSize_
-    $cbr1 set rate_ $rate1
-    set null1 [new Agent/Null]
-    $ns_ attach-agent $dest $null1
-    $ns_ connect $udp1 $null1
-    $ns_ at 0.0 "$cbr1 start"
-    $ns_ at $finishTime_ "$cbr1 stop"
-
-    if {$quiet == 0} {
-	$qE1C printPolicyTable
-	$qE1C printPolicerTable
-	$ns_ at 10.0 "$qCE2 printStats"
-	$ns_ at 20.0 "$qCE2 printStats"
-    }
-}
-
-TestSuite instproc init {} {
-    global tracefd quiet
-    $self instvar ns_ testName_ finishTime_ packetSize_
-
-    set ns_         [new Simulator]
-    set tracefd	[open "temp.rands" w]
-    $ns_ trace-all $tracefd
-
-    set finishTime_ 10.0
-    set packetSize_ 1000
-    
-    if {$quiet == 0} {
-	$ns_ at $finishTime_ "puts \"NS EXITING...\" ;"
-    }
-
-    $ns_ at [expr $finishTime_ + 1.0] "$self finish"
-}
-
-
-Test/tb instproc init {} {
-    $self instvar ns_ testName_ cir0 cbs0 rate0 cir1 cbs1 rate1
-    set testName_       tb
-    set cir0  1000000
-    set cbs0     3000
-    set rate0 2000000
-    set cir1  1000000
-    set cbs1    10000
-    set rate1 3000000
-
-    $self next
-}
-
-Test/tb instproc run {} {
-    $self instvar ns_
-    
-    $self create-scenario
-    $ns_ run
-}
-
-Test/tsw2cm instproc init {} {
-    $self instvar ns_ testName_ cir0 rate0 cir1 rate1
-    set testName_       tsw2cm
-    set cir0  1000000
-    set rate0 2000000
-    set cir1  1000000
-    set rate1 3000000
-
-    $self next
-}
-
-Test/tsw2cm instproc run {} {
-    $self instvar ns_
-
-    $self create-scenario
-    $ns_ run
-}
-
-Test/tsw3cm instproc init {} {
-    $self instvar ns_ testName_ cir0 pir0 rate0 cir1 pir1 rate1
-    set testName_       tsw3cm
-    set cir0   100000
-    set pir0   500000
-    set rate0 4000000
-    set cir1   400000
-    set pir1  1000000
-    set rate1 2000000
-
-    $self next
-}
-
-Test/tsw3cm instproc run {} {
-    $self instvar ns_
-
-    $self create-scenario
-    $ns_ run
-}
-
-Test/srtcm instproc init {} {
-    $self instvar ns_ testName_ cir0 cbs0 ebs0 rate0 cir1 cbs1 ebs1 rate1
-    set testName_ srtcm
-    set cir0  1000000
-    set cbs0     2000
-    set ebs0     3000 
-    set rate0 3000000
-    set cir1  1000000
-    set cbs1     2000
-    set ebs1     6000
-    set rate1 3000000
-
-    $self next
-}
-
-Test/srtcm instproc run {} {
-    $self instvar ns_
-
-    $self create-scenario
-    $ns_ run
-}
-
-Test/trtcm instproc init {} {
-    $self instvar ns_ testName_ cir0 cbs0 pir0 pbs0 rate0 cir1 cbs1 pir1 pbs1 rate1
-    set testName_ trtcm
-
-    set cir0  1000000
-    set cbs0     2000
-    set pir0  2000000
-    set pbs0     3000 
-    set rate0 3000000
-    set cir1  1000000
-    set cbs1     2000
-    set pir1  1000000
-    set pbs1     3000
-    set rate1 3000000
-
-    $self next
-}
-
-Test/trtcm instproc run {} {
-    $self instvar ns_
-
-    $self create-scenario
-    $ns_ run
-}
-
-TestSuite instproc finish {} {
-    global quiet tracefd
-    $self instvar ns_
-    
-    $ns_ flush-trace
-    close $tracefd
-    
-    if {$quiet == 0} {
-	puts "finishing.." }
-
-    exit 0
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-
-	set t [new Test/$test]
-	if {$quiet == 0} {
-	    puts "Starting Simulation..." }
-	$t run
-}
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-diffusion3.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-diffusion3.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-diffusion3.tcl	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-diffusion3.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1391 +0,0 @@
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-# To run all tests: test-all-diffusion3
-# to run individual test:
-# ns test-suite-diffusion3.tcl simple-ping
-
-# To view a list of available test to run with this script:
-# ns test-suite-diffusion3.tcl
-
-# This test validates a simple diffusion (ping) application
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP Diffusion ARP LL Mac 
-# hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set exitFastRetrans_ false
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-
-if {![TclObject is-class Agent/DiffusionRouting]} {
-	puts "Diffusion3 module is not present; validation skipped"
-	exit 2
-}
-
-# ======================================================================
-# Define options
-# ======================================================================
-global opt
-set opt(chan)		Channel/WirelessChannel
-set opt(prop)		Propagation/TwoRayGround
-set opt(netif)		Phy/WirelessPhy
-set opt(mac)		Mac/802_11
-set opt(ifq)		Queue/DropTail/PriQueue
-set opt(ll)		LL
-set opt(ant)            Antenna/OmniAntenna
-set opt(ifqlen)		50		;# max packet in ifq
-set opt(seed)		0.0
-set opt(lm)             "off"           ;# log movement
-
-set opt(x)		670	;# X dimension of the topography
-set opt(y)		670     ;# Y dimension of the topography
-set opt(stop)		300	;# simulation time
-set opt(adhocRouting)   Directed_Diffusion
-# ======================================================================
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.2818
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# ======================================================================
-
-Class TestSuite
-
-proc usage {} {
-    global argv0
-    puts stderr "usage: ns $argv0 <tests> "
-    puts "Valid Tests: simple-ping 2pp-5n-1s-1r 2pp-10n-4s-1r 2pp-10n-1s-4r\
-push-5n-1s-1r push-10n-4s-1r push-10n-1s-4r 1pp-5n-1s-1r 1pp-10n-4s-1r 1pp-10n-1s-4r gear-2pp-10n-4s-1r gear-push-10n-1s-4r"
-    puts " "
-    exit 1
-}
-
-TestSuite instproc init {} {
-    global opt tracefd quiet
-    $self instvar ns_
-    set ns_ [new Simulator]
-    set tracefd [open temp.rands w]
-    $ns_ trace-all $tracefd
-    # stealing seed from another test-suite
-    ns-random 188312339
-} 
-
-
-Class Test/simple-ping -superclass TestSuite
-
-Test/simple-ping instproc init {} {
-    global opt
-    set opt(nn) 3
-    set opt(filters) GradientFilter
-    $self instvar ns_ testName_
-    set testName_ simple-ping
-    $self next
-}
-
-Test/simple-ping instproc run {} {
-    global opt
-    $self instvar ns_ topo god_
-
-    set topo	[new Topography]
-    $topo load_flatgrid $opt(x) $opt(y)
-    set god_ [create-god $opt(nn)]
-
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-		 -llType $opt(ll) \
-		 -macType $opt(mac) \
-		 -ifqType $opt(ifq) \
-		 -ifqLen $opt(ifqlen) \
-		 -antType $opt(ant) \
-		 -propType $opt(prop) \
-		 -phyType $opt(netif) \
-		 -channelType $opt(chan) \
-		 -topoInstance $topo \
-	         -diffusionFilter $opt(filters) \
-		 -agentTrace ON \
-                 -routerTrace ON \
-                 -macTrace OFF 
-             
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	set node_($i) [$ns_ node $i]
-        $node_($i) color black
-	$node_($i) random-motion 0		;# disable random motion
-        $god_ new_node $node_($i)
-    }
-
-# defining node positions
-    $node_(0) set X_ 500.716707738489
-    $node_(0) set Y_ 620.707335765875
-    $node_(0) set Z_ 0.000000000000
-    
-    $node_(1) set X_ 320.192740186325
-    $node_(1) set Y_ 450.384818286195
-    $node_(1) set Z_ 0.000000000000
-
-    #3rd node NOT in hearing range of other two
-    $node_(2) set X_ 177.438972165239
-    $node_(2) set Y_ 245.843469852367
-    $node_(2) set Z_ 0.000000000000
-
-    #Diffusion application - ping src
-    set src_(0) [new Application/DiffApp/PingSender/TPP]
-    $ns_ attach-diffapp $node_(0) $src_(0)
-    $ns_ at 0.123 "$src_(0) publish"
-
-    #Diffusion application - ping sink
-    set snk_(0) [new Application/DiffApp/PingReceiver/TPP]
-    $ns_ attach-diffapp $node_(2) $snk_(0)
-    $ns_ at 1.456 "$snk_(0) subscribe"
-
-    #
-    # Tell nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-    $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-    $ns_ run
-}
-
-Class Test/2pp-5n-1s-1r -superclass TestSuite
-
-Test/2pp-5n-1s-1r instproc init {} {
-     global opt
-     set opt(nn) 5
-     set opt(filters) GradientFilter
-     $self instvar ns_ testName_
-     set testName_ 2pp-5n-1s-1r
-     $self next
- }
-
-Test/2pp-5n-1s-1r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-
-     set topo	[new Topography]
-     $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
-	 -llType $opt(ll) \
-	 -macType $opt(mac) \
-	 -ifqType $opt(ifq) \
-	 -ifqLen $opt(ifqlen) \
-	 -antType $opt(ant) \
-	 -propType $opt(prop) \
-	 -phyType $opt(netif) \
-	 -channelType $opt(chan) \
-	 -topoInstance $topo \
-	 -diffusionFilter $opt(filters) \
-	 -agentTrace ON \
-	 -routerTrace ON \
-	 -macTrace OFF
-             
-     for {set i 0} {$i < $opt(nn) } {incr i} {
-	 set node_($i) [$ns_ node $i]
-	 $node_($i) color black
-	 $node_($i) random-motion 0		;# disable random motion
-	 $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 618.716707738489
-     $node_(0) set Y_ 620.707335765875
-     $node_(0) set Z_ 0.000000000000
-    
-     $node_(1) set X_ 524.192740186325
-     $node_(1) set Y_ 540.384818286195
-     $node_(1) set Z_ 0.000000000000
-    
-     $node_(2) set X_ 406.438972165239
-     $node_(2) set Y_ 425.843469852367
-     $node_(2) set Z_ 0.000000000000
-    
-     $node_(3) set X_ 320.192740186325
-     $node_(3) set Y_ 350.384818286195
-     $node_(3) set Z_ 0.000000000000
-    
-     $node_(4) set X_ 177.438972165239
-     $node_(4) set Y_ 145.843469852367
-     $node_(4) set Z_ 0.000000000000
-    
-     #Diffusion application - ping sender
-     set src_(0) [new Application/DiffApp/PingSender/TPP]
-     $ns_ attach-diffapp $node_(0) $src_(0)
-     $ns_ at 0.123 "$src_(0) publish"
-
-     #Diffusion application - ping receiver
-     set snk_(0) [new Application/DiffApp/PingReceiver/TPP]
-     $ns_ attach-diffapp $node_(2) $snk_(0)
-     $ns_ at 1.456 "$snk_(0) subscribe"
-
-#     #
-#     # Tell nodes when the simulation ends
-#     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
-	 $ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
- }
-
-Class Test/2pp-10n-4s-1r -superclass TestSuite
-
- Test/2pp-10n-4s-1r instproc init {} {
-     global opt
-     set opt(nn) 10
-     set opt(sndr) 4
-     set opt(rcvr) 1
-     set opt(filters) GradientFilter
-     $self instvar ns_ testName_
-     set testName_ 2pp-10n-4s-1r
-     $self next
- }
-
- Test/2pp-10n-4s-1r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-
-     set topo	[new Topography]
-     $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
- 		 -llType $opt(ll) \
- 		 -macType $opt(mac) \
- 		 -ifqType $opt(ifq) \
- 		 -ifqLen $opt(ifqlen) \
- 		 -antType $opt(ant) \
- 		 -propType $opt(prop) \
- 		 -phyType $opt(netif) \
- 		 -channelType $opt(chan) \
- 		 -topoInstance $topo \
- 	         -diffusionFilter $opt(filters) \
- 		 -agentTrace ON \
-                  -routerTrace OFF \
-                  -macTrace OFF
-             
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 18.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-     $node_(5) set X_ 321.560825121175
-     $node_(5) set Y_ 472.788096833600
-     $node_(5) set Z_ 0.000000000000
-     $node_(6) set X_ 149.543901734330
-     $node_(6) set Y_ 384.356581531832
-     $node_(6) set Z_ 0.000000000000
-     $node_(7) set X_ 381.066146464027
-     $node_(7) set Y_ 78.723958958779
-     $node_(7) set Z_ 0.000000000000
-     $node_(8) set X_ 113.578290026963
-     $node_(8) set Y_ 410.320583900348
-     $node_(8) set Z_ 0.000000000000
-     $node_(9) set X_ 258.053977148981
-     $node_(9) set Y_ 113.194171851670
-     $node_(9) set Z_ 0.000000000000
-    
-     # 4 ping senders
-     for {set i 0} {$i < $opt(sndr)} {incr i} {
-	 set src_($i) [new Application/DiffApp/PingSender/TPP]
-	 $ns_ attach-diffapp $node_([expr $i+2]) $src_($i)
-	 $ns_ at [expr 0.123 * $i] "$src_($i) publish"
-     }
-
-#     # 1 ping receiver
-     set snk_(0) [new Application/DiffApp/PingReceiver/TPP]
-     $ns_ attach-diffapp $node_(9) $snk_(0)
-     $ns_ at 1.456 "$snk_(0) subscribe"
-     
-     #     #
-     #     # Tell nodes when the simulation ends
-     #     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
-	 $ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
- }
-
-
-Class Test/2pp-10n-1s-4r -superclass TestSuite
-
-Test/2pp-10n-1s-4r instproc init {} {
-    global opt
-    set opt(nn) 10
-    set opt(sndr) 1
-    set opt(rcvr) 4
-    set opt(filters) GradientFilter
-    $self instvar ns_ testName_
-    set testName_ 2pp-10n-1s-4r
-    $self next
-}
-
-Test/2pp-10n-1s-4r instproc run {} {
-    global opt
-    $self instvar ns_ topo god_
-    
-    set topo	[new Topography]
-    $topo load_flatgrid $opt(x) $opt(y)
-    set god_ [create-god $opt(nn)]
-    
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-	-llType $opt(ll) \
-	-macType $opt(mac) \
-	-ifqType $opt(ifq) \
-	-ifqLen $opt(ifqlen) \
-	-antType $opt(ant) \
-	-propType $opt(prop) \
-	-phyType $opt(netif) \
-	-channelType $opt(chan) \
-	-topoInstance $topo \
-	-diffusionFilter $opt(filters) \
-	-agentTrace ON \
-	-routerTrace OFF \
-	-macTrace OFF 
-    
-    for {set i 0} {$i < $opt(nn) } {incr i} {
- 	set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-    }
-
-     # defining node positions
-     $node_(0) set X_ 18.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-     $node_(5) set X_ 321.560825121175
-     $node_(5) set Y_ 472.788096833600
-     $node_(5) set Z_ 0.000000000000
-     $node_(6) set X_ 149.543901734330
-     $node_(6) set Y_ 384.356581531832
-     $node_(6) set Z_ 0.000000000000
-     $node_(7) set X_ 381.066146464027
-     $node_(7) set Y_ 78.723958958779
-     $node_(7) set Z_ 0.000000000000
-     $node_(8) set X_ 113.578290026963
-     $node_(8) set Y_ 410.320583900348
-     $node_(8) set Z_ 0.000000000000
-     $node_(9) set X_ 258.053977148981
-     $node_(9) set Y_ 113.194171851670
-     $node_(9) set Z_ 0.000000000000
-    
-    # 1 ping sender
-    for {set i 0} {$i < $opt(sndr)} {incr i} {
- 	set src_($i) [new Application/DiffApp/PingSender/TPP]
-	$ns_ attach-diffapp $node_([expr $i+2]) $src_($i)
- 	$ns_ at [expr 0.123 * [expr 1+$i]] "$src_($i) publish"
-    }
-
-     # 4 ping receiver
-     for {set i 0} {$i < $opt(rcvr)} {incr i} {
- 	set snk_($i) [new Application/DiffApp/PingReceiver/TPP]
- 	$ns_ attach-diffapp $node_([expr $opt(nn)-1 -$i]) $snk_($i)
- 	$ns_ at [expr 1.1*[expr 1+$i]] "$snk_($i) subscribe"
-     }
-     #
-     # Tell nodes when the simulation ends
-     #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-    $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-    $ns_ run
-}
-
-Class Test/push-5n-1s-1r -superclass TestSuite
-
-Test/push-5n-1s-1r instproc init {} {
-    global opt
-    set opt(nn) 5
-     set opt(filters) GradientFilter
-     $self instvar ns_ testName_
-     set testName_ push-5n-1s-1r
-    $self next
-}
-
-Test/push-5n-1s-1r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-
-     set topo	[new Topography]
-     $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-	 -llType $opt(ll) \
-	 -macType $opt(mac) \
-	  		 -ifqType $opt(ifq) \
- 		 -ifqLen $opt(ifqlen) \
- 		 -antType $opt(ant) \
- 		 -propType $opt(prop) \
- 		 -phyType $opt(netif) \
- 		 -channelType $opt(chan) \
- 		 -topoInstance $topo \
- 	         -diffusionFilter $opt(filters) \
- 		 -agentTrace ON \
-                  -routerTrace ON \
-                  -macTrace OFF 
-             
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	set node_($i) [$ns_ node $i]
-	$node_($i) color black
-	$node_($i) random-motion 0		;# disable random motion
-	$god_ new_node $node_($i)
-    }
-    
-     # defining node positions
-     $node_(0) set X_ 618.716707738489
-     $node_(0) set Y_ 620.707335765875
-     $node_(0) set Z_ 0.000000000000
-    
-     $node_(1) set X_ 524.192740186325
-     $node_(1) set Y_ 540.384818286195
-     $node_(1) set Z_ 0.000000000000
-    
-     $node_(2) set X_ 406.438972165239
-     $node_(2) set Y_ 425.843469852367
-     $node_(2) set Z_ 0.000000000000
-    
-     $node_(3) set X_ 320.192740186325
-     $node_(3) set Y_ 350.384818286195
-     $node_(3) set Z_ 0.000000000000
-    
-     $node_(4) set X_ 177.438972165239
-     $node_(4) set Y_ 145.843469852367
-     $node_(4) set Z_ 0.000000000000
-    
-     #Diffusion application - ping sender
-     set src_(0) [new Application/DiffApp/PushSender]
-     $ns_ attach-diffapp $node_(0) $src_(0)
-     $ns_ at 0.123 "$src_(0) publish"
-
-     #Diffusion application - ping receiver
-     set snk_(0) [new Application/DiffApp/PushReceiver]
-     $ns_ attach-diffapp $node_(2) $snk_(0)
-     $ns_ at 1.456 "$snk_(0) subscribe"
-
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
-}
-
-Class Test/push-10n-1s-4r -superclass TestSuite
-
- Test/push-10n-1s-4r instproc init {} {
-     global opt
-     set opt(nn) 10
-     set opt(sndr) 1
-     set opt(rcvr) 4
-     set opt(filters) GradientFilter
-     $self instvar ns_ testName_
-     set testName_ push-10n-1s-4r
-     $self next
- }
-
-Test/push-10n-1s-4r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-
-     set topo	[new Topography]
-     $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
-	 -llType $opt(ll) \
-	 -macType $opt(mac) \
-	 -ifqType $opt(ifq) \
-	 -ifqLen $opt(ifqlen) \
-	 -antType $opt(ant) \
-	 -propType $opt(prop) \
-	 -phyType $opt(netif) \
-	 -channelType $opt(chan) \
-	 -topoInstance $topo \
-	 -diffusionFilter $opt(filters) \
-	 -agentTrace ON \
-	 -routerTrace OFF \
-	 -macTrace OFF 
-             
-     for {set i 0} {$i < $opt(nn) } {incr i} {
-	 set node_($i) [$ns_ node $i]
-         $node_($i) color black
-	 $node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 18.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-     $node_(5) set X_ 321.560825121175
-     $node_(5) set Y_ 472.788096833600
-     $node_(5) set Z_ 0.000000000000
-     $node_(6) set X_ 149.543901734330
-     $node_(6) set Y_ 384.356581531832
-     $node_(6) set Z_ 0.000000000000
-     $node_(7) set X_ 381.066146464027
-     $node_(7) set Y_ 78.723958958779
-     $node_(7) set Z_ 0.000000000000
-     $node_(8) set X_ 113.578290026963
-     $node_(8) set Y_ 410.320583900348
-     $node_(8) set Z_ 0.000000000000
-     $node_(9) set X_ 258.053977148981
-     $node_(9) set Y_ 113.194171851670
-     $node_(9) set Z_ 0.000000000000
-    
-     # 1 ping sender
-     for {set i 0} {$i < $opt(sndr)} {incr i} {
- 	set src_($i) [new Application/DiffApp/PushSender]
- 	$ns_ attach-diffapp $node_([expr $i+2]) $src_($i)
- 	$ns_ at [expr 0.123 * [expr 1+$i]] "$src_($i) publish"
-     }
-
-     # 4 ping receiver
-     for {set i 0} {$i < $opt(rcvr)} {incr i} {
- 	set snk_($i) [new Application/DiffApp/PushReceiver]
- 	$ns_ attach-diffapp $node_([expr $opt(nn)-1 -$i]) $snk_($i)
- 	$ns_ at [expr 1.1*[expr 1+$i]] "$snk_($i) subscribe"
-     }
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
- }
-
-Class Test/push-10n-4s-1r -superclass TestSuite
-
-Test/push-10n-4s-1r instproc init {} {
-    global opt
-    set opt(nn) 10
-    set opt(sndr) 4
-    set opt(rcvr) 1
-    set opt(filters) GradientFilter
-    $self instvar ns_ testName_
-    set testName_ push-10n-4s-1r
-    $self next
-}
-
-Test/push-10n-4s-1r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-
-     set topo	[new Topography]
-     $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
-	 -llType $opt(ll) \
-	 -macType $opt(mac) \
-	 -ifqType $opt(ifq) \
-	 -ifqLen $opt(ifqlen) \
-	 -antType $opt(ant) \
-	 -propType $opt(prop) \
-	 -phyType $opt(netif) \
-	 -channelType $opt(chan) \
-	 -topoInstance $topo \
-	 -diffusionFilter $opt(filters) \
-	 -agentTrace ON \
-	 -routerTrace OFF \
-	 -macTrace OFF 
-             
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	 set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-    }
-
-     # defining node positions
-     $node_(0) set X_ 18.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-     $node_(5) set X_ 321.560825121175
-     $node_(5) set Y_ 472.788096833600
-     $node_(5) set Z_ 0.000000000000
-     $node_(6) set X_ 149.543901734330
-     $node_(6) set Y_ 384.356581531832
-     $node_(6) set Z_ 0.000000000000
-     $node_(7) set X_ 381.066146464027
-     $node_(7) set Y_ 78.723958958779
-     $node_(7) set Z_ 0.000000000000
-     $node_(8) set X_ 113.578290026963
-     $node_(8) set Y_ 410.320583900348
-     $node_(8) set Z_ 0.000000000000
-     $node_(9) set X_ 258.053977148981
-     $node_(9) set Y_ 113.194171851670
-     $node_(9) set Z_ 0.000000000000
-   
-     # 4 ping sender
-     for {set i 0} {$i < $opt(sndr)} {incr i} {
- 	set src_($i) [new Application/DiffApp/PushSender]
- 	$ns_ attach-diffapp $node_([expr $i+2]) $src_($i)
- 	$ns_ at [expr 0.123 * [expr 1+$i]] "$src_($i) publish"
-     }
-
-     # 1 ping receiver
-     for {set i 0} {$i < $opt(rcvr)} {incr i} {
- 	set snk_($i) [new Application/DiffApp/PushReceiver]
- 	$ns_ attach-diffapp $node_([expr $opt(nn)-1 -$i]) $snk_($i)
- 	$ns_ at [expr 1.1*[expr 1+$i]] "$snk_($i) subscribe"
-     }
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
-}
-
-Class Test/1pp-5n-1s-1r -superclass TestSuite
-
-Test/1pp-5n-1s-1r instproc init {} {
-     global opt
-     set opt(nn) 5
-     set opt(sndr) 1
-     set opt(rcvr) 1
-     set opt(filters) OnePhasePullFilter
-     $self instvar ns_ testName_
-     set testName_ 1pp-5n-1s-1r
-     $self next
-}
-
-Test/1pp-5n-1s-1r instproc run {} {
-    global opt
-    $self instvar ns_ topo god_
-
-    set topo	[new Topography]
-    $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
- 		 -llType $opt(ll) \
- 		 -macType $opt(mac) \
- 		 -ifqType $opt(ifq) \
- 		 -ifqLen $opt(ifqlen) \
- 		 -antType $opt(ant) \
- 		 -propType $opt(prop) \
- 		 -phyType $opt(netif) \
- 		 -channelType $opt(chan) \
- 		 -topoInstance $topo \
- 	         -diffusionFilter $opt(filters) \
- 		 -agentTrace ON \
-                  -routerTrace ON \
-                  -macTrace OFF 
-             
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 18.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-    
-     # 1 ping sender
-     for {set i 0} {$i < $opt(sndr)} {incr i} {
- 	set src_($i) [new Application/DiffApp/PingSender/OPP]
- 	$ns_ attach-diffapp $node_([expr $i+1]) $src_($i)
- 	$ns_ at [expr 0.123 * [expr 1+$i]] "$src_($i) publish"
-     }
-
-    # 1 ping receiver
-     for {set i 0} {$i < $opt(rcvr)} {incr i} {
- 	set snk_($i) [new Application/DiffApp/PingReceiver/OPP]
- 	$ns_ attach-diffapp $node_([expr $opt(nn)-1 -$i]) $snk_($i)
- 	$ns_ at [expr 1.1*[expr 1+$i]] "$snk_($i) subscribe"
-     }
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
-}
-
-Class Test/1pp-10n-4s-1r -superclass TestSuite
-
-Test/1pp-10n-4s-1r instproc init {} {
-     global opt
-     set opt(nn) 10
-     set opt(sndr) 4
-     set opt(rcvr) 1
-     set opt(filters) OnePhasePullFilter
-     $self instvar ns_ testName_
-     set testName_ 1pp-10n-4s-1r
-     $self next
-}
-
-Test/1pp-10n-4s-1r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-
-     set topo	[new Topography]
-     $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
- 		 -llType $opt(ll) \
- 		 -macType $opt(mac) \
- 		 -ifqType $opt(ifq) \
- 		 -ifqLen $opt(ifqlen) \
- 		 -antType $opt(ant) \
- 		 -propType $opt(prop) \
- 		 -phyType $opt(netif) \
- 		 -channelType $opt(chan) \
- 		 -topoInstance $topo \
- 	         -diffusionFilter $opt(filters) \
- 		 -agentTrace ON \
-                  -routerTrace OFF \
-                  -macTrace OFF 
-             
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 18.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-     $node_(5) set X_ 321.560825121175
-     $node_(5) set Y_ 472.788096833600
-     $node_(5) set Z_ 0.000000000000
-     $node_(6) set X_ 149.543901734330
-     $node_(6) set Y_ 384.356581531832
-     $node_(6) set Z_ 0.000000000000
-     $node_(7) set X_ 381.066146464027
-     $node_(7) set Y_ 78.723958958779
-     $node_(7) set Z_ 0.000000000000
-     $node_(8) set X_ 113.578290026963
-     $node_(8) set Y_ 410.320583900348
-     $node_(8) set Z_ 0.000000000000
-     $node_(9) set X_ 258.053977148981
-     $node_(9) set Y_ 113.194171851670
-     $node_(9) set Z_ 0.000000000000
-    
-     # 4 ping senders
-     for {set i 0} {$i < $opt(sndr)} {incr i} {
- 	set src_($i) [new Application/DiffApp/PingSender/OPP]
- 	$ns_ attach-diffapp $node_([expr $i+2]) $src_($i)
- 	$ns_ at [expr 0.123 * $i] "$src_($i) publish"
-     }
-
-     # 1 ping receiver
-     set snk_(0) [new Application/DiffApp/PingReceiver/OPP]
-     $ns_ attach-diffapp $node_(9) $snk_(0)
-     $ns_ at 1.456 "$snk_(0) subscribe"
-
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
-}
-
-
-Class Test/1pp-10n-1s-4r -superclass TestSuite
-
-Test/1pp-10n-1s-4r instproc init {} {
-     global opt
-     set opt(nn) 10
-     set opt(sndr) 1
-     set opt(rcvr) 4
-     set opt(filters) OnePhasePullFilter
-     $self instvar ns_ testName_
-     set testName_ 1pp-10n-1s-4r
-     $self next
-}
-
-Test/1pp-10n-1s-4r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-    
-    set topo	[new Topography]
-    $topo load_flatgrid $opt(x) $opt(y)
-    set god_ [create-god $opt(nn)]
-    
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-	 -llType $opt(ll) \
-	 -macType $opt(mac) \
-	 -ifqType $opt(ifq) \
-	 -ifqLen $opt(ifqlen) \
-	 -antType $opt(ant) \
-	 -propType $opt(prop) \
-	 -phyType $opt(netif) \
-	 -channelType $opt(chan) \
-	 -topoInstance $topo \
-	 -diffusionFilter $opt(filters) \
-	 -agentTrace ON \
-	 -routerTrace OFF \
-	 -macTrace OFF 
-             
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 18.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-     $node_(5) set X_ 321.560825121175
-     $node_(5) set Y_ 472.788096833600
-     $node_(5) set Z_ 0.000000000000
-     $node_(6) set X_ 149.543901734330
-     $node_(6) set Y_ 384.356581531832
-     $node_(6) set Z_ 0.000000000000
-     $node_(7) set X_ 381.066146464027
-     $node_(7) set Y_ 78.723958958779
-     $node_(7) set Z_ 0.000000000000
-     $node_(8) set X_ 113.578290026963
-     $node_(8) set Y_ 410.320583900348
-     $node_(8) set Z_ 0.000000000000
-     $node_(9) set X_ 258.053977148981
-     $node_(9) set Y_ 113.194171851670
-     $node_(9) set Z_ 0.000000000000
-    
-     # 1 ping sender
-     for {set i 0} {$i < $opt(sndr)} {incr i} {
- 	set src_($i) [new Application/DiffApp/PingSender/OPP]
- 	$ns_ attach-diffapp $node_([expr $i+2]) $src_($i)
- 	$ns_ at [expr 0.123 * [expr 1+$i]] "$src_($i) publish"
-     }
-
-     # 4 ping receiver
-     for {set i 0} {$i < $opt(rcvr)} {incr i} {
- 	set snk_($i) [new Application/DiffApp/PingReceiver/OPP]
- 	$ns_ attach-diffapp $node_([expr $opt(nn)-1 -$i]) $snk_($i)
- 	$ns_ at [expr 1.1*[expr 1+$i]] "$snk_($i) subscribe"
-     }
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
-}
-
-Class Test/gear-2pp-5n-1s-1r -superclass TestSuite
-
-Test/gear-2pp-5n-1s-1r instproc init {} {
-     global opt
-     set opt(nn) 5
-     set opt(filters) GradientFilter/GeoRoutingFilter
-     $self instvar ns_ testName_
-     set testName_ gear-2pp-5n-1s-1r
-     $self next
-}
-
-Test/gear-2pp-5n-1s-1r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-     set topo	[new Topography]
-     $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
- 		 -llType $opt(ll) \
- 		 -macType $opt(mac) \
- 		 -ifqType $opt(ifq) \
- 		 -ifqLen $opt(ifqlen) \
- 		 -antType $opt(ant) \
- 		 -propType $opt(prop) \
- 		 -phyType $opt(netif) \
- 		 -channelType $opt(chan) \
- 		 -topoInstance $topo \
- 	         -diffusionFilter $opt(filters) \
- 		 -agentTrace ON \
-                  -routerTrace OFF \
-                  -macTrace OFF 
-             
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 618.716707738489
-     $node_(0) set Y_ 620.707335765875
-     $node_(0) set Z_ 0.000000000000
-    
-     $node_(1) set X_ 524.192740186325
-     $node_(1) set Y_ 540.384818286195
-     $node_(1) set Z_ 0.000000000000
-   
-     $node_(2) set X_ 406.438972165239
-     $node_(2) set Y_ 425.843469852367
-     $node_(2) set Z_ 0.000000000000
-    
-     $node_(3) set X_ 320.192740186325
-     $node_(3) set Y_ 350.384818286195
-     $node_(3) set Z_ 0.000000000000
-    
-     $node_(4) set X_ 177.438972165239
-     $node_(4) set Y_ 145.843469852367
-     $node_(4) set Z_ 0.000000000000
-    
-    for {set i 0} {$i < $opt(nn)} {incr i} {
-	 set gearf($i) [new Application/DiffApp/GeoRoutingFilter \
- 			   [$node_($i) get-dr]]
-	 $gearf($i) start
-     }
-
-     # 1 gear sender
-     set src_(0) [new Application/DiffApp/GearSenderApp]
-     $ns_ attach-diffapp $node_(0) $src_(0)
-     $src_(0) push-pull-options pull point 618.716 620.707
-     $ns_ at 0.123 "$src_(0) publish"
-
-     #Diffusion application - ping receiver
-     set snk_(0) [new Application/DiffApp/GearReceiverApp]
-     $ns_ attach-diffapp $node_(4) $snk_(0)
-     $snk_(0) push-pull-options pull region 600 650 600 650
-     $ns_ at 1.456 "$snk_(0) subscribe"
-
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
-}
- 
-Class Test/gear-2pp-10n-4s-1r -superclass TestSuite
-
-Test/gear-2pp-10n-4s-1r instproc init {} {
-     global opt
-     set opt(nn) 10
-     set opt(filters) GradientFilter/GeoRoutingFilter
-     $self instvar ns_ testName_
-     set testName_ gear-2pp-10n-4s-1r
-     $self next
- }
-
-Test/gear-2pp-10n-4s-1r instproc run {} {
-     global opt
-     $self instvar ns_ topo god_
-
-     set topo	[new Topography]
-     $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
- 	-llType $opt(ll) \
- 	-macType $opt(mac) \
- 	-ifqType $opt(ifq) \
- 	-ifqLen $opt(ifqlen) \
- 	-antType $opt(ant) \
- 	-propType $opt(prop) \
- 	-phyType $opt(netif) \
- 	-channelType $opt(chan) \
- 	-topoInstance $topo \
- 	-diffusionFilter $opt(filters) \
- 	-agentTrace ON \
- 	-routerTrace OFF \
- 	-macTrace OFF 
-    
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 180.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-     $node_(5) set X_ 321.560825121175
-     $node_(5) set Y_ 472.788096833600
-     $node_(5) set Z_ 0.000000000000
-     $node_(6) set X_ 149.543901734330
-     $node_(6) set Y_ 384.356581531832
-     $node_(6) set Z_ 0.000000000000
-     $node_(7) set X_ 381.066146464027
-     $node_(7) set Y_ 78.723958958779
-     $node_(7) set Z_ 0.000000000000
-     $node_(8) set X_ 113.578290026963
-     $node_(8) set Y_ 410.320583900348
-     $node_(8) set Z_ 0.000000000000
-     $node_(9) set X_ 258.053977148981
-     $node_(9) set Y_ 113.194171851670
-     $node_(9) set Z_ 0.000000000000
-    
-     # starting gear filter separately- this will go away once gear has 
-     # callbacks for updating node positions
-     for {set i 0} {$i < $opt(nn)} {incr i} {
- 	set gearf($i) [new Application/DiffApp/GeoRoutingFilter \
- 			   [$node_($i) get-dr]]
- 	$gearf($i) start
-     }
-
-     # 4 gear sender
-     set src_(0) [new Application/DiffApp/GearSenderApp]
-     $ns_ attach-diffapp $node_(0) $src_(0)
-     $src_(0) push-pull-options pull point 180.587 401.886
-     $ns_ at 0.123 "$src_(0) publish"
-    
-     set src_(1) [new Application/DiffApp/GearSenderApp]
-     $ns_ attach-diffapp $node_(1) $src_(1)
-     $src_(1) push-pull-options pull point 11.901 36.218
-     $ns_ at 0.23 "$src_(1) publish"
-    
-     set src_(2) [new Application/DiffApp/GearSenderApp]
-     $ns_ attach-diffapp $node_(2) $src_(2)
-     $src_(2) push-pull-options pull point 224.282 20.774
-     $ns_ at 0.3 "$src_(2) publish"
-    
-     set src_(3) [new Application/DiffApp/GearSenderApp]
-     $ns_ attach-diffapp $node_(3) $src_(3)
-     $src_(3) push-pull-options pull point 158.840 139.650
-     $ns_ at 0.4 "$src_(3) publish"
-    
-     # 1 ping receiver
-     set snk_(0) [new Application/DiffApp/GearReceiverApp]
-     $ns_ attach-diffapp $node_(7) $snk_(0)
-     $snk_(0) push-pull-options pull region 10 300 10 450
-     $ns_ at 1.456 "$snk_(0) subscribe"
-    
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
-}
-
-Class Test/gear-push-10n-1s-4r -superclass TestSuite
-
-Test/gear-push-10n-1s-4r instproc init {} {
-     global opt
-     set opt(nn) 10
-     set opt(filters) GradientFilter/GeoRoutingFilter
-     $self instvar ns_ testName_
-     set testName_ gear-push-10n-1s-4r
-     $self next
-}
-
-Test/gear-push-10n-1s-4r instproc run {} {
-     global opt
-    $self instvar ns_ topo god_
-
-     set topo	[new Topography]
-    $topo load_flatgrid $opt(x) $opt(y)
-     set god_ [create-god $opt(nn)]
-
-     $ns_ node-config -adhocRouting $opt(adhocRouting) \
- 	-llType $opt(ll) \
- 	-macType $opt(mac) \
- 	-ifqType $opt(ifq) \
- 	-ifqLen $opt(ifqlen) \
- 	-antType $opt(ant) \
- 	-propType $opt(prop) \
- 	-phyType $opt(netif) \
- 	-channelType $opt(chan) \
- 	-topoInstance $topo \
- 	-diffusionFilter $opt(filters) \
- 	-agentTrace ON \
- 	-routerTrace OFF \
- 	-macTrace OFF 
-    
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	set node_($i) [$ns_ node $i]
-         $node_($i) color black
- 	$node_($i) random-motion 0		;# disable random motion
-         $god_ new_node $node_($i)
-     }
-
-     # defining node positions
-     $node_(0) set X_ 180.587605569735
-     $node_(0) set Y_ 401.886827012678
-     $node_(0) set Z_ 0.000000000000
-     $node_(1) set X_ 11.901958617639
-     $node_(1) set Y_ 36.218497218617
-     $node_(1) set Z_ 0.000000000000
-     $node_(2) set X_ 224.282785411393
-     $node_(2) set Y_ 20.774608253697
-     $node_(2) set Z_ 0.000000000000
-     $node_(3) set X_ 158.840938304009
-     $node_(3) set Y_ 139.650216383776
-     $node_(3) set Z_ 0.000000000000
-     $node_(4) set X_ 101.186886005903
-     $node_(4) set Y_ 147.993190973633
-     $node_(4) set Z_ 0.000000000000
-     $node_(5) set X_ 321.560825121175
-     $node_(5) set Y_ 472.788096833600
-     $node_(5) set Z_ 0.000000000000
-     $node_(6) set X_ 149.543901734330
-     $node_(6) set Y_ 384.356581531832
-     $node_(6) set Z_ 0.000000000000
-     $node_(7) set X_ 381.066146464027
-     $node_(7) set Y_ 78.723958958779
-     $node_(7) set Z_ 0.000000000000
-     $node_(8) set X_ 113.578290026963
-     $node_(8) set Y_ 410.320583900348
-     $node_(8) set Z_ 0.000000000000
-     $node_(9) set X_ 258.053977148981
-     $node_(9) set Y_ 113.194171851670
-     $node_(9) set Z_ 0.000000000000
-    
-     # starting gear filter separately- this will go away once gear has 
-     # callbacks for updating node positions
-     for {set i 0} {$i < $opt(nn)} {incr i} {
- 	set gearf($i) [new Application/DiffApp/GeoRoutingFilter \
- 			   [$node_($i) get-dr]]
-	 $gearf($i) start
-     }
-
-    # 1 push sender
-    set src_(0) [new Application/DiffApp/GearSenderApp]
-    $ns_ attach-diffapp $node_(6) $src_(0)
-    $src_(0) push-pull-options push region 100 650 100 650
-    $ns_ at 0.123 "$src_(0) publish"
-    
-    # 4 push receiver
-    set snk_(0) [new Application/DiffApp/GearReceiverApp]
-    $ns_ attach-diffapp $node_(8) $snk_(0)
-    $snk_(0) push-pull-options push point 101.186 147.993
-    $ns_ at 1.256 "$snk_(0) subscribe"
-    
-    set snk_(1) [new Application/DiffApp/GearReceiverApp]
-    $ns_ attach-diffapp $node_(9) $snk_(1)
-     $snk_(1) push-pull-options push point 258.053 113.194
-     $ns_ at 1.456 "$snk_(1) subscribe"
-    
-     set snk_(2) [new Application/DiffApp/GearReceiverApp]
-     $ns_ attach-diffapp $node_(7) $snk_(2)
-     $snk_(2) push-pull-options push point 321.560 472.788
-     $ns_ at 1.56 "$snk_(2) subscribe"
-    
-     set snk_(3) [new Application/DiffApp/GearReceiverApp]
-     $ns_ attach-diffapp $node_(1) $snk_(3)
-     $snk_(3) push-pull-options push point 158.840 139.650
-     $ns_ at 1.73 "$snk_(3) subscribe"
-    
-     #
-     # Tell nodes when the simulation ends
-     #
-     for {set i 0} {$i < $opt(nn) } {incr i} {
- 	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-     }
-     $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-     $ns_ run
-}
-
-proc runtest {arg} {
- 	global quiet
- 	set quiet 0
-
- 	set b [llength $arg]
- 	if {$b == 1} {
- 		set test $arg
- 	} elseif {$b == 2} {
- 		set test [lindex $arg 0]
- 	    if {[lindex $arg 1] == "QUIET"} {
- 		set quiet 1
- 	    }
- 	} else {
- 		usage
- 	}
- 	set t [new Test/$test]
- 	$t run
- }
-
- global argv arg0
- runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-ecn-ack.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-ecn-ack.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-ecn-ack.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-ecn-ack.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1225 +0,0 @@
-# This has set_lossylink, but this procedure does not appear
-# in test-suite-ecn.tcl
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-ecn-ack.tcl,v 1.39 2009/03/29 21:01:05 sallyfloyd Exp $
-#
-# To run all tests: test-all-ecn-ack
-set dir [pwd]
-catch "cd tcl/test"
-catch "cd $dir"
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP RTP ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-# Agent/TCP/FullTcp set debug_ true;
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-    
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Topology instproc makenodes ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-}
-
-Topology instproc createlinks ns {
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
-}
-
-Class Topology/net2-lossy -superclass Topology
-Topology/net2-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-}
-
-Class Topology/net2A-lossy -superclass Topology
-Topology/net2A-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r2) $node_(r1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-}
-
-Class Topology/net2B-lossy -superclass Topology
-Topology/net2B-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r2) $node_(r1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-
-    $self instvar lossylink1_
-    set lossylink1_ [$ns link $node_(r1) $node_(s1)]
-    set em1 [new ErrorModule Fid]
-    set errmodel1 [new ErrorModel/Periodic]
-    $errmodel1 unit pkt
-    $lossylink1_ errormodule $em1
-    $em1 insert $errmodel1
-    $em1 bind $errmodel1 0
-    $em1 default pass
-}
-
-TestSuite instproc finish file {
-	global quiet wrap wrap1 PERL
-	$self instvar ns_ tchan_ testName_ cwnd_chan_
-	if {$file == "ecn_ack_fulltcp"} { 
-	   ## tracing forward-path data packets
-           exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	     $PERL ../../bin/raw2xg -aecx -s 0.01 -m $wrap -t $file > temp.rands
-  	   exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	     $PERL ../../bin/raw2xg -aefcx -s 0.01 -m $wrap -t $file > temp1.rands
-
-	   ## tracing reverse-path data packets
-           exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	     $PERL ../../bin/raw2xg -aecx -s 0.01 -m $wrap -t $file > temp2.rands
-  	   exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	     $PERL ../../bin/raw2xg -aefcx -s 0.01 -m $wrap -t $file > temp3.rands
-	} elseif {$wrap == $wrap1} {
-	   ## tracing reverse-path data packets
-           exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	     $PERL ../../bin/raw2xg -aefcx -s 0.01 -m $wrap -t $file > temp.rands
-  	   exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	     $PERL ../../bin/raw2xg -aecx -s 0.01 -m $wrap -t $file > temp1.rands
-	   ## tracing forward-path data packets
-           exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	     $PERL ../../bin/raw2xg -aefcx -s 0.01 -m $wrap -t $file > temp2.rands
-  	   exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	     $PERL ../../bin/raw2xg -aecx -s 0.01 -m $wrap -t $file > temp3.rands
-	} else {
-           exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	     $PERL ../../bin/raw2xg -aecx -s 0.01 -m $wrap -t $file > temp.rands
-  	   exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	     $PERL ../../bin/raw2xg -aecx -s 0.01 -m $wrap -t $file > temp1.rands
-
-	   ## tracing reverse-path data packets
-           exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	     $PERL ../../bin/raw2xg -aefcx -s 0.01 -m $wrap -t $file > temp2.rands
-  	   exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	     $PERL ../../bin/raw2xg -aefcx -s 0.01 -m $wrap -t $file > temp3.rands
-	}
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp2.rands \
-                                    temp3.rands &
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-                                    temp1.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-        if { [info exists cwnd_chan_] && $quiet == "false" } {
-                $self plot_cwnd
-        }
-        if { [info exists tchan_] && $quiet == "false" } {
-                $self plotQueue $testName_
-        }
-	# exec csh gnuplotC2.com temp.rands temp1.rands $file eps
-	$ns_ halt
-}
-
-TestSuite instproc plotQueue file {   
-        global quiet
-        $self instvar tchan_
-        #
-        # Plot the queue size and average queue size, for RED gateways.
-        #
-        set awkCode {
-                {
-                        if ($1 == "Q" && NF>2) {
-                                print $2, $3 >> "temp.q";
-                                set end $2
-                        }
-                        else if ($1 == "a" && NF>2)
-                                print $2, $3 >> "temp.a";
-                }
-        }
-        set f [open temp.queue w]
-        puts $f "TitleText: $file"
-        puts $f "Device: Postscript"
-         
-        if { [info exists tchan_] } {
-                close $tchan_
-        }
-        exec rm -f temp.q temp.a
-        exec touch temp.a temp.q  
-        
-        exec awk $awkCode all.q  
-        
-        puts $f \"queue 
-        exec cat temp.q >@ $f
-        puts $f \n\"ave_queue
-        exec cat temp.a >@ $f
-        ###puts $f \n"thresh
-        ###puts $f 0 [[ns link $r1 $r2] get thresh]
-        ###puts $f $end [[ns link $r1 $r2] get thresh]
-        close $f
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -x time -y queue temp.queue &
-        }
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-TestSuite instproc emod {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-	return $errmodule
-}
-
-TestSuite instproc setloss {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        set errmodel [$errmodule errormodels]
-        if { [llength $errmodel] > 1 } {
-                puts "droppedfin: confused by >1 err models..abort"
-                exit 1
-        }
-	return $errmodel
-}
-
-TestSuite instproc setloss1 {} {
-	$self instvar topo_
-	$topo_ instvar lossylink1_
-        set errmodule [$lossylink1_ errormodule]
-        set errmodel [$errmodule errormodels]
-        if { [llength $errmodel] > 1 } {
-                puts "droppedfin: confused by >1 err models..abort"
-                exit 1
-        }
-	return $errmodel
-}
-
-TestSuite instproc ecnsetup { tcptype { tcp1fid 0 } } {
-    $self instvar ns_ node_ testName_ net_
-    global wrap wrap1
-
-    set delay 10ms
-    $ns_ delay $node_(r1) $node_(r2) $delay
-    $ns_ delay $node_(r2) $node_(r1) $delay
-
-    set stoptime 2.0
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $redq set setbit_ true
-    $redq set limit_ 50
-
-    set fid 1
-    if {$tcptype == "Tahoe"} {
-      set tcp1 [$ns_ create-connection TCP $node_(s1) \
-	  TCPSink $node_(s3) $tcp1fid]
-    } elseif {$tcptype == "Sack1"} {
-      set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-	  TCPSink/Sack1  $node_(s3) $tcp1fid]
-    } elseif {$tcptype == "FullTcpSack1"} {
-          set wrap $wrap1
-          set tcp1 [new Agent/TCP/FullTcp/Sack]
-          set sink [new Agent/TCP/FullTcp/Sack]
-          $ns_ attach-agent $node_(s1) $tcp1
-          $ns_ attach-agent $node_(s3) $sink
-          $tcp1 set fid_ $fid
-          $sink set fid_ $fid
-          $ns_ connect $tcp1 $sink
-          # set up TCP-level connections
-          $sink listen ; # will figure out who its peer is
-	  $sink set window_ 35
-	  $sink set ecn_ 1
-    } else {
-      set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-	  TCPSink $node_(s3) $tcp1fid]
-    }
-    $tcp1 set window_ 35
-    $tcp1 set ecn_ 1
-    set ftp1 [$tcp1 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp1
-        
-    $ns_ at 0.0 "$ftp1 start"
-        
-    $self tcpDump $tcp1 5.0
-        
-    # trace only the bottleneck link
-    ##$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-}
-
-# Drop the specified packet.
-TestSuite instproc drop_pkt { number } {
-    $self instvar ns_ 
-    set lossmodel [$self setloss]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ 10000
-    $lossmodel set markecn_ false
-}
-
-# Mark the specified packet.
-TestSuite instproc mark_pkt { number { period 10000 } } {
-    $self instvar ns_ 
-    set lossmodel [$self setloss]
-    #set lossmodel [$self setloss1]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ $period
-    $lossmodel set markecn_ true
-}
-
-# Mark the specified packet.
-TestSuite instproc mark_pkt1 { number } {
-    $self instvar ns_ 
-    set lossmodel [$self setloss]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ 10000
-    $lossmodel set markecn_ true
-}
-
-TestSuite instproc drop_more_pkts { number period } {
-    $self instvar ns_ 
-    set lossmodel [$self setloss1]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ $period
-    $lossmodel set markecn_ false
-}
-
-TestSuite instproc emod1 {} {
-	$self instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-}
-
-TestSuite instproc set_lossylink {} {
-        $self instvar lossylink_ ns_ node_
-        set lossylink_ [$ns_ link $node_(r1) $node_(r2)]
-        set em [new ErrorModule Fid]
-        set errmodel [new ErrorModel/Periodic]
-        $errmodel unit pkt
-        $lossylink_ errormodule $em
-}
-
-TestSuite instproc set_lossylink1 {} {
-        $self instvar lossylink_ ns_ node_
-        set lossylink_ [$ns_ link $node_(r2) $node_(r1)]
-        set em [new ErrorModule Fid]
-        set errmodel [new ErrorModel/Periodic]
-        $errmodel unit pkt
-        $lossylink_ errormodule $em
-}
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_ errmodel1
-    set emod [$self emod1]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 0
-}
-
-#######################################################################
-# SACK Test #
-#######################################################################
-
-Class Test/ecn_ack -superclass TestSuite
-Test/ecn_ack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	set guide_      "One-way TCP, Sack, drops and marks."
-	Agent/TCP set bugFix_ true
-        set test_	ecn_ack
-        $self next
-}
-Test/ecn_ack instproc run {} {
-	$self instvar ns_ guide_
-	puts "Guide: $guide_"
-	$self setTopo
-	$self ecnsetup Sack1
-	$self drop_pkt 20000
-	$ns_ run
-}
-
-Class Test/ecn_ack_fulltcp -superclass TestSuite
-Test/ecn_ack_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	set guide_      "FullTCP, marked packet."
-	Agent/TCP set bugFix_ true
-        set test_	ecn_ack_fulltcp
-        $self next
-}
-Test/ecn_ack_fulltcp instproc run {} {
-        global quiet wrap wrap1
-	$self instvar ns_ guide_
-	puts "Guide: $guide_"
-	$self setTopo
-        set wrap $wrap1
-	$self ecnsetup FullTcpSack1
-	$self drop_pkt 20000
-	$ns_ run
-}
-
-#######################################################################
-# SYN/ACK Packets #
-#######################################################################
-
-# No SYN packets dropped or marked.
-Class Test/synack -superclass TestSuite
-Test/synack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2-lossy
-        set test_       synack_
-        set guide_      "No SYN packets dropped or marked."
-        Agent/TCPSink set ecn_syn_ false
-        $self next pktTraceFile
-}
-Test/synack instproc run {} {
-        global quiet
-        $self instvar ns_ guide_ node_ testName_ 
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-	Agent/TCP set window_ 8
-        $self setTopo
-
-        # Set up forward TCP connection
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s4) 0]
-	$tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 20"
-
-        $self drop_pkt 1000
-        $self tcpDump $tcp1 5.0
-        $ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# Full TCP, no SYN packets dropped or marked.
-Class Test/synack_fulltcp -superclass TestSuite
-Test/synack_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2-lossy
-        set test_       synack_fulltcp_
-        set guide_      "Full TCP, no SYN packets dropped or marked."
-        Agent/TCPSink set ecn_syn_ false
-        $self next pktTraceFile
-}
-Test/synack_fulltcp instproc run {} {
-        global quiet wrap wrap1
-        $self instvar ns_ guide_ node_ testName_ 
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-	Agent/TCP set window_ 8
-        $self setTopo
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 5"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        $self drop_pkt 1000
-        $self tcpDump $tcp1 5.0
-        $ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-
-# SYN packet dropped.
-Class Test/synack0 -superclass TestSuite
-Test/synack0 instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2-lossy
-        set test_       synack0_
-        set guide_      "One-way TCP, SYN packet dropped, retransmitted."
-        Agent/TCPSink set ecn_syn_ false
-        $self next pktTraceFile
-}
-Test/synack0 instproc run {} {
-        global quiet
-        $self instvar ns_ guide_ node_ testName_ 
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-	Agent/TCP set window_ 8
-        $self setTopo
-
-        # Set up forward TCP connection
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s4) 0]
-	$tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 20"
-
-        $self drop_pkt 1
-        $self tcpDump $tcp1 5.0
-        $ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# SYN packet dropped, old parameters for RTO.
-Class Test/synack0A -superclass TestSuite
-Test/synack0A instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2-lossy
-        set test_       synack0A_
-        set guide_      "One-way TCP, SYN packet dropped, old parameters for RTO."
-        Agent/TCPSink set ecn_syn_ false
-	Agent/TCP set rtxcur_init_ 6.0 
-	Agent/TCP set updated_rttvar_ false 
-	Test/synack0A instproc run {} [Test/synack0 info instbody run ]
-        $self next pktTraceFile
-}
-
-# Four SYN packets dropped.
-Class Test/synack-4 -superclass TestSuite
-Test/synack-4 instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2
-        set test_       synack-4_
-        set guide_      "One-way TCP, four SYN packets dropped, max_connects_ not used."
-        Agent/TCPSink set ecn_syn_ false
-        Agent/TCP set max_connects_ -1;
-        $self next pktTraceFile
-}
-Test/synack-4 instproc run {} {
-        global quiet
-        $self instvar ns_ guide_ node_ testName_ 
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-	Agent/TCP set window_ 8
-        $self setTopo
-	$self set_lossylink
-
-        # Set up forward TCP connection
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s4) 0]
-	$tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 20"
-
-        $self drop_pkts {0 1 2 3}
-        #$self tcpDump $tcp1 5.0
-        $ns_ at 200.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-# Four SYN packets dropped.
-Class Test/synack-4-maxconnect -superclass TestSuite
-Test/synack-4-maxconnect instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2
-        set test_       synack-4-maxconnect_
-        set guide_      "One-way TCP, four SYN packets dropped, max_connects_ 5."
-        Agent/TCPSink set ecn_syn_ false
-        Agent/TCP set max_connects_ 5;
-	Test/synack-4-maxconnect instproc run {} [Test/synack-4 info instbody run ]
-        $self next pktTraceFile
-}
-
-# Five SYN packets dropped.
-Class Test/synack-5-maxconnect -superclass TestSuite
-Test/synack-5-maxconnect instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2
-        set test_       synack-5-maxconnect_
-        set guide_      "One-way TCP, five SYN packets dropped, max_connects_ 5."
-        Agent/TCPSink set ecn_syn_ false
-        Agent/TCP set max_connects_ 5;
-        $self next pktTraceFile
-}
-Test/synack-5-maxconnect instproc run {} {
-        global quiet
-        $self instvar ns_ guide_ node_ testName_ 
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-	Agent/TCP set window_ 8
-        $self setTopo
-	$self set_lossylink
-
-        # Set up forward TCP connection
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s4) 0]
-	$tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 20"
-
-        $self drop_pkts {0 1 2 3 4}
-        #$self tcpDump $tcp1 5.0
-        $ns_ at 200.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# Fifteen SYN packets dropped.
-Class Test/synack-15 -superclass TestSuite
-Test/synack-15 instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2
-        set test_       synack-15_
-        set guide_      "One-way TCP, fifteen SYN packets dropped, max_connects not used."
-        Agent/TCPSink set ecn_syn_ false
-        Agent/TCP set max_connects_ -1;
-        $self next pktTraceFile
-}
-Test/synack-15 instproc run {} {
-        global quiet
-        $self instvar ns_ guide_ node_ testName_ 
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-	Agent/TCP set window_ 8
-        $self setTopo
-	$self set_lossylink
-
-        # Set up forward TCP connection
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s4) 0]
-	$tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 20"
-
-        $self drop_pkts {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14} 
-        #$self tcpDump $tcp1 5.0
-        $ns_ at 3000.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# SYN/ACK packet dropped.
-Class Test/synack1 -superclass TestSuite
-Test/synack1 instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2A-lossy
-        set test_       synack1_
-        set guide_      "One-way TCP, SYN/ACK packet dropped."
-        Agent/TCPSink set ecn_syn_ false
-        $self next pktTraceFile
-}
-Test/synack1 instproc run {} {
-        global quiet
-        $self instvar ns_ guide_ node_ testName_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-        $self setTopo
-
-        # Set up forward TCP connection
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s4) 0]
-        $tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 20"
-
-        $self drop_pkt 1
-        $self tcpDump $tcp1 5.0
-        $ns_ at 5.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# SYN/ACK packet not dropped or marked, FullTCP
-Class Test/synack0_fulltcp -superclass TestSuite
-Test/synack0_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2A-lossy
-        set test_       synack0_fulltcp_
-        set guide_      "SYN/ACK packet not dropped, FullTCP."
-        Agent/TCPSink set ecn_syn_ false
-        $self next pktTraceFile
-}
-Test/synack0_fulltcp instproc run {} {
-        global quiet wrap wrap1
-        $self instvar ns_ guide_ node_ testName_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-        Agent/TCP set window_ 8
-        $self setTopo
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 5"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        $self drop_pkt 1000
-        $self tcpDump $tcp1 5.0
-        $ns_ at 5.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# SYN/ACK packet dropped, FullTCP
-Class Test/synack1_fulltcp -superclass TestSuite
-Test/synack1_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2A-lossy
-        set test_       synack1_fulltcp_
-        set guide_      "SYN/ACK packet dropped, FullTCP."
-        Agent/TCPSink set ecn_syn_ false
-        $self next pktTraceFile
-}
-Test/synack1_fulltcp instproc run {} {
-        global quiet wrap wrap1
-        $self instvar ns_ guide_ node_ testName_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-        Agent/TCP set window_ 8
-        $self setTopo
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 5"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        $self drop_pkt 1
-        $self tcpDump $tcp1 5.0
-        $ns_ at 5.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# SYN/ACK packet marked.
-Class Test/synack2 -superclass TestSuite
-Test/synack2 instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2A-lossy
-        set test_       synack2_
-        set guide_      "One-way TCP, SYN/ACK packet marked, ECN+."
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 0
-        $self next pktTraceFile
-}
-Test/synack2 instproc run {} {
-        global quiet
-        $self instvar ns_ guide_ node_ testName_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-	Agent/TCP set window_ 8
-        $self setTopo
-
-        # Set up forward TCP connection
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s4) 0]
-        $tcp1 set window_ 8
-
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 20"
-
-        $self mark_pkt1 1
-        # $self mark_pkt 10
-        $self tcpDump $tcp1 5.0
-        $ns_ at 2.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# ecn_syn_wait_ 0: Window of one if SYN/ACK pkt is marked.
-Class Test/synack2_fulltcp -superclass TestSuite
-Test/synack2_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2A-lossy
-        set test_       synack2_fulltcp_
-        set guide_      "SYN/ACK packet marked, FullTCP, ECN+."
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_ true 
-	Agent/TCP/FullTcp set ecn_syn_wait_ 0
-        $self next pktTraceFile
-}
-Test/synack2_fulltcp instproc run {} {
-        global quiet wrap wrap1
-        $self instvar ns_ guide_ node_ testName_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-        $self setTopo
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 5"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        $self mark_pkt1 1
-        # $self mark_pkt 10
-        $self tcpDump $tcp1 5.0
-        $ns_ at 2.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-Class Test/synack2a_fulltcp -superclass TestSuite
-Test/synack2a_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2A-lossy
-        set test_       synack2a_fulltcp_
-        set guide_      "SYN/ACK packet marked, FullTCP, ECN+/wait."
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 1
-        $self next pktTraceFile
-}
-Test/synack2a_fulltcp instproc run {} {
-        global quiet wrap wrap1
-        $self instvar ns_ guide_ node_ testName_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-        $self setTopo
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 5"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        $self mark_pkt1 1
-        # $self mark_pkt 10
-        $self tcpDump $tcp1 5.0
-        $ns_ at 2.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# ecn_syn_wait_ 2: Retry if SYN/ACK packet is ECN-marked.
-Class Test/synack2b_fulltcp -superclass TestSuite
-Test/synack2b_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2A-lossy
-        set test_       synack2b_fulltcp_
-        set guide_      "SYN/ACK packet marked, FullTCP, ECN+/wait2."
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 2
-        $self next pktTraceFile
-}
-Test/synack2b_fulltcp instproc run {} {
-        global quiet wrap wrap1
-        $self instvar ns_ guide_ node_ testName_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-        $self setTopo
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 5"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        $self mark_pkt1 1
-        # $self mark_pkt 10
-        $self tcpDump $tcp1 5.0
-        $ns_ at 2.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# This differs from synack2_fulltcp in that the originating TCP
-#   produces only one packet, instead of five.
-Class Test/synack3_fulltcp -superclass TestSuite
-Test/synack3_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_ stoptime_
-        set net_        net2A-lossy
-        set test_       synack3_fulltcp_
-        set guide_      "SYN/ACK packet marked, FullTCP, ECN+."
-        set action_ 	mark1
-        set stoptime_   2.0
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 0
-        $self next pktTraceFile
-}
-Test/synack3_fulltcp instproc run {} {
-        global quiet wrap wrap1 
-        $self instvar ns_ guide_ node_ testName_ action_ stoptime_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-        $self setTopo
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 1"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        if {$action_ == "mark"} {
-        	$self mark_pkt 1
-                puts "marking packet"
-        } elseif {$action_ == "mark1"} {
-        	$self mark_pkt1 1
-                puts "marking packet"
-        } elseif {$action_ == "marktwo"} {
-        	$self mark_pkt 1
-        	$self mark_pkt 7
-                puts "marking two packets"
-        } elseif {$action_ == "drop"} {
-		$self drop_pkt 1
-                 puts "dropping packet"
-        } elseif {$action_ == "markdrop"} {
-                $self mark_pkt 1
-                $self drop_more_pkts 2 1
-                 puts "marking one packet, dropping others"
-        } elseif {$action_ == "markdropone"} {
-                $self mark_pkt 1
-                $self drop_more_pkts 2 1000
-                 puts "marking one packet, dropping one other"
-        } elseif {$action_ == "none"} {
-		$self mark_pkt 1000
-                puts "not marking or dropping packet"
-        } elseif {$action_ == "none1"} {
-		$self mark_pkt1 1000
-                puts "not marking or dropping packet"
-        } 
-        $self tcpDump $tcp1 5.0
-        $ns_ at $stoptime_ "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-Class Test/synack3b_fulltcp -superclass TestSuite
-Test/synack3b_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_ stoptime_
-        set net_        net2A-lossy
-        set test_       synack3b_fulltcp_
-        set guide_      "SYN/ACK packet not marked, FullTCP."
-        set action_	none1
-        set stoptime_   2.0
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_ true
-        Test/synack3b_fulltcp instproc run {} [Test/synack3_fulltcp info instbody run]
-        $self next pktTraceFile
-}
-
-Class Test/synack3a_fulltcp -superclass TestSuite
-Test/synack3a_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_ stoptime_
-        set net_        net2A-lossy
-        set test_       synack3a_fulltcp_
-        set guide_      "SYN/ACK packet marked, FullTCP, ECN+/wait."
-        set action_ 	mark1
-        set stoptime_   2.0
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 1
-        Test/synack3a_fulltcp instproc run {} [Test/synack3_fulltcp info instbody run]
-        $self next pktTraceFile
-}
-
-Class Test/synack3c_fulltcp -superclass TestSuite
-Test/synack3c_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_ stoptime_
-        set net_        net2A-lossy
-        set test_       synack3c_fulltcp_
-        set guide_      "SYN/ACK packet marked, FullTCP, ECN+/wait2."
-        set action_ 	mark1
-        set stoptime_   2.0
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 2
-        Test/synack3c_fulltcp instproc run {} [Test/synack3_fulltcp info instbody run]
-        $self next pktTraceFile
-}
-
-# I haven't succeeded in making this one mark two packets yet.
-# Class Test/synack3e_fulltcp -superclass TestSuite
-# Test/synack3e_fulltcp instproc init {} {
-#         $self instvar net_ test_ guide_ action_
-#         set net_        net2B-lossy
-#         set test_       synack3e_fulltcp_
-#         set guide_      "SYN/ACK and data packet marked, FullTCP, ECN+/wait2."
-#         set action_ 	marktwo
-#         Agent/TCPSink set ecn_syn_ true
-# 	Agent/TCP/FullTcp set ecn_syn_ true
-# 	Agent/TCP/FullTcp set ecn_syn_wait_ 2
-#         Test/synack3e_fulltcp instproc run {} [Test/synack3_fulltcp info instbody run]
-#         $self next pktTraceFile
-# }
-
-Class Test/synack3d_fulltcp -superclass TestSuite
-Test/synack3d_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_ stoptime_
-        set net_        net2A-lossy
-        set test_       synack3d_fulltcp_
-        set guide_      "SYN/ACK packet dropped, FullTCP, ECN+."
-        set action_ 	drop
-        set stoptime_   2.0
-	Agent/TCP/FullTcp set ecn_syn_ true
- 	# Why doesn't the line below work?
-        #Test/synack3d_fulltcp instproc run {} [Test/synack3_fulltcp info instbody run]
-        $self next pktTraceFile
-}
-Test/synack3d_fulltcp instproc run {} {
-        global quiet wrap wrap1
-        $self instvar ns_ guide_ node_ testName_
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 1
-        $self setTopo
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 1"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        $self drop_pkt 1
-        $self tcpDump $tcp1 5.0
-        $ns_ at 5.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-Class Test/synack3f_fulltcp -superclass TestSuite
-Test/synack3f_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_
-        set net_        net2A-lossy
-        set test_       synack3f_fulltcp_
-        set guide_      "SYN/ACK packet dropped, FullTCP, ECN+/wait2."
-        set action_ 	drop
-	Agent/TCP/FullTcp set ecn_syn_ true
-        Agent/TCP/FullTcp set ecn_syn_wait_ 2
-        Test/synack3f_fulltcp instproc run {} [Test/synack3d_fulltcp info instbody run]
-        $self next pktTraceFile
-}
-
-Class Test/synack3g_fulltcp -superclass TestSuite
-Test/synack3g_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_ stoptime_
-        set net_        net2B-lossy
-        set test_       synack3g_fulltcp_
-        set guide_      "SYN/ACK marked, next ones dropped, FullTCP, ECN+/wait2."
-        set action_     markdrop
-        set stoptime_   20.0
-        Agent/TCPSink set ecn_syn_ true
-        Agent/TCP/FullTcp set ecn_syn_ true
-        Agent/TCP/FullTcp set ecn_syn_wait_ 2
-        Test/synack3g_fulltcp instproc run {} [Test/synack3_fulltcp info instbody run]
-        $self next pktTraceFile
-}
-
-Class Test/synack3h_fulltcp -superclass TestSuite
-Test/synack3h_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_ stoptime_
-        set net_        net2B-lossy
-        set test_       synack3h_fulltcp_
-        set guide_      "SYN/ACK marked, next one dropped, FullTCP, ECN+/wait2."
-        set action_     markdropone
-        set stoptime_   20.0
-        Agent/TCPSink set ecn_syn_ true
-        Agent/TCP/FullTcp set ecn_syn_ true
-        Agent/TCP/FullTcp set ecn_syn_wait_ 2
-        Test/synack3h_fulltcp instproc run {} [Test/synack3_fulltcp info instbody run]
-        $self next pktTraceFile
-}
-Class Test/synack4c_fulltcp -superclass TestSuite
-Test/synack4c_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ action_ stoptime_
-        set net_        net2A-lossy
-        set test_       synack4c_fulltcp_
-        set guide_      "SYN/ACK packet marked, FullTCP, ECN+/wait2, large initial windows."
-        set action_ 	mark1
-        set stoptime_   2.0
-        Agent/TCPSink set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 2
-        Agent/TCP set windowInitOption_ 2
-        Test/synack4c_fulltcp instproc run {} [Test/synack3_fulltcp info instbody run]
-        $self next pktTraceFile
-}
-
-# SYN packets are retransmitted, with exponential backoff.
-Class Test/synack_many_fulltcp -superclass TestSuite
-Test/synack_many_fulltcp instproc init {} {
-        $self instvar net_ test_ guide_ 
-        set net_        net2
-        set test_       synack_many_fulltcp_
-        set guide_      "All SYN/ACK packets dropped, FullTCP, no ECN."
-	Agent/TCP/FullTcp set ecn_syn_ false
-        $self next pktTraceFile
-}
-Test/synack_many_fulltcp instproc run {} {
-        global quiet wrap wrap1
-        $self instvar ns_ guide_ node_ testName_ errmodel1
-        puts "Guide: $guide_"
-        Agent/TCP set ecn_ 0
-        $self setTopo
-        $self set_lossylink1
-
-        # Set up forward TCP connection
-        set wrap $wrap1
-        set tcp1 [new Agent/TCP/FullTcp/Sack]
-        set sink [new Agent/TCP/FullTcp/Sack]
-        $ns_ attach-agent $node_(s1) $tcp1
-        $ns_ attach-agent $node_(s4) $sink
-        $tcp1 set fid_ 0
-        $sink set fid_ 0
-        $ns_ connect $tcp1 $sink
-        $sink listen ; # will figure out who its peer is
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.00 "$ftp1 produce 1"
-        set ftp2 [$sink attach-app FTP]
-        $ns_ at 0.03 "$ftp2 produce 20"
-
-        $self drop_pkts {0 1 2 3} 
-        # $self drop_pkt 1
-	# "drop_pkt" is used with net2A-lossy.
-        $self tcpDump $tcp1 5.0
-        $ns_ at 20.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-TestSuite runTest
-
-# E: Congestion Experienced in IP header.
-# N: ECN-Capable-Transport (ECT) in IP header.
-# C: ECN-Echo in TCP header.
-# A: Congestion Window Reduced (CWR) in TCP header. 
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-ecn-full.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-ecn-full.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-ecn-full.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-ecn-full.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,2607 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-ecn-full.tcl,v 1.24 2008/06/06 01:11:37 sallyfloyd Exp $
-#
-# To run all tests: test-all-ecn-full
-
-##To run tests:
-## set test=ecn_twoecn_reno
-## ../../ns test-suite-ecn-full.tcl $test'_full'
-## ../../ns test-suite-ecn.tcl $test
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set minrto_ 0
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-Agent/TCP set SetCWRonRetransmit_ true
-# The default is being changed to true.
-
-
-catch "cd $dir"
-set scale 0.00001
-set wrap [expr 90 * 1000 + 40]
-Agent/TCP/FullTcp set segsize_ 960
-
-# Agent/TCP/FullTcp set debug_ true;
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Topology instproc makenodes ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-    set node_(r3) [$ns node]
-}
-
-Topology instproc createlinks ns {  
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}
-
-Topology instproc createlinks3 ns {
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(r2) $node_(r3) 100Mb 0ms RED
-    $ns queue-limit $node_(r2) $node_(r3) 100
-    $ns queue-limit $node_(r3) $node_(r2) 100
-    $ns duplex-link $node_(s3) $node_(r3) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r3) 10Mb 5ms DropTail
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r3) queuePos 0
-    $ns duplex-link-op $node_(r3) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r3) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r3) orient left-up
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
-}
-
-Class Topology/net2-lossy -superclass Topology
-Topology/net2-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
- 
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-} 
-
-Class Topology/net3-lossy -superclass Topology
-Topology/net3-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks3 $ns
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-
-    $self instvar lossylink1_
-    set lossylink1_ [$ns link $node_(r2) $node_(r3)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink1_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-}
-
-TestSuite instproc finish file {
-	global quiet PERL wrap scale
-	$self instvar ns_ tchan_ testName_ cwnd_chan_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	   $PERL ../../bin/raw2xg -a -e -s $scale -m $wrap -t $file > temp.rands
-	exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	  $PERL ../../bin/raw2xg -a -e -s $scale -m $wrap -t $file > temp1.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-# The line below plots both data and ack packets.
-#        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-#                     temp1.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	if { [info exists cwnd_chan_] && $quiet == "false" } {
-		$self plot_cwnd 
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set redq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$redq trace curq_
-	$redq trace ave_
-	$redq attach $tchan_
-}
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for RED gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-			else if ($1 == "a" && NF>2)
-				print $2, $3 >> "temp.a";
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q temp.a 
-	exec touch temp.a temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	puts $f \n\"ave_queue
-	exec cat temp.a >@ $f
-	###puts $f \n"thresh
-	###puts $f 0 [[ns link $r1 $r2] get thresh]
-	###puts $f $end [[ns link $r1 $r2] get thresh]
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-TestSuite instproc emod {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-	return $errmodule
-}
-
-TestSuite instproc emod2 {} {
-        $self instvar topo_
-        $topo_ instvar lossylink1_
-        set errmodule [$lossylink1_ errormodule]
-        return $errmodule
-}
-
-TestSuite instproc setloss {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        set errmodel [$errmodule errormodels]
-        if { [llength $errmodel] > 1 } {
-                puts "droppedfin: confused by >1 err models..abort"
-                exit 1
-        }
-	return $errmodel
-}
-
-TestSuite instproc ecnsetup { tcptype {stoptime 3.0} { tcp1fid 0 } { delack 0 }} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-##
-##  Agent/TCP set maxburst_ 4
-##
-    set delay 10ms
-    $ns_ delay $node_(r1) $node_(r2) $delay
-    $ns_ delay $node_(r2) $node_(r1) $delay
-
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $redq set setbit_ true
-    $self tcpconnection $tcptype $tcp1fid $delack 1
-
-    #$self enable_tracequeue $ns_
-        
-    # trace only the bottleneck link
-    ##$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-}
-
-TestSuite instproc tcpconnection { tcptype tcpfid delack dump } {
-    $self instvar ns_ node_
-    if {$tcptype == "Reno" } {
-      set tcp [$ns_ create-connection-list TCP/FullTcp $node_(s1) \
-	  TCP/FullTcp $node_(s3) $tcpfid]
-    } else {
-      set tcp [$ns_ create-connection-list TCP/FullTcp/$tcptype $node_(s1) \
-	  TCP/FullTcp/$tcptype $node_(s3) $tcpfid]
-    }
-    set tcp1 [lindex $tcp 0]
-    set sink [lindex $tcp 1]
-    $sink listen
-    $sink set ecn_ 1
- 
-    if {$delack == 1} {
-	$sink set interval_ 100ms
-    }
-    $tcp1 set window_ 30
-    $tcp1 set ecn_ 1
-
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-    if { $dump == 1 } {
-	$self tcpDump $tcp1 5.0
-        $self enable_tracecwnd $ns_ $tcp1
-    }
-}
-
-TestSuite instproc second_tcp { tcptype starttime } {
-    $self instvar ns_ node_
-    if {$tcptype == "Tahoe"} {
-      set tcp [$ns_ create-connection TCP $node_(s1) \
-         TCPSink $node_(s3) 2]
-    } elseif {$tcptype == "Sack"} {
-      set tcp [$ns_ create-connection TCP/Sack $node_(s1) \
-          TCPSink/Sack  $node_(s3) 2]
-    } else {
-      set tcp [$ns_ create-connection TCP/$tcptype $node_(s1) \
-         TCPSink $node_(s3) 2]
-    }
-    $tcp set window_ 30
-    $tcp set ecn_ 1
-    set ftp [$tcp attach-app FTP]
-    $ns_ at $starttime "$ftp start"
-}
-
-# TestSuite instproc second_tcp { tcptype starttime } {
-#     $self tcpconnection $tcptype 2 0 0 
-# }
-
-# Drop the specified packet.
-TestSuite instproc drop_pkt { number } {
-    $self instvar ns_ lossmodel
-    set lossmodel [$self setloss]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ 10000
-}
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_ errmodel1
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-
-}
-
-TestSuite instproc drop_pkts2 pkts {
-    $self instvar ns_ errmodel2
-    set emod [$self emod2]
-    set errmodel2 [new ErrorModel/List]
-    $errmodel2 droplist $pkts
-    $emod insert $errmodel2
-    $emod bind $errmodel2 1
-}
-
-#######################################################################
-# Reno Tests #
-#######################################################################
-
-# #Test/ecn
-# 
-# # Plain ECN
-# Class Test/ecn_nodrop_reno_full -superclass TestSuite
-# Test/ecn_nodrop_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_nodrop_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_nodrop_reno_full instproc run {} {
-# 	$self instvar ns_
-# 	Agent/TCP set old_ecn_ 1
-# 	$self ecnsetup Reno 3.0 
-# 	$self drop_pkt 10000
-# 	$ns_ run
-# }
-# 
-# # Two ECNs close together
-# Class Test/ecn_twoecn_reno_full -superclass TestSuite
-# Test/ecn_twoecn_reno_full instproc init {} {
-#         $self instvar net_ test_ 
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_twoecn_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_twoecn_reno_full instproc run {} {
-# 	$self instvar ns_ lossmodel
-# 	Agent/TCP set old_ecn_ 1
-# 	$self ecnsetup Reno 3.0 
-# 	$self drop_pkt 243
-# 	$lossmodel set markecn_ true
-# 	$ns_ run
-# }
-# 
-# # ECN followed by packet loss.
-# Class Test/ecn_drop_reno_full -superclass TestSuite
-# Test/ecn_drop_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_drop_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_drop_reno_full instproc run {} {
-# 	$self instvar ns_
-# 	Agent/TCP set old_ecn_ 1
-# 	$self ecnsetup Reno 3.0
-# 	$self drop_pkt 243
-# 	$ns_ run
-# }
-# 
-# # This shows ECN preceded by packet loss,
-# Class Test/ecn_drop1_reno_full -superclass TestSuite
-# Test/ecn_drop1_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_drop1_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_drop1_reno_full instproc run {} {
-# 	$self instvar ns_
-# 	Agent/TCP set old_ecn_ 1
-# 	$self ecnsetup Reno 3.0
-# 	$self drop_pkt 237
-# 	$ns_ run
-# }
-# 
-# # Packet loss only.
-# Class Test/ecn_noecn_reno_full -superclass TestSuite
-# Test/ecn_noecn_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-# 	Queue/RED set thresh_ 1000
-# 	Queue/RED set maxthresh_ 1000
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_noecn_reno_full
-# 	Test/ecn_noecn_reno_full instproc run {} [Test/ecn_drop_reno_full info instbody run ]
-#         $self next pktTraceFile
-# }
-# 
-# # Multiple dup acks with bugFix_
-# Class Test/ecn_bursty_reno_full -superclass TestSuite
-# Test/ecn_bursty_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-# 	Queue/RED set thresh_ 100
-# 	Queue/RED set maxthresh_ 100
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_bursty_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_bursty_reno_full instproc run {} {
-# 	$self instvar ns_
-# 
-# 	$self ecnsetup Reno 3.0
-#         set lossmodel [$self setloss]
-#         $lossmodel set offset_ 245
-# 	$lossmodel set burstlen_ 15
-#         $lossmodel set period_ 10000
-# 	$ns_ run
-# }
-# 
-# # Multiple dup acks following ECN
-# Class Test/ecn_burstyEcn_reno_full -superclass TestSuite
-# Test/ecn_burstyEcn_reno_full instproc init {} {
-#         global quiet
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-# 	if {$quiet == "false"} {
-#                 Agent/TCP/FullTcp set debug_ true
-#         }
-#         set test_	ecn_burstyEcn_reno_full
-# 	Test/ecn_burstyEcn_reno_full instproc run {} [Test/ecn_bursty_reno_full info instbody run ]   
-#         $self next pktTraceFile
-# }
-# 
-# # Multiple dup acks without bugFix_
-# Class Test/ecn_noBugfix_reno_full -superclass TestSuite
-# Test/ecn_noBugfix_reno_full instproc init {} {
-#         $self instvar net_ test_
-# 	Queue/RED set thresh_ 100 
-# 	Queue/RED set maxthresh_ 100
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ false
-#         set test_	ecn_noBugfix_reno_full
-# 	Test/ecn_noBugfix_reno_full instproc run {} [Test/ecn_bursty_reno_full info instbody run ]
-# 
-#         $self next pktTraceFile
-# }
-# 
-# # ECN followed by timeout.
-# 
-# Class Test/ecn_timeout_reno_full -superclass TestSuite
-# Test/ecn_timeout_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_timeout_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_timeout_reno_full instproc run {} {
-# 	$self instvar ns_
-# 	$self ecnsetup Reno 3.0 1
-# 	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267} 
-# 
-# 	$ns_ run
-# }
-# 
-# # ECN followed by a timeout, followed by an ECN representing a
-# # new instance of congestion.
-# 
-# Class Test/ecn_timeout1_reno_full -superclass TestSuite
-# Test/ecn_timeout1_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_timeout1_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_timeout1_reno_full instproc run {} {
-# 	$self instvar ns_
-# 	Agent/TCP set old_ecn_ 1
-# 	$self ecnsetup Reno 3.0 1
-# 	$self drop_pkts {245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262} 
-# 	$self second_tcp Tahoe 1.2
-# 	$ns_ run
-# }
-# 
-# # Packet drops with a window of one packet.
-# Class Test/ecn_smallwin_reno_full -superclass TestSuite
-# Test/ecn_smallwin_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-# 	Agent/TCP set bugFix_ true
-#         set net_	net2-lossy
-#         set test_	ecn_smallwin_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_smallwin_reno_full instproc run {} {
-# 	$self instvar ns_
-# 	Agent/TCP set old_ecn_ 0
-# 	$self ecnsetup Reno 6.0 1
-# 	$self drop_pkts {4 8 9 10 11 100 115 118 119 121 122}
-# 
-# 	$ns_ run
-# }
-# 
-# #ECN with a window of one packet.
-# Class Test/ecn_smallwinEcn_reno_full -superclass TestSuite
-# Test/ecn_smallwinEcn_reno_full instproc init {} {
-#         $self instvar net_ test_ 
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-# 	Agent/TCP set rfc2988_ true
-#         set test_	ecn_smallwinEcn_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_smallwinEcn_reno_full instproc run {} {
-# 	$self instvar ns_ errmodel1
-# 	Agent/TCP set old_ecn_ 0
-# 	$self ecnsetup Reno 10.0 1
-# 	$self drop_pkts {4 8 9 10 11 100 115 118 119 121 122}
-# 	#$self drop_pkts {6 10 11 13 14 15 122 137 145 150 152 153 154 155}
-# 	$errmodel1 set markecn_ true
-# 	$ns_ run
-# }
-# 
-# # Packet drops for the second packet.
-# Class Test/ecn_secondpkt_reno_full -superclass TestSuite
-# Test/ecn_secondpkt_reno_full instproc init {} {
-#         $self instvar net_ test_
-#         Queue/RED set setbit_ true
-# 	Agent/TCP set bugFix_ true
-#         set net_	net2-lossy
-#         set test_	ecn_secondpkt_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_secondpkt_reno_full instproc run {} {
-# 	$self instvar ns_
-# 	Agent/TCP set old_ecn_ 0
-# 	$self ecnsetup Reno 2.0 1
-# 	$self drop_pkts {3 5} 
-# 
-# 	$ns_ run
-# }
-# 
-# # ECN for the second packet.
-# Class Test/ecn_secondpktEcn_reno_full -superclass TestSuite
-# Test/ecn_secondpktEcn_reno_full instproc init {} {
-#         $self instvar net_ test_ 
-#         Queue/RED set setbit_ true
-#         set net_	net2-lossy
-# 	Agent/TCP set bugFix_ true
-#         set test_	ecn_secondpktEcn_reno_full
-#         $self next pktTraceFile
-# }
-# Test/ecn_secondpktEcn_reno_full instproc run {} {
-# 	$self instvar ns_ errmodel1
-# 	Agent/TCP set old_ecn_ 0
-# 	$self ecnsetup Reno 2.0 1
-# 	#$self drop_pkts {2 4} 
-# 	$self drop_pkts {3 5}
-# 	$errmodel1 set markecn_ true
-# 	$ns_ run
-# }
-# 
-# TestSuite runTest
-
-#############################################################
-#From test-suite-ecn.tcl:
-#############################################################
-
-# Class Test/ecn -superclass TestSuite
-# Test/ecn instproc init {} {
-#     $self instvar net_ test_ guide_
-#     Queue/RED set setbit_ true
-#     set net_	net2
-#     set test_	ecn
-#     set guide_ "Two connections using ECN."
-#     $self next pktTraceFile
-# }
-# Test/ecn instproc run {} {
-#     global quiet
-#     $self instvar ns_ node_ testName_ guide_
-#     puts "Guide: $guide_"
-#     $self setTopo 
-# 
-#     Agent/TCP set old_ecn_ 1
-#     set stoptime 10.0
-#     set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-#     $redq set setbit_ true
-# 
-#     set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-#     $tcp1 set window_ 15
-#     $tcp1 set ecn_ 1
-# 
-#     set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s3) 1]
-#     $tcp2 set window_ 15
-#     $tcp2 set ecn_ 1
-#         
-#     set ftp1 [$tcp1 attach-app FTP]
-#     set ftp2 [$tcp2 attach-app FTP]
-#         
-#     $self enable_tracequeue $ns_
-#     $ns_ at 0.0 "$ftp1 start"
-#     $ns_ at 3.0 "$ftp2 start"
-#         
-#     $self tcpDump $tcp1 5.0
-#         
-#     # trace only the bottleneck link
-#     #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-#     $ns_ at $stoptime "$self cleanupAll $testName_" 
-#         
-#     $ns_ run
-# }
-
-#######################################################################
-
-
-#######################################################################
-# Tahoe Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_tahoe_full -superclass TestSuite
-Test/ecn_nodrop_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_nodrop_tahoe_full
-        set guide_	"Tahoe with ECN."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_tahoe_full instproc run {} {
-	global quiet
-	$self instvar ns_ guide_
-	puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_tahoe_full -superclass TestSuite
-Test/ecn_twoecn_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_twoecn_tahoe_full
-	set guide_ 	"Tahoe, two marked packets in one window."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ lossmodel guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0 
-	$self drop_pkt 243
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_tahoe_full -superclass TestSuite
-Test/ecn_drop_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop_tahoe_full
-        set guide_	"Tahoe, ECN followed by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0
-	$self drop_pkt 243
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-Class Test/ecn_drop1_tahoe_full -superclass TestSuite
-Test/ecn_drop1_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop1_tahoe_full
-        set guide_      "Tahoe, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0
-	$self drop_pkt 241
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-Class Test/ecn_drop2_tahoe_full -superclass TestSuite
-Test/ecn_drop2_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop2_tahoe_full
-        set guide_      "Tahoe, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop2_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0
-	$self drop_pkt 235
-	$ns_ run
-}
-
-# Packet loss only.
-Class Test/ecn_noecn_tahoe_full -superclass TestSuite
-Test/ecn_noecn_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1000
-	Queue/RED set maxthresh_ 1000
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_noecn_tahoe_full
-	Test/ecn_noecn_tahoe_full instproc run {} [Test/ecn_drop_tahoe_full info instbody run ]
-        set guide_      "Tahoe, packet loss only, no ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks with bugFix_
-Class Test/ecn_bursty_tahoe_full -superclass TestSuite
-Test/ecn_bursty_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_bursty_tahoe_full
-        set guide_      "Tahoe, multiple dup acks, with bugFix."
-        $self next pktTraceFile
-}
-Test/ecn_bursty_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Tahoe 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 245
-	$lossmodel set burstlen_ 15
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn_tahoe_full -superclass TestSuite
-Test/ecn_burstyEcn_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-	Agent/TCP set old_ecn_ 1
-        set test_	ecn_burstyEcn_tahoe_full
-	Test/ecn_burstyEcn_tahoe_full instproc run {} [Test/ecn_bursty_tahoe_full info instbody run ]   
-        set guide_      "Tahoe, multiple dup acks and ECN, with bugFix."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks without bugFix_
-Class Test/ecn_noBugfix_tahoe_full -superclass TestSuite
-Test/ecn_noBugfix_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-	Queue/RED set thresh_ 100 
-	Queue/RED set maxthresh_ 100
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ false
-        set test_	ecn_noBugfix_tahoe_full
-	Test/ecn_noBugfix_tahoe_full instproc run {} [Test/ecn_bursty_tahoe_full info instbody run ]
-
-        set guide_      "Tahoe, multiple dup acks, no bugFix."
-        $self next pktTraceFile
-}
-
-# ECN followed by timeout.
-Class Test/ecn_timeout_tahoe_full -superclass TestSuite
-Test/ecn_timeout_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout_tahoe_full
-        set guide_      "Tahoe, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 1
-	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# Only the timeout.
-Class Test/ecn_timeout2_tahoe_full -superclass TestSuite
-Test/ecn_timeout2_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout2_tahoe_full
-        set guide_      "Tahoe, drops followed by a timeout, no ECN."
-        $self next pktTraceFile
-}
-Test/ecn_timeout2_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 1
-	$self drop_pkts {241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# The timeout with the ECN in the middle of dropped packets.
-Class Test/ecn_timeout3_tahoe_full -superclass TestSuite
-Test/ecn_timeout3_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout3_tahoe_full
-        set guide_      "Tahoe, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout3_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 1
-	$self drop_pkts {241 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270} 
-
-	$ns_ run
-}
-
-# Packet drops with a window of one packet.
-Class Test/ecn_smallwin_tahoe_full -superclass TestSuite
-Test/ecn_smallwin_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set bugFix_ true
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set net_	net2-lossy
-        set test_	ecn_smallwin_tahoe_full
-        set guide_      "Tahoe, packet drops with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Tahoe 6.0 1
-	$self drop_pkts {4 8 9 10 11 100 115 118 119}
-
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_tahoe_full -superclass TestSuite
-Test/ecn_smallwinEcn_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set test_	ecn_smallwinEcn_tahoe_full
-        set guide_      "Tahoe, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Tahoe 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 151 152 153} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-# ECN, cwnd 4, packet 4 is dropped, and then packet 6 is marked. 
-# The retransmit timer expires, packet 4 is retransmitted, and then the
-#   ECN bit is set on the retransmitted packet.
-# When the ACK for packet 4 comes in, the retransmit timer must not get 
-#   cancelled.
-
-Class Test/ecn_smallwin1Ecn_tahoe_full -superclass TestSuite
-Test/ecn_smallwin1Ecn_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net3-lossy
-	Agent/TCP set bugFix_ true
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set test_	ecn_smallwin1Ecn_tahoe_full
-        set guide_      "Tahoe, ECN with small windows."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin1Ecn_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1 errmodel2
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Tahoe 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 153} 
-	$errmodel1 set markecn_ true
-	$self drop_pkts2 {6}
-	$errmodel2 set markecn_ false
-	$ns_ run
-}
-
-# ECN with a window of one packet, slow_start_restart_ false.
-Class Test/ecn_smallwin2Ecn_tahoe_full -superclass TestSuite
-Test/ecn_smallwin2Ecn_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-	Agent/TCP set slow_start_restart_ false
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set test_	ecn_smallwin2Ecn_tahoe_full
-	Test/ecn_smallwin2Ecn_tahoe_full instproc run {} [Test/ecn_smallwinEcn_tahoe_full info instbody run ]
-        set guide_      "Tahoe, ECN with a window of one, no slow_start_restart."
-        $self next pktTraceFile
-}
-
-Class Test/ecn_smallwin3Ecn_tahoe_full -superclass TestSuite
-Test/ecn_smallwin3Ecn_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net3-lossy
-	Agent/TCP set bugFix_ true
-	Agent/TCP set slow_start_restart_ false
-        set test_	ecn_smallwin3Ecn_tahoe_full
-	Test/ecn_smallwin3Ecn_tahoe_full instproc run {} [Test/ecn_smallwin1Ecn_tahoe_full info instbody run ]
-        set guide_      "Tahoe, ECN with small windows, no slow_start_restart."
-        $self next pktTraceFile
-}
-
-# Packet drops for the second packet.
-Class Test/ecn_secondpkt_tahoe_full -superclass TestSuite
-Test/ecn_secondpkt_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set bugFix_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpkt_tahoe_full
-        set guide_      "Tahoe, with the second packet dropped."
-        $self next pktTraceFile
-}
-Test/ecn_secondpkt_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Tahoe 2.0 1
-	$self drop_pkts {3 5} 
-
-	$ns_ run
-}
-
-# ECN for the second packet.
-Class Test/ecn_secondpktEcn_tahoe_full -superclass TestSuite
-Test/ecn_secondpktEcn_tahoe_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_secondpktEcn_tahoe_full
-        set guide_      "Tahoe, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_secondpktEcn_tahoe_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Tahoe 2.0 1
-	$self drop_pkts {3 5} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Delayed Ack Tahoe Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_tahoe_full_delack -superclass TestSuite
-Test/ecn_nodrop_tahoe_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_nodrop_tahoe_full_delack
-        set guide_      "Tahoe with ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_tahoe_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0 0 1
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# This one doesn't have two ECNs close together..
-Class Test/ecn_twoecn_tahoe_full_delack -superclass TestSuite
-Test/ecn_twoecn_tahoe_full_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_twoecn_tahoe_full_delack
-        set guide_      "Tahoe, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_tahoe_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0 0 1 
-	$self drop_pkt 243
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss?
-Class Test/ecn_drop_tahoe_full_delack -superclass TestSuite
-Test/ecn_drop_tahoe_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop_tahoe_full_delack
-        set guide_      "Tahoe, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop_tahoe_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0 0 1
-	$self drop_pkt 243
-	$ns_ run
-}
-
-# ECN preceded by packet loss?
-Class Test/ecn_drop1_tahoe_full_delack -superclass TestSuite
-Test/ecn_drop1_tahoe_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop1_tahoe_full_delack
-        set guide_      "Tahoe, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_tahoe_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Tahoe 3.0 0 1
-	$self drop_pkt 241
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_tahoe_full_delack -superclass TestSuite
-Test/ecn_smallwinEcn_tahoe_full_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set test_	ecn_smallwinEcn_tahoe_full_delack
-        set guide_      "Tahoe, ECN with a window of one, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_tahoe_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Tahoe 10.0 1 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 151 152 153} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Reno Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_reno_full -superclass TestSuite
-Test/ecn_nodrop_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_nodrop_reno_full
- 	set guide_      "Reno with ECN."  
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_reno_full -superclass TestSuite
-Test/ecn_twoecn_reno_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_twoecn_reno_full
-        set guide_      "Reno, two marked packets in one window."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0 
-	$self drop_pkt 243
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_reno_full -superclass TestSuite
-Test/ecn_drop_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop_reno_full
-        set guide_      "Reno, ECN followed by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0
-	$self drop_pkt 243
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-Class Test/ecn_drop1_reno_full -superclass TestSuite
-Test/ecn_drop1_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop1_reno_full
-        set guide_      "Reno, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0
-	$self drop_pkt 241
-	$ns_ run
-}
-
-# Packet loss only.
-Class Test/ecn_noecn_reno_full -superclass TestSuite
-Test/ecn_noecn_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1000
-	Queue/RED set maxthresh_ 1000
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_noecn_reno_full
-	Test/ecn_noecn_reno_full instproc run {} [Test/ecn_drop_reno_full info instbody run ]
-        set guide_      "Reno, packet loss only, no ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks with bugFix_
-Class Test/ecn_bursty_reno_full -superclass TestSuite
-Test/ecn_bursty_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_bursty_reno_full
-        set guide_      "Reno, multiple dup acks, with bugFix."
-        $self next pktTraceFile
-}
-Test/ecn_bursty_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Reno 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 245
-	$lossmodel set burstlen_ 15
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks following ECN
-# Problem: when the retransmit timer expires, the sender 
-#   should enter slow-start.
-Class Test/ecn_burstyEcn_reno_full -superclass TestSuite
-Test/ecn_burstyEcn_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_burstyEcn_reno_full
-	Test/ecn_burstyEcn_reno_full instproc run {} [Test/ecn_bursty_reno_full info instbody run ]   
-        set guide_      "Reno, multiple dup acks and ECN, with bugFix."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks without bugFix_
-Class Test/ecn_noBugfix_reno_full -superclass TestSuite
-Test/ecn_noBugfix_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-	Queue/RED set thresh_ 100 
-	Queue/RED set maxthresh_ 100
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ false
-        set test_	ecn_noBugfix_reno_full
-	Test/ecn_noBugfix_reno_full instproc run {} [Test/ecn_bursty_reno_full info instbody run ]
-        set guide_      "Reno, multiple dup acks, no bugFix."
-        $self next pktTraceFile
-}
-
-# ECN followed by timeout?.
-# Nope.
-Class Test/ecn_timeout_reno_full -superclass TestSuite
-Test/ecn_timeout_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout_reno_full
-        set guide_      "Reno, drops followed by a timeout, no ECN."
-        $self next pktTraceFile
-}
-Test/ecn_timeout_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0 1
-	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# ECN followed by a timeout, followed by an ECN representing a
-# new instance of congestion.
-Class Test/ecn_timeout1_reno_full -superclass TestSuite
-Test/ecn_timeout1_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout1_reno_full
-        set guide_      "Reno, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout1_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0 1
-	$self drop_pkts {245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265} 
-	$self second_tcp Tahoe 1.0
-	$ns_ run
-}
-
-# Packet drops with a window of one packet.
-Class Test/ecn_smallwin_reno_full -superclass TestSuite
-Test/ecn_smallwin_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set bugFix_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwin_reno_full
-        set guide_      "Reno, packet drops with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Reno 6.0 1
-	$self drop_pkts {4 8 9 10 11 100 115 118 119 121 122}
-
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_reno_full -superclass TestSuite
-Test/ecn_smallwinEcn_reno_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_smallwinEcn_reno_full
-        set guide_      "Reno, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Reno 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 151 152 153} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-Class Test/ecn_smallwin1Ecn_reno_full -superclass TestSuite
-Test/ecn_smallwin1Ecn_reno_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net3-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_smallwin1Ecn_reno_full
-        set guide_      "Reno, ECN with small windows."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin1Ecn_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1 errmodel2
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Reno 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 153} 
-	$errmodel1 set markecn_ true
-	$self drop_pkts2 {6}
-	$errmodel2 set markecn_ false
-	$ns_ run
-}
-
-# Packet drops for the second packet.
-Class Test/ecn_secondpkt_reno_full -superclass TestSuite
-Test/ecn_secondpkt_reno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set bugFix_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpkt_reno_full
-        set guide_      "Reno, with the second packet dropped."
-        $self next pktTraceFile
-}
-Test/ecn_secondpkt_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Reno 2.0 1
-	$self drop_pkts {3 5} 
-
-	$ns_ run
-}
-
-# ECN for the second packet.
-Class Test/ecn_secondpktEcn_reno_full -superclass TestSuite
-Test/ecn_secondpktEcn_reno_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_secondpktEcn_reno_full
-        set guide_      "Reno, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_secondpktEcn_reno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Reno 2.0 1
-	$self drop_pkts {3 5} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Delayed Ack Reno Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_reno_full_delack -superclass TestSuite
-Test/ecn_nodrop_reno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_nodrop_reno_full_delack
-        set guide_      "Reno, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_reno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0 0 1 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_reno_full_delack -superclass TestSuite
-Test/ecn_twoecn_reno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_twoecn_reno_full_delack
-        set guide_      "Reno, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_reno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0 0 1 
-	$self drop_pkt 243
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_reno_full_delack -superclass TestSuite
-Test/ecn_drop_reno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop_reno_full_delack
-        set guide_      "Reno, packet loss followed by ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop_reno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0 0 1
-	$self drop_pkt 243
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-# NO.
-Class Test/ecn_drop1_reno_full_delack -superclass TestSuite
-Test/ecn_drop1_reno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop1_reno_full_delack
-        set guide_      "Reno, packet loss followed by ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_reno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Reno 3.0 0 1
-	$self drop_pkt 241
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_reno_full_delack -superclass TestSuite
-Test/ecn_smallwinEcn_reno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_smallwinEcn_reno_full_delack
-        set guide_      "Reno, delayed acks, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_reno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Reno 10.0 1 1
-	$self drop_pkts {4 8 9 11 120 135 143 148 150 151 152 153} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Sack Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_sack_full -superclass TestSuite
-Test/ecn_nodrop_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_nodrop_sack_full
-        set guide_      "Sack with ECN."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Sack 3.0 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_sack_full -superclass TestSuite
-Test/ecn_twoecn_sack_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_twoecn_sack_full
-        set guide_      "Sack, two marked packets in one window."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Sack 3.0 
-	$self drop_pkt 243
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_sack_full -superclass TestSuite
-Test/ecn_drop_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-#        Queue/RED set setbit_ true
-        set net_        net2-lossy
-        Agent/TCP set bugFix_ true  
-        set test_       ecn_drop_sack_full
-        set guide_      "Sack, ECN preceded by packet loss."
-        $self next pktTraceFile
-} 
-Test/ecn_drop_sack_full instproc run {} {
-        global quiet
-        $self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-        $self ecnsetup Sack 3.0
-        $self drop_pkt 243
-        $ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop1_sack_full -superclass TestSuite
-Test/ecn_drop1_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-#        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop1_sack_full
-        set guide_      "Sack, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Sack 3.0
-	$self drop_pkt 241
-	$ns_ run
-}
-
-# Packet loss only.
-Class Test/ecn_noecn_sack_full -superclass TestSuite
-Test/ecn_noecn_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1000
-	Queue/RED set maxthresh_ 1000
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_noecn_sack_full
-	Test/ecn_noecn_sack_full instproc run {} [Test/ecn_drop_sack_full info instbody run ]
-        set guide_      "Sack, packet loss only, no ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks with bugFix_
-Class Test/ecn_bursty_sack_full -superclass TestSuite
-Test/ecn_bursty_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_bursty_sack_full
-        set guide_      "Sack, multiple dup acks, with bugFix."
-        $self next pktTraceFile
-}
-Test/ecn_bursty_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Sack 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 245
-	$lossmodel set burstlen_ 15
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn_sack_full -superclass TestSuite
-Test/ecn_burstyEcn_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-	Agent/TCP set old_ecn_ 1
-        set test_	ecn_burstyEcn_sack_full
-	Test/ecn_burstyEcn_sack_full instproc run {} [Test/ecn_bursty_sack_full info instbody run ]   
-        set guide_      "Sack, multiple dup acks and ECN, with bugFix."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn1_sack_full -superclass TestSuite
-Test/ecn_burstyEcn1_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_burstyEcn1_sack_full
-        set guide_      "Sack, multiple dup acks and ECN, with bugFix."
-        $self next pktTraceFile
-}
-Test/ecn_burstyEcn1_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Sack 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 245
-	$lossmodel set burstlen_ 17
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks without bugFix_
-Class Test/ecn_noBugfix_sack_full -superclass TestSuite
-Test/ecn_noBugfix_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-	Queue/RED set thresh_ 100 
-	Queue/RED set maxthresh_ 100
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ false
-        set test_	ecn_noBugfix_sack_full
-	Test/ecn_noBugfix_sack_full instproc run {} [Test/ecn_bursty_sack_full info instbody run ]
-
-        set guide_      "Sack, multiple dup acks, no bugFix."
-        $self next pktTraceFile
-}
-
-# ECN followed by timeout.
-Class Test/ecn_timeout_sack_full -superclass TestSuite
-Test/ecn_timeout_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout_sack_full
-        set guide_      "Sack, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack 3.0 1
-	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# ECN followed by a timeout, followed by an ECN representing a
-# new instance of congestion.
-Class Test/ecn_timeout1_sack_full -superclass TestSuite
-Test/ecn_timeout1_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout1_sack_full
-        set guide_      "Sack, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout1_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Sack 3.0 1
-	$self drop_pkts {245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265} 
-	$self second_tcp Tahoe 1.0
-	$ns_ run
-}
-
-# ECN and packet drops.
-Class Test/ecn_fourdrops_sack_full -superclass TestSuite
-Test/ecn_fourdrops_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_fourdrops_sack_full
-        set guide_      "Reno, ECN with four packet drops."
-        $self next pktTraceFile
-}
-Test/ecn_fourdrops_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack 3.0 1
-	$self drop_pkts {242 244 267 268} 
-
-	$ns_ run
-}
-
-# Packet drops with a window of one packet.
-Class Test/ecn_smallwin_sack_full -superclass TestSuite
-Test/ecn_smallwin_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set bugFix_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwin_sack_full
-        set guide_      "Sack, packet drops with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Sack 6.0 1
-	$self drop_pkts {4 8 9 10 11 100 115 121 124 126 127 128}
-
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_sack_full -superclass TestSuite
-Test/ecn_smallwinEcn_sack_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_smallwinEcn_sack_full
-        set guide_      "Sack, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Sack 10.0 1
-	$self drop_pkts {4 7 9 10 11 12 13 14 120 135 143 148 150 151 152} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-Class Test/ecn_smallwin1Ecn_sack_full -superclass TestSuite
-Test/ecn_smallwin1Ecn_sack_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net3-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_smallwin1Ecn_sack_full
-        set guide_      "Sack, ECN with small windows."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin1Ecn_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1 errmodel2
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Sack 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 153} 
-	$errmodel1 set markecn_ true
-	$self drop_pkts2 {6}
-	$errmodel2 set markecn_ false
-	$ns_ run
-}
-
-# Packet drops for the second packet.
-Class Test/ecn_secondpkt_sack_full -superclass TestSuite
-Test/ecn_secondpkt_sack_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set bugFix_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpkt_sack_full
-        set guide_      "Sack, with the second packet dropped."
-        $self next pktTraceFile
-}
-Test/ecn_secondpkt_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Sack 2.0 1
-	$self drop_pkts {3 5} 
-
-	$ns_ run
-}
-
-# ECN for the second packet.
-Class Test/ecn_secondpktEcn_sack_full -superclass TestSuite
-Test/ecn_secondpktEcn_sack_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_secondpktEcn_sack_full
-        set guide_      "Sack, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_secondpktEcn_sack_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Sack 2.0 1
-	$self drop_pkts {3 5} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Delayed Ack Sack Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_sack_full_delack -superclass TestSuite
-Test/ecn_nodrop_sack_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_nodrop_sack_full_delack
-        set guide_      "Sack, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_sack_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Sack 3.0 0 1 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_sack_full_delack -superclass TestSuite
-Test/ecn_twoecn_sack_full_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_twoecn_sack_full_delack
-        set guide_      "Sack, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_sack_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Sack 3.0 0 1 
-	$self drop_pkt 243
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_sack_full_delack -superclass TestSuite
-Test/ecn_drop_sack_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-#        Queue/RED set setbit_ true
-        set net_        net2-lossy
-        Agent/TCP set bugFix_ true  
-        set test_       ecn_drop_sack_full_delack
-        set guide_      "Sack, packet loss followed by ECN, delayed acks."
-        $self next pktTraceFile
-} 
-Test/ecn_drop_sack_full_delack instproc run {} {
-        global quiet
-        $self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-        $self ecnsetup Sack 3.0 0 1
-        $self drop_pkt 243
-        $ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop1_sack_full_delack -superclass TestSuite
-Test/ecn_drop1_sack_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-#        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop1_sack_full_delack
-        set guide_      "Sack, packet loss followed by ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_sack_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Sack 3.0 0 1
-	$self drop_pkt 241
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_sack_full_delack -superclass TestSuite
-Test/ecn_smallwinEcn_sack_full_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_smallwinEcn_sack_full_delack
-        set guide_      "Sack, delayed ack, ECN with small windows."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_sack_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Sack 10.0 1 1
-	$self drop_pkts {4 7 9 11 12 120 135 143 148 150 151 152} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Newreno Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_newreno_full -superclass TestSuite
-Test/ecn_nodrop_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_nodrop_newreno_full
-        set guide_      "NewReno with ECN."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_newreno_full -superclass TestSuite
-Test/ecn_twoecn_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_twoecn_newreno_full
-        set guide_      "NewReno, two marked packets in one window."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0 
-	$self drop_pkt 243
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_newreno_full -superclass TestSuite
-Test/ecn_drop_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop_newreno_full
-        set guide_      "NewReno, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0
-	$self drop_pkt 243
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-Class Test/ecn_drop1_newreno_full -superclass TestSuite
-Test/ecn_drop1_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop1_newreno_full
-        set guide_      "NewReno, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0
-	$self drop_pkt 241
-	$ns_ run
-}
-
-# Packet loss only.
-Class Test/ecn_noecn_newreno_full -superclass TestSuite
-Test/ecn_noecn_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1000
-	Queue/RED set maxthresh_ 1000
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_noecn_newreno_full
-	Test/ecn_noecn_newreno_full instproc run {} [Test/ecn_drop_newreno_full info instbody run ]
-        set guide_      "NewReno, packet loss only, no ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks with bugFix_
-Class Test/ecn_bursty_newreno_full -superclass TestSuite
-Test/ecn_bursty_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_bursty_newreno_full
-        set guide_      "NewReno, multiple dup acks, with bugFix."
-        $self next pktTraceFile
-}
-Test/ecn_bursty_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Newreno 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 245
-	$lossmodel set burstlen_ 15
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn_newreno_full -superclass TestSuite
-Test/ecn_burstyEcn_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-	Agent/TCP set old_ecn_ 1
-        set test_	ecn_burstyEcn_newreno_full
-	Test/ecn_burstyEcn_newreno_full instproc run {} [Test/ecn_bursty_newreno_full info instbody run ]   
-        set guide_      "NewReno, multiple dup acks and ECN, with bugFix."
-        $self next pktTraceFile
-}
-
-# ECN followed by timeout.
-# Nope.
-Class Test/ecn_timeout_newreno_full -superclass TestSuite
-Test/ecn_timeout_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout_newreno_full
-        set guide_      "NewReno, multiple dup acks"
-        $self next pktTraceFile
-}
-Test/ecn_timeout_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0 1
-	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# ECN followed by a timeout, followed by an ECN representing a
-# new instance of congestion.
-Class Test/ecn_timeout1_newreno_full -superclass TestSuite
-Test/ecn_timeout1_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_timeout1_newreno_full
-        set guide_      "NewReno, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout1_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0 1
-	Agent/TCP set old_ecn_ 1
-	$self drop_pkts {245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265} 
-	$self second_tcp Tahoe 1.0
-	$ns_ run
-}
-
-# Packet drops with a window of one packet.
-Class Test/ecn_smallwin_newreno_full -superclass TestSuite
-Test/ecn_smallwin_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set bugFix_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwin_newreno_full
-        set guide_      "NewReno, packet drops with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Newreno 6.0 1
-	$self drop_pkts {4 8 9 10 11 100 115 121 124 126 127 128}
-
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_newreno_full -superclass TestSuite
-Test/ecn_smallwinEcn_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_smallwinEcn_newreno_full
-        set guide_      "NewReno, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Newreno 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 151 152 153} 
-
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-# Packet drops for the second packet.
-Class Test/ecn_secondpkt_newreno_full -superclass TestSuite
-Test/ecn_secondpkt_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set bugFix_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpkt_newreno_full
-        set guide_      "NewReno, with the second packet dropped."
-        $self next pktTraceFile
-}
-Test/ecn_secondpkt_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Newreno 2.0 1
-	$self drop_pkts {3 5} 
-
-	$ns_ run
-}
-
-# ECN for the second packet.
-Class Test/ecn_secondpktEcn_newreno_full -superclass TestSuite
-Test/ecn_secondpktEcn_newreno_full instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_secondpktEcn_newreno_full
-        set guide_      "NewReno, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_secondpktEcn_newreno_full instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Newreno 2.0 1
-	$self drop_pkts {3 5} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Delayed Ack Newreno Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_newreno_full_delack -superclass TestSuite
-Test/ecn_nodrop_newreno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_nodrop_newreno_full_delack
-        set guide_      "NewReno, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_newreno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0 0 1 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-# Nope.
-Class Test/ecn_twoecn_newreno_full_delack -superclass TestSuite
-Test/ecn_twoecn_newreno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_twoecn_newreno_full_delack
-        set guide_	"NewReno, delayed acks."
-
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_newreno_full_delack instproc run {} {
-        global quiet guide_
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0 0 1 
-	$self drop_pkt 243
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_newreno_full_delack -superclass TestSuite
-Test/ecn_drop_newreno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop_newreno_full_delack
-        set guide_  "ECN followed by packet loss."
-
-        $self next pktTraceFile
-}
-Test/ecn_drop_newreno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0 0 1
-	$self drop_pkt 243
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-# NO.
-Class Test/ecn_drop1_newreno_full_delack -superclass TestSuite
-Test/ecn_drop1_newreno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_drop1_newreno_full_delack
-	set guide_ "ECN preceded by packet loss?"
-        $self next pktTraceFile
-}
-Test/ecn_drop1_newreno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 1
-	$self ecnsetup Newreno 3.0 0 1
-	$self drop_pkt 241
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_newreno_full_delack -superclass TestSuite
-Test/ecn_smallwinEcn_newreno_full_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	ecn_smallwinEcn_newreno_full_delack
-	set guide_ "ECN with a window of one packet."
-
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_newreno_full_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	Agent/TCP set old_ecn_ 0
-	$self ecnsetup Newreno 10.0 1 1
-	$self drop_pkts {4 8 9 11 120 135 143 148 150 151 152 153} 
-
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#################################################################
-
-#################################################################
-# 
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 20ms bottleneck.
-# Queue-limit on bottleneck is 25 packets.
-#    
-Class Topology/net6 -superclass Topology
-Topology/net6 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 20ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-} 
-
-# This test shows two TCPs when one is ECN-capable and the other 
-# is not.
-
-# Class Test/ecn1 -superclass TestSuite
-# Test/ecn1 instproc init {} {
-#         $self instvar net_ test_ guide_
-#         set net_        net6
-#         set test_       ecn1_(one_with_ecn1,_one_without)
-# 	set guide_ 	"Two TCPs, one with ECN and one without."
-#         $self next pktTraceFile
-# }
-# Test/ecn1 instproc run {} {
-#         global quiet
-#         $self instvar ns_ guide_ node_ guide_ testName_
-#         puts "Guide: $guide_"
-#         $self setTopo
-# 	Agent/TCP set old_ecn_ 1
-# 
-#         # Set up TCP connection 
-#         set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-#         $tcp1 set window_ 30
-#         $tcp1 set ecn_ 1
-#         set ftp1 [$tcp1 attach-app FTP]
-#         $ns_ at 0.0 "$ftp1 start"
-# 
-#         # Set up TCP connection
-#         set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-#         $tcp2 set window_ 20
-#         $tcp2 set ecn_ 0
-#         set ftp2 [$tcp2 attach-app FTP]
-#         $ns_ at 3.0 "$ftp2 start"
-# 
-#         $self tcpDump $tcp1 5.0
-#         $self tcpDump $tcp2 5.0 
-# 
-#         #$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-# 	$ns_ at 10.0 "$self cleanupAll $testName_" 
-# 
-#         $ns_ run
-# }
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-ecn.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-ecn.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-ecn.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-ecn.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,2104 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-ecn.tcl,v 1.46 2008/12/21 23:33:05 sallyfloyd Exp $
-#
-# To run all tests: test-all-ecn
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
-catch "cd $dir"
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Topology instproc makenodes ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-    set node_(r3) [$ns node]
-}
-
-Topology instproc createlinks ns {  
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}
-
-Topology instproc createlinks3 ns {  
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(r2) $node_(r3) 100Mb 0ms RED
-    $ns queue-limit $node_(r2) $node_(r3) 100
-    $ns queue-limit $node_(r3) $node_(r2) 100
-    $ns duplex-link $node_(s3) $node_(r3) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r3) 10Mb 5ms DropTail
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r3) queuePos 0
-    $ns duplex-link-op $node_(r3) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r3) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r3) orient left-up
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
-}
-
-Class Topology/net2-lossy -superclass Topology
-Topology/net2-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
- 
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-} 
-
-Class Topology/net3-lossy -superclass Topology
-Topology/net3-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks3 $ns
- 
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-
-    $self instvar lossylink1_
-    set lossylink1_ [$ns link $node_(r2) $node_(r3)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink1_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-} 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_ cwnd_chan_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	   $PERL ../../bin/raw2xg -a -e -s 0.01 -m 90 -t $file > temp.rands
-	exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	  $PERL ../../bin/raw2xg -a -e -s 0.01 -m 90 -t $file > temp1.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-# The line below plots both data and ack packets.
-#        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-#                     temp1.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	if { [info exists cwnd_chan_] && $quiet == "false" } {
-		$self plot_cwnd 
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set redq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$redq trace curq_
-	$redq trace ave_
-	$redq attach $tchan_
-}
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for RED gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-			else if ($1 == "a" && NF>2)
-				print $2, $3 >> "temp.a";
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q temp.a 
-	exec touch temp.a temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	puts $f \n\"ave_queue
-	exec cat temp.a >@ $f
-	###puts $f \n"thresh
-	###puts $f 0 [[ns link $r1 $r2] get thresh]
-	###puts $f $end [[ns link $r1 $r2] get thresh]
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-TestSuite instproc emod {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_ 
-        set errmodule [$lossylink_ errormodule]
-	return $errmodule
-}
-
-TestSuite instproc emod2 {} {
-	$self instvar topo_
-	$topo_ instvar lossylink1_ 
-        set errmodule [$lossylink1_ errormodule]
-	return $errmodule
-}
-
-TestSuite instproc setloss {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        set errmodel [$errmodule errormodels]
-        if { [llength $errmodel] > 1 } {
-                puts "droppedfin: confused by >1 err models..abort"
-                exit 1
-        }
-	return $errmodel
-}
-
-Class Test/ecn -superclass TestSuite
-Test/ecn instproc init {} {
-    $self instvar net_ test_ guide_
-    Queue/RED set setbit_ true
-    set net_	net2
-    set test_	ecn
-    set guide_ "Two connections using ECN."
-    $self next pktTraceFile
-}
-Test/ecn instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_
-    puts "Guide: $guide_"
-    $self setTopo 
-
-    set stoptime 10.0
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $redq set setbit_ true
-
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 15
-    $tcp1 set ecn_ 1
-
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s3) 1]
-    $tcp2 set window_ 15
-    $tcp2 set ecn_ 1
-        
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-        
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-        
-    $self tcpDump $tcp1 5.0
-        
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_" 
-        
-    $ns_ run
-}
-
-#######################################################################
-
-TestSuite instproc ecnsetup { tcptype {stoptime 3.0} { tcp1fid 0 } { delack 0 }} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-##
-##  Agent/TCP set maxburst_ 4
-##
-    set delay 10ms
-    $ns_ delay $node_(r1) $node_(r2) $delay
-    $ns_ delay $node_(r2) $node_(r1) $delay
-
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $redq set setbit_ true
-
-    if {$tcptype == "Tahoe" && $delack == 0} {
-      set tcp1 [$ns_ create-connection TCP $node_(s1) \
-	  TCPSink $node_(s3) $tcp1fid]
-    } elseif {$tcptype == "Sack1" && $delack == 0} {
-      set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-	  TCPSink/Sack1  $node_(s3) $tcp1fid]
-    } elseif {$delack == 0} {
-      set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-	  TCPSink $node_(s3) $tcp1fid]
-    } elseif {$tcptype == "Tahoe" && $delack == 1} {
-      set tcp1 [$ns_ create-connection TCP $node_(s1) \
-	  TCPSink/DelAck $node_(s3) $tcp1fid]
-    } elseif {$tcptype == "Sack1" && $delack == 1} {
-      set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-	  TCPSink/Sack1/DelAck  $node_(s3) $tcp1fid]
-    } else {
-      set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-	  TCPSink/DelAck $node_(s3) $tcp1fid]
-    } 
-    $tcp1 set window_ 30
-    $tcp1 set ecn_ 1
-    set ftp1 [$tcp1 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp1
-        
-    #$self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-        
-    $self tcpDump $tcp1 5.0
-        
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_" 
-}
-
-TestSuite instproc second_tcp { tcptype starttime } {
-    $self instvar ns_ node_ 
-    if {$tcptype == "Tahoe"} {
-      set tcp [$ns_ create-connection TCP $node_(s1) \
-	 TCPSink $node_(s3) 2]    
-    } elseif {$tcptype == "Sack1"} { 
-      set tcp [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          TCPSink/Sack1  $node_(s3) 2]
-    } else {
-      set tcp [$ns_ create-connection TCP/$tcptype $node_(s1) \
-	 TCPSink $node_(s3) 2]
-    }
-    $tcp set window_ 30
-    $tcp set ecn_ 1
-    set ftp [$tcp attach-app FTP]
-    $ns_ at $starttime "$ftp start"
-}
-
-# Drop the specified packet.
-TestSuite instproc drop_pkt { number } {
-    $self instvar ns_ lossmodel
-    set lossmodel [$self setloss]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ 10000
-}
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_ errmodel1
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-
-}
-
-TestSuite instproc drop_pkts2 pkts {
-    $self instvar ns_ errmodel2
-    set emod [$self emod2]
-    set errmodel2 [new ErrorModel/List]
-    $errmodel2 droplist $pkts
-    $emod insert $errmodel2
-    $emod bind $errmodel2 1
-}
-
-#######################################################################
-# Tahoe Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_tahoe -superclass TestSuite
-Test/ecn_nodrop_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_nodrop_tahoe
-        set guide_	"Tahoe with ECN."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_tahoe instproc run {} {
-	global quiet
-	$self instvar ns_ guide_
-	puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_tahoe -superclass TestSuite
-Test/ecn_twoecn_tahoe instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_twoecn_tahoe
-	set guide_ 	"Tahoe, two marked packets in one window."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ lossmodel guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 
-	$self drop_pkt 195
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_tahoe -superclass TestSuite
-Test/ecn_drop_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop_tahoe
-        set guide_	"Tahoe, ECN followed by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0
-	$self drop_pkt 195
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-Class Test/ecn_drop1_tahoe -superclass TestSuite
-Test/ecn_drop1_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop1_tahoe
-        set guide_      "Tahoe, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0
-	$self drop_pkt 185
-	$ns_ run
-}
-
-# Packet loss only.
-Class Test/ecn_noecn_tahoe -superclass TestSuite
-Test/ecn_noecn_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1000
-	Queue/RED set maxthresh_ 1000
-        set net_	net2-lossy
-        set test_	ecn_noecn_tahoe
-	Test/ecn_noecn_tahoe instproc run {} [Test/ecn_drop_tahoe info instbody run ]
-        set guide_      "Tahoe, packet loss only, no ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks 
-Class Test/ecn_bursty_tahoe -superclass TestSuite
-Test/ecn_bursty_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-        set test_	ecn_bursty_tahoe
-        set guide_      "Tahoe, multiple dup acks."
-        $self next pktTraceFile
-}
-Test/ecn_bursty_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Tahoe 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 189
-	$lossmodel set burstlen_ 15
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn_tahoe -superclass TestSuite
-Test/ecn_burstyEcn_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_burstyEcn_tahoe
-	Test/ecn_burstyEcn_tahoe instproc run {} [Test/ecn_bursty_tahoe info instbody run ]   
-        set guide_      "Tahoe, multiple dup acks and ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks without bugFix_
-Class Test/ecn_noBugfix_tahoe -superclass TestSuite
-Test/ecn_noBugfix_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-	Queue/RED set thresh_ 100 
-	Queue/RED set maxthresh_ 100
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ false
-        set test_	ecn_noBugfix_tahoe
-	Test/ecn_noBugfix_tahoe instproc run {} [Test/ecn_bursty_tahoe info instbody run ]
-
-        set guide_      "Tahoe, multiple dup acks, no bugFix."
-        $self next pktTraceFile
-}
-
-# ECN followed by timeout.
-Class Test/ecn_timeout_tahoe -superclass TestSuite
-Test/ecn_timeout_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_timeout_tahoe
-        set guide_      "Tahoe, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 1
-	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# Only the timeout.
-Class Test/ecn_timeout2_tahoe -superclass TestSuite
-Test/ecn_timeout2_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-        set test_	ecn_timeout2_tahoe
-        set guide_      "Tahoe, drops followed by a timeout, no ECN."
-        $self next pktTraceFile
-}
-Test/ecn_timeout2_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 1
-	$self drop_pkts {241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272} 
-
-	$ns_ run
-}
-
-# The timeout with the ECN in the middle of dropped packets.
-Class Test/ecn_timeout3_tahoe -superclass TestSuite
-Test/ecn_timeout3_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_timeout3_tahoe
-        set guide_      "Tahoe, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout3_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 1
-	$self drop_pkts {241 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270} 
-
-	$ns_ run
-}
-
-# Packet drops with a window of one packet.
-Class Test/ecn_smallwin_tahoe -superclass TestSuite
-Test/ecn_smallwin_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set net_	net2-lossy
-        set test_	ecn_smallwin_tahoe
-        set guide_      "Tahoe, packet drops with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 6.0 1
-	$self drop_pkts {4 8 9 10 11 12 13 100 115 118 119}
-
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_tahoe -superclass TestSuite
-Test/ecn_smallwinEcn_tahoe instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set test_	ecn_smallwinEcn_tahoe
-        set guide_      "Tahoe, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 14 15 120 135 143 148 150 151 152 153} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-# ECN, cwnd 4, packet 4 is dropped, and then packet 6 is marked. 
-# The retransmit timer expires, packet 4 is retransmitted, and then the
-#   ECN bit is set on the retransmitted packet.
-# When the ACK for packet 4 comes in, the retransmit timer must not get 
-#   cancelled.
-
-Class Test/ecn_smallwin1Ecn_tahoe -superclass TestSuite
-Test/ecn_smallwin1Ecn_tahoe instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net3-lossy
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set test_	ecn_smallwin1Ecn_tahoe
-        set guide_      "Tahoe, ECN with small windows."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin1Ecn_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1 errmodel2
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 153} 
-	$errmodel1 set markecn_ true
-	$self drop_pkts2 {6}
-	$errmodel2 set markecn_ false
-	$ns_ run
-}
-
-# ECN with a window of one packet, slow_start_restart_ false.
-Class Test/ecn_smallwin2Ecn_tahoe -superclass TestSuite
-Test/ecn_smallwin2Ecn_tahoe instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set slow_start_restart_ false
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set test_	ecn_smallwin2Ecn_tahoe
-	Test/ecn_smallwin2Ecn_tahoe instproc run {} [Test/ecn_smallwinEcn_tahoe info instbody run ]
-        set guide_      "Tahoe, ECN with a window of one, no slow_start_restart."
-        $self next pktTraceFile
-}
-
-Class Test/ecn_smallwin3Ecn_tahoe -superclass TestSuite
-Test/ecn_smallwin3Ecn_tahoe instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net3-lossy
-	Agent/TCP set slow_start_restart_ false
-        set test_	ecn_smallwin3Ecn_tahoe
-	Test/ecn_smallwin3Ecn_tahoe instproc run {} [Test/ecn_smallwin1Ecn_tahoe info instbody run ]
-        set guide_      "Tahoe, ECN with small windows, no slow_start_restart."
-        $self next pktTraceFile
-}
-
-# Packet drops for the second packet.
-Class Test/ecn_secondpkt_tahoe -superclass TestSuite
-Test/ecn_secondpkt_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpkt_tahoe
-        set guide_      "Tahoe, with the second packet dropped."
-        $self next pktTraceFile
-}
-Test/ecn_secondpkt_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 2.0 1
-	$self drop_pkts {1 3} 
-
-	$ns_ run
-}
-
-# ECN for the second packet.
-Class Test/ecn_secondpktEcn_tahoe -superclass TestSuite
-Test/ecn_secondpktEcn_tahoe instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpktEcn_tahoe
-        set guide_      "Tahoe, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_secondpktEcn_tahoe instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 2.0 1
-	$self drop_pkts {1 3} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Delayed Ack Tahoe Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_tahoe_delack -superclass TestSuite
-Test/ecn_nodrop_tahoe_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_nodrop_tahoe_delack
-        set guide_      "Tahoe with ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_tahoe_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 0 1
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# This one doesn't have two ECNs close together..
-Class Test/ecn_twoecn_tahoe_delack -superclass TestSuite
-Test/ecn_twoecn_tahoe_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_twoecn_tahoe_delack
-        set guide_      "Tahoe, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_tahoe_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 0 1 
-	$self drop_pkt 195
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss?
-Class Test/ecn_drop_tahoe_delack -superclass TestSuite
-Test/ecn_drop_tahoe_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop_tahoe_delack
-        set guide_      "Tahoe, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop_tahoe_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 0 1
-	$self drop_pkt 195
-	$ns_ run
-}
-
-# ECN preceded by packet loss?
-Class Test/ecn_drop1_tahoe_delack -superclass TestSuite
-Test/ecn_drop1_tahoe_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop1_tahoe_delack
-        set guide_      "Tahoe, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_tahoe_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 3.0 0 1
-	$self drop_pkt 185
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_tahoe_delack -superclass TestSuite
-Test/ecn_smallwinEcn_tahoe_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        set test_	ecn_smallwinEcn_tahoe_delack
-        set guide_      "Tahoe, ECN with a window of one, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_tahoe_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Tahoe 10.0 1 1
-	$self drop_pkts {4 8 9 11 12 13 14 15 120 135 143 148 150 151 152 153} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Reno Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_reno -superclass TestSuite
-Test/ecn_nodrop_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_nodrop_reno
- 	set guide_      "Reno with ECN."  
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_reno -superclass TestSuite
-Test/ecn_twoecn_reno instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_twoecn_reno
-        set guide_      "Reno, two marked packets in one window."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0 
-	$self drop_pkt 195
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_reno -superclass TestSuite
-Test/ecn_drop_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop_reno
-        set guide_      "Reno, ECN followed by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0
-	$self drop_pkt 195
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-Class Test/ecn_drop1_reno -superclass TestSuite
-Test/ecn_drop1_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop1_reno
-        set guide_      "Reno, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0
-	$self drop_pkt 185
-	$ns_ run
-}
-
-# Packet loss only.
-Class Test/ecn_noecn_reno -superclass TestSuite
-Test/ecn_noecn_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1000
-	Queue/RED set maxthresh_ 1000
-        set net_	net2-lossy
-        set test_	ecn_noecn_reno
-	Test/ecn_noecn_reno instproc run {} [Test/ecn_drop_reno info instbody run ]
-        set guide_      "Reno, packet loss only, no ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks 
-Class Test/ecn_bursty_reno -superclass TestSuite
-Test/ecn_bursty_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-        set test_	ecn_bursty_reno
-        set guide_      "Reno, multiple dup acks."
-        $self next pktTraceFile
-}
-Test/ecn_bursty_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Reno 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 189
-	$lossmodel set burstlen_ 15
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn_reno -superclass TestSuite
-Test/ecn_burstyEcn_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_burstyEcn_reno
-	Test/ecn_burstyEcn_reno instproc run {} [Test/ecn_bursty_reno info instbody run ]   
-        set guide_      "Reno, multiple dup acks and ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks without bugFix_
-Class Test/ecn_noBugfix_reno -superclass TestSuite
-Test/ecn_noBugfix_reno instproc init {} {
-        $self instvar net_ test_ guide_
-	Queue/RED set thresh_ 100 
-	Queue/RED set maxthresh_ 100
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ false
-        set test_	ecn_noBugfix_reno
-	Test/ecn_noBugfix_reno instproc run {} [Test/ecn_bursty_reno info instbody run ]
-        set guide_      "Reno, multiple dup acks, no bugFix."
-        $self next pktTraceFile
-}
-
-# Drops and a timeout.
-Class Test/ecn_timeout_reno -superclass TestSuite
-Test/ecn_timeout_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ false
-        set net_	net2-lossy
-        set test_	ecn_timeout_reno
-        set guide_      "Reno, ECN and drops followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0 1
-	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# ECN followed by a timeout, followed by an ECN representing a
-# new instance of congestion.
-Class Test/ecn_timeout1_reno -superclass TestSuite
-Test/ecn_timeout1_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_timeout1_reno
-        set guide_      "Reno, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout1_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0 1
-	$self drop_pkts {245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265} 
-	$self second_tcp Tahoe 1.0
-	$ns_ run
-}
-
-# Packet drops with a window of one packet.
-Class Test/ecn_smallwin_reno -superclass TestSuite
-Test/ecn_smallwin_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwin_reno
-        set guide_      "Reno, packet drops with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 6.0 1
-	$self drop_pkts {4 8 9 10 11 12 13 100 115 118 119 121 122}
-
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_reno -superclass TestSuite
-Test/ecn_smallwinEcn_reno instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwinEcn_reno
-        set guide_      "Reno, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 14 15 120 135 143 148 150 151 152 153} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-Class Test/ecn_smallwin1Ecn_reno -superclass TestSuite
-Test/ecn_smallwin1Ecn_reno instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net3-lossy
-        set test_	ecn_smallwin1Ecn_reno
-        set guide_      "Reno, ECN with small windows."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin1Ecn_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1 errmodel2
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 153} 
-	$errmodel1 set markecn_ true
-	$self drop_pkts2 {6}
-	$errmodel2 set markecn_ false
-	$ns_ run
-}
-
-# Packet drops for the second packet.
-Class Test/ecn_secondpkt_reno -superclass TestSuite
-Test/ecn_secondpkt_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpkt_reno
-        set guide_      "Reno, with the second packet dropped."
-        $self next pktTraceFile
-}
-Test/ecn_secondpkt_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 2.0 1
-	$self drop_pkts {1 3} 
-
-	$ns_ run
-}
-
-# ECN for the second packet.
-Class Test/ecn_secondpktEcn_reno -superclass TestSuite
-Test/ecn_secondpktEcn_reno instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpktEcn_reno
-        set guide_      "Reno, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_secondpktEcn_reno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 2.0 1
-	$self drop_pkts {1 3} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Delayed Ack Reno Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_reno_delack -superclass TestSuite
-Test/ecn_nodrop_reno_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_nodrop_reno_delack
-        set guide_      "Reno, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_reno_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0 0 1 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_reno_delack -superclass TestSuite
-Test/ecn_twoecn_reno_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_twoecn_reno_delack
-        set guide_      "Reno, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_reno_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0 0 1 
-	$self drop_pkt 195
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_reno_delack -superclass TestSuite
-Test/ecn_drop_reno_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop_reno_delack
-        set guide_      "Reno, packet loss followed by ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop_reno_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 3.0 0 1
-	$self drop_pkt 195
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_reno_delack -superclass TestSuite
-Test/ecn_smallwinEcn_reno_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwinEcn_reno_delack
-        set guide_      "Reno, delayed acks, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_reno_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Reno 10.0 1 1
-	$self drop_pkts {4 8 9 11 12 13 14 15 120 135 143 148 150 151 152 153} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Sack1 Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_sack -superclass TestSuite
-Test/ecn_nodrop_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_nodrop_sack
-        set guide_      "Sack with ECN."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_sack -superclass TestSuite
-Test/ecn_twoecn_sack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_twoecn_sack
-        set guide_      "Sack, two marked packets in one window."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0 
-	$self drop_pkt 195
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-# Do one with ECN followed by packet loss?
-Class Test/ecn_drop_sack -superclass TestSuite
-Test/ecn_drop_sack instproc init {} {
-        $self instvar net_ test_ guide_
-#        Queue/RED set setbit_ true
-        set net_        net2-lossy
-        set test_       ecn_drop_sack
-        set guide_      "Sack, ECN preceded by packet loss."
-        $self next pktTraceFile
-} 
-Test/ecn_drop_sack instproc run {} {
-        global quiet
-        $self instvar ns_ guide_
-        puts "Guide: $guide_"
-        $self ecnsetup Sack1 3.0
-        $self drop_pkt 195
-        $ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop1_sack -superclass TestSuite
-Test/ecn_drop1_sack instproc init {} {
-        $self instvar net_ test_ guide_
-#        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop1_sack
-        set guide_      "Sack, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0
-	$self drop_pkt 185
-	$ns_ run
-}
-
-# Packet loss only.
-Class Test/ecn_noecn_sack -superclass TestSuite
-Test/ecn_noecn_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1000
-	Queue/RED set maxthresh_ 1000
-        set net_	net2-lossy
-        set test_	ecn_noecn_sack
-	Test/ecn_noecn_sack instproc run {} [Test/ecn_drop_sack info instbody run ]
-        set guide_      "Sack, packet loss only, no ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks 
-Class Test/ecn_bursty_sack -superclass TestSuite
-Test/ecn_bursty_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-        set test_	ecn_bursty_sack
-        set guide_      "Sack, multiple dup acks."
-        $self next pktTraceFile
-}
-Test/ecn_bursty_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Sack1 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 189
-	$lossmodel set burstlen_ 15
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn_sack -superclass TestSuite
-Test/ecn_burstyEcn_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_burstyEcn_sack
-	Test/ecn_burstyEcn_sack instproc run {} [Test/ecn_bursty_sack info instbody run ]   
-        set guide_      "Sack, multiple dup acks and ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn1_sack -superclass TestSuite
-Test/ecn_burstyEcn1_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_burstyEcn1_sack
-        set guide_      "Sack, multiple dup acks and ECN."
-        $self next pktTraceFile
-}
-Test/ecn_burstyEcn1_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Sack1 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 189
-	$lossmodel set burstlen_ 17
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks without bugFix_
-Class Test/ecn_noBugfix_sack -superclass TestSuite
-Test/ecn_noBugfix_sack instproc init {} {
-        $self instvar net_ test_ guide_
-	Queue/RED set thresh_ 100 
-	Queue/RED set maxthresh_ 100
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ false
-        set test_	ecn_noBugfix_sack
-	Test/ecn_noBugfix_sack instproc run {} [Test/ecn_bursty_sack info instbody run ]
-
-        set guide_      "Sack, multiple dup acks, no bugFix."
-        $self next pktTraceFile
-}
-
-# ECN followed by timeout.
-Class Test/ecn_timeout_sack -superclass TestSuite
-Test/ecn_timeout_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_timeout_sack
-        set guide_      "Sack, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0 1
-	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# ECN followed by a timeout, followed by an ECN representing a
-# new instance of congestion.
-Class Test/ecn_timeout1_sack -superclass TestSuite
-Test/ecn_timeout1_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_timeout1_sack
-        set guide_      "Sack, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout1_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0 1
-	$self drop_pkts {245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265} 
-	$self second_tcp Tahoe 1.0
-	$ns_ run
-}
-
-# ECN and packet drops.
-Class Test/ecn_fourdrops_sack -superclass TestSuite
-Test/ecn_fourdrops_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_fourdrops_sack
-        set guide_      "Reno, ECN with four packet drops."
-        $self next pktTraceFile
-}
-Test/ecn_fourdrops_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0 1
-	$self drop_pkts {182 184 207 208} 
-
-	$ns_ run
-}
-
-# Packet drops with a window of one packet.
-Class Test/ecn_smallwin_sack -superclass TestSuite
-Test/ecn_smallwin_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwin_sack
-        set guide_      "Sack, packet drops with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 6.0 1
-	$self drop_pkts {4 8 9 10 11 12 13 100 115 121 124 126 127 128}
-
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_sack -superclass TestSuite
-Test/ecn_smallwinEcn_sack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwinEcn_sack
-        set guide_      "Sack, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 10.0 1
-	$self drop_pkts {4 7 9 10 11 12 13 14 15 120 135 143 148 150 151 152} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-Class Test/ecn_smallwin1Ecn_sack -superclass TestSuite
-Test/ecn_smallwin1Ecn_sack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net3-lossy
-        set test_	ecn_smallwin1Ecn_sack
-        set guide_      "Sack, ECN with small windows."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin1Ecn_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1 errmodel2
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 120 135 143 148 150 153} 
-	$errmodel1 set markecn_ true
-	$self drop_pkts2 {6}
-	$errmodel2 set markecn_ false
-	$ns_ run
-}
-
-# Packet drops for the second packet.
-Class Test/ecn_secondpkt_sack -superclass TestSuite
-Test/ecn_secondpkt_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpkt_sack
-        set guide_      "Sack, with the second packet dropped."
-        $self next pktTraceFile
-}
-Test/ecn_secondpkt_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 2.0 1
-	$self drop_pkts {1 3} 
-
-	$ns_ run
-}
-
-# ECN for the second packet.
-Class Test/ecn_secondpktEcn_sack -superclass TestSuite
-Test/ecn_secondpktEcn_sack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpktEcn_sack
-        set guide_      "Sack, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_secondpktEcn_sack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 2.0 1
-	$self drop_pkts {1 3} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Delayed Ack Sack1 Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_sack_delack -superclass TestSuite
-Test/ecn_nodrop_sack_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_nodrop_sack_delack
-        set guide_      "Sack, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_sack_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0 0 1 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_sack_delack -superclass TestSuite
-Test/ecn_twoecn_sack_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_twoecn_sack_delack
-        set guide_      "Sack, ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_sack_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0 0 1 
-	$self drop_pkt 195
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_sack_delack -superclass TestSuite
-Test/ecn_drop_sack_delack instproc init {} {
-        $self instvar net_ test_ guide_
-#        Queue/RED set setbit_ true
-        set net_        net2-lossy
-        set test_       ecn_drop_sack_delack
-        set guide_      "Sack, packet loss followed by ECN, delayed acks."
-        $self next pktTraceFile
-} 
-Test/ecn_drop_sack_delack instproc run {} {
-        global quiet
-        $self instvar ns_ guide_
-        puts "Guide: $guide_"
-        $self ecnsetup Sack1 3.0 0 1
-        $self drop_pkt 195
-        $ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop1_sack_delack -superclass TestSuite
-Test/ecn_drop1_sack_delack instproc init {} {
-        $self instvar net_ test_ guide_
-#        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop1_sack_delack
-        set guide_      "Sack, packet loss followed by ECN, delayed acks."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_sack_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 3.0 0 1
-	$self drop_pkt 185
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_sack_delack -superclass TestSuite
-Test/ecn_smallwinEcn_sack_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwinEcn_sack_delack
-        set guide_      "Sack, delayed ack, ECN with small windows."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_sack_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Sack1 10.0 1 1
-	$self drop_pkts {4 7 9 11 12 13 14 15 120 135 143 148 150 151 152} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Newreno Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_newreno -superclass TestSuite
-Test/ecn_nodrop_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_nodrop_newreno
-        set guide_      "NewReno with ECN."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-	$self ecnsetup Newreno 3.0 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-Class Test/ecn_twoecn_newreno -superclass TestSuite
-Test/ecn_twoecn_newreno instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_twoecn_newreno
-        set guide_      "NewReno, two marked packets in one window."
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0 
-	$self drop_pkt 195
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_newreno -superclass TestSuite
-Test/ecn_drop_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop_newreno
-        set guide_      "NewReno, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-	$self ecnsetup Newreno 3.0
-	$self drop_pkt 195
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-Class Test/ecn_drop1_newreno -superclass TestSuite
-Test/ecn_drop1_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop1_newreno
-        set guide_      "NewReno, ECN preceded by packet loss."
-        $self next pktTraceFile
-}
-Test/ecn_drop1_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0
-	$self drop_pkt 185
-	$ns_ run
-}
-
-# Packet loss only.
-Class Test/ecn_noecn_newreno -superclass TestSuite
-Test/ecn_noecn_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1000
-	Queue/RED set maxthresh_ 1000
-        set net_	net2-lossy
-        set test_	ecn_noecn_newreno
-	Test/ecn_noecn_newreno instproc run {} [Test/ecn_drop_newreno info instbody run ]
-        set guide_      "NewReno, packet loss only, no ECN."
-        $self next pktTraceFile
-}
-
-# Multiple dup acks 
-Class Test/ecn_bursty_newreno -superclass TestSuite
-Test/ecn_bursty_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-	Queue/RED set thresh_ 100
-	Queue/RED set maxthresh_ 100
-        set net_	net2-lossy
-        set test_	ecn_bursty_newreno
-        set guide_      "NewReno, multiple dup acks."
-        $self next pktTraceFile
-}
-Test/ecn_bursty_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-
-	$self ecnsetup Newreno 3.0
-        set lossmodel [$self setloss]
-        $lossmodel set offset_ 189
-	$lossmodel set burstlen_ 15
-        $lossmodel set period_ 10000
-	$ns_ run
-}
-
-# Multiple dup acks following ECN
-Class Test/ecn_burstyEcn_newreno -superclass TestSuite
-Test/ecn_burstyEcn_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_burstyEcn_newreno
-	Test/ecn_burstyEcn_newreno instproc run {} [Test/ecn_bursty_newreno info instbody run ]   
-        set guide_      "NewReno, multiple dup acks and ECN."
-        $self next pktTraceFile
-}
-
-# ECN followed by timeout.
-# Nope.
-Class Test/ecn_timeout_newreno -superclass TestSuite
-Test/ecn_timeout_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_timeout_newreno
-        set guide_      "NewReno, multiple dup acks"
-        $self next pktTraceFile
-}
-Test/ecn_timeout_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0 1
-	$self drop_pkts {242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268} 
-
-	$ns_ run
-}
-
-# ECN followed by a timeout, followed by an ECN representing a
-# new instance of congestion.
-Class Test/ecn_timeout1_newreno -superclass TestSuite
-Test/ecn_timeout1_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_timeout1_newreno
-        set guide_      "NewReno, drops and ECN followed by a timeout."
-        $self next pktTraceFile
-}
-Test/ecn_timeout1_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0 1
-	$self drop_pkts {245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265} 
-	$self second_tcp Tahoe 1.0
-	$ns_ run
-}
-
-# Packet drops with a window of one packet.
-Class Test/ecn_smallwin_newreno -superclass TestSuite
-Test/ecn_smallwin_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwin_newreno
-        set guide_      "NewReno, packet drops with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwin_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 6.0 1
-	$self drop_pkts {4 8 9 10 11 12 13 100 115 121 124 126 127 128}
-
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_newreno -superclass TestSuite
-Test/ecn_smallwinEcn_newreno instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwinEcn_newreno
-        set guide_      "NewReno, ECN with a window of one."
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 10.0 1
-	$self drop_pkts {4 8 9 11 12 13 14 15 120 135 143 148 150 151 152 153} 
-
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-# Packet drops for the second packet.
-Class Test/ecn_secondpkt_newreno -superclass TestSuite
-Test/ecn_secondpkt_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpkt_newreno
-        set guide_      "NewReno, with the second packet dropped."
-        $self next pktTraceFile
-}
-Test/ecn_secondpkt_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 2.0 1
-	$self drop_pkts {1 3} 
-
-	$ns_ run
-}
-
-# ECN for the second packet.
-Class Test/ecn_secondpktEcn_newreno -superclass TestSuite
-Test/ecn_secondpktEcn_newreno instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_secondpktEcn_newreno
-        set guide_      "NewReno, with the second packet marked."
-        $self next pktTraceFile
-}
-Test/ecn_secondpktEcn_newreno instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 2.0 1
-	$self drop_pkts {1 3} 
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#######################################################################
-# Delayed Ack Newreno Tests #
-#######################################################################
-
-# Plain ECN
-Class Test/ecn_nodrop_newreno_delack -superclass TestSuite
-Test/ecn_nodrop_newreno_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_nodrop_newreno_delack
-        set guide_      "NewReno, plain ECN, delayed ACKs."
-        $self next pktTraceFile
-}
-Test/ecn_nodrop_newreno_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0 0 1 
-	$self drop_pkt 10000
-	$ns_ run
-}
-
-# Two ECNs close together
-# Nope.
-Class Test/ecn_twoecn_newreno_delack -superclass TestSuite
-Test/ecn_twoecn_newreno_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_twoecn_newreno_delack
-        set guide_	"NewReno, delayed acks."
-
-        $self next pktTraceFile
-}
-Test/ecn_twoecn_newreno_delack instproc run {} {
-        global quiet guide_
-	$self instvar ns_ guide_ lossmodel
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0 0 1 
-	$self drop_pkt 195
-	$lossmodel set markecn_ true
-	$ns_ run
-}
-
-# ECN followed by packet loss.
-Class Test/ecn_drop_newreno_delack -superclass TestSuite
-Test/ecn_drop_newreno_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop_newreno_delack
-        set guide_  "ECN followed by packet loss."
-
-        $self next pktTraceFile
-}
-Test/ecn_drop_newreno_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0 0 1
-	$self drop_pkt 195
-	$ns_ run
-}
-
-# ECN preceded by packet loss.
-Class Test/ecn_drop1_newreno_delack -superclass TestSuite
-Test/ecn_drop1_newreno_delack instproc init {} {
-        $self instvar net_ test_ guide_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_drop1_newreno_delack
-	set guide_ "ECN preceded by packet loss"
-        $self next pktTraceFile
-}
-Test/ecn_drop1_newreno_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 3.0 0 1
-	$self drop_pkt 185
-	$ns_ run
-}
-
-# ECN with a window of one packet.
-Class Test/ecn_smallwinEcn_newreno_delack -superclass TestSuite
-Test/ecn_smallwinEcn_newreno_delack instproc init {} {
-        $self instvar net_ test_ guide_ 
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-        set test_	ecn_smallwinEcn_newreno_delack
-	set guide_ "ECN with a window of one packet."
-
-        $self next pktTraceFile
-}
-Test/ecn_smallwinEcn_newreno_delack instproc run {} {
-        global quiet
-	$self instvar ns_ guide_ errmodel1
-        puts "Guide: $guide_"
-	$self ecnsetup Newreno 10.0 1 1
-	$self drop_pkts {4 8 9 11 12 13 14 15 120 135 143 148 150 151 152 153} 
-
-	$errmodel1 set markecn_ true
-	$ns_ run
-}
-
-#################################################################
-
-#################################################################
-# 
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 20ms bottleneck.
-# Queue-limit on bottleneck is 25 packets.
-#    
-Class Topology/net6 -superclass Topology
-Topology/net6 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 20ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-} 
-
-# This test shows two TCPs when one is ECN-capable and the other 
-# is not.
-
-Class Test/ecn1 -superclass TestSuite
-Test/ecn1 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net6
-        set test_       ecn1_(one_with_ecn1,_one_without)
-	set guide_ 	"Two TCPs, one with ECN and one without."
-        $self next pktTraceFile
-}
-Test/ecn1 instproc run {} {
-        global quiet
-        $self instvar ns_ guide_ node_ guide_ testName_
-        puts "Guide: $guide_"
-        $self setTopo
-
-        # Set up TCP connection 
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-        $tcp1 set window_ 30
-        $tcp1 set ecn_ 1
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        # Set up TCP connection
-        set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-        $tcp2 set window_ 20
-        $tcp2 set ecn_ 0
-        set ftp2 [$tcp2 attach-app FTP]
-        $ns_ at 3.0 "$ftp2 start"
-
-        $self tcpDump $tcp1 5.0
-        $self tcpDump $tcp2 5.0 
-
-        #$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ at 10.0 "$self cleanupAll $testName_" 
-
-        $ns_ run
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-ecn.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-ecn.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-ecn.txt	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-ecn.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,108 +0,0 @@
-Test ecn:
-This is a simple test of two flows with ECN.
-
-#######################################################################
-# Tahoe Tests #
-#######################################################################
-
-The first set of tests explores various scenarios 
-representing a single instance of congestion, with either a
-single ECN, a single packet drop, or various combinations of ECN
-and packet drops.  Because these events occur in one window of data,
-they are interpreted by the sender as a single instance of
-congestion, and result only in a single reduction on the
-congestion window.  All six of the following tests show
-a connection that cuts its congestion window in half, sometimes
-with a preceeding slow-start.
-
-ecn_nodrop_tahoe: A single ECN.
-ecn_twoecn_tahoe: ECN followed by another ECN
-ecn_drop_tahoe: ECN followed by a Fast Retransmit. 
-ecn_drop1_tahoe: A Fast Retransmit where the second duplicate 
-  acknowledgement carries an ECN-echo. 
-ecn_drop2_tahoe: A Fast Retransmit followed by a duplicate acknowledgement
-  carrying ECN-echo.
-ecn_noecn_tahoe: A Fast Retransmit, no ECN.
-
-The second set of tests all illustrate a burst of packet drops.
-The first two tests (Fast Retransmit with and without ECN) show
-the same performance.  
-
-ecn_bursty_tahoe: A Fast Retransmit.
-ecn_burstyEcn_tahoe: ECN followed by a Fast Retransmit.
-
-The third test illustrates the pathologies
-that can occur without "bugFix_".
-
-ecn_noBugfix_tahoe: The Fast Retransmit without bugFix_
-
-The following set of tests show that performance is not
-worsened if a packet gets its ECN bit set rather than being
-dropped at the router.  These scenarios illustrate a retransmit 
-timeout.
-
-ecn_timeout2_tahoe: A Retransmit Timeout.
-ecn_timeout_tahoe: ECN followed by a Retransmit Timeout.  (The first 
-  packet has the ECN bit set rather than being dropped.)
-ecn_timeout3_tahoe: A Retransmit Timeout with an ECN in the middle
-  of the dropped packets.  (The second packet has the ECN bit set
-  rather than being dropped.)
-
-This test shows that an ECN on a packet sent after a
-Retransmit Timeout in properly interpreted as an instance
-of new congestion.
-
-ecn_timeout1_tahoe: ECN followed by a Retransmit Timeout, followed
-  by an ECN representing a new instance of congestion.
-
-#######################################################################
-# Reno Tests #
-#######################################################################
-
-The following tests are similar to the Tahoe tests:
-ecn_nodrop_reno, ecn_twoecn_reno, ecn_drop_reno,
-ecn_drop1_reno, and ecn_noecn_reno. 
-
-ecn_bursty_reno: A Fast Retransmit followed by a Retransmit Timeout. 
-  Ssthresh is reduced twice, once for each event.
-ecn_burstyEcn_reno: An ECN followed by a Fast Retransmit followed by a
-  Retransmit Timeout.
-
-ecn_noBugfix_reno: This shows the unnecessary Fast Retransmit from
-  the absence of Bugfix_.
-
-ecn_timeout_reno: An ECN followed by a Retransmit Timeout. 
-ecn_timeout1_reno: ECN followed by a Retransmit Timeout, followed
-  by an ECN representing a new instance of congestion.
-
-#######################################################################
-# Sack Tests #
-#######################################################################
-
-The following tests are similar to the Tahoe tests:  ecn_nodrop_sack,
-ecn_twoecn_sack, ecn_drop_sack, ecn_drop1_sack, ecn_noecn_sack.
-
-ecn_bursty_sack: A Fast Retransmit followed by a Retransmit Timeout.  
-  The sender doesn't send a new packet when it receives the ACK for the
-  retransmitted packet because "pipe_" indicates that it still
-  has too many outstanding packets.
-ecn_burstyEcn_sack: An ECN followed by a Fast Retransmit.  Because
-  of the ECN, the sender has fewer packets in flight when the
-  three dup acks arrive.
-ecn_burstyEcn1_sack: An ECN followed by a Fast Retransmit, followed
-  by a Retransmit Timeout.  This test has two more packets dropped 
-  that "ecn_burstyEcn_sack".
-
-ecn_noBugfix_sack: This shows the unnecessary Fast Retransmit from
-  the absence of Bugfix_.
-
-ecn_timeout_sack: An ECN followed by a Retransmit Timeout.
-ecn_timeout1_sack: ECN followed by a Retransmit Timeout, followed
-  by an ECN representing a new instance of congestion.
-ecn_fourdrops_sack: ECN followed by four interspersed packet drops.
-
-#######################################################################
-# Other Tests #
-#######################################################################
-ecn1
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-energy.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-energy.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-energy.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-energy.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,558 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-energy.tcl,v 1.15 2006/01/30 21:27:52 mweigle Exp $
-
-# To run all tests: test-all-energy
-# to run individual test:
-# ns test-suite-energy.tcl dsdv
-# ns test-suite-energy.tcl dsr
-# ns test-suite-energy.tcl aodv
-# ns test-suite-energy.tcl brdcast0
-# To view a list of available test to run with this script:
-# ns test-suite-energy.tcl
-
-
-# ======================================================================
-# Define options
-# ======================================================================
-global opt
-set opt(chan)		Channel/WirelessChannel
-set opt(prop)		Propagation/TwoRayGround
-set opt(netif)		Phy/WirelessPhy
-set opt(mac)		Mac/802_11
-set opt(ifq)		Queue/DropTail/PriQueue
-set opt(ll)		LL
-set opt(ant)            Antenna/OmniAntenna
-
-set opt(x)		670	;# X dimension of the topography
-set opt(y)		670		;# Y dimension of the topography
-set opt(cp)		"cbr.tcl"
-set opt(sc)		"mobility.tcl"
-
-set opt(ifqlen)		50		;# max packet in ifq
-set opt(nn)		5		;# number of nodes
-set opt(seed)		0.0
-set opt(stop)		500.0		;# simulation time
-set opt(stop-newf)      700.0	 ;# extended run time for new feature simulations	
-
-set opt(tr)		estudy.tr	;# trace file
-set opt(nam)		temp.rands
-set opt(lm)             "off"           ;# log movement
-set opt(energymodel)    EnergyModel     ;
-set opt(initialenergy)  0.455               ;# Initial energy in Joules
-
-# ======================================================================
-# needs to be fixed later
-set AgentTrace			ON
-set RouterTrace			ON
-set MacTrace			OFF
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.2818
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# ======================================================================
-
-proc usage {}  {
-        global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid <tests> : dsdv dsr aodv brdcast0"
-        exit 1
-}
-
-
-proc getopt {argc argv} {
-	global opt
-	lappend optlist cp nn seed sc stop tr x y
-
-	for {set i 0} {$i < $argc} {incr i} {
-		set arg [lindex $argv $i]
-		if {[string range $arg 0 0] != "-"} continue
-
-		set name [string range $arg 1 end]
-		set opt($name) [lindex $argv [expr $i+1]]
-	}
-}
-
-Class TestSuite
-Class Test/brdcast0 -superclass TestSuite
-# 2 nodes brdcast req/replies to one another
-#This is a test for setting newly added features RADIO SLEEP MODE, Transition Energy Consumption, detailed energy trace
-
-Class Test/dsdv -superclass TestSuite
-Class Test/dsr -superclass TestSuite
-Class Test/aodv -superclass TestSuite
-
-TestSuite instproc init {} {
-global opt
-$self instvar ns_ topo  
-
-set ns_	[new Simulator]
-set topo	[new Topography]
-set god_    [new God]
-
-set tracefd	[open $opt(tr) w]
-set namtrace    [open $opt(nam) w]
-
-$topo load_flatgrid $opt(x) $opt(y)
-
-$ns_ trace-all $tracefd
-$ns_ namtrace-all-wireless $namtrace $opt(x) $opt(y)
-
-create-god $opt(nn)
-
-}
-
-TestSuite instproc finish {} {
-        $self instvar ns_
-	global quiet
-        $ns_ flush-trace
-        if { !$quiet } {
-            puts "running nam..."
-            exec nam temp.rands &
-        }
-        exit 0
-}
-
-Test/brdcast0 instproc init {} {
-    global opt 
-#node_
-#    $self instvar ns_ topo
-#    set opt(chan)           Channel/WirelessChannel    ;# channel type
-#    set opt(prop)           Propagation/TwoRayGround   ;# radio-propagation model
-#    set opt(netif)          Phy/WirelessPhy            ;# network interface type
-    set opt(mac)            Mac/SMAC                   ;# MAC type
-    #set opt(mac)            Mac/802_11                 ;# MAC type
-#    set opt(ifq)            Queue/DropTail/PriQueue    ;# interface queue type
-    set opt(ll)             LL                         ;# link layer type
-#    set opt(ant)            Antenna/OmniAntenna        ;# antenna model
-#    set opt(ifqlen)         50                         ;# max packet in ifq
-    set opt(x)              800
-    set opt(y)              800
-    set opt(rp)             DumbAgent               ;# routing protocol
-    set opt(tr)             temp.rands
- #   set opt(stop)           5.0
- #   set opt(stop-sync)      100.0        ;# extended run time for sync simulations
-    set opt(stop)           700.0	 ;# extended run time for new feature simulations	
-    set opt(seed)           1
- #   set opt(iP)           1.0	;# IDLE Power
- #   set opt(sP)           1.0	;# SLEEP Power
- #   set opt(tP)           1.0	;# TRANS Power
- #   set opt(rP)           1.0	;# RECV Power
- #   set opt(transT)       0.5	;# TRANSITION Time
- #   set opt(transP)       0.5	;# TRANSITION Power
-    set opt(initialenergy)  1000     ;# Initial energy in Joules
- #   set opt(energymodel)    EnergyModel     ;
-    set testname_ brdcast0
-  	set opt(nn) 2
-  
-    create-god $opt(nn)
- #   $self next
-    
-    
-}
-
-Test/brdcast0 instproc run {} {
-   global opt
-   $self instvar ns_ topo
-#   $self instvar ns_
-     set ns_         [new Simulator]
-      puts "Seeding Random number generator with $opt(seed)\n"
-    ns-random $opt(seed)
-    
-    set tracefd_	[open $opt(tr) w]
-    $ns_ trace-all $tracefd_
-     set topo_	    [new Topography]
-    $topo_ load_flatgrid $opt(x) $opt(y)
-    
-      $ns_ node-config -adhocRouting DumbAgent \
-			 -llType $opt(ll) \
-			 -macType Mac/SMAC \
-			 -ifqType $opt(ifq) \
-			 -ifqLen $opt(ifqlen) \
-			 -antType $opt(ant) \
-			 -propType $opt(prop) \
-			 -phyType $opt(netif) \
-			 -channelType $opt(chan) \
-			 -topoInstance $topo_ \
-			 -agentTrace ON \
-			 -routerTrace ON \
-			 -macTrace ON \
-			 -energyModel $opt(energymodel) \
-			 -idlePower 1.0 \
-			 -rxPower 1.0 \
-			 -txPower 2.0 \
-          		 -sleepPower 0.001 \
-          		 -transitionPower 0.2 \
-          		 -transitionTime 0.005 \
-			 -initialEnergy $opt(initialenergy)
-
-	Mac/SMAC set syncFlag_ 1
-	Mac/SMAC set dutyCycle_ 10
-
-	$ns_ set WirelessNewTrace_ ON
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		set node_($i) [$ns_ node]	
-		$node_($i) random-motion 0		;# disable random motion
-	}
-
-	set udp_(0) [new Agent/UDP]
-    	$ns_ attach-agent $node_(0) $udp_(0)
-
-	set null_(0) [new Agent/Null]
-	$ns_ attach-agent $node_(1) $null_(0)
-
-	set cbr_(0) [new Application/Traffic/CBR]
-	$cbr_(0) set packetSize_ 512
-	$cbr_(0) set interval_ 10.0
-	$cbr_(0) set random_ 1
-	$cbr_(0) set maxpkts_ 50000
-	$cbr_(0) attach-agent $udp_(0)
-
-	$ns_ connect $udp_(0) $null_(0)
-
-
-
-	$ns_ at 1.00 "$cbr_(0) start"
-#    	$ns_ at 1.0 "$ping1 start-WL-brdcast"
-#
-# Tell all the nodes when the simulation ends
-#
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop) "$node_($i) reset";
-}
-$ns_ at $opt(stop) "puts \"NS EXITING...!!!\" ; $ns_ halt"
-$ns_ run
-}
-
-
-
-Test/dsdv instproc init {} {
-   global opt
-   $self instvar ns_ topo
-   set opt(rp)             DSDV
-   $self next
-}
-Test/dsdv instproc run {} {
-   global opt
-   $self instvar ns_ topo
-
-        $ns_ node-config -adhocRouting $opt(rp) \
-			 -llType $opt(ll) \
-			 -macType $opt(mac) \
-			 -ifqType $opt(ifq) \
-			 -ifqLen $opt(ifqlen) \
-			 -antType $opt(ant) \
-			 -propType $opt(prop) \
-			 -phyType $opt(netif) \
-			 -channel [new $opt(chan)] \
-			 -topoInstance $topo \
-			 -energyModel $opt(energymodel) \
-			 -macTrace ON \
-			 -rxPower 0.3 \
-			 -txPower 0.6 \
-			 -initialEnergy $opt(initialenergy)
-			 
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		set node_($i) [$ns_ node]	
-		$node_($i) random-motion 0		;# disable random motion
-	}
-
-#
-# Source the Connection and Movement scripts
-#
-if { $opt(cp) == "" } {
-	puts "*** NOTE: no connection pattern specified."
-        set opt(cp) "none"
-} else {
-	puts "Loading connection pattern..."
-	source $opt(cp)
-}
-
-
-#
-# Tell all the nodes when the simulation ends
-#
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-$ns_ at $opt(stop).00000001 "puts \"NS EXITING...\" ; $ns_ halt"
-
-
-if { $opt(sc) == "" } {
-	puts "*** NOTE: no scenario file specified."
-        set opt(sc) "none"
-} else {
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-}
-
-# Define node initial position in nam
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-
-    # 20 defines the node size in nam, must adjust it according to your scenario
-    # The function must be called after mobility model is defined
-
-    $ns_ initial_node_pos $node_($i) 20
-}
-
-$ns_ run
-}
-
-
-
-Test/dsr instproc init {} {
-   global opt
-   $self instvar ns_ topo
-   set opt(rp)             DSR
-   set opt(ifq)            CMUPriQueue
-   $self next
-}
-Test/dsr instproc run {} {
-   global opt
-   $self instvar ns_ topo
-        $ns_ node-config -adhocRouting $opt(rp) \
-			 -llType $opt(ll) \
-			 -macType $opt(mac) \
-			 -ifqType $opt(ifq) \
-			 -ifqLen $opt(ifqlen) \
-			 -antType $opt(ant) \
-			 -propType $opt(prop) \
-			 -phyType $opt(netif) \
-			 -channel [new $opt(chan)] \
-			 -topoInstance $topo \
-			 -energyModel $opt(energymodel) \
-			 -macTrace ON \
-			 -rxPower 0.3 \
-			 -txPower 0.6 \
-			 -initialEnergy $opt(initialenergy)
-			 
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		set node_($i) [$ns_ node]	
-		$node_($i) random-motion 0		;# disable random motion
-	}
-
-#
-# Source the Connection and Movement scripts
-#
-if { $opt(cp) == "" } {
-	puts "*** NOTE: no connection pattern specified."
-        set opt(cp) "none"
-} else {
-	puts "Loading connection pattern..."
-	source $opt(cp)
-}
-
-
-#
-# Tell all the nodes when the simulation ends
-#
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-$ns_ at $opt(stop).00000001 "puts \"NS EXITING...\" ; $ns_ halt"
-
-
-if { $opt(sc) == "" } {
-	puts "*** NOTE: no scenario file specified."
-        set opt(sc) "none"
-} else {
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-}
-
-# Define node initial position in nam
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-
-    # 20 defines the node size in nam, must adjust it according to your scenario
-    # The function must be called after mobility model is defined
-
-    $ns_ initial_node_pos $node_($i) 20
-}
-
-$ns_ run
-}
-
-
-
-Test/aodv instproc init {} {
-   global opt
-   $self instvar ns_ topo
-   set opt(rp)             AODV
-   $self next
-}
-Test/aodv instproc run {} {
-   global opt
-   $self instvar ns_ topo
-        $ns_ node-config -adhocRouting $opt(rp) \
-			 -llType $opt(ll) \
-			 -macType $opt(mac) \
-			 -ifqType $opt(ifq) \
-			 -ifqLen $opt(ifqlen) \
-			 -antType $opt(ant) \
-			 -propType $opt(prop) \
-			 -phyType $opt(netif) \
-			 -channel [new $opt(chan)] \
-			 -topoInstance $topo \
-			 -energyModel $opt(energymodel) \
-			 -macTrace ON \
-			 -rxPower 0.3 \
-			 -txPower 0.6 \
-			 -initialEnergy $opt(initialenergy)
-			 
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		set node_($i) [$ns_ node]	
-		$node_($i) random-motion 0		;# disable random motion
-	}
-
-#
-# Source the Connection and Movement scripts
-#
-if { $opt(cp) == "" } {
-	puts "*** NOTE: no connection pattern specified."
-        set opt(cp) "none"
-} else {
-	puts "Loading connection pattern..."
-	source $opt(cp)
-}
-
-
-#
-# Tell all the nodes when the simulation ends
-#
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-$ns_ at $opt(stop).00000001 "puts \"NS EXITING...\" ; $ns_ halt"
-
-
-if { $opt(sc) == "" } {
-	puts "*** NOTE: no scenario file specified."
-        set opt(sc) "none"
-} else {
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-}
-
-# Define node initial position in nam
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-
-    # 20 defines the node size in nam, must adjust it according to your scenario
-    # The function must be called after mobility model is defined
-
-    $ns_ initial_node_pos $node_($i) 20
-}
-
-$ns_ run
-}
-
-
-
-
-proc runtest {arg} {
-        global quiet
-        set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-	        set test $arg
-        } elseif {$b == 2} {
-	        set test [lindex $arg 0]
-            if {[lindex $arg 1] == "QUIET"} {
-	        set quiet 1
-            }
-        } else {
-	        usage
-        }
-	switch $test {
-	      brdcast0 -
-		dsdv -
-	       dsr -
-		aodv {
-                     set t [new Test/$test]
-                }
-                default {
-	             stderr "Unknown test $test"
-		     exit 1
-                }
-         }
-	 $t run
-}
-
-global argv arg0 
-runtest $argv
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-friendly.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-friendly.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-friendly.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-friendly.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,2440 +0,0 @@
-
-# copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-friendly.tcl,v 1.78 2007/09/16 17:15:07 sallyfloyd Exp $
-#
-
-source misc_simple.tcl
-source support.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP TFRC TFRC_ACK ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-
-##########################
-Agent/TFRCSink set numPkts_ 1
-# The default for numPkts_ might be changed to 3, at some point.
-# But right now, the code for numPkts does not work, except for numPkts_ 1.
-# With numPkts set to 1, TFRCSink is not robust to reordering.
-##########################
-Agent/TFRC set maxHeavyRounds_ 0
-Agent/TCP set window_ 100
-
-# Uncomment the line below to use a random seed for the
-#  random number generator.
-# ns-random 0
-
-TestSuite instproc finish file {
-        global quiet PERL
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -s 0.01 -m 90 -t $file > temp1.rands
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -nl -m -x time -y packets temp1.rands &
-        }
-        ## now use default graphing tool to make a data file
-        ## if so desired
-#       exec csh figure2.com $file
-#	exec cp temp1.rands temp.$file 
-#	exec csh gnuplotA.com temp.$file $file
-###        exit 0
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    Queue/RED set gentle_ true
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 50
-    $ns queue-limit $node_(r2) $node_(r1) 50
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-Class Topology/net2a -superclass Topology
-Topology/net2a instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next 
-    Queue/RED set gentle_ true
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 0.15Kb 2ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 2
-    $ns queue-limit $node_(r2) $node_(r1) 50
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-Class Topology/net2d -superclass Topology
-Topology/net2d instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    Queue/RED set gentle_ true
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    # 1.5Mb, 12.5 1500-byte pkts per 100 ms.
-    $ns queue-limit $node_(r1) $node_(r2) 50
-    $ns queue-limit $node_(r2) $node_(r1) 50
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 2Mb 300ms DropTail
-    $ns queue-limit $node_(r1) $node_(r2) 1000
-    $ns queue-limit $node_(r2) $node_(r1) 1000
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-#
-# Arrange for TFCC stats to be dumped for $src every
-# $interval seconds of simulation time
-#
-TestSuite instproc tfccDump { label src interval file } {
-        $self instvar dump_inst_ ns_ f
-        if ![info exists dump_inst_($src)] {
-                set dump_inst_($src) 1
-                $ns_ at 0.0 "$self tfccDump $label $src $interval $file"
-                return
-        }
-        set nexttime [expr [$ns_ now] + $interval]
-        $ns_ at $nexttime "$self tfccDump $label $src $interval $file"
-        set report "[$ns_ now] $label [$src set ndatapack_] " 
-	puts $file $report
-}
-
-#
-# Arrange for TCP stats to be dumped for $tcp every
-# $interval seconds of simulation time
-#
-TestSuite instproc pktsDump { label tcp interval file } {
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcp)] {
-        set dump_inst_($tcp) 1
-        $ns_ at 0.0 "$self pktsDump $label $tcp $interval $file"
-        return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self pktsDump $label $tcp $interval $file"
-    set report "[$ns_ now] $label [$tcp set ack_]"
-    puts $file $report
-}
-
-# display graph of results
-TestSuite instproc finish_1 testname {
-        global quiet
-        $self instvar topo_
-
-        set graphfile temp.rands
-
-        set awkCode  {
-		{
-                if ($2 == fid) { print $1, $3 - last; last = $3 }
-		}
-        }
-
-        set f [open $graphfile w]
-        puts $f "TitleText: $testname"
-        puts $f "Device: Postscript"
-
-        exec rm -f temp.p
-        exec touch temp.p
-        foreach i { 1 2 3 4 5} {
-                exec echo "\n\"flow $i" >> temp.p
-                exec awk $awkCode fid=$i temp.s > temp.$i
-                exec cat temp.$i >> temp.p
-                exec echo " " >> temp.p
-        }
-
-        exec cat temp.p >@ $f
-        close $f
-	exec cp -f $graphfile temp2.rands
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -x time -y packets temp2.rands &
-        }
-#	exec csh gnuplotB.com temp2.rands $testname
-#       exec csh figure2.com temp.rands $testname
-
-###        exit 0
-}
-
-TestSuite instproc runFriendly {} {
-    $self instvar ns_ node_ interval_ dumpfile_ guide_
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 3]
-    set tf2 [$ns_ create-connection TFRC $node_(s2) TFRCSink $node_(s4) 4]
-    $ns_ at 0.0 "$tf1 start"
-    $ns_ at 4.0 "$tf2 start"
-    $ns_ at 30 "$tf1 stop"
-    $ns_ at 30 "$tf2 stop"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-    $self tfccDump 2 $tf2 $interval_ $dumpfile_
-}
-
-TestSuite instproc runTcp {} {
-    $self instvar ns_ node_ interval_ dumpfile_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 3]
-    set ftp1 [$tcp1 attach-app FTP]
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 4]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 4.0 "$ftp2 start"
-    $ns_ at 30 "$ftp1 stop"
-    $ns_ at 30 "$ftp2 stop"
-
-    $self pktsDump 1 $tcp1 $interval_ $dumpfile_
-    $self pktsDump 2 $tcp2 $interval_ $dumpfile_
-}
-
-TestSuite instproc runTcps {} {
-    $self instvar ns_ node_ interval_ dumpfile_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 0]
-    set ftp1 [$tcp1 attach-app FTP] 
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 1]
-    set ftp2 [$tcp2 attach-app FTP] 
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 2]
-    set ftp3 [$tcp3 attach-app FTP] 
-    $ns_ at 8.0 "$ftp1 start"
-    $ns_ at 12.0 "$ftp2 start"
-    $ns_ at 16.0 "$ftp3 start"
-    $ns_ at 24 "$ftp2 stop"
-    $ns_ at 20 "$ftp3 stop"
-
-    $self pktsDump 3 $tcp1 $interval_ $dumpfile_
-    $self pktsDump 4 $tcp2 $interval_ $dumpfile_
-    $self pktsDump 5 $tcp3 $interval_ $dumpfile_
-}
-
-Class Test/slowStartDiscount -superclass TestSuite
-Test/slowStartDiscount instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	slowStartDiscount
-    set guide_  "TFRC with discount_ true, for discounting older loss intervals."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 0
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Queue/RED set gentle_ false
-    Test/slowStartDiscount instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/slowStartDiscount1 -superclass TestSuite
-Test/slowStartDiscount1 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	slowStartDiscount1
-    set guide_  "TFRC with minDiscountRatio_ set to 0.25, for stronger discounting."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 0
-    Agent/TFRCSink set minDiscountRatio_ 0.25
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Queue/RED set gentle_ false
-    Test/slowStartDiscount1 instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/slowStartDiscountCA -superclass TestSuite
-Test/slowStartDiscountCA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	slowStartDiscountCA
-    set guide_  "TFRC with ca_ true, for Sqrt(RTT) based congestion avoidance mode."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Agent/TFRCSink set discount_ 0
-    Agent/TFRCSink set smooth_ 0
-    Queue/RED set gentle_ false
-    Test/slowStartDiscountCA instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/smooth -superclass TestSuite
-Test/smooth instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	smooth
-    set guide_  "TFRC with smooth_ true, for smoothly incorporating new loss intervals."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Test/smooth instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/smoothCA -superclass TestSuite
-Test/smoothCA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	smoothCA
-    set guide_  "TFRC with smooth_, discount_, and ca_ all true." 
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Test/smoothCA instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/slowStart -superclass TestSuite
-Test/slowStart instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	slowStart
-    set guide_  "TFRC with smooth_, discount_, and ca_ all false."
-    Agent/TFRCSink set discount_ 0
-    Agent/TFRCSink set smooth_ 0
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Queue/RED set gentle_ false
-    $self next pktTraceFile
-}
-
-Class Test/slowStartCA -superclass TestSuite
-Test/slowStartCA instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net2
-    set test_	slowStartCA
-    set guide_  "TFRC with discount_ false and ca_ true."
-    Agent/TFRCSink set discount_ 0
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Test/slowStartCA instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-Test/slowStart instproc run {} {
-    global quiet 
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 40.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-    $ns_ at 30 "$tf1 stop"
-    set tf2 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 1]
-    if {$stopTime > 16} {
-        $ns_ at 16 "$tf2 start"
-        $ns_ at $stopTime "$tf2 stop"
-        $self tfccDump 2 $tf2 $interval_ $dumpfile_
-    }
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-# This test uses EWMA for estimating the loss event rate.
-Class Test/slowStartEWMA -superclass TestSuite
-Test/slowStartEWMA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	slowStartEWMA
-    set guide_  "TFRC with EWMA for estimating the loss event rate."
-    Agent/TFRCSink set algo_ 2
-    Test/slowStartEWMA instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-# This test uses Fixed Windows for estimating the loss event rate.
-Class Test/slowStartFixed -superclass TestSuite
-Test/slowStartFixed instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	slowStartFixed
-    set guide_  "TFRC with Fixed Windows for estimating the loss event rate."
-    Agent/TFRCSink set algo_ 3
-    Test/slowStartFixed instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/ecn -superclass TestSuite
-Test/ecn instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	ecn
-    set guide_  "TFRC with ECN."
-    Agent/TFRC set ecn_ 1
-    Queue/RED set setbit_ true
-    Test/ecn instproc run {} [Test/slowStart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/slowStartTcp -superclass TestSuite
-Test/slowStartTcp instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	slowStartTcp
-    set guide_  "TCP"
-    $self next pktTraceFile
-}
-Test/slowStartTcp instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 40.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 30 "$ftp1 stop"
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 1]
-    set ftp2 [$tcp2 attach-app FTP]
-    $ns_ at 16 "$ftp2 start"
-    $ns_ at $stopTime "$ftp2 stop"
-
-    $self tfccDump 1 $tcp1 $interval_ $dumpfile_
-    $self tfccDump 2 $tcp2 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/impulseDiscount -superclass TestSuite
-Test/impulseDiscount instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulseDiscount
-    set guide_  "TFRC with discount_ true, for discounting older loss intervals."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Agent/TFRCSink set smooth_ 0
-    Test/impulseDiscount instproc run {} [Test/impulseCA info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/impulseDiscountCA -superclass TestSuite
-Test/impulseDiscountCA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulseDiscountCA
-    set guide_  "TFRC with discount_ and ca_ true, smooth_ false."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Agent/TFRCSink set smooth_ 0
-    Test/impulseDiscountCA instproc run {} [Test/impulseCA info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/impulse -superclass TestSuite
-Test/impulse instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulse
-    set guide_  "TFRC with smooth_, discount_, and ca_ all false."
-    Agent/TFRCSink set discount_ 0
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Agent/TFRCSink set smooth_ 0
-    Test/impulse instproc run {} [Test/impulseCA info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/impulseCA -superclass TestSuite
-Test/impulseCA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulseCA
-    set guide_  "TFRC with ca_ true, for Sqrt(RTT) based congestion avoidance mode."
-    Agent/TFRCSink set discount_ 0
-    Agent/TFRCSink set smooth_ 0
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-#    Test/impulseCA instproc run {} [Test/impulseCA info instbody run ]
-    $self next pktTraceFile
-}
-
-Test/impulseCA instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 40.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-    $ns_ at $stopTime "$tf1 stop"
-    set tf2 [$ns_ create-connection TFRC $node_(s2) TFRCSink $node_(s4) 1]
-    $ns_ at 10.0 "$tf2 start"
-    $ns_ at 20.0 "$tf2 stop"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-    $self tfccDump 2 $tf2 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/impulseMultReport -superclass TestSuite
-Test/impulseMultReport instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulseMultReport
-    set guide_  "TFRC with feedback four times per RTT, discount_ and ca_ false." 
-    Agent/TFRCSink set NumFeedback_ 4
-    Agent/TFRCSink set discount_ 0
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    $self next pktTraceFile
-}
-Test/impulseMultReport instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 40.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-    set tf2 [$ns_ create-connection TFRC $node_(s2) TFRCSink $node_(s4) 1]
-    $ns_ at 10.0 "$tf2 start"
-    $ns_ at 20.0 "$tf2 stop"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-    $self tfccDump 2 $tf2 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-# Feedback 4 times per roundtrip time.
-Class Test/impulseMultReportDiscount -superclass TestSuite
-Test/impulseMultReportDiscount instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulseMultReportDiscount
-    set guide_  "TFRC with feedback four times per round-trip time, discount_ true, ca_ false."
-    Agent/TFRCSink set NumFeedback_ 4
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Test/impulseMultReportDiscount instproc run {} [Test/impulseMultReport info instbody run ]
-    $self next pktTraceFile
-}
-
-# Feedback 4 times per roundtrip time.
-Class Test/impulseMultReportDiscountCA -superclass TestSuite
-Test/impulseMultReportDiscountCA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulseMultReportDiscountCA
-    set guide_  "TFRC with feedback four times per RTT, discount_ and ca_ true."
-    Agent/TFRCSink set NumFeedback_ 4
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Test/impulseMultReportDiscountCA instproc run {} [Test/impulseMultReport info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/impulseMultReportCA -superclass TestSuite
-Test/impulseMultReportCA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulseMultReportCA
-    set guide_  "TFRC with feedback four times per RTT, discount_ false, ca_ true." 
-    Agent/TFRCSink set NumFeedback_ 4
-    Agent/TFRCSink set discount_ 0
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Test/impulseMultReportCA instproc run {} [Test/impulseMultReport info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/impulseTcp -superclass TestSuite
-Test/impulseTcp instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	impulseTcp
-    set guide_  "TFRC with discount_, smooth_, and ca_ false."
-    $self next pktTraceFile
-}
-Test/impulseTcp instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 40.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 1]
-    set ftp2 [$tcp2 attach-app FTP]
-    $ns_ at 10.0 "$ftp2 start"
-    $ns_ at 20.0 "$ftp2 stop"
-
-    $self tfccDump 1 $tcp1 $interval_ $dumpfile_
-    $self tfccDump 2 $tcp2 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-# Two TFRC connections and three TCP connections.
-Class Test/two-friendly -superclass TestSuite
-Test/two-friendly instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	two-friendly
-    set guide_  "Two TFRC and three TCP connections, ca_ false."
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Agent/TCP set timerfix_ false
-    # The default is being changed to true.
-    $self next pktTraceFile
-}
-
-# Two TFRC connections and three TCP connections.
-Class Test/two-friendlyCA -superclass TestSuite
-Test/two-friendlyCA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	two-friendlyCA
-    Agent/TFRCSink set discount_ 0
-    set guide_  "Two TFRC and three TCP connections, ca_ true."
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Agent/TCP set timerfix_ false
-    # The default is being changed to true.
-    Test/two-friendlyCA instproc run {} [Test/two-friendly info instbody run ]
-    $self next pktTraceFile
-}
-
-Test/two-friendly instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 30.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    $self runFriendly 
-    $self runTcps
-    
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-# Only TCP
-Class Test/OnlyTcp -superclass TestSuite
-Test/OnlyTcp instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	OnlyTcp
-    set guide_  "Five TCP connections."
-    Agent/TCP set timerfix_ false
-    # The default is being changed to true.
-    $self next pktTraceFile
-}
-Test/OnlyTcp instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 30.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    $self runTcp 
-    $self runTcps
-    
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-## Random factor added to sending times
-Class Test/randomized -superclass TestSuite
-Test/randomized instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	randomized
-    set guide_  "Random delay added to sending times, ca_ false."
-    Agent/TFRC set overhead_ 0.5
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Test/randomized instproc run {} [Test/slowStart info instbody run]
-    $self next pktTraceFile
-}
-
-## Random factor added to sending times
-Class Test/randomizedCA -superclass TestSuite
-Test/randomizedCA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	randomizedCA
-    set guide_  "Random delay added to sending times, with ca_."
-    Agent/TFRC set overhead_ 0.5
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Test/randomizedCA instproc run {} [Test/slowStart info instbody run]
-    $self next pktTraceFile
-}
-
-## Smaller random factor added to sending times
-Class Test/randomized1 -superclass TestSuite
-Test/randomized1 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	randomized1
-    set guide_  "Smaller random delay added to sending times, ca_ false."
-    Agent/TFRC set overhead_ 0.1
-    Agent/TFRC set df_ 0.25
-    Agent/TFRC set ca_ 0
-    Test/randomized1 instproc run {} [Test/slowStart info instbody run]
-    $self next pktTraceFile
-}
-
-## Smaller random factor added to sending times
-Class Test/randomized1CA -superclass TestSuite
-Test/randomized1CA instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	randomized1CA
-    set guide_  "Smaller random delay added to sending times, with ca_."
-    Agent/TFRC set overhead_ 0.1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Test/randomized1CA instproc run {} [Test/slowStart info instbody run]
-    $self next pktTraceFile
-}
-
-Class Test/slow -superclass TestSuite
-Test/slow instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2a
-    set test_	slow
-    set guide_  "Very slow path."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    $self next pktTraceFile
-}
-
-Test/slow instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-#    [$ns_ link $node_(r1) $node_(r2)] set bandwidth 0.001Mb
-#    [$ns_ link $node_(r1) $node_(r2)] set queue-limit 5
-    set interval_ 100
-    set stopTime 4000.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/twoDrops -superclass TestSuite
-Test/twoDrops instproc init {} {
-    $self instvar net_ test_ guide_ drops_ stopTime1_
-    set net_	net2
-    set test_	twoDrops
-    set guide_  "TFRC, with two packets dropped near the beginning."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    set drops_ " 2 3 "
-    set stopTime1_ 5.0
-    $self next pktTraceFile
-}
-
-Class Test/manyDrops -superclass TestSuite 
-Test/manyDrops instproc init {} { 
-    $self instvar net_ test_ guide_ drops_ stopTime1_
-    set net_    net2
-    set test_   manyDrops 
-    set guide_  "TFRC, with many packets dropped in the beginning."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-##  set stopTime1_ 100.0
-    set stopTime1_ 100.0
-#    set drops_ " 0 1 "
-    set drops_ " 0 1 2 3 4 5 6 "
-    Test/manyDrops instproc run {} [Test/twoDrops info instbody run ]
-    $self next pktTraceFile
-}
-
-Test/twoDrops instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ drops_ stopTime1_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 1
-    set stopTime $stopTime1_
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set em [new ErrorModule Fid]
-    set lossylink_ [$ns_ link $node_(r1) $node_(r2)]
-    $lossylink_ errormodule $em
-    $em default pass
-    set emod [$lossylink_ errormodule]
-    set errmodel [new ErrorModel/List]
-    $errmodel unit pkt
-    $errmodel droplist $drops_
-    $emod insert $errmodel
-    $emod bind $errmodel 0
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/HighLoss -superclass TestSuite
-Test/HighLoss instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_
-    set net_	net2
-    set test_ HighLoss	
-    set guide_  "TFRC competing against a CBR flow, with high loss."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    set stopTime1_ 60
-    $self next pktTraceFile
-}
-Test/HighLoss instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ stopTime1_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 1
-    set stopTime $stopTime1_
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-
-    set udp1 [$ns_ create-connection UDP $node_(s2) UDP $node_(s4) 1]
-		set cbr1 [$udp1 attach-app Traffic/CBR]
-		$cbr1 set rate_ 3Mb
-		$ns_ at [expr $stopTime1_/3.0] "$cbr1 start"   
-		$ns_ at [expr 2.0*$stopTime1_/3.0] "$cbr1 stop"   
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-  
-Class Test/HighLossShort -superclass TestSuite
-Test/HighLossShort instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_
-    set net_	net2
-    set test_ HighLossShort	
-    set guide_  "TFRC competing against a CBR flow, with high loss, ShortIntervals_."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    set stopTime1_ 80
-    Test/HighLossShort instproc run {} [Test/HighLoss info instbody run ]
-    $self next pktTraceFile
-}
-
-# PreciseLoss_ is turned off
-Class Test/HighLossImprecise -superclass TestSuite
-Test/HighLossImprecise instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_
-    set net_	net2
-    set test_ HighLossImprecise	
-    set guide_  "TFRC competing against a CBR flow, with PreciseLoss_ off."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Agent/TFRCSink set PreciseLoss_ 0
-    set stopTime1_ 80
-    $self next pktTraceFile
-}
-Test/HighLossImprecise instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ stopTime1_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 1
-    set stopTime $stopTime1_
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-
-    set udp1 [$ns_ create-connection UDP $node_(s2) UDP $node_(s4) 1]
-		set cbr1 [$udp1 attach-app Traffic/CBR]
-		$cbr1 set rate_ 3Mb
-		$ns_ at [expr $stopTime1_/4.0] "$cbr1 start"   
-		$ns_ at [expr 2.0*$stopTime1_/4.0] "$cbr1 stop"   
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-  
-Class Test/HighLossMinRTO -superclass TestSuite
-Test/HighLossMinRTO instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_
-    set net_	net2
-    set test_ HighLossMinRTO	
-    set guide_  "TFRC competing against a CBR flow, with high loss, high MinRTO."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Agent/TFRC set minrto_ 1.0
-    # Minimum RTO of one second.  This slows down the TFRC flow.
-    set stopTime1_ 60
-    Test/HighLossMinRTO instproc run {} [Test/HighLoss info instbody run ]
-    $self next pktTraceFile
-}
-  
-Class Test/HighLossConservative -superclass TestSuite
-Test/HighLossConservative instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_
-    set net_	net2
-    set test_ HighLossConservative	
-    set guide_  "TFRC and CBR, with a conservative_ response to heavy congestion."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Agent/TFRC set conservative_ true
-    set stopTime1_ 60
-    # Test/HighLossConservative instproc run {} [Test/HighLoss info instbody run ]
-    $self next pktTraceFile
-}
-Test/HighLossConservative instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ stopTime1_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 1
-    set stopTime $stopTime1_
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-
-    set udp1 [$ns_ create-connection UDP $node_(s2) UDP $node_(s4) 1]
-		set cbr1 [$udp1 attach-app Traffic/CBR]
-		$cbr1 set rate_ 3Mb
-		$ns_ at [expr $stopTime1_/3.0] "$cbr1 start"   
-		$ns_ at [expr 2.0*$stopTime1_/3.0] "$cbr1 stop"   
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-
-Class Test/HighLossTCP -superclass TestSuite
-Test/HighLossTCP instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_
-    set net_	net2
-    set test_ HighLossTCP	
-    set guide_  "TCP competing against a CBR flow."
-    Agent/TFRCSink set discount_ 1
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    set stopTime1_ 60
-    $self next pktTraceFile
-}
-Test/HighLossTCP instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ stopTime1_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 1
-    set stopTime $stopTime1_
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-
-    set udp1 [$ns_ create-connection UDP $node_(s2) UDP $node_(s4) 1]
-		set cbr1 [$udp1 attach-app Traffic/CBR]
-		$cbr1 set rate_ 3Mb
-		$ns_ at [expr $stopTime1_/3.0] "$cbr1 start"   
-		$ns_ at [expr 2.0*$stopTime1_/3.0] "$cbr1 stop"   
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_"
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-  
-Class Test/TFRC_FTP -superclass TestSuite
-Test/TFRC_FTP instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_
-    set net_	net2
-    set test_ TFRC_FTP	
-    set guide_  "TFRC with a data source with limited, bursty data."
-    Agent/TFRC set SndrType_ 1 
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Agent/TFRC set discount_ 1
-    Agent/TCP set oldCode_ false
-    Agent/TFRC set idleFix_ true ;		
-    set stopTime1_ 15
-    $self next pktTraceFile
-}
-Test/TFRC_FTP instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ stopTime1_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 1
-    set stopTime $stopTime1_
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set ftp [new Application/FTP]
-    $ftp attach-agent $tf1
-    $ns_ at 0 "$ftp produce 100"
-    $ns_ at 5 "$ftp producemore 100"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-  
-Class Test/TFRC_CBR -superclass TestSuite
-Test/TFRC_CBR instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_
-    set net_	net2
-    set test_ TFRC_CBR	
-    set guide_  "TFRC with a data source with CBR data."
-    Agent/TFRC set SndrType_ 1 
-    Agent/TFRCSink set smooth_ 1
-    Agent/TFRC set df_ 0.95
-    Agent/TFRC set ca_ 1
-    Agent/TFRC set discount_ 1
-    Agent/TCP set oldCode_ false
-    set stopTime1_ 15
-    $self next pktTraceFile
-}
-Test/TFRC_CBR instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ stopTime1_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 1
-    set stopTime $stopTime1_
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set cbr [new Application/Traffic/CBR]
-    $cbr attach-agent $tf1
-    $cbr set rate_ 10Kb
-    $ns_ at 0 "$cbr start"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-  
-Class Test/printLosses -superclass TestSuite
-Test/printLosses instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	printLosses
-    set guide_  "One TFRC flow, with the loss intervals from the TFRC receiver."
-    Agent/TFRCSink set printLosses_ 1
-    Agent/TFRCSink set printLoss_ 1
-    $self next pktTraceFile
-}
-Test/printLosses instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 3.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_"
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-#
-# This test shows that a few lost packets are not counted as lost
-#   by the losses array.  I think this is for sequential packet losses.
-#
-Class Test/printLossesShort -superclass TestSuite
-Test/printLossesShort instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	printLossesShort
-    set guide_  "A TFRC-SP flow with ShortIntervals_, loss intervals from the TFRC receiver."
-    $self next pktTraceFile
-}
-Test/printLossesShort instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 4.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    # set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set tf1 [new Agent/TFRC]
-    set tf1Dest [new Agent/TFRCSink]
-    $tf1 set fid_ 0
-    $tf1 set voip_ 1
-    $tf1 set packetSize_ 125
-    $tf1Dest set ShortIntervals_ 1
-    $tf1Dest set fid_ 0
-    $ns_ attach-agent $node_(s1) $tf1
-    $ns_ attach-agent $node_(s3) $tf1Dest
-    $tf1Dest set printLosses_ 1
-    $tf1Dest set printLoss_ 1
-    $ns_ connect $tf1 $tf1Dest
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 125
-    $cbr0 set interval_ 0.02
-    $cbr0 attach-agent $tf1
-    $ns_ at 0.0 "$cbr0 start"
-
-    set tf2 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 1]
-    $ns_ at 0.2 "$tf2 start"
-
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_"
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/printLossesShort3 -superclass TestSuite
-Test/printLossesShort3 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	printLossesShort3
-    set guide_  "A TFRC-SP flow with ShortIntervals_ 3, loss intervals from the TFRC receiver."
-    $self next pktTraceFile
-}
-Test/printLossesShort3 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 4.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    # set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set tf1 [new Agent/TFRC]
-    set tf1Dest [new Agent/TFRCSink]
-    $tf1 set fid_ 0
-    $tf1 set voip_ 1
-    $tf1 set packetSize_ 125
-    $tf1Dest set ShortIntervals_ 3
-    $tf1Dest set ShortRtts_ 3 
-    $tf1Dest set fid_ 0
-    $ns_ attach-agent $node_(s1) $tf1
-    $ns_ attach-agent $node_(s3) $tf1Dest
-    $tf1Dest set printLosses_ 1
-    $tf1Dest set printLoss_ 1
-    $ns_ connect $tf1 $tf1Dest
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 125
-    $cbr0 set interval_ 0.02
-    $cbr0 attach-agent $tf1
-    $ns_ at 0.0 "$cbr0 start"
-
-    set tf2 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 1]
-    $ns_ at 0.2 "$tf2 start"
-
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_"
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-TestSuite instproc printpkts { label tcp } {
-        puts "tcp $label highest_seqment_acked [$tcp set ack_]"
-}
-
-TestSuite instproc printTFRCpkts { label src } {
-        puts "tfrc $label [$src set ndatapack_] " 
-}
-
-Class Test/goodTFRC superclass TestSuite
-Test/goodTFRC instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net2
-    set test_	goodTFRC
-    set guide_  "One TFRC flow, no reordering and no extra drops."
-    set period_ 10000.0
-    $self next pktTraceFile
-}
-Test/goodTFRC instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 20.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $ns_ at 0.0 "$tf1 start"
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 1000.0 $period_
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-    # $ns_ at $stopTime0 "$self printTFRCpkts 0 $tf1"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/droppedTFRC superclass TestSuite
-Test/droppedTFRC instproc init {} {
-    $self instvar net_ test_ guide_ list_ period_
-    set net_    net2
-    set test_   droppedTFRC
-    set guide_  "One TFRC flow, with extra dropped packets."
-    set period_ 40.0
-    Test/droppedTFRC instproc run {} [Test/goodTFRC info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/delayedTFRC superclass TestSuite
-Test/delayedTFRC instproc init {} {
-    $self instvar net_ test_ guide_ list_ period_
-    set net_    net2
-    set test_   delayedTFRC
-    set guide_  "One TFRC flow, with some packets delayed 0.03 seconds, numPkts_ 1."
-    set period_ 40.0
-    ErrorModel set delay_pkt_ true
-    ErrorModel set drop_ false
-    ErrorModel set delay_ 0.03
-    Agent/TFRCSink set numPkts_ 1
-    Test/delayedTFRC instproc run {} [Test/goodTFRC info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/delayedTFRC1 superclass TestSuite
-Test/delayedTFRC1 instproc init {} {
-    $self instvar net_ test_ guide_ list_ period_
-    set net_    net2
-    set test_   delayedTFRC1
-    set guide_  "One TFRC flow, with some packets delayed 0.03 seconds, numPkts_ 5."
-    set period_ 40.0
-    ErrorModel set delay_pkt_ true
-    ErrorModel set drop_ false
-    ErrorModel set delay_ 0.03
-    Agent/TFRCSink set numPkts_ 5
-    Test/delayedTFRC1 instproc run {} [Test/goodTFRC info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/delayedTFRC2 superclass TestSuite
-Test/delayedTFRC2 instproc init {} {
-    $self instvar net_ test_ guide_ list_ period_
-    set net_    net2
-    set test_   delayedTFRC2
-    set guide_  "One TFRC flow, with some packets delayed 0.01 seconds, numPkts_ 3."
-    set period_ 40.0
-    ErrorModel set delay_pkt_ true
-    ErrorModel set drop_ false
-    ErrorModel set delay_ 0.01
-    Agent/TFRCSink set numPkts_ 3
-    Test/delayedTFRC2 instproc run {} [Test/goodTFRC info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/goodTCP superclass TestSuite
-Test/goodTCP instproc init {} {
-    $self instvar net_ test_ guide_ list_ period_
-    set net_	net2
-    set test_	goodTCP
-    set guide_  "One TCP flow, no reordering and no extra drops."
-    set list_ {50000 50001}
-    set period_ 1000.0
-    $self next pktTraceFile
-}
-Test/goodTCP instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ list_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 20.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-    $self pktsDump 1 $tcp1 $interval_ $dumpfile_
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 200.0 $period_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-    $ns_ at $stopTime0 "$self printpkts 0 $tcp1"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/droppedTCP superclass TestSuite
-Test/droppedTCP instproc init {} {
-    $self instvar net_ test_ guide_ list_ period_
-    set net_    net2
-    set test_   droppedTCP
-    set guide_  "One TCP flow, with extra dropped packets."
-    set period_ 40.0
-    Test/droppedTCP instproc run {} [Test/goodTCP info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/delayedTCP superclass TestSuite
-Test/delayedTCP instproc init {} {
-    $self instvar net_ test_ guide_ list_ period_
-    set net_    net2
-    set test_   delayedTCP
-    set guide_  "One TCP flow, with some packets delayed 0.03 seconds."
-    set period_ 40.0
-    ErrorModel set delay_pkt_ true
-    ErrorModel set drop_ false
-    ErrorModel set delay_ 0.03
-    Test/delayedTCP instproc run {} [Test/goodTCP info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/delayedTCP2 superclass TestSuite
-Test/delayedTCP2 instproc init {} {
-    $self instvar net_ test_ guide_ list_ period_
-    set net_    net2
-    set test_   delayedTCP2
-    set guide_  "One TCP flow, with some packets delayed 0.01 seconds."
-    set period_ 40.0
-    ErrorModel set delay_pkt_ true
-    ErrorModel set drop_ false
-    ErrorModel set delay_ 0.01
-    Test/delayedTCP2 instproc run {} [Test/goodTCP info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/initRate superclass TestSuite
-Test/initRate instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net2
-    set test_	initRate
-    set guide_  "One TFRC flow, initial rate of one packet per RTT."
-    set period_ 10000.0
-    Agent/TFRC set rate_init_ 1 
-    Agent/TFRC set rate_init_option_ 1
-    $self next pktTraceFile
-}
-Test/initRate instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TFRC set SndrType_ 1
-    Agent/TFRC set idleFix_ true ;		
-    set interval_ 0.1
-    set stopTime 2.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set ftp [new Application/FTP]
-    $ftp attach-agent $tf1
-    $ns_ at 0 "$ftp produce 50"
-    $ns_ at 1.5 "$ftp producemore 50"
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 1000.0 $period_
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    #$self traceQueues $node_(r1) [$self openTrace $stopTime $testName_]
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-    # $ns_ at $stopTime0 "$self printTFRCpkts 0 $tf1"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/initRateLarge superclass TestSuite
-Test/initRateLarge instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net2
-    set test_	initRateLarge
-    set guide_  "One TFRC flow, initial rate of 4 packets per RTT."
-    set period_ 10000.0
-    Agent/TFRC set rate_init_ 4.0 
-    Agent/TFRC set rate_init_option_ 1
-    Test/initRateLarge instproc run {} [Test/initRate info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/initRateLarger superclass TestSuite
-Test/initRateLarger instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net2
-    set test_	initRateLarger
-    set guide_  "One TFRC flow, initial rate of 8 packets per RTT."
-    set period_ 10000.0
-    Agent/TFRC set rate_init_ 8.0 
-    Agent/TFRC set rate_init_option_ 1
-    Test/initRateLarger instproc run {} [Test/initRate info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/initRateRFC3390 superclass TestSuite
-Test/initRateRFC3390 instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net2
-    set test_	initRateRFC3390
-    set guide_  "One TFRC flow, initial rate from RFC 3390."
-    set period_ 10000.0
-    Agent/TFRC set rate_init_option_ 2
-    Test/initRateRFC3390 instproc run {} [Test/initRate info instbody run ]
-    $self next pktTraceFile
-}
-
-TestSuite instproc printdrops { fid fmon } {
-        set fcl [$fmon classifier]; # flow classifier
-        #
-        set flow [$fcl lookup auto 0 0 $fid]
-        puts "fid: $fid drops [$flow set pdrops_] marks [$flow set pmarks_]"
-        puts "fid: $fid packets [$flow set pdepartures_] _bytes [$flow set bdepartures_]"
-}
-
-Class Test/tfrcOnly superclass TestSuite
-Test/tfrcOnly instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net2d
-    set test_	tfrcOnly
-    set guide_  "One VoIP TFRC flow."
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    $self next pktTraceFile
-}
-Test/tfrcOnly instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ 
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 20.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-    set pktsize 120
-    set cbrInterval 0.01
-
-    set slink [$ns_ link $node_(r1) $node_(r2)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon    
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    $ns_ at 0.0 "$ns_ bandwidth $node_(r1) $node_(r2) 0.2Mbps duplex"
-    $ns_ queue-limit $node_(r1) $node_(r2) 50
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $tf1 set packetSize_ $pktsize
-    set cbr [new Application/Traffic/CBR]
-    $cbr set packetSize_ $pktsize
-    $cbr set interval_ $cbrInterval
-    $cbr attach-agent $tf1
-    $ns_ at 2.0 "$cbr start"
-    $ns_ at $stopTime0 "$cbr stop"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_ 
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime0 "$self printdrops 0 $fmon"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/tfrcOnlyHighLoss superclass TestSuite
-Test/tfrcOnlyHighLoss instproc init {} {
-    $self instvar net_ test_ guide_ voip
-    set net_	net2d
-    set test_	tfrcOnlyHighLoss
-    set guide_  "One VoIP TFRC flow, high loss."
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    $self next pktTraceFile
-}
-Test/tfrcOnlyHighLoss instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ voip
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 20.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-    set pktsize 120
-    set cbrInterval 0.01
-    set droprate 0.2
-
-    set slink [$ns_ link $node_(r1) $node_(r2)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon    
-
-    set lossylink_ [$ns_ link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Uniform $droprate pkt ]
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0 5
-    $em default pass
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    $ns_ at 0.0 "$ns_ bandwidth $node_(r1) $node_(r2) 0.2Mbps duplex"
-    $ns_ queue-limit $node_(r1) $node_(r2) 50
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $tf1 set packetSize_ $pktsize
-    set cbr [new Application/Traffic/CBR]
-    $cbr set packetSize_ $pktsize
-    $cbr set interval_ $cbrInterval
-    $cbr attach-agent $tf1
-    $ns_ at 2.0 "$cbr start"
-    $ns_ at $stopTime0 "$cbr stop"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_ 
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime0 "$self printdrops 0 $fmon"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/tfrcOnlyHighLoss1 superclass TestSuite
-Test/tfrcOnlyHighLoss1 instproc init {} {
-    $self instvar net_ test_ guide_ voip
-    set net_	net2d
-    set test_	tfrcOnlyHighLoss1
-    set guide_  "One VoIP TFRC flow, high loss, old measurement of loss event rate."
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 11
-    Test/tfrcOnlyHighLoss1 instproc run {} [Test/tfrcOnlyHighLoss info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/voip superclass TestSuite
-Test/voip instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net2d
-    set test_	voip
-    set guide_  "One VoIP TFRC flow and one TCP flow, different packet sizes."
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    $self next pktTraceFile
-}
-Test/voip instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ 
-    puts "Guide: $guide_"
-    $self setTopo
-    set interval_ 0.1
-    set stopTime 20.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-    set pktsize 120
-    set cbrInterval 0.01
-
-    set slink [$ns_ link $node_(r1) $node_(r2)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon    
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    $ns_ at 0.0 "$ns_ bandwidth $node_(r1) $node_(r2) 0.2Mbps duplex"
-    $ns_ queue-limit $node_(r1) $node_(r2) 50 
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    $tf1 set packetSize_ $pktsize
-    set cbr [new Application/Traffic/CBR]
-    $cbr set packetSize_ $pktsize
-    $cbr set interval_ $cbrInterval
-    $cbr attach-agent $tf1
-    $ns_ at 2.0 "$cbr start"
-    $ns_ at $stopTime0 "$cbr stop"
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 1]
-    $tcp1 set window_ 10
-    $tcp1 set packetSize_ 1460
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at $stopTime0 "$ftp1 stop"
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_ 
-    $self pktsDump 2 $tcp1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime0 "$self printdrops 0 $fmon; $self printdrops 1 $fmon"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/voipHeader superclass TestSuite
-Test/voipHeader instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net2d
-    set test_	voip
-    set guide_  "One VoIP TFRC flow with headers, and one TCP flow."
-    Agent/TFRC set useHeaders_ true ; 
-    Agent/TFRC set headersize_ 32;
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    Test/voipHeader instproc run {} [Test/voip info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/voipNoHeader superclass TestSuite
-Test/voipNoHeader instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net2d
-    set test_	voip
-    set guide_  "One VoIP TFRC flow without headers, and one TCP flow."
-    Agent/TFRC set useHeaders_ false ; 
-    Agent/TFRC set headersize_ 32;
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    Test/voipNoHeader instproc run {} [Test/voip info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/voipEcn superclass TestSuite
-Test/voipEcn instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net2d
-    set test_	voipEcn
-    set guide_  "One ECN VoIP TFRC flow and one TCP flow, different packet sizes."
-    Agent/TFRC set useHeaders_ false ; 
-    Agent/TFRC set ecn_ 1
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    Agent/TCP set ecn_ 1
-    Queue/RED set setbit_ true
-    Test/voipEcn instproc run {} [Test/voip info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/noVoip superclass TestSuite
-Test/noVoip instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net2d
-    set test_	noVoip
-    set guide_  "One TFRC flow (not voip) and one TCP flow, different packet sizes."
-    Agent/TFRC set voip_ 0
-    Test/noVoip instproc run {} [Test/voip info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/idleTfrc superclass TestSuite
-Test/idleTfrc instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net3
-    set test_	idleTfrc
-    set guide_  "TFRC with two idle periods during slow-start."
-    set period_ 10000.0
-    $self next pktTraceFile
-}
-Test/idleTfrc instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TFRC set SndrType_ 1
-    Agent/TFRC set datalimited_ 1
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    Agent/TFRC set packetSize_ 160
-    Agent/TFRC set voip_max_pkt_rate_ 50
-    set interval_ 1.0
-    set start_time 0.0
-    set stopTime 60.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 160
-    $cbr0 set interval_ 0.02
-    $cbr0 attach-agent $tf1
-
-    $ns_ at $start_time "$cbr0 start"
-    $ns_ at 10.0 "$cbr0 stop"
-    $ns_ at 20.0 "$cbr0 start"
-    $ns_ at 25.0 "$cbr0 stop"
-    $ns_ at 35.0 "$cbr0 start"
-    $ns_ at $stopTime "$cbr0 stop"
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 1000.0 $period_
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    $ns_ run
-}
-
-Class Test/idleTcp superclass TestSuite
-Test/idleTcp instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net3
-    set test_	idleTcp
-    set guide_  "TCP with two idle periods during slow-start."
-    set period_ 10000.0
-    $self next pktTraceFile
-}
-Test/idleTcp instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TCP set packetSize_ 160
-    Agent/TCP set window_ 30
-    set interval_ 1.0
-    set start_time 0.0
-    set stopTime 60.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s3) 0]
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 160
-    $cbr0 set interval_ 0.02
-    $cbr0 attach-agent $tcp1
-
-    $ns_ at $start_time "$cbr0 start"
-    $ns_ at 10.0 "$cbr0 stop"
-    $ns_ at 20.0 "$cbr0 start"
-    $ns_ at 25.0 "$cbr0 stop"
-    $ns_ at 35.0 "$cbr0 start"
-    $ns_ at $stopTime "$cbr0 stop"
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 1000.0 $period_
-
-    $self pktsDump 1 $tcp1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    $ns_ run
-}
-
-Class Test/idleTfrc1 superclass TestSuite
-Test/idleTfrc1 instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net3
-    set test_	idleTfrc1
-    set guide_  "TFRC with only one idle period during slow-start."
-    set period_ 10000.0
-    $self next pktTraceFile
-}
-Test/idleTfrc1 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TFRC set SndrType_ 1
-    Agent/TFRC set datalimited_ 1
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    Agent/TFRC set packetSize_ 160
-    Agent/TFRC set voip_max_pkt_rate_ 50
-    set interval_ 1.0
-    set start_time 0.0
-    set stopTime 60.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 160
-    $cbr0 set interval_ 0.02
-    $cbr0 attach-agent $tf1
-
-    $ns_ at $start_time "$cbr0 start"
-    $ns_ at 10.0 "$cbr0 stop"
-    $ns_ at 20.0 "$cbr0 start"
-    $ns_ at 30.0 "$cbr0 stop"
-    $ns_ at 40.0 "$cbr0 start"
-    $ns_ at $stopTime "$cbr0 stop"
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 1000.0 $period_
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    $ns_ run
-}
-
-Class Test/idleTcp1 superclass TestSuite
-Test/idleTcp1 instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net3
-    set test_	idleTcp1
-    set guide_  "TCP with only one idle period during slow-start."
-    set period_ 10000.0
-    $self next pktTraceFile
-}
-Test/idleTcp1 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TCP set packetSize_ 160
-    Agent/TCP set window_ 30
-    set interval_ 1.0
-    set start_time 0.0
-    set stopTime 60.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s3) 0]
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 160
-    $cbr0 set interval_ 0.02
-    $cbr0 attach-agent $tcp1
-
-    $ns_ at $start_time "$cbr0 start"
-    $ns_ at 10.0 "$cbr0 stop"
-    $ns_ at 20.0 "$cbr0 start"
-    $ns_ at 30.0 "$cbr0 stop"
-    $ns_ at 40.0 "$cbr0 start"
-    $ns_ at $stopTime "$cbr0 stop"
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 1000.0 $period_
-
-    $self pktsDump 1 $tcp1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    $ns_ run
-}
-
-Class Test/shortIdleTcp superclass TestSuite
-Test/shortIdleTcp instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net3
-    set test_	shortIdleTcp
-    set guide_  "TCP with two short idle periods during slow-start."
-    set period_ 10000.0
-    $self next pktTraceFile
-}
-Test/shortIdleTcp instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TCP set packetSize_ 160
-    Agent/TCP set window_ 30
-    set interval_ 1.0
-    set start_time 0.0
-    set stopTime 25.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s3) 0]
-    set ftp [new Application/FTP]
-    $ftp attach-agent $tcp1
-    $ns_ at 0 "$ftp produce 280"
-    $ns_ at 9.2 "$ftp producemore 280"
-    $ns_ at 15.8 "$ftp producemore 280"
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 1000.0 $period_
-
-    $self pktsDump 1 $tcp1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    $ns_ run
-}
-
-Class Test/idleTfrc1 superclass TestSuite
-Test/idleTfrc1 instproc init {} {
-    $self instvar net_ test_ guide_ period_
-    set net_	net3
-    set test_	idleTfrc1
-    set guide_  "TFRC with only one idle period during slow-start."
-    set period_ 10000.0
-    $self next pktTraceFile
-}
-Test/idleTfrc1 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ interval_ dumpfile_ guide_ period_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TFRC set SndrType_ 1
-    Agent/TFRC set datalimited_ 1
-    Agent/TFRC set voip_ 1
-    Agent/TFRCSink set ShortIntervals_ 1
-    Agent/TFRC set packetSize_ 160
-    Agent/TFRC set voip_max_pkt_rate_ 50
-    set interval_ 1.0
-    set start_time 0.0
-    set stopTime 60.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set dumpfile_ [open temp.s w]
-    if {$quiet == "false"} {
-        set tracefile [open all.tr w]
-        $ns_ trace-all $tracefile
-    }
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 160
-    $cbr0 set interval_ 0.02
-    $cbr0 attach-agent $tf1
-
-    $ns_ at $start_time "$cbr0 start"
-    $ns_ at 10.0 "$cbr0 stop"
-    $ns_ at 20.0 "$cbr0 start"
-    $ns_ at 30.0 "$cbr0 stop"
-    $ns_ at 40.0 "$cbr0 start"
-    $ns_ at $stopTime "$cbr0 stop"
-
-    $self dropPktsPeriodic [$ns_ link $node_(r2) $node_(s3)] 0 1000.0 $period_
-
-    $self tfccDump 1 $tf1 $interval_ $dumpfile_
-
-    $ns_ at $stopTime0 "close $dumpfile_; $self finish_1 $testName_"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    if {$quiet == "false"} {
-	$ns_ at $stopTime2 "close $tracefile"
-    }
-    $ns_ at $stopTime2 "exec cp temp2.rands temp.rands; exit 0"
-
-    $ns_ run
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-frto.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-frto.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-frto.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-frto.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,353 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-frto.tcl,v 1.4 2006/01/24 23:00:06 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-source topologies.tcl
-
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Agent/TCP set frto_enabled_ true
-Agent/TCP set sfrto_enabled_ true
-
-Agent/TCP set partial_ack_ true
-
-Trace set show_tcphdr_ 1
-
-set wrap 200
-set wrap1 [expr 90 * 512 + 40]
-
-TestSuite instproc finish file {
-	global quiet wrap PERL
-	exec echo "0.Color: red" > temp.rands
-	exec echo "2.Color: blue" >> temp.rands
-	exec echo "1.Color: red" >> temp.rands
-	exec echo "3.Color: purple" >> temp.rands
-          exec $PERL ../../bin/getrc -b -s 0 -d 2 all.tr | \
-          $PERL ../../bin/raw2xg -c -s 0.01 -m $wrap -r -t $file >> temp.rands
-          exec $PERL ../../bin/getrc -b -s 2 -d 0 all.tr | \
-          $PERL ../../bin/raw2xg -c -a -s 0.01 -m $wrap -t $file >> temp.rands
-	  exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -c -d -s 0.01 -m $wrap -t $file >> temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass NodeTopology/4nodes
-Topology/net4 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 10ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid] 
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-Class Topology/net4delay -superclass NodeTopology/4nodes
-Topology/net4delay instproc init ns {
-    global delayerDL myns_
-
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 2Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 2Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 20ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-    
-    set delayerDL [new Delayer]
-    $ns insert-delayer $node_(s1) $node_(r1) $delayerDL
-    $ns after 1.5 "insertDelay"
-    set myns_ $ns
-
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid] 
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype list} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink/DelAck $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1/DelAck  $node_(k1) $fid]
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink/DelAck $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 28
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 1.0 "$ftp1 produce 35"
-
-        $self tcpDump $tcp1 6.0
-	$self drop_pkts $list
-
-        $self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-
-###################################################
-## Checking for RFC2581-compliant immediate ACK on filling a hole.
-###################################################
-
-Class Test/immediateAck -superclass TestSuite
-Test/immediateAck instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	immediateAck
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-	$self next
-}
-Test/immediateAck instproc run {} {
-	Agent/TCPSink/DelAck set interval_ 200ms
-        $self setup Tahoe {3 4}
-}
-
-
-Class Test/immediateAckReno -superclass TestSuite
-Test/immediateAckReno instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	immediateAckReno
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-	$self next
-}
-Test/immediateAckReno instproc run {} {
-	Agent/TCPSink/DelAck set interval_ 200ms
-        $self setup Reno {3 4}
-}
-
-
-Class Test/immediateAckNewReno -superclass TestSuite
-Test/immediateAckNewReno instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	immediateAckNewReno
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-	$self next
-}
-Test/immediateAckNewReno instproc run {} {
-	Agent/TCPSink/DelAck set interval_ 200ms
-        $self setup Newreno {5 6}
-}
-
-Class Test/noImmediateAckNewReno -superclass TestSuite
-Test/noImmediateAckNewReno instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	noImmediateAckNewReno
-	Agent/TCPSink set RFC2581_immediate_ack_ false
-	Test/noImmediateAckNewReno instproc run {} [Test/immediateAckNewReno info instbody run ]
-	$self next
-}
-
-
-Class Test/noImmediateAckSack -superclass TestSuite
-Test/noImmediateAckSack instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	noImmediateAckSack
-	Agent/TCPSink set RFC2581_immediate_ack_ false
-	$self next
-}
-Test/noImmediateAckSack instproc run {} {
-	Agent/TCPSink/Sack1/DelAck set interval_ 200ms
-        $self setup Sack1 {3 4}
-}
-
-proc insertDelay {} {
-        global delayerDL myns_
-
-        $delayerDL block
- 
-        set len 1
-        $myns_ after $len "$delayerDL unblock"
-}
-
-
-Class Test/delaySpikesSack -superclass TestSuite
-Test/delaySpikesSack instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4delay
-	set test_	delaySpikesSack
-	Agent/TCPSink set RFC2581_immediate_ack_ false
-	
-	$self next
-}
-Test/delaySpikesSack instproc run {} {
-	Agent/TCPSink/Sack1/DelAck set interval_ 200ms
-        $self setup Sack1 {30}
-}
-
-Class Test/dropsNDelaySpikes -superclass TestSuite
-Test/dropsNDelaySpikes instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4delay
-	set test_	dropsNDelaySpikes
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-
-	$self next
-}
-Test/dropsNDelaySpikes instproc run {} {
-	Agent/TCPSink/Sack1/DelAck set interval_ 200ms
-        $self setup Sack1 {17 18 30}
-}
-
-Class Test/spikeNDupAck -superclass TestSuite
-Test/spikeNDupAck instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4delay
-	set test_	spikeNDupAck
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-
-	$self next
-}
-Test/spikeNDupAck instproc run {} {
-	Agent/TCPSink/Sack1/DelAck set interval_ 200ms
-        $self setup Sack1 {13 30}
-}
-
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-full-fixes.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-full-fixes.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-full-fixes.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-full-fixes.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,747 +0,0 @@
-# Copyright (c) 1995 The Regents of the University of California.
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-# test-suite-full-fixes.tcl
-#
-# Based on ns/tcl/test/test-suite-full.tcl
-#
-# Modified June 2005 by Michele C. Weigle, Clemson University
-#
-# For a detailed description of the examples in this file, see
-# http://www.cs.clemson.edu/~mweigle/research/ns/fixes/
-#
-
-source misc.tcl
-source topologies-full-fixes.tcl
-
-# defaults as of ns-2.1b9  May 2002
-Agent/TCP set tcpTick_ 0.01
-Agent/TCP set rfc2988_ true
-Agent/TCP set useHeaders_ true
-Agent/TCP set windowInit_ 2
-Agent/TCP set minrto_ 1
-Agent/TCP set singledup_ 1
-
-Trace set show_tcphdr_ 1 ; # needed to plot ack numbers for tracing 
-
-# Agent/TCP/FullTcp set debug_ true;
-
-TestSuite instproc finish testname {
-	$self instvar ns_
-	$ns_ halt
-
-        set awkCode {
-	    {if (($1=="+" || $1=="d") && (($3=="3" && $4=="2") || ($3=="2" && $4=="3"))) print}
-	}
-        exec awk $awkCode all.tr > temp.rands
-}
-
-#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-#                         TCP Reno Tests
-#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-
-#*************************************************************************
-# Tests to validate bug fixes to Full-TCP Reno in tcp-full.cc
-#
-#  reno-drop-passive-fin -- drop the passive FIN
-#  reno-drop-synack -- drop the SYN/ACK
-#  reno-msg_eof-fin -- send message with MSG_EOF set
-#  reno-drop-lastack -- drop the last ACK in connection teardown
-#
-#*************************************************************************
-
-#
-# reno-drop-passive-fin
-#
-Class Test/reno-drop-passive-fin -superclass TestSuite
-Test/reno-drop-passive-fin instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy2
-	set test_ reno-drop-passive-fin
-	$self next
-}
-Test/reno-drop-passive-fin instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 5.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "reno-drop-passive-fin: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 7.0
-	$errmodel set burstlen_ 2
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$ns_ at 0.7 "$src advance 5"
-	$ns_ at 2.0 "$src close"
-
-	# set up special params for this test
-	$src set window_ 20
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# reno-drop-synack
-#
-Class Test/reno-drop-synack -superclass TestSuite
-Test/reno-drop-synack instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy2;    # drops are all ACKs
-	set test_ reno-drop-synack
-	$self next
-}
-Test/reno-drop-synack instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 7
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "reno-drop-synack: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 1.0
-	$errmodel set burstlen_ 1
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# reno-msg_eof-fin
-#
-Class Test/reno-msg_eof-fin -superclass TestSuite
-Test/reno-msg_eof-fin instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ reno-msg_eof-fin
-	$self next
-}
-Test/reno-msg_eof-fin instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 3.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-        $ns_ at 0.7 "$src advanceby 5"
-	$ns_ at 1.3 "$src sendmsg 400 MSG_EOF"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# reno-drop-lastack
-#
-Class Test/reno-drop-lastack -superclass TestSuite
-Test/reno-drop-lastack instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy;
-	set test_ reno-drop-lastack
-	$self next
-}
-Test/reno-drop-lastack instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 50.0
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "reno-drop-lastack: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 7.0
-	$errmodel set burstlen_ 1
-	$errmodel set period_ 1000
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$ns_ at 0.7 "$src advanceby 3"
-	$ns_ at 2.0 "$src close"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-#                         ECN Tests
-#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-
-#*************************************************************************
-# Tests to validate bug fixes to Full-TCP ECN in tcp-full.cc
-#
-#  ecn-drop-synack -- drop the SYN/ACK
-#  ecn-rexmt -- retransmit a packet
-#
-#*************************************************************************
-
-#
-# ecn-rexmt
-#
-Class Test/ecn-rexmt -superclass TestSuite
-Test/ecn-rexmt instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy;
-	set test_ ecn-rexmt
-	$self next
-}
-Test/ecn-rexmt instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 1.6
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "reno-rexmt: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 5.0
-	$errmodel set burstlen_ 1
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set packetSize_ 576
-	$src set ecn_ true
-	$sink set ecn_ true
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# ecn-drop-synack
-#
-Class Test/ecn-drop-synack -superclass TestSuite
-Test/ecn-drop-synack instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy2;    # drops are all ACKs
-	set test_ ecn-drop-synack
-	$self next
-}
-Test/ecn-drop-synack instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 7
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "ecn-drop-synack: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 1.0
-	$errmodel set burstlen_ 1
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set packetSize_ 576
-	$src set ecn_ true
-	$sink set ecn_ true
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-
-#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-#                         TCP SACK Tests
-#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-
-#*************************************************************************
-# Tests to validate bug fixes to Full-TCP SACK in tcp-full.cc
-#
-#  sack-send-past-fin -- as long as cwnd allows, sender sends packets even
-#                        when there is no new data
-#  sack-ecn-drop-mark -- SACK behavior when seeing 3 DUPACKS after ECN
-#  sack-burst -- SACK sends large number of old packets
-#  sack-burst-2 -- SACK sends large number of old packets
-#  sack-illegal-sack-block -- dropped FIN
-#  sack-dropwin -- drop a full window of packets
-#*************************************************************************
-
-#
-# sack-send-past-fin
-#
-Class Test/sack-send-past-fin -superclass TestSuite
-Test/sack-send-past-fin instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ sack-send-past-fin
-	$self next
-}
-Test/sack-send-past-fin instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 3.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "sack-send-past-fin: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 11.0
-	$errmodel set burstlen_ 1
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp/Sack]
-	set sink [new Agent/TCP/FullTcp/Sack]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-	$ns_ at 1.5 "$ftp1 stop"
-
-	# set up special params for this test
-	$src set window_ 20
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# sack-ecn-drop-mark
-#
-# This test is to illustrate the bug in the Full-TCP SACK+ECN 
-# implementation that occurs when a packet loss is detected
-# in the same window of ACKs as an ECN-Echo bit.
-
-Class Test/sack-ecn-drop-mark -superclass TestSuite
-Test/sack-ecn-drop-mark instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ sack-ecn-drop-mark
-	$self next
-}
-Test/sack-ecn-drop-mark instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 2.1
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "sack-ecn: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 20.0
-	$errmodel set period_ 1000.0
-	$errmodel set markecn_ true; # mark ecn's, don't drop
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp/Sack]
-	set sink [new Agent/TCP/FullTcp/Sack]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$ns_ at 0.7 "$src advance 40"
-
-	# set up special params for this test
-	$src set window_ 70
-	$src set packetSize_ 576
-
-	$src set ecn_ true
-	$sink set ecn_ true
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# sack-burst
-#
-Class Test/sack-burst -superclass TestSuite
-Test/sack-burst instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net1-lossy
-	set test_ sack-burst
-	$self next
-}
-Test/sack-burst instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 23
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "sack-burst: confused by >1 err models..abort"
-		exit 1
-	}
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp/Sack]
-	set sink [new Agent/TCP/FullTcp/Sack]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-
-	# set up TCP-level connections
-
-	# flow 1 -- one drop early
-	$ns_ connect $src $sink
-	$sink listen
-	$ns_ at 0.0 "$errmodel set offset_ 5"
-	$ns_ at 0.0 "$errmodel set burstlen_ 1"
-	$ns_ at 0.0 "$errmodel set period_ 10000"
-	$ns_ at 0.7 "$src advanceby 10"
-	$ns_ at 2.0 "$src close"
-
-	# flow 2 -- no drops, send more than flow 1, last pckt 
-	# smaller than full-size
-	$ns_ at 2.5 "$ns_ connect $src $sink"
-	$ns_ at 2.6 "$sink listen"
-	$ns_ at 3.0 "$src advance-bytes 1702"
-	$ns_ at 7.0 "$src close"
-
-	# flow 3 -- one drop late, TIMEOUT
-	$ns_ at 19.5 "$errmodel set burstlen_ 1"
-	$ns_ at 19.5 "$errmodel set period_ 52.0"
-	$ns_ at 20.0 "$ns_ connect $src $sink"
-	$ns_ at 20.1 "$sink listen"
-	$ns_ at 20.3 "$src advanceby 48"
-	$ns_ at 21.372 "$errmodel set period_ 2.0"
-	$ns_ at 21.380 "$errmodel set burstlen_ 11"
-	$ns_ at 21.381 "$errmodel set period_ 1000.0"
-	$ns_ at 30.0 "$src close"
-
-	# set up special params for this test
-	$src set window_ 20
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-
-#
-# sack-burst-2
-#
-Class Test/sack-burst-2 -superclass TestSuite
-Test/sack-burst-2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net1-lossy
-	set test_ sack-burst-2
-	$self next
-}
-Test/sack-burst-2 instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 3.5
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "sack-burst-2: confused by >1 err models..abort"
-		exit 1
-	}
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp/Sack]
-	set sink [new Agent/TCP/FullTcp/Sack]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-
-	# set up TCP-level connection
-
-	# one drop early, SACK recovery
-	$ns_ connect $src $sink
-	$sink listen
-	$ns_ at 0.0 "$errmodel set offset_ 5"
-	$ns_ at 0.0 "$errmodel set burstlen_ 1"
-	$ns_ at 0.0 "$errmodel set period_ 10000"
-	$ns_ at 0.7 "$src advanceby 40"
-
-        # cause timeout
-	$ns_ at 2.0 "$errmodel set period_ 2.0"
-	$ns_ at 2.0 "$errmodel set burstlen_ 1"
-	$ns_ at 2.5 "$errmodel set period_ 1000.0"
-
-	$ns_ at $stopt "$src close"
-
-	# set up special params for this test
-	$src set window_ 20
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(s1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# sack-illegal-sack-block
-#
-Class Test/sack-illegal-sack-block -superclass TestSuite
-Test/sack-illegal-sack-block instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ sack-illegal-sack-block
-	$self next
-}
-Test/sack-illegal-sack-block instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 2.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "sack-illegal-sack-block: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 8.0
-	$errmodel set burstlen_ 1
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp/Sack]
-	set sink [new Agent/TCP/FullTcp/Sack]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-	$ns_ at 1.3 "$src close"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# sack-dropwin
-#
-Class Test/sack-dropwin -superclass TestSuite
-Test/sack-dropwin instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ sack-dropwin
-	$self next
-}
-Test/sack-dropwin instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 5.5
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "sack-dropwin: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 47.0
-	$errmodel set burstlen_ 10
-	$errmodel set period_ 1000
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp/Sack]
-	set sink [new Agent/TCP/FullTcp/Sack]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 10
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-} 
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-full.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-full.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-full.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-full.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1435 +0,0 @@
-#
-# Copyright (c) 1997, 1998 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# this is still somewhat experimental,
-# and should be considered of 'beta-test' quality  (kfall@ee.lbl.gov)
-#
-# This file tests "fulltcp", a version of tcp reno implemented in the 
-# simulator based on the BSD Net/3 code. 
-#
-# This test suite is based on test-suite-fulltcp.tcl from ns-1.
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-
-# To turn on debugging messages:
-# Agent/TCP/FullTcp set debug_ true;
-
-source topologies.tcl
-catch "cd $dir"
-
-Trace set show_tcphdr_ 1 ; # needed to plot ack numbers for tracing 
-
-TestSuite instproc printtimers { tcp time} {
-        global quiet
-        if {$quiet == "false"} {
-                puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-        }
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-        set newTime [expr [$ns_ now] + $interval]
-        $ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-TestSuite instproc finish testname {
-	global env quiet
-	$self instvar ns_
-
-	$ns_ halt
-
-	set outtype text
-	set tfile "out.tr"
-
-	if { $quiet != "true" } {
-                if { [info exists env(NSOUT)] } {
-                        set outtype $env(NSOUT)
-                } elseif { [info exists env(DISPLAY)] } {
-                        set outtype xgraph
-                }
-
-		if { $outtype == "text" } {
-			puts "output files are $fname.{p,packs,acks,d,ctrl,es,ecn,cact}"
-			puts "  and $fname.r.{p,packs,acks,d,ctrl,es,ecn,cact}"
-		} else {
-			global TCLSH
-			exec ../../bin/tcpf2xgr $TCLSH $tfile $outtype $testname &
-		}
-	}
-	exec cp $tfile temp.rands; # verification scripts wants stuff in 'temp.rands'
-}
-
-TestSuite instproc bsdcompat tcp {
-	$tcp set segsperack_ 2
-	## 
-	$tcp set dupseg_fix_ false
-	$tcp set dupack_reset_ true
-	$tcp set bugFix_ false
-	$tcp set data_on_syn_ false
-	$tcp set tcpTick_ 0.5
-}
-
-# Definition of test-suite tests
-Class Test/full -superclass TestSuite
-Test/full instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ full
-	$self next
-}
-Test/full instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set stopt 6.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen ; # will figure out who its peer is
-	$src set window_ 100
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]  
-	$ns_ run
-}
-
-Class Test/close -superclass TestSuite
-Test/close instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ close
-	$self next
-}
-Test/close instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set stopt 6.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$src set window_ 100
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 50"
-	$ns_ at 5.5 "$src close"
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/twoway -superclass TestSuite
-Test/twoway instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ twoway
-	$self next
-}
-Test/twoway instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set stopt 6.0	
-	set startt 3.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$sink set iss_ 2144
-	$src set window_ 100
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-	set ftp2 [$sink attach-app FTP]
-	$ns_ at $startt "$ftp2 start"
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/twoway1 -superclass TestSuite
-Test/twoway1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ twoway1
-	$self next
-}
-Test/twoway1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set stopt 6.0	
-	set startt 1.9
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$sink set iss_ 2144
-	$src set window_ 100
-	$sink set window_ 100
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-	set ftp2 [$sink attach-app FTP]
-	$ns_ at $startt "$ftp2 start"
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#Class Test/twoway_bsdcompat -superclass TestSuite
-#Test/twoway_bsdcompat instproc init topo {
-#	$self instvar net_ defNet_ test_
-#	set net_ $topo
-#	set defNet_ net0
-#	set test_ twoway_bsdcompat
-#	$self next
-#}
-#Test/twoway_bsdcompat instproc run {} {
-#	$self instvar ns_ node_ testName_
-#
-#	set stopt 6.0	
-#	set startt 1.9
-#
-#	# set up connection (do not use "create-connection" method because
-#	# we need a handle on the sink object)
-#	set src [new Agent/TCP/FullTcp]
-#	set sink [new Agent/TCP/FullTcp]
-#	$ns_ attach-agent $node_(s1) $src
-#	$ns_ attach-agent $node_(k1) $sink
-#	$src set fid_ 0
-#	$sink set fid_ 0
-#	$ns_ connect $src $sink
-#
-#	# set up TCP-level connections
-#	$sink listen
-#	$src set window_ 100
-#	$sink set window_ 100
-#	$self bsdcompat $src
-#	$self bsdcompat $sink
-#	set ftp1 [$src attach-app FTP]
-#	$ns_ at 0.0 "$ftp1 start"
-#	set ftp2 [$sink attach-app FTP]
-#	$ns_ at $startt "$ftp2 start"
-#
-#	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-#	$ns_ run
-#}
-#
-#Class Test/oneway_bsdcompat -superclass TestSuite
-#Test/oneway_bsdcompat instproc init topo {
-#	$self instvar net_ defNet_ test_
-#	set net_ $topo
-#	set defNet_ net0
-#	set test_ oneway_bsdcompat
-#	$self next
-#}
-#Test/oneway_bsdcompat instproc run {} {
-#	$self instvar ns_ node_ testName_
-#
-#	set stopt 6.0	
-# 	set startt 1.9
-#
-#	# set up connection (do not use "create-connection" method because
-#	# we need a handle on the sink object)
-#	set src [new Agent/TCP/FullTcp]
-#	set sink [new Agent/TCP/FullTcp]
-#	$ns_ attach-agent $node_(s1) $src
-#	$ns_ attach-agent $node_(k1) $sink
-#	$src set fid_ 0
-#	$sink set fid_ 0
-#	$ns_ connect $src $sink
-#
-#	# set up TCP-level connections
-#	$sink listen ; # will figure out who its peer is
-#	$src set window_ 100
-#	$sink set window_ 100
-#	$self bsdcompat $src
-#	$self bsdcompat $sink
-#	set ftp1 [$src attach-app FTP]
-#	$ns_ at 0.0 "$ftp1 start"
-#
-#	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-#	$ns_ run
-#}
-#
-Class Test/twowayrandom -superclass TestSuite
-Test/twowayrandom instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ twowayrandom
-	$self next
-}
-Test/twowayrandom instproc run {} {
-	$self instvar ns_ node_ testName_
-	global quiet
-
-	set stopt 6.0	
-	if { $quiet == "true" } {
-		set startt 1
-	} else {
-		set startt [expr [ns-random 0] % 6]
-	}
-	puts "second TCP starting at time $startt"
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$sink set iss_ 2144
-	$src set window_ 100
-	$sink set window_ 100
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-	set ftp2 [$sink attach-app FTP]
-	$ns_ at $startt "$ftp2 start"
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/delack -superclass TestSuite
-Test/delack instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ delack
-	$self next
-}
-Test/delack instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set stopt 6.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$src set window_ 100
-	$sink set segsperack_ 2
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	#forward
-	$self instvar direction_
-	set direction_ forward
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/iw=4 -superclass TestSuite
-Test/iw=4 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ iw=4
-	$self next
-}
-Test/iw=4 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set stopt 6.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set windowInit_ 4
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppedsyn -superclass TestSuite
-Test/droppedsyn instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppedsyn
-	$self next
-}
-Test/droppedsyn instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 20.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppedsyn: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 1.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.01
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppedfirstseg -superclass TestSuite
-Test/droppedfirstseg instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppedfirstseg
-	$self next
-}
-Test/droppedfirstseg instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 20.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppedfirstseg: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 3.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-#	$ns_ at 0.5 "$self printtimersAll $src 0.5 0.5"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.01
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppedsecondseg -superclass TestSuite
-Test/droppedsecondseg instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppedsecondseg
-	$self next
-}
-Test/droppedsecondseg instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 20.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppedsecondseg: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 4.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-#	$ns_ at 0.5 "$self printtimersAll $src 0.5 0.5"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.01
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/simul-open -superclass TestSuite
-Test/simul-open instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ simul-open
-	$self next
-}
-Test/simul-open instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 9.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "simul-open: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 20.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink; # this is bi-directional
-
-	# set up TCP-level connections
-	set ftp1 [$src attach-app FTP]
-	set ftp2 [$sink attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start; $ftp2 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$sink set window_ 100
-	$sink set delay_growth_ true
-	$sink set tcpTick_ 0.500
-	$sink set packetSize_ 1460
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/simul-close -superclass TestSuite
-Test/simul-close instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ simul-close
-	$self next
-}
-Test/simul-close instproc run {} {
-        global quiet
-	$self instvar ns_ node_ testName_ topo_
-        if {$quiet == "false"} {
-                Agent/TCP/FullTcp set debug_ true;
-        }
-
-	set stopt 9.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$sink set iss_ 10000
-	$ns_ connect $src $sink; # this is bi-directional
-
-	# set up TCP-level connections
-	set ftp1 [$src attach-app FTP]
-	set ftp2 [$sink attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-	$ns_ at 0.9 "$ftp2 start"
-
-	$ns_ at 1.6 "$src close; $sink close"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$sink set window_ 100
-	$sink set delay_growth_ true
-	$sink set tcpTick_ 0.500
-	$sink set packetSize_ 1460
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppednearfin -superclass TestSuite
-Test/droppednearfin instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppednearfin
-	$self next
-}
-Test/droppednearfin instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppednearfin: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 7.0
-	$errmodel set period_ 100.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-	$ns_ at 1.5 "$src close"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppedlastseg -superclass TestSuite
-Test/droppedlastseg instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppedlastseg
-	$self next
-}
-Test/droppedlastseg instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppedlastseg: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 9.0
-	$errmodel set period_ 100.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-	$ns_ at 1.5 "$src close"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppedretransmit -superclass TestSuite
-Test/droppedretransmit instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppedretransmit
-	$self next
-}
-Test/droppedretransmit instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppedretransmit: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 62.0
-	$errmodel set period_ 100.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppednearretransmit -superclass TestSuite
-Test/droppednearretransmit instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppednearretransmit
-	$self next
-}
-Test/droppednearretransmit instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppednearretransmit: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 63.0
-	$errmodel set period_ 100.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppedfastrexmit -superclass TestSuite
-Test/droppedfastrexmit instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppedfastrexmit
-	$self next
-}
-Test/droppedfastrexmit instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppedfastrexmit: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 61.0
-	$errmodel set period_ 100.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/ecn1 -superclass TestSuite
-Test/ecn1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ ecn1
-	$self next
-}
-Test/ecn1 instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "ecn1: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 10.0
-	$errmodel set period_ 30.0
-	$errmodel set markecn_ true; # mark ecn's, don't drop
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$src set ecn_ true
-	$sink set ecn_ true
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/ecn2 -superclass TestSuite
-Test/ecn2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ ecn2
-	$self next
-}
-Test/ecn2 instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "ecn2: confused by >1 err models..abort"
-		exit 1
-	}
-
-	#$errmodel set offset_ 30.0
-	$errmodel set offset_ 130.0
-	$errmodel set period_ 100.0
-	$errmodel set markecn_ true; # mark ecn's, don't drop
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$src set ecn_ true
-	$sink set ecn_ true
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/droppedfin -superclass TestSuite
-Test/droppedfin instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0-lossy
-	set test_ droppedfin
-	$self next
-}
-Test/droppedfin instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	$topo_ instvar lossylink_
-	set errmodule [$lossylink_ errormodule]
-	set errmodel [$errmodule errormodels]
-	if { [llength $errmodel] > 1 } {
-		puts "droppedfin: confused by >1 err models..abort"
-		exit 1
-	}
-
-	$errmodel set offset_ 10.0
-	$errmodel set period_ 100.0
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set ftp1 [$src attach-app FTP]
-	$ns_ at 0.7 "$ftp1 start"
-	$ns_ at 1.5 "$src close"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-Class Test/smallpkts -superclass TestSuite
-Test/smallpkts instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ smallpkts
-	$self next
-}
-Test/smallpkts instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$sink set interval_ 200ms
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$ns_ at 0.5 "$src advance-bytes 30"
-	$ns_ at 0.75 "$src advance-bytes 300"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# this test sets the receiver's notion of the mss larger than
-# the sender and sets segsperack to 3.  So, only if there is
-# > 3*4192 bytes accumulated would an ACK occur [i.e. never].
-# So, because the
-# delack timer is set for 200ms, the upshot here is that
-# we see ACKs as pushed out by this timer only
-#
-Class Test/telnet -superclass TestSuite
-Test/telnet instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ telnet(200ms-delack)
-	$self next
-}
-Test/telnet instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$sink set interval_ 200ms
-	$sink set segsize_ 4192; # or wait up to 3*4192 bytes to ACK
-	$sink set segsperack_ 3
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set telnet1 [$src attach-app Telnet]
-	$telnet1 set interval_ 0ms
-	$ns_ at 0.5 "$telnet1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# this test is the same as the last one, but changes the
-# receiver's notion of the mss, delack interval, and segs-per-ack.
-# The output indicates some places where ACKs are generated due
-# to the timer and other are due to meeting the segs-per-ack limit
-# before the timer
-#
-Class Test/telnet2 -superclass TestSuite
-Test/telnet2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ telnet2(3segperack-600ms-delack)
-	$self next
-}
-Test/telnet2 instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$sink set interval_ 600ms
-	$sink set segsize_ 536; # or wait up to 3*536 bytes to ACK
-	$sink set segsperack_ 3
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	set telnet1 [$src attach-app Telnet]
-	$telnet1 set interval_ 0ms
-	$ns_ at 0.5 "$telnet1 start"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set segsize_ 536
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# this test exercises the "slow_start_restart_" option
-# with ssr set to false, illustrates the line-rate-bursts which occur
-# after the window has grown large but the app has stopped writes
-#
-Class Test/SSR -superclass TestSuite
-Test/SSR instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ slow-start-restart
-	$self next
-}
-Test/SSR instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$src set slow_start_restart_ false
-	$sink listen
-	$ns_ at 0.5 "$src advance-bytes 10000"
-	$ns_ at 5.0 "$src advance-bytes 10000"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set slow_start_restart true
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set segsize_ 536
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# same test as SSR, but this time turn slow_start_restart on
-#
-Class Test/SSR2 -superclass TestSuite
-Test/SSR2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ slow-start-restart-fix
-	$self next
-}
-Test/SSR2 instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$src set slow_start_restart_ true
-	$sink listen
-	$ns_ at 0.5 "$src advance-bytes 10000"
-	$ns_ at 5.0 "$src advance-bytes 10000"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set slow_start_restart true
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set segsize_ 536
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# A test of the timestamp option
-#
-Class Test/tsopt -superclass TestSuite
-Test/tsopt instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ tsopt
-	$self next
-}
-Test/tsopt instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$sink set timestamps_ true
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$src set timestamps_ true
-	$sink listen
-	$ns_ at 0.5 "$src advance-bytes 100000"
-
-	# set up special params for this test
-	$src set window_ 100
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set segsize_ 536
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-#
-# A test where we are window limited
-#
-Class Test/winlimited -superclass TestSuite
-Test/winlimited instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_ $topo
-	set defNet_ net0
-	set test_ winlimited
-	$self next
-}
-Test/winlimited instproc run {} {
-	$self instvar ns_ node_ testName_ topo_
-
-	set stopt 10.0	
-
-	# set up connection (do not use "create-connection" method because
-	# we need a handle on the sink object)
-	set src [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $src
-	$ns_ attach-agent $node_(k1) $sink
-	$src set fid_ 0
-	$sink set fid_ 0
-	$ns_ connect $src $sink
-
-	# set up TCP-level connections
-	$sink listen
-	$ns_ at 0.5 "$src advance-bytes 100000"
-
-	# set up special params for this test
-	$src set window_ 5
-	$src set delay_growth_ true
-	$src set tcpTick_ 0.500
-	$src set segsize_ 536
-	$src set packetSize_ 576
-
-	$self traceQueues $node_(r1) [$self openTrace $stopt $testName_]
-	$ns_ run
-}
-
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-gk.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-gk.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-gk.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-gk.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,548 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUGKENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# To run all tests: test-all-gk
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-catch "cd $dir"
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set overhead_ 0.001
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set gkq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$gkq trace curq_
-	$gkq attach $tchan_
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms GK
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 10ms GK
-    $ns duplex-link $node_(r2) $node_(r1) 1.5Mb 10ms GK
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 3ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for GK gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q
-	exec touch temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-Class Test/gk1 -superclass TestSuite
-Test/gk1 instproc init {} {
-    $self instvar net_ test_
-    Agent/TCP set ecn_ 1
-    set net_	net2
-    set test_	ecn
-    $self next pktTraceFile
-}
-Test/gk1 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo 
-
-    set stoptime 10.0
-    set gkq [[$ns_ link $node_(r1) $node_(r2)] queue]
-		
-   	$gkq set ecnlim_ 0.8 
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 50
-    $tcp1 set ecn_ 1
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 50
-    $tcp2 set ecn_ 1
-        
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-        
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-        
-    $self tcpDump $tcp1 5.0
-        
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-        
-    $ns_ run
-}
-
-Class Test/gk2 -superclass TestSuite
-Test/gk2 instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	gk2
-    $self next pktTraceFile
-}
-Test/gk2 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set gkq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$gkq set ecnlim_ 0.6 
-	
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 100 
-    $tcp1 set ecn_ 1
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 100
-    $tcp2 set ecn_ 1
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-Class Test/gk_twoway -superclass TestSuite
-Test/gk_twoway instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	gk_twoway
-    $self next pktTraceFile
-}
-Test/gk_twoway instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set gkq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$gkq set ecnlim_ 0.8 
-		
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 100
-    $tcp1 set ecn_ 1
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 1]
-    $tcp2 set window_ 100
-    $tcp2 set ecn_ 1
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s3) TCPSink/Sack1 $node_(s1) 2]
-    $tcp3 set window_ 100
-    $tcp3 set ecn_ 1
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s4) TCPSink/Sack1 $node_(s2) 3]
-    $tcp4 set window_ 100
-    $tcp4 set ecn_ 1
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-#
-#######################################################################
-
-TestSuite instproc create_flowstats {} {
-
-	global flowfile flowchan
-	$self instvar ns_ node_ r1fm_
-
-	set r1fm_ [$ns_ makeflowmon Fid]
-	set flowchan [open $flowfile w]
-	$r1fm_ attach $flowchan
-	$ns_ attach-fmon [$ns_ link $node_(r1) $node_(r2)] $r1fm_ 1
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [pkts]
-#	(verified compatible for ns2 - kfall, 10/30/97)
-TestSuite instproc unforcedmakeawk { } {
-        set awkCode {
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && $14 > 0) {
-			    print 100.0 * $9/$13, 100.0 * $10 / $14
-			}
-			prev = $2;
-                } else if ($13 > 0 && $14 > 0) {
-                        print 100.0 * $9 / $13, 100.0 * $10 / $14
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [bytes]
-#	(modified for compatibility with ns2 flowmon - kfall, 10/30/97)
-TestSuite instproc forcedmakeawk { } {
-        set awkCode {
-            BEGIN { print "\"flow 0" }
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && ($17 - $15) > 0) {
-				print 100.0 * $9/$13, 100.0 * ($19 - $11) / ($17 - $15);
-			}
-			prev = $2;
-                } else if ($13 > 0 && ($17 - $15) > 0) {
-                        print 100.0 * $9 / $13, 100.0 * ($19 - $11) / ($17 - $15)
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#      x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#      y axis: # drops for this flow / # drops [pkts and bytes combined]
-TestSuite instproc allmakeawk { } {
-    set awkCode {
-        BEGIN {prev=-1; tot_bytes=0; tot_packets=0; forced_total=0; unforced_total=0}
-        {
-            if ($5 != prev) {
-                print " "; print "\"flow ",$5;
-                prev = $5
-            }
-            tot_bytes = $19-$11;
-            forced_total= $16-$14;
-            tot_packets = $10;
-            tot_arrivals = $9;
-            unforced_total = $14;
-            if (unforced_total + forced_total > 0) {
-                if ($14 > 0) {
-                    frac_packets = tot_packets/$14;
-                }
-                else { frac_packets = 0;}
-                if ($17-$15 > 0) {
-                    frac_bytes = tot_bytes/($17-$15);
-                }
-                else {frac_bytes = 0;} 
-                if ($13 > 0) {
-                    frac_arrivals = tot_arrivals/$13;
-                }
-                else {frac_arrivals = 0;}
-                if (frac_packets + frac_bytes > 0) {
-                    unforced_total_part = frac_packets * unforced_total / ( unforced_total + forced_total)
-                    forced_total_part = frac_bytes * forced_total / ( unforced_total + forced_total)
-                    print 100.0 * frac_arrivals, 100.0 * ( unforced_total_part +forced_total_part)
-                }
-            }
-        }
-    }
-    return $awkCode
-}
-
-TestSuite instproc create_flow_graph { graphtitle graphfile } {
-        global flowfile quiet
-	$self instvar awkprocedure_
-
-        if {$quiet == "false"} {
-		puts "awkprocedure: $awkprocedure_"
-	}
-
-        set tmpfile1 /tmp/fg1[pid]
-        set tmpfile2 /tmp/fg2[pid]
-
-        exec rm -f $graphfile
-        set outdesc [open $graphfile w]
-        #
-        # this next part is xgraph specific
-        #
-        puts $outdesc "TitleText: $graphtitle"
-        puts $outdesc "Device: Postscript"
-
-        exec rm -f $tmpfile1 $tmpfile2
-	if {$quiet == "false"} {
-        	puts "writing flow xgraph data to $graphfile..."
-	}
-
-        exec sort -n -k2 -o $flowfile $flowfile
-        exec awk [$self $awkprocedure_] $flowfile >@ $outdesc
-        close $outdesc
-}
-
-TestSuite instproc finish_flows testname {
-	global flowgraphfile flowfile flowchan quiet
-	$self instvar r1fm_
-	$r1fm_ dump
-	close $flowchan
-	$self create_flow_graph $testname $flowgraphfile
-	if {$quiet == "false"} {
-		puts "running xgraph..."
-	}
-	exec cp $flowgraphfile temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -lx 0,100 -ly 0,100 -x "% of data bytes" -y "% of discards" $flowgraphfile &
-	}
-	exit 0
-}
-
-
-TestSuite instproc new_tcp { startTime source dest window fid verbose size } {
-	$self instvar ns_
-	set tcp [$ns_ create-connection TCP/Sack1 $source TCPSink/Sack1 $dest $fid]
-	$tcp set window_ $window
-	if {$size > 0}  {$tcp set packetSize_ $size }
-	set ftp [$tcp attach-app FTP]
-	$ns_ at $startTime "$ftp start"
-	if {$verbose == "1"} {
-
-	  $self tcpDumpAll $tcp 20.0 $fid 
-	}
-}
-
-TestSuite instproc new_cbr { startTime source dest pktSize interval fid } {
-
-	$self instvar ns_
-    set s_agent [new Agent/UDP]	
-    set d_agent [new Agent/LossMonitor]
-    $s_agent set fid_ $fid 
-    $d_agent set fid_ $fid 
-    set cbr [new Application/Traffic/CBR]
-    $cbr attach-agent $s_agent
-    $ns_ attach-agent $source $s_agent
-    $ns_ attach-agent $dest $d_agent
-    $ns_ connect $s_agent $d_agent
-
-    if {$pktSize > 0} {
-	$cbr set packetSize_ $pktSize
-    }
-    $cbr set rate_ [expr 8 * $pktSize / $interval]
-    $ns_ at $startTime "$cbr start"
-}
-
-TestSuite instproc dumpflows interval {
-    $self instvar dumpflows_inst_ ns_ r1fm_
-    $self instvar awkprocedure_ dump_pthresh_
-    global flowchan
-
-    if ![info exists dumpflows_inst_] {
-        set dumpflows_inst_ 1
-        $ns_ at 0.0 "$self dumpflows $interval"
-        return  
-    }
-    if { $awkprocedure_ == "unforcedmakeawk" } {
-	set pcnt [$r1fm_ set epdrops_]
-    } elseif { $awkprocedure_ == "forcedmakeawk" } {
-	set pcnt [expr [$r1fm_ set pdrops_] - [$r1fm_ set epdrops_]]
-    } elseif { $awkprocedure_ == "allmakeawk" } {
-	set pcnt [$r1fm_ set pdrops_]
-    } else {
-	puts stderr "unknown handling of flow dumps!"
-	exit 1
-    }
-    if { $pcnt >= $dump_pthresh_ } {
-	    $r1fm_ dump
-	    flush $flowchan
-	    foreach f [$r1fm_ flows] {
-		$f reset
-	    }
-	    $r1fm_ reset
-	    set interval 2.0
-    } else {
-	    set interval 1.0
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self dumpflows $interval"
-}   
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-greis.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-greis.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-greis.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-greis.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,668 +0,0 @@
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-#
-# ****** Note: please keep this test-suite sync'ed with the example scripts 
-#              provided in the tutorial. Thanks.
-#
-# This test suite is for validating all the examples in Marc Greis tutorial
-# that's now on the ns web pages at http://www.isi.edu/nsnam/ns/tutorial/index.html
-#
-# To run all tests: test-all-greis
-# to run individual test:
-# ns test-suite-greis.tcl example1
-# ns test-suite-greis.tcl example1a
-# ....
-#
-# To view a list of available test to run with this script:
-# ns test-suite-greis.tcl
-#
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Class TestSuite
-
-Class Test/example1 -superclass TestSuite
-Class Test/example1a -superclass TestSuite
-Class Test/example1b -superclass TestSuite
-Class Test/example2 -superclass TestSuite
-Class Test/example3 -superclass TestSuite
-Class Test/example4 -superclass TestSuite
-Class Test/ping -superclass TestSuite 
-Class Test/pingOneWay -superclass TestSuite
-
-proc usage {} {
-    global argv0
-    puts stderr "usage: ns $argv0 <tests> "
-    puts "Valid Tests: example1 example1a example1b example2 \
-                       example3 example4 ping pingOneWay"
-    exit 1
-}
-
-#example1.tcl
-Test/example1 instproc init {} {
-    $self instvar ns testName nf
-    set testName example1
-
-    #create a simulator object
-    set ns [new Simulator]
-
-    #open a file for writing that is used for nam trace data
-    set nf [open temp.rands w]
-    $ns namtrace-all $nf
-}
-
-#finish procedure that closes the trace file and starts nam
-Test/example1 instproc finish {} {
-    global quiet
-    $self instvar ns nf
-    $ns flush-trace
-    close $nf
-    if {$quiet == "false"} { 
-	puts "finishing.." 
-    }
-    exit 0
-}
-
-Test/example1 instproc run {} {
-    $self instvar ns 
-
-    #execute the "finish" procedure after 5.0 seconds of simulation time
-    $ns at 5.0 "$self finish"
-
-    #start the simulation
-    $ns run
-}
-
-#example1a.tcl
-Test/example1a instproc init {} {
-    $self instvar ns testName nf
-    set testName example1a
-
-    #Create a simulator object
-    set ns [new Simulator]
-
-    #Open the nam trace file
-    set nf [open temp.rands w]
-    $ns namtrace-all $nf
-}
-
-#Define a 'finish' procedure
-Test/example1a instproc finish {} {
-        global quiet
-        $self instvar ns nf
-        $ns flush-trace
-	#Close the trace file
-        close $nf
-	#Execute nam on the trace file
-        if {$quiet == "false"} { 
-	puts "finishing.."
-	}
-        exit 0
-}
-
-
-Test/example1a instproc run {} {
-    $self instvar ns
-
-    # Insert your own code for topology creation
-    # and agent definitions, etc. here
-    set n0 [$ns node]
-    set n1 [$ns node]
-
-    $ns duplex-link $n0 $n1 1Mb 10ms DropTail
-
-    #Call the finish procedure after 5 seconds simulation time
-    $ns at 5.0 "$self finish"
-
-    #Run the simulation
-    $ns run
-}
-
-#example1b.tcl
-Test/example1b instproc init {} {
-    $self instvar ns testName nf
-    set testName example1b
-    #Create a simulator object
-    set ns [new Simulator]
-    
-    #Open the nam trace file
-    set nf [open temp.rands w]
-    $ns namtrace-all $nf
-}
-
-#Define a 'finish' procedure
-Test/example1b instproc finish {} {
-        global quiet
-        $self instvar ns nf
-        $ns flush-trace
-	#Close the trace file
-        close $nf
-	#Execute nam on the trace file
-        if {$quiet == "false"} { 
-	    puts "finishing.." 
-	}
-        exit 0
-}
-
-Test/example1b instproc run {} {
-    $self instvar ns
-    #Create two nodes
-    set n0 [$ns node]
-    set n1 [$ns node]
-
-    #Create a duplex link between the nodes
-    $ns duplex-link $n0 $n1 1Mb 10ms DropTail
-
-    #Create a CBR agent and attach it to node n0
-    set udp0 [new Agent/UDP]
-    $ns attach-agent $n0 $udp0
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 500
-    $cbr0 set interval_ 0.005
-    $cbr0 attach-agent $udp0
-
-    #Create a Null agent (a traffic sink) and attach it to node n1
-    set null0 [new Agent/Null]
-    $ns attach-agent $n1 $null0
-    
-    #Connect the traffic source with the traffic sink
-    $ns connect $udp0 $null0  
-
-    #Schedule events for the CBR traffic generator
-    $ns at 0.5 "$cbr0 start"
-    $ns at 4.5 "$cbr0 stop"
-
-    #Call the finish procedure after 5 seconds of simulation time
-    $ns at 5.0 "$self finish"
-
-    #Run the simulation
-    $ns run
-}
-
-#example2.tcl
-Test/example2 instproc init {} {
-    $self instvar ns testName nf
-    set testName example2
-
-    #Create a simulator object
-    set ns [new Simulator]
-
-    #Define different colors for data flows
-    $ns color 1 Blue
-    $ns color 2 Red
-
-    #Open the nam trace file
-    set nf [open temp.rands w]
-    $ns namtrace-all $nf
-}
-
-#Define a 'finish' procedure
-Test/example2 instproc finish {} {
-        global quiet
-        $self instvar ns nf
-        $ns flush-trace
-	#Close the trace file
-        close $nf
-	#Execute nam on the trace file
-        if {$quiet == "false"} { puts "finishing.." }
-        exit 0
-}
-
-Test/example2 instproc run {} {
-    $self instvar ns
-
-    #Create four nodes
-    set n0 [$ns node]
-    set n1 [$ns node]
-    set n2 [$ns node]
-    set n3 [$ns node]
-
-    #Create links between the nodes
-    $ns duplex-link $n0 $n2 1Mb 10ms DropTail
-    $ns duplex-link $n1 $n2 1Mb 10ms DropTail
-    $ns duplex-link $n3 $n2 1Mb 10ms SFQ
-
-    $ns duplex-link-op $n0 $n2 orient right-down
-    $ns duplex-link-op $n1 $n2 orient right-up
-    $ns duplex-link-op $n2 $n3 orient right
-
-    #Monitor the queue for the link between node 2 and node 3
-    $ns duplex-link-op $n2 $n3 queuePos 0.5
-
-    #Create a UDP agent with CBR traffic and attach it to node n0
-    set udp0 [new Agent/UDP]
-    $ns attach-agent $n0 $udp0
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 500
-    $cbr0 set interval_ 0.005
-    $cbr0 set fid_ 0
-    $cbr0 attach-agent $udp0
-
-    #Create a UDP agent with CBR traffic and attach it to node n1
-    set udp1 [new Agent/UDP]
-    $ns attach-agent $n1 $udp1
-    set cbr1 [new Application/Traffic/CBR]
-    $cbr1 set packetSize_ 500
-    $cbr1 set interval_ 0.005
-    $cbr1 set fid_ 2
-    $cbr1 attach-agent $udp1
-
-    #Create a Null agent (a traffic sink) and attach it to node n3
-    set null0 [new Agent/Null]
-    $ns attach-agent $n3 $null0
-
-    #Connect the traffic sources with the traffic sink
-    $ns connect $udp0 $null0  
-    $ns connect $udp1 $null0
-
-    #Schedule events for the CBR traffic generators
-    $ns at 0.5 "$cbr0 start"
-    $ns at 1.0 "$cbr1 start"
-    $ns at 4.0 "$cbr1 stop"
-    $ns at 4.5 "$cbr0 stop"
-
-    #Call the finish procedure after 5 seconds of simulation time
-    $ns at 5.0 "$self finish"
-
-    #Run the simulation
-    $ns run
-}
-
-#example3.tcl
-Test/example3 instproc init {} {
-    $self instvar ns testName nf 
-    set testName example3
-
-    #Create a simulator object
-    set ns [new Simulator]
-
-    #Tell the simulator to use dynamic routing
-    $ns rtproto DV
-
-    #Open the nam trace file
-    set nf [open temp.rands w]
-    $ns namtrace-all $nf
-}
-
-#Define a 'finish' procedure
-Test/example3 instproc finish {} {
-        global quiet
-        $self instvar ns nf
-        $ns flush-trace
-	#Close the trace file
-        close $nf
-	#Execute nam on the trace file
-        if {$quiet == "false"} { 
-	    puts "finishing.." 
-	}
-        exit 0
-}
-
-Test/example3 instproc run {} {
-    $self instvar ns n
-
-    #Create seven nodes
-    for {set i 0} {$i < 7} {incr i} {
-        set n($i) [$ns node]
-    }
-
-    #Create links between the nodes
-    for {set i 0} {$i < 7} {incr i} {
-        $ns duplex-link $n($i) $n([expr ($i+1)%7]) 1Mb 10ms DropTail
-    }
-
-    #Create a UDP agent with CBR traffic and attach it to node n(0)
-    set udp0 [new Agent/UDP]
-    $ns attach-agent $n(0) $udp0
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 set packetSize_ 500
-    $cbr0 set interval_ 0.005
-    $cbr0 attach-agent $udp0
-
-    #Create a Null agent (a traffic sink) and attach it to node n(3)
-    set null0 [new Agent/Null]
-    $ns attach-agent $n(3) $null0
-
-    #Connect the traffic source with the traffic sink
-    $ns connect $udp0 $null0  
-
-    #Schedule events for the CBR agent and the network dynamics
-    $ns at 0.5 "$cbr0 start"
-    $ns rtmodel-at 1.0 down $n(1) $n(2)
-    $ns rtmodel-at 2.0 up $n(1) $n(2)
-    $ns at 4.5 "$cbr0 stop"
-
-    #Call the finish procedure after 5 seconds of simulation time
-    $ns at 5.0 "$self finish"
-
-    #Run the simulation
-    $ns run
-}
-
-#example4.tcl
-Test/example4 instproc init {} {
-    global f0 f1 f2
-    $self instvar ns testName 
-    set testName example4
-
-    #Create a simulator object
-    set ns [new Simulator]
-
-    exec rm -f temp.rands
-
-    #Open the output files
-    set f0 [open out0.tr w]
-    set f1 [open out1.tr w]
-    set f2 [open out2.tr w]
-}
-
-#Define a 'finish' procedure
-Test/example4 instproc finish {} {
-    global f0 f1 f2 quiet
-
-    #Close the output files
-    puts $f0 " "
-    puts $f1 " "
-    puts $f2 " "
-    close $f0
-    close $f1
-    close $f2
-
-    exec cat out0.tr out1.tr out2.tr > temp.rands
-    exec rm -f out0.tr out1.tr out2.tr
-
-    #Call xgraph to display the results
-     if {$quiet == "false"} {
-        exec xgraph -bb -tk temp.rands &
-    }
-
-    exit 0
-}
-
-
-#Define a procedure that attaches a UDP agent to a previously created node
-#'node' and attaches an Expoo traffic generator to the agent with the
-#characteristic values 'size' for packet size 'burst' for burst time,
-#'idle' for idle time and 'rate' for burst peak rate. The procedure connects
-#the source with the previously defined traffic sink 'sink' and returns the
-#source object.
-proc attach-expoo-traffic { node sink size burst idle rate } {
-        #Get an instance of the simulator
-        set ns [Simulator instance]
-
-	#Create a UDP agent and attach it to the node
-	set source [new Agent/UDP]
-	$ns attach-agent $node $source
-	#Create an Expoo traffic agent and set its configuration parameters
-	set traffic [new Application/Traffic/Exponential]
-	$traffic set packetSize_ $size
-	$traffic set burst_time_ $burst
-	$traffic set idle_time_ $idle
-	$traffic set rate_ $rate
-	#Attach the traffic source  to the traffic generator
-	$traffic attach-agent $source
-	#Connect the source and the sink
-	$ns connect $source $sink
-	return $traffic
-}
-
-#Define a procedure which periodically records the bandwidth received by the
-#three traffic sinks sink0/1/2 and writes it to the three files f0/1/2.
-Test/example4 instproc record {} {
-    global sink0 sink1 sink2 f0 f1 f2
-    $self instvar ns
-
-    #Set the time after which the procedure should be called again
-     set time 0.5
-	
-    #How many bytes have been received by the traffic sinks?
-     set bw0 [$sink0 set bytes_]
-     set bw1 [$sink1 set bytes_]
-     set bw2 [$sink2 set bytes_]
-	
-    #Get the current time
-     set now [$ns now]
-	
-    #Calculate the bandwidth (in MBit/s) and write it to the files
-     puts $f0 "$now [expr $bw0/$time*8/1000000]"
-     puts $f1 "$now [expr $bw1/$time*8/1000000]"
-     puts $f2 "$now [expr $bw2/$time*8/1000000]"
-	
-    #Reset the bytes_ values on the traffic sinks
-     $sink0 set bytes_ 0
-     $sink1 set bytes_ 0
-     
-     $sink2 set bytes_ 0
-     #Re-schedule the procedure
-     $ns at [expr $now+$time] "$self record"
-}
-
-
-Test/example4 instproc run {} {
-    global sink0 sink1 sink2 f0 f1 f2 source0 source1 source2
-    $self instvar ns 
-
-    #Create 5 nodes
-    set n0 [$ns node]
-    set n1 [$ns node]
-    set n2 [$ns node]
-    set n3 [$ns node]
-    set n4 [$ns node]
-
-    #Connect the nodes
-    $ns duplex-link $n0 $n3 1Mb 100ms DropTail
-    $ns duplex-link $n1 $n3 1Mb 100ms DropTail
-    $ns duplex-link $n2 $n3 1Mb 100ms DropTail
-    $ns duplex-link $n3 $n4 1Mb 100ms DropTail
-
-    #Create three traffic sinks and attach them to the node n4
-    set sink0 [new Agent/LossMonitor]
-    set sink1 [new Agent/LossMonitor]
-    set sink2 [new Agent/LossMonitor]
-    $ns attach-agent $n4 $sink0
-    $ns attach-agent $n4 $sink1
-    $ns attach-agent $n4 $sink2
-
-    #Create three traffic sources
-    set source0 [attach-expoo-traffic $n0 $sink0 200 2s 1s 100k]
-    set source1 [attach-expoo-traffic $n1 $sink1 200 2s 1s 200k]
-    set source2 [attach-expoo-traffic $n2 $sink2 200 2s 1s 300k]
-
-    #Start logging the received bandwidth
-    $ns at 0.0 "$self record"
-
-    #Start the traffic sources
-    $ns at 10.0 "$source0 start"
-    $ns at 10.0 "$source1 start"
-    $ns at 10.0 "$source2 start"
-
-    #Stop the traffic sources
-    $ns at 50.0 "$source0 stop"
-    $ns at 50.0 "$source1 stop"
-    $ns at 50.0 "$source2 stop"
-
-    #Call the finish procedure after 60 seconds simulation time
-    $ns at 60.0 "$self finish"
-
-    #Run the simulation
-    $ns run
-}
-
-Test/ping instproc init {} {
-    $self instvar ns testName nf
-    set testName ping
-
-    #Create a simulator object
-    set ns [new Simulator]
-
-    #Open the nam trace file
-    set nf [open temp.rands w]
-    $ns namtrace-all $nf
-}    
-
-Test/ping instproc finish {} {
-        global quiet
-        $self instvar ns nf
-        $ns flush-trace
-        #Close the trace file
-        close $nf
-        #Execute nam on the trace file
-        if {$quiet == "false"} {
-            puts "finishing.."
-        }
-        exit 0
-}       
-
-Test/ping instproc run {} {
-    $self instvar ns
-    #Create three nodes
-    set n0 [$ns node] 
-    set n1 [$ns node]
-    set n2 [$ns node]
-
-    #Connect the nodes with two links
-    $ns duplex-link $n0 $n1 1Mb 10ms DropTail
-    $ns duplex-link $n1 $n2 1Mb 10ms DropTail
-
-    #Define a 'recv' function for the class 'Agent/Ping'
-    Agent/Ping instproc recv {from rtt} {
-        $self instvar node_
-        puts "node [$node_ id] received ping answer from \
-              $from with round-trip-time $rtt ms."
-    }
-
-    #Create two ping agents and attach them to the nodes n0 and n2
-    set p0 [new Agent/Ping]
-    $ns attach-agent $n0 $p0
-   
-    set p1 [new Agent/Ping]
-    $ns attach-agent $n2 $p1
-
-    #Connect the two agents
-    $ns connect $p0 $p1
-
-    #Schedule events
-    $ns at 0.2 "$p0 send"
-    $ns at 0.4 "$p1 send"
-    $ns at 0.6 "$p0 send"
-    $ns at 0.6 "$p1 send"
-    $ns at 1.0 "$self finish"
-
-    #Run the simulation
-    $ns run  
-}
-
-Test/pingOneWay instproc init {} [Test/ping info instbody init]
-Test/pingOneWay instproc finish {} [Test/ping info instbody finish]
-
-Test/pingOneWay instproc run {} {
-    $self instvar ns
-    #Create three nodes
-    set n0 [$ns node] 
-    set n1 [$ns node]
-    set n2 [$ns node]
-
-    #Connect the nodes with two links
-    $ns simplex-link $n1 $n0 1Mb 10ms DropTail
-    $ns simplex-link $n0 $n1 1Mb 100ms DropTail
-    $ns duplex-link $n1 $n2 0.01Mb 10ms DropTail
-
-    #Define a 'recv' function for the class 'Agent/Ping'
-    Agent/Ping instproc recv {from seq ff bf} {
-        $self instvar node_
-        global rttf
-        puts "ping reply from node $from to [$node_ id] with seqno\
-              $seq: forward $ff ms, reverse $bf ms."
-    }
-
-    #Create two ping agents and attach them to the nodes n0 and n2
-    set p0 [new Agent/Ping]
-    $ns attach-agent $n0 $p0
-    $p0 oneway
-   
-    set p1 [new Agent/Ping]
-    $ns attach-agent $n2 $p1
-    $p1 oneway
-
-    #Connect the two agents
-    $ns connect $p0 $p1
-
-    #Schedule events
-    $ns at 0.2 "$p0 send"
-    $ns at 0.4 "$p1 send"
-    $ns at 0.6 "$p0 send"
-    $ns at 0.6 "$p1 send"
-    $ns at 0.61 "$p0 send"
-    $ns at 0.61 "$p1 send"
-    $ns at 1.0 "$self finish"
-
-    #Run the simulation
-    $ns run  
-}
-
-proc runtest {arg} {
-    global quiet
-    set quiet false
-    set b [llength $arg]
-    if {$b == 1} {
-	set test $arg
-    } elseif {$b == 2} {
-	set test [lindex $arg 0]
-	set second [lindex $arg 1]
-	if {$second == "QUIET" || $second == "quiet"} {
-		set quiet true
-	}
-    } else {
-	usage
-    }
-    if [catch {set t [new Test/$test]} result] {
-	puts stderr $result
-	puts "Error: Unknown test:$test"
-	usage
-	exit 1
-    }
-    $t run
-}
-
-global argv argv0
-runtest $argv
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-hier-routing.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-hier-routing.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-hier-routing.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-hier-routing.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,313 +0,0 @@
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-# XXX Strange strange:
-#  There is a order dependence of hierarchical routing and multicast: 
-#
-#  if you turn on hier routing BEFORE multicast, the trace result is
-#  different from you turn on hier routing AFTER multicast. The reason is
-#  that set-address-format{} checks multicast from ns-address.tcl; if it's 
-#  on, it sets a different address format.
-#
-#  What I don't understand is, since hier addressing format depends on
-#  whether mcast is on, why in the test suite test-suite-hier-routing.tcl,
-#  multicast is turned on AFTER hierarchical routing? Is this a bug? Should
-#  there be this dependence? 
-
-# This test suite is for validating hierarchical routing
-# To run all tests: test-all-hier-routing
-# to run individual test:
-# ns test-suite-hier-routing.tcl hier-simple
-# ns test-suite-hier-routing.tcl hier-cmcast
-# ....
-#
-# To view a list of available test to run with this script:
-# ns test-suite-hier-routing.tcl
-#
-# Every test uses a 10 node hierarchical topology
-
-##remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Class TestSuite
-
-# Simple hierarchical routing
-Class Test/hier-simple -superclass TestSuite
-
-# hierarchical routing with CentralisedMcast
-Class Test/hier-cmcast -superclass TestSuite
-
-# session simulations using hierarchical routing
-Class Test/hier-session -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: hier-simple hier-cmcast hier-deDM \
-			hier-session"
-	exit 1
-}
-
-# A place holder that can be overridden
-TestSuite instproc init-hier-routing {} {
-	$self instvar ns_
-	# By default we use node-config, then we switch to HierNode to 
-	# test backward compability
-	$ns_ node-config -addressType hierarchical
-}
-
-TestSuite instproc init-simulator {} {
-}
-
-TestSuite instproc alloc-mcast-addr {} {
-}
-
-TestSuite instproc init {} {
-	$self instvar ns_ n_ g_ testName_
-	$self init-simulator
-	$self init-hier-routing
-	$self alloc-mcast-addr
-	#setup hierarchical topology
-	AddrParams set domain_num_ 2
-	lappend cluster_num 2 2
-	AddrParams set cluster_num_ $cluster_num
-	lappend eilastlevel 2 3 2 3
-	AddrParams set nodes_num_ $eilastlevel
-	set naddr {0.0.0 0.0.1 0.1.0 0.1.1 0.1.2 1.0.0 1.0.1 1.1.0 \
-			1.1.1 1.1.2}
-	for {set i 0} {$i < 10} {incr i} {
-		set n_($i) [$ns_ node [lindex $naddr $i]]
-	}
-	$ns_ duplex-link $n_(0) $n_(1) 5Mb 2ms DropTail
-	$ns_ duplex-link $n_(1) $n_(2) 5Mb 2ms DropTail
-	$ns_ duplex-link $n_(2) $n_(3) 5Mb 2ms DropTail
-	$ns_ duplex-link $n_(2) $n_(4) 5Mb 2ms DropTail
-	$ns_ duplex-link $n_(1) $n_(5) 5Mb 2ms DropTail
-	$ns_ duplex-link $n_(5) $n_(6) 5Mb 2ms DropTail
-	$ns_ duplex-link $n_(6) $n_(7) 5Mb 2ms DropTail
-	$ns_ duplex-link $n_(7) $n_(8) 5Mb 2ms DropTail
-	$ns_ duplex-link $n_(8) $n_(9) 5Mb 2ms DropTail
-
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        if { !$quiet } {
-                puts "running nam..."
-                exec nam temp.rands.nam &
-        }
-	#puts "finishing.."
-	exit 0
-}
-
-Test/hier-simple instproc init {} {
-	$self instvar testName_ 
-	set testName_ hier-simple
-	$self next
-}
-
-Test/hier-simple instproc init-simulator {} {
-	$self instvar ns_
-	set ns_ [new Simulator]
-	$ns_ trace-all [open temp.rands w]
-	$ns_ namtrace-all [open temp.rands.nam w]
-}
-
-Test/hier-simple instproc run {} {
-	$self instvar ns_ n_ 
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $n_(0) $udp0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	set udp1 [new Agent/UDP]
-	$ns_ attach-agent $n_(2) $udp1
-	$udp1 set class_ 1
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-
-	set null0 [new Agent/Null]
-	$ns_ attach-agent $n_(8) $null0
-	set null1 [new Agent/Null]
-	$ns_ attach-agent $n_(6) $null1
-
-	$ns_ connect $udp0 $null0
-	$ns_ connect $udp1 $null1
-	$ns_ at 1.0 "$cbr0 start"
-	$ns_ at 1.1 "$cbr1 start"
-	$ns_ at 3.0 "$self finish"
-	$ns_ run
-
-}
-
-Test/hier-cmcast instproc init {} {
-	$self instvar ns_ testName_
-	set testName_ hier-cmcast
-	$self next 
-}
-
-Test/hier-cmcast instproc init-simulator {} {
-	$self instvar ns_
-	set ns_ [new Simulator]
-	$ns_ trace-all [open temp.rands w]
-	$ns_ namtrace-all [open temp.rands.nam w]
-}
-
-Test/hier-cmcast instproc alloc-mcast-addr {} {
-	$self instvar g_ ns_
-	# XXX If we first allocate a simulator with -multicast on, then 
-	# turn on hierarchical routing, the result trace file is different
-	# from we turn multicast on AFTER we turn on hierarchical routing!
-	# The reason is that set-address-format{} in ns-address.tcl sets a 
-	# different address format if it finds multicast is turned on. 
-	$ns_ multicast on
-	set g_ [Node allocaddr]
-}
-
-Test/hier-cmcast instproc run {} {
-	$self instvar ns_ n_ g_
-	set mproto CtrMcast
-	set mrthandle [$ns_ mrtproto $mproto {}]
-	$ns_ at 0.0 "$mrthandle switch-treetype $g_" 
-	
-	for {set i 1} {$i < 10} {incr i} {
-		set rcvr($i) [new Agent/Null]
-		$ns_ attach-agent $n_($i) $rcvr($i)
-		$ns_ at $i "$n_($i) join-group $rcvr($i) $g_"
-		incr i
-	}
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $n_(0) $udp0
-	$udp0 set dst_addr_ $g_
-	$udp0 set dst_port_ 0
-	$udp0 set class_ 2
-	set sender [new Application/Traffic/CBR]
-	$sender attach-agent $udp0
-	$ns_ at 0.0 "$sender start"
-	$ns_ at 10.0 "$self finish"
-	
-	$ns_ run
-	
-}
-	
-#Test/hier-deDM instproc init {flag} {
-#	  $self instvar ns_ testName_ flag_
-#	  set testName_ hier-detailedDM
-#	  set flag_ $flag
-#	  $self next 
-#}
-#
-#Test/hier-deDM instproc run {} {
-#	  $self instvar ns_ n_ g_
-#	  set mproto detailedDM
-#	  set mrthandle [$ns_ mrtproto $mproto {}]
-#	  
-#	  for {set i 1} {$i < 10} {incr i} {
-#		  set rcvr($i) [new Agent/LossMonitor]
-#		  $ns_ attach-agent $n_($i) $rcvr($i)
-#		  $ns_ at $i "$n_($i) join-group $rcvr($i) $g_"
-#		  incr i
-#	  }
-#	  set udp0 [new Agent/UDP]
-#	  $ns_ attach-agent $n_(0) $udp0
-#	  $udp0 set dst_ $g_
-#	  $udp0 set class_ 2
-#	  set sender [new Application/Traffic/CBR]
-#	  $sender attach-agent $udp0
-#	  $ns_ at 0.1 "$sender start"
-#	  $ns_ at 10.0 "$self finish"
-#	  
-#	  $ns_ run
-#}
-
-
-Test/hier-session instproc init {} {
-	$self instvar ns_ testName_ 
-	set testName_ hier-session
-	$self next 
-}
-
-Test/hier-session instproc init-simulator {} {
-	$self instvar ns_ g_
-	set ns_ [new SessionSim]
-	set g_ [Node allocaddr]
-	$ns_ namtrace-all [open temp.rands w]
-}
-
-Test/hier-session instproc run {} {
-	$self instvar ns_ n_ g_
-	
-	for {set i 1} {$i < 10} {incr i} {
-		set rcvr($i) [new Agent/LossMonitor]
-		$ns_ attach-agent $n_($i) $rcvr($i)
-		$ns_ at $i "$n_($i) join-group $rcvr($i) $g_"
-		incr i
-	}
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $n_(0) $udp0
-	$udp0 set dst_addr_ $g_
-	$udp0 set dst_port_ 0
-	set sender [new Application/Traffic/CBR]
-	$sender attach-agent $udp0
-	$ns_ create-session $n_(0) $udp0
-	$ns_ at 0.1 "$sender start"
-	$ns_ at 10.0 "$self finish"
-	
-	$ns_ run
-}
-
-#
-# Backward compatibility tests 
-#
-#  Class Test-BackCompat -superclass TestSuite
-
-#  Test-BackCompat instproc init-hier-routing {} {
-#  	$self instvar ns_
-#  	puts "testing backward compatibility of hierarchical routing"
-#  	Simulator set node_factory_ HierNode
-#  	$ns_ set-address-format hierarchical
-#  }
-
-#  Class Test/hier-simple-bc -superclass {Test-BackCompat Test/hier-simple}
-#  Class Test/hier-cmcast-bc -superclass {Test-BackCompat Test/hier-cmcast}
-#  Class Test/hier-session-bc -superclass {Test-BackCompat Test/hier-session}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-	    if {[lindex $arg 1] == "QUIET"} {
-		set quiet 1
-	    }
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-intserv.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-intserv.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-intserv.tcl	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-intserv.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,433 +0,0 @@
-#
-# Copyright (c) Xerox Corporation 1998. All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify it
-# under the terms of the GNU General Public License as published by the
-# Free Software Foundation; either version 2 of the License, or (at your
-# option) any later version.
-# 
-# This program is distributed in the hope that it will be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# General Public License for more details.
-# 
-# You should have received a copy of the GNU General Public License along
-# with this program; if not, write to the Free Software Foundation, Inc.,
-# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-# 
-# Linking this file statically or dynamically with other modules is making
-# a combined work based on this file.  Thus, the terms and conditions of
-# the GNU General Public License cover the whole combination.
-# 
-# In addition, as a special exception, the copyright holders of this file
-# give you permission to combine this file with free software programs or
-# libraries that are released under the GNU LGPL and with code included in
-# the standard release of ns-2 under the Apache 2.0 license or under
-# otherwise-compatible licenses with advertising requirements (or modified
-# versions of such code, with unchanged license).  You may copy and
-# distribute such a system following the terms of the GNU GPL for this
-# file and the licenses of the other code concerned, provided that you
-# include the source code of that other code when and as the GNU GPL
-# requires distribution of source code.
-# 
-# Note that people who make modified versions of this file are not
-# obligated to grant this special exception for their modified versions;
-# it is their choice whether to do so.  The GNU General Public License
-# gives permission to release a modified version without this exception;
-# this exception also makes it possible to release a modified version
-# which carries forward this exception.
-
-#
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-intserv.tcl,v 1.10 2005/08/26 05:05:30 tomh Exp $
-#
-
-# 
-# This test suite runs validation tests for the measurement based
-# admission control algorithms that are part of the simple
-# integrated services support in ns.  The integrated services support
-# includes a simple signalling protocol and a scheduler that provides
-# a service like controlled-load by giving priority to real-time over
-# best-effort traffic.
-#
-# Five admission control algorithms are tested:
-# 1. Measured Sum (MS)
-# 2. Hoeffding Bounds (HB)
-# 3. Acceptance Region Tangent at Peak (ACTP)
-# 4. Acceptance Region Tangent at Origin (ACTO)
-# 5. Parameter Based (Param)
-#
-# The first four are measurement-based, the last is parameter-based.
-#
-# The measurement-based algorithms each use an estimation algorithm.
-# Time window for Measured Sum, exponential averaging for Hoeffding
-# Bounds and Point Sample for the Acceptance region algorithms.
-
-# See the paper "Comparison of Measurement-based Admission Control Algorithms
-# for Controlled-Load Service", Sugih Jamin, Scott Shenker and Peter
-# Danzig, in the Proceedings of IEEE Infocom '97, and references therein
-# for a further description of these algorithms.
-
-# To run a test:  
-# ns test-suite-intserv.tcl ALG
-# where ALG is one of MS, HB, ACTP, ACTO, Param
-
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-set meastime 100
-set simtime 300
-
-Class TestSuite
-
-TestSuite proc setinstance {T} {
-	TestSuite set T $T
-}
-
-TestSuite proc getinstance {} {
-	TestSuite set T
-}
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ test_ node_ testName_ adc_ est_
-	$self instvar param_ r_ hvar_ fvar_ srcno_ qmon_ f_ flow_ totflows_
-
-	$self defaults
-
-	set ns_ [new Simulator]
-	# next line no longer needed with 32-bit addressing, Nov '99.
-	# $ns_ expand-port-field-bits 16
-
-	TestSuite setinstance $self
-
-	set net_ 2Node
-
-	set topo_ [new Topology/$net_ $ns_]
-
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	# create the link 
-	$ns_ duplex-intserv-link $node_(0) $node_(1) $param_(bw) $param_(dly) SimpleIntServ SALink $adc_ $est_ CL
-
-	# set up queue monitor
-	set f_ [open temp.rands w]
-	set qmon_ [$ns_ monitor-queue $node_(0) $node_(1) $f_]
-	set l01 [$ns_ link $node_(0) $node_(1)]
-	$l01 set qBytesEstimate_ 0
-	$l01 set qPktsEstimate_ 0
-	$l01 set sampleInterval_ 0
-
-	#$ns_ at $param_(meastime) "$l01 trace-util [expr $param_(ptime)*$param_(S)] $f_"
-
-	# create the receiver
-	set r_ [new Agent/SAack]
-	$ns_ attach-agent $node_(1) $r_
-
-	set hvar_ [new RandomVariable/Exponential]
-	$hvar_ set avg_ $param_(hold)
-
-	set fvar_ [new RandomVariable/Exponential]
-	$fvar_ set avg_ $param_(fint)
-
-	set srcno_ 1
-
-	# schedule the first flow
-	set starttime  [expr $srcno_ + double([ns-random] % 10000000) / 1e7]
-	$ns_ at $starttime "$self sched-source $node_(0)"
-
-	$ns_ at $param_(meastime) "$qmon_ set bdepartures_ 0;$qmon_ set bdrops_ 0"
-
-	$ns_ at $param_(simtime) "$self finish $f_"
-
-	$self set flows_ 0
-	$self set totflows_ 0
-}
-
-TestSuite instproc flowadmit {} {
-	$self instvar flows_ totflows_
-	incr flows_
-	incr totflows_
-}
-
-TestSuite instproc flowdepart {} {
-	$self instvar flows_
-	incr flows_ -1
-}
-
-TestSuite instproc defaults {} {
-	global simtime meastime
-	$self instvar param_
-	set param_(psize) 125
-	set param_(bw) 10e6
-	set param_(ptime) [expr $param_(psize)*8.0/$param_(bw)]
-	set param_(dly) 1ms
-	set param_(S) 5e3
-	set param_(hold) 300
-	set param_(fint) .4
-	set param_(simtime) $simtime
-	set param_(meastime) $meastime
-	set param_(trace_flow) 0
-	Queue/SimpleIntServ set qlimit1_ 160
-	Queue/SimpleIntServ set qlimit0_ 0
-	ADC set backoff_ true
-	Est set period_ [expr $param_(S) * $param_(ptime)]
-}
-
-TestSuite instproc run {} {
-	$self instvar ns_
-	$ns_ run
-}
-
-TestSuite instproc create-source {node starttime i} {
-	$self instvar ns_ r_ hvar_
-        set a [new Agent/SA]
-        $ns_ attach-agent $node $a
-
-        $a set fid_ $i
- 
-        $ns_ connect $a $r_
- 
- 
-        set exp1 [new Application/Traffic/Exponential]
-        $exp1 set packetSize_ 125
-        $exp1 set burst_time_ [expr 20.0/64]
-        $exp1 set idle_time_ 325ms
-        $exp1 set rate_ 64k
- 
-        #set up (r,b)
-        $a set rate_ 64k
-        $a set bucket_ 1
-        $a attach-traffic $exp1
-        $a set lifetime_ [$hvar_ value]
-        $ns_ at $starttime "$a start"
-        $a instvar trafgen_
-        set trafgen_ $exp1
-} 
-
-TestSuite instproc sched-source {node} {
-	$self instvar srcno_ ns_ fvar_  param_ f_
- 
-
-        $self create-source $node  [$ns_ now]  $srcno_
-        if { $param_(trace_flow) } {
-                puts $f_ "Flow $srcno started @ [$ns now]"
-        }
-        incr srcno_
- 
-        #generate another startime
-        set starttime [expr [$ns_ now]+[$fvar_ value]]
-        $ns_ at $starttime "$self sched-source $node"
-
-}
-
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set test [lindex $argv 0]
-
-	set t [new Test/$test]
-
-	$t show-simtime
-
-	$t run
-}
-
-TestSuite instproc show-simtime {} {
-	global tcl_precision
-	$self instvar ns_ qmon_ param_ f_ flows_ totflows_
-	$qmon_ instvar bdepartures_ pdrops_ pdepartures_
-
-	if {$pdepartures_ != 0} {
-		set d [expr $pdrops_*1.0/($pdrops_+$pdepartures_)]
-	} else {
-		set d 0
-	}
-	if { [$ns_ now] < $param_(meastime) } {
-		set time [$ns_ now]
-	} else {
-		set time [expr [$ns_ now] - $param_(meastime)]
-	}
-	if { $time == 0 } {
-		set thput 0
-	} else {
-		set thput [expr $bdepartures_ * 8.0 / ($param_(bw) * $time)]
-	}
-	set oprecision [set tcl_precision]
-	set tcl_precision 6
-	puts $f_ "[$ns_ now] $thput $d"
-	puts $f_ "Flows: $flows_ $totflows_"
-	set tcl_precision $oprecision
-	$ns_ at [expr [$ns_ now] + 10.0] "$self show-simtime"
-}
-
-TestSuite instproc finish { file } {
-	global tcl_precision
-	$self instvar qmon_ param_ f_
-	$qmon_ instvar pdrops_ pdepartures_ bdepartures_
-
-	set utlzn [expr $bdepartures_*8.0/($param_(bw)*($param_(simtime)-$param_(meastime)))]
-	set d [expr $pdrops_*1.0/($pdrops_+ $pdepartures_)]
-
-	set oprecision [set tcl_precision]
-	set tcl_precision 6
-	puts $f_ "Drops : $d Utilization : $utlzn"
-	set tcl_precision $oprecision
-
-	close $file
-	exec rm -f $file
-	exit 0
-}
-
-
-Class Test/MS -superclass TestSuite
-
-Test/MS instproc init {} {
-	$self instvar adc_ est_
-	set adc_ MS
-	set est_ TimeWindow
-	$self next
-}
-
-Test/MS instproc defaults {} {
-	$self next
-	ADC/MS set backoff_ false
-	ADC/MS set utilization_ 1.02
-	Est/TimeWindow set T_ 3
-}
-
-Class Test/HB -superclass TestSuite
-
-Test/HB instproc init {} {
-	$self instvar adc_ est_
-	set adc_ HB
-	set est_ ExpAvg
-	$self next
-}
-
-Test/HB instproc defaults {} {
-	$self next
-	ADC/HB set epsilon_ 0.999
-	Est/ExpAvg set w_ 0.0625
-}
-
-Class Test/ACTP -superclass TestSuite
-
-Test/ACTP instproc init {} {
-	$self instvar adc_ est_
-	set adc_ ACTP
-	set est_ PointSample
-	$self next
-}
-
-Test/ACTP instproc defaults {} {
-	$self next
-	$self instvar param_
-	ADC/ACTP set s_ [expr 2e-7]
-	set param_(S) 2.5e4
-	Est set period_ [expr $param_(S) * $param_(ptime)]
-}
-
-Class Test/ACTO -superclass TestSuite
-
-Test/ACTO instproc init {} {
-	$self instvar adc_ est_
-	set adc_ ACTO
-	set est_ PointSample
-	$self next
-}
-
-Test/ACTO instproc defaults {} {
-	$self next
-	$self instvar param_
-	ADC/ACTO set s_ [expr 8e-8]
-	set param_(S) 2.5e4
-	Est set period_ [expr $param_(S) * $param_(ptime)]
-}
-
-Class Test/Param -superclass TestSuite
-
-Test/Param instproc init {} {
-	$self instvar adc_ est_
-	set adc_ Param
-	set est_ Null
-	$self next
-}
-
-Test/Param instproc defaults {} {
-	$self next
-	ADC/Param set utilization_ 2.05
-}
-
-Class SkelTopology
-
-SkelTopology instproc init ns {
-	$self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-
-Class Topology/2Node -superclass SkelTopology
-
-Topology/2Node instproc init ns {
-
-	$self next $ns
-	$self instvar node_
-	set node_(0) [$ns node]
-
-	set node_(1) [$ns node]
-
-}
-
-#new Test/$TestName
-
-Agent/SA instproc sched-stop { decision } {
-        global hold simtime trace_flow
-        $self instvar node_ lifetime_
-	set T [TestSuite getinstance]
-
-	$T instvar ns_ param_ flows_ totflows_ f_
-
-        if { $decision == 1 } {
-                set leavetime [expr [$ns_ now] + $lifetime_]
-		$T flowadmit
-                $ns_ at [expr [$ns_ now] + $lifetime_] "$self stop;\
-                if { $param_(trace_flow) } { \
-                    puts $f_ \"Flow [$self set fid_] left @ $leavetime\" \
-            }; \
-            $ns_ detach-agent $node_ $self; \
-            delete [$self set trafgen_]; delete $self; $T flowdepart"
-        } else {
-                set leavetime [$ns_ now]
-                $ns_ at-now "if { $param_(trace_flow) } { \
-                    puts $f_ \"Flow [$self set fid_] left @ $leavetime\"\
-            }; \
-            $ns_ detach-agent $node_ $self; \
-            delete [$self set trafgen_]; delete $self"
-        }
-
-}
-
-
-
-TestSuite runTest
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-jobs.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-jobs.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-jobs.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-jobs.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,468 +0,0 @@
-#
-# Copyright (c) 2000-2002, by the Rector and Board of Visitors of the 
-# University of Virginia.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, 
-# with or without modification, are permitted provided 
-# that the following conditions are met:
-#
-# Redistributions of source code must retain the above 
-# copyright notice, this list of conditions and the following 
-# disclaimer. 
-#
-# Redistributions in binary form must reproduce the above 
-# copyright notice, this list of conditions and the following 
-# disclaimer in the documentation and/or other materials provided 
-# with the distribution. 
-#
-# Neither the name of the University of Virginia nor the names 
-# of its contributors may be used to endorse or promote products 
-# derived from this software without specific prior written 
-# permission. 
-#
-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
-# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
-# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
-# DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE 
-# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
-# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
-# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
-# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
-# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
-# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
-# THE POSSIBILITY OF SUCH DAMAGE.
-#
-# $Id: test-suite-jobs.tcl,v 1.4 2005/06/11 04:42:09 sfloyd Exp $                  
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-#                                                                     
-# This test suite is for validating wireless lans 
-# To run all tests: test-all-jobs
-# to run individual test:
-# ns test-suite-jobs.tcl jobs-rate
-# ns test-suite-jobs.tcl jobs-lossdel
-#
-# To view a list of available test to run with this script:
-# ns test-suite-jobs.tcl
-#
-
-Class TestSuite
-
-# Rate allocation
-Class Test/jobs-rate -superclass TestSuite
-
-# Relative guarantees, TCP traffic
-Class Test/jobs-lossdel -superclass TestSuite
-
-# =====================================================================
-# General setup
-#
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: jobs-rate jobs-lossdel"
-	exit 1
-}
-
-proc default_options {} {
-	global opt
-	set opt(queue_edg1)	Marker
-	set opt(queue_edg2)	Demarker
-	set opt(queue_core)	JoBS
-	set opt(seed)		16.0
-	set opt(tr)		temp.rands
-	set opt(bw)		10000.0
-	set opt(gw_buff)	800
-	set opt(pktsz)		500
-	set opt(start_tm)	0.0
-	set opt(finish_tm)	10.0	
-	set opt(hops)		2
-	set opt(nsources)	4
-	set opt(n_cl1)		1
-	set opt(n_cl2)		1
-	set opt(n_cl3)		1
-	set opt(n_cl4)		1
-	set opt(delay)		1.0
-	set opt(sample)		1
-}
-
-# =====================================================================
-# Other default settings
-#
-
-Queue/JoBS set drop_front_ false
-Queue/JoBS set trace_hop_ false
-Queue/JoBS set adc_resolution_type_ 0
-Queue/JoBS set shared_buffer_ 0
-Queue/JoBS set mean_pkt_size_ 4000
-Queue/Demarker set demarker_arrvs1_ 0
-Queue/Demarker set demarker_arrvs2_ 0
-Queue/Demarker set demarker_arrvs3_ 0
-Queue/Demarker set demarker_arrvs4_ 0
-Queue/Marker set marker_arrvs1_ 0
-Queue/Marker set marker_arrvs2_ 0
-Queue/Marker set marker_arrvs3_ 0
-Queue/Marker set marker_arrvs4_ 0
-
-# =====================================================================
-# The two tests
-#
-
-Test/jobs-rate instproc init {} {
-    global opt core_node user_source user_source_agent user_sink user_sink_agent 
-    $self instvar ns_ testName_
-    set testName_       jobs-rate
-    set opt(rp)         jobs-rate
-    set opt(udp_source_rate) 5000.0
-
-    $self next
-    $self jobs-rate-topo
-    $self traffic-setup 
-    $ns_ at 0.0 "$self record_thru"
-    $ns_ at [expr $opt(finish_tm)+.000000001] "puts \"Finishing Simulation...\" ;" 
-    $ns_ at [expr $opt(finish_tm)+1] "$self finish"
-}
-
-Test/jobs-rate instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-Test/jobs-lossdel instproc init {} {
-    global opt core_node user_source user_source_agent user_sink user_sink_agent 
-    $self instvar ns_ testName_
-    set testName_       jobs-lossdel
-    set opt(rp)         jobs-lossdel
-    set opt(udp_source_rate) 2600.0
-
-    $self next
-    $self jobs-lossdel-topo
-    $self traffic-setup 
-    $ns_ at [expr $opt(finish_tm)+.000000001] "puts \"Finishing Simulation...\" ;" 
-    $ns_ at [expr $opt(finish_tm)+1] "$self finish"
-}
-
-Test/jobs-lossdel instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-#
-
-# =====================================================================
-# Traffic generation
-#
-
-TestSuite instproc traffic-setup {} {
-    global opt user_source user_source_agent user_sink user_sink_agent 
-    $self instvar ns_
-
-    for {set i 1} {$i <= $opt(nsources)} {incr i} {
-	set user_source_agent($i) [new Agent/UDP]
-	set user_sink_agent($i) [new Agent/LossMonitor]
-	set user_flow($i) [new Application/Traffic/CBR]
-	$ns_ attach-agent $user_source($i) $user_source_agent($i)
-	$ns_ attach-agent $user_sink($i) $user_sink_agent($i)
-	$ns_ connect $user_source_agent($i) $user_sink_agent($i)
-	$user_source_agent($i) set packetSize_ $opt(pktsz)
-	$user_flow($i) set rate_ [expr $opt(udp_source_rate)*1000.0]
-	$user_flow($i) attach-agent $user_source_agent($i)
-	$ns_ at [expr $opt(start_tm)] "$user_flow($i) start"
-    }
-}
-
-# =====================================================================
-# Topology generation
-#
-
-TestSuite instproc jobs-rate-topo {} {    
-    global opt core_node user_source user_sink
-    $self instvar ns_ 
-    set DETERM		1
-
-    for {set i 1} {$i <= $opt(hops)} {incr i} {
-	set core_node($i) [$ns_ node]
-    }
-
-
-    for {set i 1} {$i <= $opt(nsources)} {incr i} {
-	set user_source($i) [$ns_ node]
-	set user_sink($i) [$ns_ node]
-    }
-
-    for {set i 1} {$i < $opt(hops)} {incr i} {
-	$ns_ duplex-link $core_node($i) $core_node([expr $i+1]) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] $opt(queue_core)
-	$ns_ queue-limit $core_node($i) $core_node([expr $i+1]) $opt(gw_buff)
-	$ns_ queue-limit $core_node([expr $i+1]) $core_node($i) $opt(gw_buff)
-	set l [$ns_ get-link $core_node($i) $core_node([expr $i+1])]
-	set q [$l queue]
-
-	$q init-rdcs -1 -1 -1 -1
-	$q init-rlcs -1 -1 -1 -1 
-	$q init-alcs -1 -1 -1 -1 
-	$q init-adcs -1 -1 -1 -1 
-	$q init-arcs 4000000 3000000 2000000 1000000
-	$q link [$l link]
-	$q trace-file null
-	$q sampling-period $opt(sample)
-	$q id $i
-	$q initialize
-	
-	# It's a duplex link, so we need to do exactly the same thing on the 
-	# reverse path.
-	
-	set l [$ns_ get-link $core_node([expr $i+1]) $core_node($i)]
-	set q [$l queue]
-	
-	$q init-rdcs -1 -1 -1 -1
-	$q init-rlcs -1 -1 -1 -1 
-	$q init-alcs -1 -1 -1 -1 
-	$q init-adcs -1 -1 -1 -1 
-	$q init-arcs 4000000 3000000 2000000 1000000
-	$q link [$l link]
-	$q trace-file null
-	$q sampling-period $opt(sample)
-	$q id [expr $i+$opt(hops)]
-	$q initialize
-    }
-
-    for {set i 1} {$i <= $opt(nsources)} {incr i} {
-	$ns_ simplex-link $user_source($i) $core_node(1) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] Marker
-	$ns_ simplex-link $core_node(1) $user_source($i) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] Demarker
-	$ns_ queue-limit $user_source($i) $core_node(1) $opt(gw_buff)
-	$ns_ queue-limit $core_node(1) $user_source($i) $opt(gw_buff)
-
-	set q [$ns_ get-queue $user_source($i) $core_node(1)]
-	$q marker_type $DETERM
-
-	if {$i == $opt(n_cl1)} {
-	    $q marker_class 1
-	} elseif {$i <= $opt(n_cl1)+$opt(n_cl2)} {
-	    $q marker_class 2
-	} elseif {$i <= $opt(n_cl1)+$opt(n_cl2)+$opt(n_cl3)} {
-	    $q marker_class 3
-	} else {
-	    $q marker_class 4
-	}
-
-	set q [$ns_ get-queue $core_node(1) $user_source($i)]
-	$q trace-file null
-	
-	$ns_ simplex-link $core_node($opt(hops)) $user_sink($i) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] Demarker
-	$ns_ simplex-link $user_sink($i) $core_node($opt(hops)) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] Marker
-	$ns_ queue-limit $core_node($opt(hops)) $user_sink($i) $opt(gw_buff)
-	$ns_ queue-limit $user_sink($i) $core_node($opt(hops)) $opt(gw_buff)
-	
-	set q [$ns_ get-queue $core_node($opt(hops)) $user_sink($i)]
-	$q trace-file null
-	
-	set q [$ns_ get-queue $user_sink($i) $core_node($opt(hops))]
-	$q marker_type $DETERM
-	
-	if {$i == $opt(n_cl1)} {
-	    $q marker_class 1
-	} elseif {$i <= $opt(n_cl1)+$opt(n_cl2)} {
-	    $q marker_class 2
-	} elseif {$i <= $opt(n_cl1)+$opt(n_cl2)+$opt(n_cl3)} {
-	    $q marker_class 3
-	} else {
-	    $q marker_class 4
-	}
-    }
-}
-
-TestSuite instproc jobs-lossdel-topo {} {    
-    global opt core_node user_source user_sink
-    $self instvar ns_ 
-    set DETERM		1
-
-    Queue/JoBS set shared_buffer_ 1
-    Queue/JoBS set trace_hop_ true
-
-    for {set i 1} {$i <= $opt(hops)} {incr i} {
-	set core_node($i) [$ns_ node]
-    }
-
-
-    for {set i 1} {$i <= $opt(nsources)} {incr i} {
-	set user_source($i) [$ns_ node]
-	set user_sink($i) [$ns_ node]
-    }
-
-    for {set i 1} {$i < $opt(hops)} {incr i} {
-	$ns_ duplex-link $core_node($i) $core_node([expr $i+1]) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] $opt(queue_core)
-	$ns_ queue-limit $core_node($i) $core_node([expr $i+1]) $opt(gw_buff)
-	$ns_ queue-limit $core_node([expr $i+1]) $core_node($i) $opt(gw_buff)
-	set l [$ns_ get-link $core_node($i) $core_node([expr $i+1])]
-	set q [$l queue]
-
-	$q init-rdcs -1 4 4 4 
-	$q init-rlcs -1 2 2 2 
-	$q init-alcs 0.01 -1 -1 -1
-	$q init-adcs 0.005 -1 -1 -1
-	$q init-arcs -1 -1 -1 -1
-	$q link [$l link]
-	$q trace-file $opt(tr) 
-	$q sampling-period $opt(sample)
-	$q id $i
-	$q initialize
-	
-	# It's a duplex link, so we need to do exactly the same thing on the 
-	# reverse path.
-	
-	set l [$ns_ get-link $core_node([expr $i+1]) $core_node($i)]
-	set q [$l queue]
-	
-	$q init-rdcs -1 4 4 4 
-	$q init-rlcs -1 2 2 2 
-	$q init-alcs 0.01 -1 -1 -1
-	$q init-adcs 0.005 -1 -1 -1
-	$q init-arcs -1 -1 -1 -1
-	$q link [$l link]
-	$q trace-file null
-	$q sampling-period $opt(sample)
-	$q id [expr $i+$opt(hops)]
-	$q initialize
-    }
-
-    for {set i 1} {$i <= $opt(nsources)} {incr i} {
-	$ns_ simplex-link $user_source($i) $core_node(1) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] Marker
-	$ns_ simplex-link $core_node(1) $user_source($i) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] Demarker
-	$ns_ queue-limit $user_source($i) $core_node(1) $opt(gw_buff)
-	$ns_ queue-limit $core_node(1) $user_source($i) $opt(gw_buff)
-
-	set q [$ns_ get-queue $user_source($i) $core_node(1)]
-	$q marker_type $DETERM
-
-	if {$i == $opt(n_cl1)} {
-	    $q marker_class 1
-	} elseif {$i <= $opt(n_cl1)+$opt(n_cl2)} {
-	    $q marker_class 2
-	} elseif {$i <= $opt(n_cl1)+$opt(n_cl2)+$opt(n_cl3)} {
-	    $q marker_class 3
-	} else {
-	    $q marker_class 4
-	}
-
-	set q [$ns_ get-queue $core_node(1) $user_source($i)]
-	$q trace-file null
-	
-	$ns_ simplex-link $core_node($opt(hops)) $user_sink($i) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] Demarker
-	$ns_ simplex-link $user_sink($i) $core_node($opt(hops)) [expr $opt(bw)*1000.] [expr $opt(delay)/1000.] Marker
-	 $ns_ queue-limit $core_node($opt(hops)) $user_sink($i) $opt(gw_buff)
-	$ns_ queue-limit $user_sink($i) $core_node($opt(hops)) $opt(gw_buff)
-	
-	set q [$ns_ get-queue $core_node($opt(hops)) $user_sink($i)]
-	$q trace-file null
-	
-	set q [$ns_ get-queue $user_sink($i) $core_node($opt(hops))]
-	$q marker_type $DETERM
-	
-	if {$i == $opt(n_cl1)} {
-	    $q marker_class 1
-	} elseif {$i <= $opt(n_cl1)+$opt(n_cl2)} {
-	    $q marker_class 2
-	} elseif {$i <= $opt(n_cl1)+$opt(n_cl2)+$opt(n_cl3)} {
-	    $q marker_class 3
-	} else {
-	    $q marker_class 4
-	}
-    }
-}
-
-
-# =====================================================================
-# Various helpers
-#
-
-Simulator instproc get-link { node1 node2 } {
-    $self instvar link_
-    set id1 [$node1 id]
-    set id2 [$node2 id]
-    return $link_($id1:$id2)
-}
-
-Simulator instproc get-queue { node1 node2 } {
-    set l [$self get-link $node1 $node2]
-    set q [$l queue]
-    return $q
-}
-
-TestSuite instproc init {} {
-	global opt tracefd 
-	global node_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	set tracefd	[open $opt(tr) w]
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-	puts "finishing.."
-	exit 0
-}
-
-TestSuite instproc record_thru {} {
-    $self instvar ns_
-	global tracefd opt user_sink_agent  
-	set time 0.5
-	set tot_recv 0
-	set now [$ns_ now]
-	for {set i 1} {$i <= $opt(nsources)} {incr i} {
-		set recv($i) [$user_sink_agent($i) set bytes_]
-		$user_sink_agent($i) set bytes_ 0
-	}
-	puts $tracefd [format "%.2f %.2f %.2f %.2f %.2f" $now [expr 8.*$recv(1)/$time] [expr 8.*$recv(2)/$time] [expr 8.*$recv(3)/$time] [expr 8.*$recv(4)/$time]]
-	$ns_ at [expr $now+$time] "$self record_thru"
-}
-
-# =====================================================================
-# Test launcher
-#
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-# =====================================================================
-# Main
-#
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-lan.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-lan.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-lan.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-lan.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,396 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-lan.tcl,v 1.22 2006/01/24 23:00:06 sallyfloyd Exp $
-
-# To run all tests: test-all-lan
-# to run individual test:
-# ns test-suite-lan.tcl broadcast
-# ns test-suite-lan.tcl routing-flat
-# ns test-suite-lan.tcl routing-flat-qlimit
-# ns test-suite-lan.tcl routing-hier
-# ns test-suite-lan.tcl abstract
-# ns test-suite-lan.tcl mactrace
-# ....
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-lan.tcl
-#
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP TCP ARP LL Mac ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-Agent/TCP set SetCWRonRetransmit_ true
-# Changing the default value.
-
-Class TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: lan-routing-flat lan-routing-flat-qlimit congested lan-routing-hier lan-broadcast lan-abstract lan-mactrace"
-
-	exit 1
-}
-
-TestSuite instproc init {} {
-	$self instvar ns_ numnodes_ 
-	set ns_ [new Simulator]
-	$ns_ trace-all [open temp.rands w]
-	$ns_ namtrace-all [open temp.rands.nam w]
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-	if { !$quiet } {
-		puts "running nam..."
-		exec ../../../nam-1/nam temp.rands.nam &
-	}
-	exit 0
-}
-
-# Routing test using flat routing
-Class Test/lan-routing-flat -superclass TestSuite
-Test/lan-routing-flat instproc init {} {
-	$self instvar ns_ testName_ flag_ node_ nodelist_ \
-			lan_ node0_ nodex_ tcp0_ ftp0_
-
-	set testName_ routing-flat
-	$self next
-	set num 3
-	for {set i 0} {$i < $num} {incr i} {
-		set node_($i) [$ns_ node]
-		lappend nodelist_ $node_($i)
-	}
-	set lan_ [$ns_ make-lan $nodelist_ 10Mb 2ms LL Queue/DropTail Mac/802_3 Channel]
-	set node0_ [$ns_ node]
-	$ns_ duplex-link $node0_ $node_(1) 10Mb 2ms DropTail
-	$ns_ duplex-link-op $node0_ $node_(1) orient right
-	set nodex_ [$ns_ node]
-	$ns_ duplex-link $nodex_ $node_(2) 20Mb 2ms DropTail
-	$ns_ duplex-link-op $nodex_ $node_(2) orient left
-
-	set tcp0_ [$ns_ create-connection TCP/Reno $node0_ TCPSink $nodex_ 0]
-	$tcp0_ set window_ 15
-	
-	set ftp0_ [$tcp0_ attach-app FTP]
-}
-Test/lan-routing-flat instproc run {} {
-	$self instvar ns_ ftp0_
-	$ns_ at 0.0 "$ftp0_ start"
-	$ns_ at 3.0 "$self finish"
-	$ns_ run
-
-}
-
-# Routing test using flat routing with limited interface queue
-Class Test/lan-routing-flat-qlimit -superclass TestSuite
-Test/lan-routing-flat-qlimit instproc init {} {
-	$self instvar ns_ testName_ flag_ node_ nodelist_ \
-			lan_ node0_ nodex_ tcp0_ ftp0_
-
-	set testName_ routing-flat-qlimit
-	$self next
-	set num 3
-	for {set i 0} {$i < $num} {incr i} {
-		set node_($i) [$ns_ node]
-		lappend nodelist_ $node_($i)
-	}
-	set lan_ [$ns_ make-lan $nodelist_ 10Mb 2ms LL Queue/DropTail Mac/802_3 Channel "Phy/WiredPhy" 7]
-	set node0_ [$ns_ node]
-	$ns_ duplex-link $node0_ $node_(1) 20Mb 2ms DropTail
-	$ns_ duplex-link-op $node0_ $node_(1) orient right
-	set nodex_ [$ns_ node]
-	$ns_ duplex-link $nodex_ $node_(2) 20Mb 2ms DropTail
-	$ns_ duplex-link-op $nodex_ $node_(2) orient left
-
-	set tcp0_ [$ns_ create-connection TCP/Reno $node0_ TCPSink $nodex_ 0]
-	$tcp0_ set window_ 15
-	
-	set ftp0_ [$tcp0_ attach-app FTP]
-}
-Test/lan-routing-flat-qlimit instproc run {} {
-	$self instvar ns_ ftp0_
-	$ns_ at 0.0 "$ftp0_ start"
-	$ns_ at 3.0 "$self finish"
-	$ns_ run
-}
-
-# Test with congestion. 
-Class Test/congested -superclass TestSuite
-Test/congested instproc init {} {
-	$self instvar ns_ testName_ flag_ node_ nodelist_ \
-            lan_ node0_ node1_ nodex_ nodey_ tcp0_ ftp0_ tcp1_ ftp1_
-
-	set testName_ congested
-	$self next
-	set num 3
-	#Queue set limit_ 100
-	for {set i 0} {$i < $num} {incr i} {
-		set node_($i) [$ns_ node]
-		lappend nodelist_ $node_($i)
-	}
-	set lan_ [$ns_ make-lan $nodelist_ 10Mb 2ms LL Queue/DropTail Mac/802_3 Channel "Phy/WiredPhy" 25]
-
-	set node0_ [$ns_ node]
-	$ns_ duplex-link $node0_ $node_(1) 10Mb 2ms DropTail
-	$ns_ duplex-link-op $node0_ $node_(1) orient right-up
-	set nodex_ [$ns_ node]
-	$ns_ duplex-link $nodex_ $node_(2) 10Mb 2ms DropTail
-	$ns_ duplex-link-op $nodex_ $node_(2) orient left-down
-
-	set node1_ [$ns_ node]
-	$ns_ duplex-link $node1_ $node_(1) 10Mb 2ms DropTail
-	$ns_ duplex-link-op $node1_ $node_(1) orient left-up
-	set nodey_ [$ns_ node]
-	$ns_ duplex-link $nodey_ $node_(0) 10Mb 2ms DropTail
-	$ns_ duplex-link-op $nodey_ $node_(0) orient right-down
-
-	set tcp0_ [$ns_ create-connection TCP/Sack1 $node0_ TCPSink/Sack1 $nodex_ 0]
-	$tcp0_ set window_ 50
-	set ftp0_ [$tcp0_ attach-app FTP]
-	set tcp1_ [$ns_ create-connection TCP/Sack1 $node1_ TCPSink/Sack1 $nodey_ 0]
-	$tcp1_ set window_ 50
-	set ftp1_ [$tcp1_ attach-app FTP]
-}
-Test/congested instproc run {} {
-	$self instvar ns_ ftp0_ ftp1_
-	$ns_ at 0.0 "$ftp0_ start"
-	$ns_ at 0.2 "$ftp1_ start"
-	$ns_ at 3.0 "$self finish"
-	$ns_ run
-}
-
-# Routing test using hierarchical routing
-Class Test/lan-routing-hier -superclass TestSuite
-Test/lan-routing-hier instproc init {} {
-	$self instvar ns_ testName_ flag_ node_ nodelist_ \
-			lan_ node0_ nodex_ tcp0_ ftp0_
-	set testName_ routing-hier
-	$self next 
-	# We are switching to the new format, i.e., node-config.
-	# Do not test the old method based on node_factory_ here
-	# since this is not a backward compatibility test. See 
-	# test-suite-hier-routing.tcl for such tests.
-	$ns_ node-config -addressType hierarchical
-	#$ns_ set-address-format hierarchical
-	set num 3
-	AddrParams set domain_num_ 1
-	lappend cluster_num 3
-	AddrParams set cluster_num_ $cluster_num
-	lappend eilastlevel [expr $num + 1] 1 1
-	AddrParams set nodes_num_ $eilastlevel
-
-	for {set i 0} {$i < $num} {incr i} {
-		set node_($i) [$ns_ node 0.0.[expr $i + 1]]
-		lappend nodelist_ $node_($i)
-	}
-
-	set lan_ [$ns_ newLan $nodelist_ 10Mb 2ms -address "0.0.0"]
-
-	set node0_ [$ns_ node "0.1.0"]
-	$ns_ duplex-link $node0_ $node_(1) 10Mb 2ms DropTail
-	$ns_ duplex-link-op $node0_ $node_(1) orient right
-	set nodex_ [$ns_ node "0.2.0"]
-	$ns_ duplex-link $nodex_ $node_(2) 10Mb 2ms DropTail
-	$ns_ duplex-link-op $nodex_ $node_(2) orient left
-
-	set tcp0_ [$ns_ create-connection TCP/Reno $node0_ TCPSink $nodex_ 0]
-	$tcp0_ set window_ 15
-	
-	set ftp0_ [$tcp0_ attach-app FTP]
-}
-Test/lan-routing-hier instproc run {} {
-	$self instvar ns_ ftp0_
-	$ns_ at 0.0 "$ftp0_ start"
-	$ns_ at 3.0 "$self finish"
-	$ns_ run
-}
-	
-# Broadcast test for Classifier/Mac
-Class Test/lan-broadcast -superclass TestSuite
-Test/lan-broadcast instproc init {} {
-	$self instvar ns_ testName_ flag_ node_ nodelist_ lan_ 
-	$self instvar node0_ nodex_ nodey_ udp0_ cbr0_ rcvrx_ rcvry_
-	set testName_ lan-broadcast
-	$self next
- 
-	set num 3
-	for {set i 0} {$i < $num} {incr i} {
-		set node_($i) [$ns_ node]
-		lappend nodelist_ $node_($i)
-	}
-	set lan_ [$ns_ newLan $nodelist_ 10Mb 2ms]
-	##[$lan_ set mcl_] set bcast_ 1
-	
-	set node0_ [$ns_ node]
-	$ns_ duplex-link $node_(0) $node0_ 10Mb 2ms DropTail
-	$ns_ duplex-link-op $node_(0) $node0_ orient left
-	set nodex_ [$ns_ node]
-	$ns_ duplex-link $node_(1) $nodex_ 10Mb 1.414ms DropTail
-	$ns_ duplex-link-op $node_(1) $nodex_ orient right-up
-	$ns_ duplex-link $node_(2) $nodex_ 10Mb 1.414ms DropTail
-	$ns_ duplex-link-op $node_(2) $nodex_ orient right-down
-
-	set udp0_ [new Agent/UDP]
-	$ns_ attach-agent $node0_ $udp0_
-	set cbr0_ [new Application/Traffic/CBR]
-	$cbr0_ attach-agent $udp0_
-	
-	set rcvrz_ [new Agent/Null]
-	$ns_ attach-agent $nodex_ $rcvrz_
-	$ns_ connect $udp0_ $rcvrz_
-}
-Test/lan-broadcast instproc run {} {
-	$self instvar ns_ cbr0_ nodex_ nodey_ rcvrx_ rcvry_
-	$ns_ at 0.1 "$cbr0_ start"
-	$ns_ at 2.0 "$self finish"
-	$ns_ run
-}
-
-# Routing Test using Abstract LAN
-Class Test/lan-abstract -superclass TestSuite
-Test/lan-abstract instproc init {} {
-	$self instvar ns_ testName_ flag_ node_ nodelist_ \
-			lan_ tcp0_ tcp1_ ftp0_ ftp1_
-
-	set testName_ lan-abstract
-	$self next
-	set num 4
-	for {set i 0} {$i < $num} {incr i} {
-		set node_($i) [$ns_ node]
-		lappend nodelist_ $node_($i)
-	}
-	set lan_ [$ns_ make-abslan $nodelist_ 10Mb 1ms ]
-
-	set tcp0_ [$ns_ create-connection TCP/Reno $node_(0) TCPSink $node_(1) 0]
-	$tcp0_ set window_ 15
-	set ftp0_ [$tcp0_ attach-app FTP]
-
-	set tcp1_ [$ns_ create-connection TCP/Reno $node_(2) TCPSink $node_(3) 0]
-	$tcp1_ set window_ 15
-	set ftp1_ [$tcp1_ attach-app FTP]
-}
-Test/lan-abstract instproc run {} {
-	$self instvar ns_ ftp0_ ftp1_
-	$ns_ at 0.0 "$ftp0_ start"
-	$ns_ at 0.0 "$ftp1_ start"
-	$ns_ at 3.0 "$self finish"
-	$ns_ run
-
-}
-
-# Mac level collision traces using flat tracing
-Class Test/lan-mactrace -superclass TestSuite
-Test/lan-mactrace instproc init {} {
-	$self instvar ns_ testName_ flag_ node_ nodelist_ \
-			lan_ udp0_ udp1_ cbr0_ cbr1_
-
-	set testName_ lan-mactrace
-	$self next
-	set num 4
-	for {set i 0} {$i < $num} {incr i} {
-		set node_($i) [$ns_ node]
-		lappend nodelist_ $node_($i)
-	}
-	set lan_ [$ns_ make-lan -trace on $nodelist_ 10Mb 1ms LL Queue/DropTail Mac/802_3 Channel Phy/WiredPhy ]
-
-	set udp0_ [new Agent/UDP]
-	$ns_ attach-agent $node_(0) $udp0_
-	set null0_ [new Agent/Null]
-	$ns_ attach-agent $node_(1) $null0_
-	set cbr0_ [new Application/Traffic/CBR]
-	$cbr0_ set interval_ 0.2
-	$ns_ connect $udp0_ $null0_
-	$cbr0_ attach-agent $udp0_
-	
-	set udp1_ [new Agent/UDP]
-	$ns_ attach-agent $node_(2) $udp1_
-	set null1_ [new Agent/Null]
-	$ns_ attach-agent $node_(3) $null1_
-	set cbr1_ [new Application/Traffic/CBR]
-	$cbr1_ set interval_ 0.2
-	$ns_ connect $udp1_ $null1_
-	$cbr1_ attach-agent $udp1_
-	
-}
-Test/lan-mactrace instproc run {} {
-	$self instvar ns_ cbr0_ cbr1_
-	$ns_ at 0.0 "$cbr0_ start"
-	$ns_ at 0.0 "$cbr1_ start"
-	$ns_ at 3.0 "$self finish"
-	$ns_ run
-
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		set q [lindex $arg 1]
-		if { $q == "QUIET" } {
-			set quiet 1
-		} else usage
-	} else usage
-
-	switch $test {
-		lan-routing-flat -
-		lan-routing-flat-qlimit -
-		congested -
-		lan-routing-hier -
-		lan-broadcast -
-		lan-abstract -
-		lan-mactrace {
-			set t [new Test/$test]
-		}
-		default {
-			puts stderr "Unknown test $test"
-			exit 1
-		}
-	}
-	$t run
-}
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-lan.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-lan.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-lan.txt	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-lan.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-The LAN test suite (test-suite-lan.tcl) performs the following tests:
-    - lan-routing-flat
-    - lan-routing-hier - these two tests are designed to validate LANs
-      under flat and hierarchical routing and specifically the
-      functionality of the lanRouter object.  The topology is the same
-      in both cases: 
-
-	       0	  2----------5
-	       |	  |
-	    ---+----+-----+-- LAN virtual node (3)
-	            |
-      4-------------1
-      
-      
-      with a TCP sender attached to node 4 and a TCP receiver at node
-      5.  Here packets are not replicated at the LAN, because they are
-      unicast and replication is costly.  Packets flow from node 4 to
-      1, then the lanRouter object determines the next hop of the
-      packet (node 2) and packets with unicast MAC address of node 2
-      are put on the shared medium (channel).  Since the packet has a
-      unicast MAC address of 2, MAC classifier delivers it to 2 only,
-      at which point it is forwarded to 5.  TCP acknowledgements are
-      delivered in a similar fashion in reverse direction.
-
-      WARNING: the current nam animation (as of 11/23/98) shows that
-      all packets (including unicast) are replicated and delivered to
-      every node on the LAN.  This is misleading, because in the
-      unicast case packets are delivered only to the next hop node.
-
-    - lan-broadcast: tests the broadcast behavior of mac classifier.
-      
-		4-------0	 2
-			|	| \
-      (vLAN node 3)   --+-------+  5
-			        | /
-				 1
-
-      A CBR agent at node 4 is sending unicast packets to a receiver
-      at node 5.  But in this case the MAC classifier is explicitly
-      running in the broadcast mode and even though the IP
-      consequently the MAC address is unicast, packets are fanned out
-      and delivered both to 2 and to 1.  Both 2 and 1 receive the
-      packet, classify it as addressed to 5 and forward accordingly.
-      Thus the receiver at 5 receives two copies of the same packet.
-
-
-    - lan-abstract: tests the behavior of the abstract lan implemented
-      using a DropTail queue as the contention mechanism
-
-	       0	  2
-	       |	  |
-	    ---+----+-----+-- abstract LAN node (4)
-	       |	  |
-	       1          3
-      
-      A TCP senders are attached to node 0 and node 2 with TCP receivers
-      present at node 1 and node 3 respectively. Packets are queued
-      and sent on the LAN on a FIFO basis. ACK and packets share
-      the same queue. Default queue size of 50 packets.   
-
-     - lan-mactrace: validates the behavior of MAC level collision traces
-       on a LAN
-       
-               0	  2
-	       |	  |
-	    ---+----+-----+-- vLAN node (4)
-	       |	  |
-	       1          3
-
-       A CBR agent is attached to node 0 and node 2 which sends packets at
-       a regular interval of 0.5 seconds to node 1 and mode 3 respectively. 
-       Both the agents start at the same time and hence always experience a
-       collision. This is recored as a 'c' in the trace files. 
-       After a collision, the source double the time it defers, before it 
-       attempts to transfer a packet again ie: binary exponential backoff. 
-
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-LimTransmit.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-LimTransmit.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-LimTransmit.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-LimTransmit.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,252 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-LimTransmit.tcl,v 1.14 2006/08/13 04:45:59 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Trace set show_tcphdr_ 1
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set tcpTick_ 0.5
-## First scenaio: maxpkts 15, droppkt 4.
-## For the paper: droppkt 2.
-
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    # 800Kb/sec = 100 pkts/sec = 20 pkts/200 ms.
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc finish file {
-	global quiet wrap PERL
-        exec $PERL ../../bin/set_flow_id -m all.tr > t
-        exec $PERL ../../bin/getrc -s 0 -d 2 t > t1 
-        exec  $PERL ../../bin/raw2xg -c -a -s 0.01 -m $wrap -t $file t1 > temp.rands
-	exec $PERL ../../bin/getrc -s 2 -d 0 t > t2
-        exec $PERL ../../bin/raw2xg -c -a -s 0.01 -m $wrap -t $file t2 > temp1.rands
-        exec $PERL ../../bin/getrc -s 2 -d 3 t | \
-          $PERL ../../bin/raw2xg -c -d -s 0.01 -m $wrap -t $file > temp2.rands
-        #exec $PERL ../../bin/set_flow_id -s all.tr | \
-        #  $PERL ../../bin/getrc -s 2 -d 3 | \
-        #  $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-		temp1.rands temp2.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        # exec csh gnuplotC.com temp.rands temp1.rands temp2.rands $file
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts { pkts {ecn 0}} {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    if {$ecn == "ECN"} {
-    	$errmodel1 set markecn_ true
-    }
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup { tcptype list {ecn 0}} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_ guide_
-	$self setTopo
-	puts "Guide: $guide_"
-
-        Agent/TCP set bugFix_ false
-	if {$ecn == "ECN"} {
-		 Agent/TCP set ecn_ 1
-	}
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink/DelAck $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1/DelAck  $node_(k1) $fid]
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink/DelAck $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 28
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 produce 7"
-
-        $self tcpDump $tcp1 5.0
-        $self drop_pkts $list $ecn
-
-        #$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-	$ns_ at 6.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-###################################################
-## One drop
-###################################################
-
-Class Test/onedrop_sack -superclass TestSuite
-Test/onedrop_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_sack
-	set guide_      "Sack TCP, no Limited Transmit, one packet drop, so timeout."
-	$self next pktTraceFile
-}
-Test/onedrop_sack instproc run {} {
-        $self setup Sack1 {1}
-}
-
-Class Test/onedrop_SA_sack -superclass TestSuite
-Test/onedrop_SA_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_SA_sack
-	set guide_      "Sack TCP, Limited Transmit, one packet drop, so Fast Retransmit."
-	Agent/TCP set singledup_ 1
-	Test/onedrop_SA_sack instproc run {} [Test/onedrop_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/onedrop_ECN_sack -superclass TestSuite
-Test/onedrop_ECN_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_ECN_sack
-	set guide_      "Sack TCP, ECN, one packet drop, so Fast Retransmit."
-	Agent/TCP set ecn_ 1
-	$self next pktTraceFile
-}
-Test/onedrop_ECN_sack instproc run {} {
-        $self setup Sack1 {1} ECN
-}
-
-Class Test/nodrop_sack -superclass TestSuite
-Test/nodrop_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	nodrop_sack
-	set guide_      "Sack TCP with no packet drops, for comparison."
-	$self next pktTraceFile
-}
-Test/nodrop_sack instproc run {} {
-        $self setup Sack1 {1000} 
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-linkstate.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-linkstate.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-linkstate.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-linkstate.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,223 +0,0 @@
-#
-# Copyright (C) 2000 by USC/ISI
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-linkstate.tcl,v 1.15 2006/01/24 23:00:06 sallyfloyd Exp $
-
-# Simple test for Link State routing contributed by 
-# Mingzhou Sun <msun@rainfinity.com> based on Kannan's old equal-cost 
-# multi-path routing test code.
-
-# Simple example of an equal cost multi-path routing through
-# two equal cost routes.  Equal cost paths are achieved by diddling
-# link costs.
-#
-#
-#		$n0       $n3
-#		   \     /   \
-#		    \   /     \
-#		     $n2-------$n4
-#		    /
-#		   /
-#		$n1
-#
-# However, this is not as simple.  Because $n2 is directly connected to $n4,
-# it prefers its ``Direct'' route over multiple equal cost routes learned
-# via DV.  Hence,we raise the preference of Direct routes over DV routes.
-#
-# Furthermore, in this example, link <$n2, $n4> is made dynamic.  This allows
-# us to watch traffic between $n2 and $n4 alternate between taking multiple
-# equi-cost routes, and the only available route.
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP rtProtoLS ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set SetCWRonRetransmit_ true
-# Changing the default value.
-
-if {![TclObject is-class Agent/rtProto/LS]} {
-	puts "Linkstate module is not present; validation skipped"
-	exit 2
-}
-
-Class TestSuite
-
-Class Test/eqp -superclass TestSuite
-
-Agent/rtProto/Direct set preference_ 200
-
-Test/eqp instproc init {} {
-	$self instvar ns
-	set ns [new Simulator]
-	Node set multiPath_ 1
-	set n0 [$ns node]
-	set n1 [$ns node]
-	set n2 [$ns node]
-	set n3 [$ns node]
-	set n4 [$ns node]
-	$n0 shape "circle"
-	$n1 shape "circle"
-	$n2 shape "other"
-	$n3 shape "other"
-	$n4 shape "box"
-
-	set f [open temp.rands w]
-	$ns trace-all $f
-
-	global quiet
-	if { $quiet == "false" } {
-		set nf [open eqp.nam w]
-		$ns namtrace-all $nf
-	}
-
-	$ns color 0 blue
-	$ns color 1 red
-	$ns color 2 white
-
-	$ns duplex-link $n0 $n2 10Mb 2ms DropTail
-	$ns duplex-link $n1 $n2 10Mb 2ms DropTail
-	$ns duplex-link-op $n0 $n2 orient right-down
-	$ns duplex-link-op $n1 $n2 orient right-up
-
-	$ns duplex-link $n2 $n3 1.5Mb 10ms DropTail
-	$ns duplex-link $n3 $n4 1.5Mb 10ms DropTail
-	$ns queue-limit $n2 $n3 5
-	$ns duplex-link-op $n2 $n3 orient right-up
-	$ns duplex-link-op $n3 $n4 orient right-down
-	$ns duplex-link-op $n2 $n3 queuePos 0
-
-	$ns duplex-link $n2 $n4 1.5Mb 10ms DropTail
-	$ns queue-limit $n2 $n4 5
-	$ns duplex-link-op $n2 $n4 orient right
-	
-	$ns duplex-link-op $n2 $n3 queuePos 0
-	$ns duplex-link-op $n2 $n4 queuePos 0
-	
-	[$ns link $n2 $n4] cost 2
-	[$ns link $n4 $n2] cost 2
-
-	[$self build-tcp $n0 $n4 0.7] set class_ 0
-	[$self build-tcp $n1 $n4 0.9] set class_ 1
-
-	$ns rtmodel Deterministic {.35 .25} $n2 $n4
-	[$ns link $n2 $n4] trace-dynamics $ns stdout
-
-	$ns rtproto LS
-}
-
-Test/eqp instproc build-tcp { n0 n1 startTime } {
-	$self instvar ns
-	set tcp [new Agent/TCP]
-	$ns attach-agent $n0 $tcp
-	set snk [new Agent/TCPSink]
-	$ns attach-agent $n1 $snk
-
-	$ns connect $tcp $snk
-
-	set ftp [new Application/FTP]
-	$ftp attach-agent $tcp
-	$ns at $startTime "$ftp start"
-	return $tcp
-}
-
-Test/eqp instproc finish {} {
-	$self instvar ns
-	$ns flush-trace
-	exit 0
-}
-
-Test/eqp instproc run {} {
-	$self instvar ns
-	$ns at 1.2 "$self finish"
-	$ns run
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests>"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set quiet false
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-			if {[lindex $argv 1] == "QUIET"} {
-				set quiet true
-			} 
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-links.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-links.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-links.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-links.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,686 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-links.tcl,v 1.21 2006/01/24 23:00:06 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-source support.tcl
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 80Kb 10ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-}
-
-Class Topology/net4a -superclass Topology
-Topology/net4a instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 10Mb 10ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 100
-    $ns queue-limit $node_(k1) $node_(r1) 100
-}
-
-
-TestSuite instproc finish file {
-	global quiet wrap PERL
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m $wrap -t $file > temp.rands
-        exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-          $PERL ../../bin/raw2xg -a -c -p -s 0.01 -m $wrap -t $file >> \
-          temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-TestSuite instproc setup {tcptype} {
-}
-
-# Definition of test-suite tests
-
-###################################################
-## Plain link
-###################################################
-
-Class Test/links -superclass TestSuite
-Test/links instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	links
-	$self next pktTraceFile
-}
-Test/links instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) $fid]
-        $tcp1 set window_ 1
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-
-        ###$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-###################################################
-## Link with changing delay.
-###################################################
-
-Class Test/changeDelay -superclass TestSuite
-Test/changeDelay instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	changeDelay
-	$self next pktTraceFile
-}
-Test/changeDelay instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) $fid]
-        $tcp1 set window_ 1
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-	$ns_ at 2.0 "$ns_ delay $node_(r1) $node_(k1) 1000ms duplex"
-	$ns_ at 8.0 "$ns_ delay $node_(r1) $node_(k1) 100ms duplex"
-
-        $self tcpDump $tcp1 5.0
-
-        ##$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-###################################################
-## Link with changing delay, showing reordering.
-###################################################
-
-Class Test/changeDelay1 -superclass TestSuite
-Test/changeDelay1 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4a
-	set test_	changeDelay1
-	$self next pktTraceFile
-}
-Test/changeDelay1 instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) $fid]
-        $tcp1 set window_ 80
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-	$ns_ at 0.0 "$ns_ delay $node_(r1) $node_(k1) 100ms duplex"
-	$ns_ at 2.0 "$ns_ delay $node_(r1) $node_(k1) 1ms duplex"
-	$ns_ at 2.2 "$ns_ delay $node_(r1) $node_(k1) 100ms duplex"
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 4.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-###################################################
-## Link with changing delay, with no reordering.
-###################################################
-
-Class Test/changeDelay2 -superclass TestSuite
-Test/changeDelay2 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4a
-	set test_	changeDelay2
-	DelayLink set avoidReordering_ true
-	Test/changeDelay2 instproc run {} [Test/changeDelay1 info instbody run ]
-	$self next pktTraceFile
-}
-
-###################################################
-## Link with changing bandwidth.
-###################################################
-
-Class Test/links1 -superclass TestSuite
-Test/links1 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	links1
-	$self next pktTraceFile
-}
-Test/links1 instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) $fid]
-        $tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-
-        ##$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-Class Test/changeBandwidth -superclass TestSuite
-Test/changeBandwidth instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	changeBandwidth
-	$self next pktTraceFile
-}
-Test/changeBandwidth instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) $fid]
-        $tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-	$ns_ at 2.0 "$ns_ bandwidth $node_(r1) $node_(k1) 8Kb duplex"
-	$ns_ at 8.0 "$ns_ bandwidth $node_(r1) $node_(k1) 800Kb duplex"
-
-        $self tcpDump $tcp1 5.0
-
-        ##$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-###################################################
-## Two dropped packets.  
-###################################################
-
-Class Test/dropPacket -superclass TestSuite
-Test/dropPacket instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	dropPacket
-	Agent/TCP set minrto_ 1
-	$self next pktTraceFile
-}
-Test/dropPacket instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	$self June01defaults
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 1]
-        $tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-        $self dropPkts [$ns_ link $node_(r1) $node_(k1)] 1 {20 22}
-	# dropPkts is in support.tcl
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 5.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-###################################################
-## Two delayed packets.  
-###################################################
-Class Test/delayPacket -superclass TestSuite
-Test/delayPacket instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	delayPacket
-	Agent/TCP set minrto_ 1
-	ErrorModel set delay_pkt_ true
-	ErrorModel set drop_ false
-	ErrorModel set delay_ 0.3
-	Test/delayPacket instproc run {} [Test/dropPacket info instbody run ]
-	$self next pktTraceFile
-}
-
-###################################################
-## Two delayed packets with different delays
-###################################################
-Class Test/delayPacket1 -superclass TestSuite
-Test/delayPacket1 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	delayPacket1
-	Agent/TCP set minrto_ 1
-	$self next pktTraceFile
-}
-Test/delayPacket1 instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	$self June01defaults
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 1]
-        $tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self dropPkts [$ns_ link $node_(r1) $node_(k1)] 1 {20} true 0.3
-	$self dropPkts [$ns_ link $node_(r1) $node_(k1)] 1 {22} true 0.4
-	# dropPkts is in support.tcl
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 5.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-
-###################################################
-## Delayer module 
-###################################################
-
-## Link r1-k1 blocked at time 2, unblocked at time 4.
-Class Test/delaySpike -superclass TestSuite
-Test/delaySpike instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	delaySpike
-	$self next pktTraceFile
-}
-Test/delaySpike instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-
-	set d1 [new Delayer]
-	set d2 [new Delayer]
-	$ns_ insert-delayer $node_(k1) $node_(r1) $d2
-	$ns_ insert-delayer $node_(r1) $node_(k1) $d1
-	$ns_ at 2.0 "$d1 block"
-	$ns_ at 2.0 "$d2 block"
-	$ns_ at 4.0 "$d1 unblock"
-	$ns_ at 4.0 "$d2 unblock"
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) $fid]
-        $tcp1 set window_ 1
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-## Link r1-k1 blocked at time 2, unblocked at time 4.
-## TCP connection has a window of 8.
-Class Test/delaySpike1 -superclass TestSuite
-Test/delaySpike1 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	delaySpike1
-	$self next pktTraceFile
-}
-Test/delaySpike1 instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-
-	set d1 [new Delayer]
-	set d2 [new Delayer]
-	$ns_ insert-delayer $node_(k1) $node_(r1) $d2
-	$ns_ insert-delayer $node_(r1) $node_(k1) $d1
-	$ns_ at 2.0 "$d1 block"
-	$ns_ at 2.0 "$d2 block"
-	$ns_ at 4.0 "$d1 unblock"
-	$ns_ at 4.0 "$d2 unblock"
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) $fid]
-        $tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-## link r1-k1 has delay spikes, on average for 0.1 seconds, every 0.5 seconds
-Class Test/delaySpikes -superclass TestSuite
-Test/delaySpikes instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	delaySpikes
-	$self next pktTraceFile
-}
-Test/delaySpikes instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set d1 [new Delayer]
-	$ns_ insert-delayer $node_(r1) $node_(k1) $d1
-	set len [new RandomVariable/Exponential]
-	$len set avg_ 0.1
-	set int [new RandomVariable/Exponential]
-	$int set avg_ 0.5
-
-	$d1 spike $int $len
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) $fid]
-        $tcp1 set window_ 1
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-## link r1-k1 has delay spikes, on average for 0.1 seconds, every 0.5 seconds
-## TCP connection has a window of 8.
-Class Test/delaySpikes1 -superclass TestSuite
-Test/delaySpikes1 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	delaySpikes1
-	$self next pktTraceFile
-}
-Test/delaySpikes1 instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set d1 [new Delayer]
-	$ns_ insert-delayer $node_(r1) $node_(k1) $d1
-	set len [new RandomVariable/Exponential]
-	$len set avg_ 0.1
-	set int [new RandomVariable/Exponential]
-	$int set avg_ 0.5
-
-	$d1 spike $int $len
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) $fid]
-        $tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-## Channel channelAllocDelayation delay when the queue is empty.
-Class Test/channelAllocDelay -superclass TestSuite
-Test/channelAllocDelay instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	channelAllocDelay
-	$self next pktTraceFile
-}
-Test/channelAllocDelay instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set d1 [new Delayer]
-	set d2 [new Delayer]
-	$ns_ insert-delayer $node_(k1) $node_(r1) $d1
-	$ns_ insert-delayer $node_(r1) $node_(k1) $d2
-
-	set len_dl [new RandomVariable/Uniform]
-	$len_dl set min_ 0.16
-	$len_dl set max_ 0.19
-	set int_dl [new RandomVariable/Uniform]
-	$int_dl set min_ 2
-	$int_dl set max_ 5
-
-	set len_ul [new RandomVariable/Uniform]
-	$len_ul set min_ 0.5
-	$len_ul set max_ 0.6
-	set int_ul [new RandomVariable/Uniform]
-	$int_ul set min_ 0.01
-	$int_ul set max_ 0.4
-
-	$d1 alloc $int_ul $len_ul
-	$d2 alloc $int_dl $len_dl
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) $fid]
-        $tcp1 set window_ 1
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-	$ns_ run
-}
-
-## Channel allocation delay when the queue is empty.
-## Add a second connection on the reverse path.
-Class Test/channelAllocDelay1 -superclass TestSuite
-Test/channelAllocDelay1 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	channelAllocDelay1
-	$self next pktTraceFile
-}
-Test/channelAllocDelay1 instproc run {} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set d1 [new Delayer]
-	set d2 [new Delayer]
-	$ns_ insert-delayer $node_(k1) $node_(r1) $d1
-	$ns_ insert-delayer $node_(r1) $node_(k1) $d2
-
-	set len_dl [new RandomVariable/Uniform]
-	$len_dl set min_ 0.16
-	$len_dl set max_ 0.19
-	set int_dl [new RandomVariable/Uniform]
-	$int_dl set min_ 2
-	$int_dl set max_ 5
-	$d2 alloc $int_dl $len_dl
-
-	set len_ul [new RandomVariable/Uniform]
-	$len_ul set min_ 0.5
-	$len_ul set max_ 0.6
-	set int_ul [new RandomVariable/Uniform]
-	$int_ul set min_ 0.01
-	$int_ul set max_ 0.4
-	$d1 alloc $int_ul $len_ul
-
-	# int: time of keeping a channel without data.
- 	# len: delay in allocating a new channel.
-
-	set fid 1
-	set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) $fid]
-        $tcp1 set window_ 1
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-	set fid 2
-	set tcp2 [$ns_ create-connection TCP/Sack1 $node_(k1) TCPSink/Sack1 $node_(s1) $fid]
-        $tcp2 set window_ 3
-        set ftp2 [$tcp2 attach-app FTP]
-        $ns_ at 3.0 "$ftp2 start"
-
-        $self tcpDump $tcp1 5.0
-
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-	$ns_ run
-}
-
-#
-# Does not drop extra packets immediately when queue size is lowered.
-#
-Class Test/change_queue -superclass TestSuite
-Test/change_queue instproc init {} {
-        $self instvar net_ test_
-        set net_        net4
-        set test_       change_queue
-        $self next pktTraceFile
-}
-Test/change_queue instproc run {} {
-        global wrap wrap1
-        $self instvar ns_ node_ testName_
-        $self setTopo
-
-        set fid 1
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) $fid]
-	$tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        set link1 [$ns_ link $node_(r1) $node_(k1)]
-        set queue1 [$link1 queue]
-        $ns_ at 5.0 "$ns_ queue-limit $node_(r1) $node_(k1) 5"
-
-        $self tcpDump $tcp1 5.0
-        $ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-#
-# Drops extra packets when queue size is lowered.
-# Validation test from Andrei Gurtov.
-#
-Class Test/queue_shrink -superclass TestSuite
-Test/queue_shrink instproc init {} {
-        $self instvar net_ test_
-        set net_        net4
-        set test_       queue_shrink
-        $self next pktTraceFile
-}
-Test/queue_shrink instproc run {} {
-        global wrap wrap1
-        $self instvar ns_ node_ testName_
-        $self setTopo
-
-        set fid 1
-        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) $fid]
-	$tcp1 set window_ 8
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        set link1 [$ns_ link $node_(r1) $node_(k1)]
-        set queue1 [$link1 queue]
-        $ns_ at 5.0 "$ns_ queue-limit $node_(r1) $node_(k1) 5; $queue1 shrink-queue"
-
-        $self tcpDump $tcp1 5.0
-        $ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-manual-routing.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-manual-routing.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-manual-routing.tcl	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-manual-routing.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,93 +0,0 @@
-#
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-manual-routing.tcl,v 1.7 2006/01/24 23:00:06 sallyfloyd Exp $
-#
-
-#
-# invoked as ns $file $t [QUIET]
-# expected to pop up xgraph output (unless QUIET)
-# and to leave the plot in temp.rands
-#
-
-proc usage {} {
-	puts stderr {usage: ns test-suite-manual-routing.tcl test [QUIET]
-
-Test suites for manual routing.
-}
-	exit 1
-}
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-
-global in_test_suite
-set in_test_suite 1
-source ../ex/many_tcp.tcl
-
-
-
-# these are fakes for test-all
-
-Class Test/one_client
-
-
-proc main {} {
-	global argv
-
-	#
-	# Icky icky icky.
-	# We slap a test-suite-friendly interface over
-	# the otherwise nice interface provided by
-	# rbp_demo.tcl.
-	#
-	set graph 1
-	foreach i $argv {
-		switch $i {
-			quiet {
-				set graph 0
-			}
-			QUIET {
-				set graph 0
-			}
-			one_client {
-				set args "-duration 10 -initial-client-count 1 -client-arrival-rate 0"
-				set title $i
-			}
-		}
-	}
-	# Always set ns-random-seed so we get the same results every time.
-	new Main "-graph-results $graph -ns-random-seed 1 -test-suite 1 -title $title $args"
-}
-
-main
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mcache.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mcache.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mcache.tcl	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mcache.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1177 +0,0 @@
-# Test suite for HTTP server, client, proxy cache.
-#
-# Also tests TcpApp, which is an Application used to transmit 
-# application-level data. Because current TCP isn't capable of this,
-# we build this functionality based on byte-stream model of underlying 
-# TCP connection.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-mcache.tcl,v 1.15 2006/01/24 23:00:06 sallyfloyd Exp $
-
-#----------------------------------------------------------------------
-# Related Files
-#----------------------------------------------------------------------
-#source misc.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP HttpInval ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-source topologies.tcl
-
-#----------------------------------------------------------------------
-# Misc setup
-#----------------------------------------------------------------------
-set tcl_precision 10
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-
-
-#----------------------------------------------------------------------
-# Section 1: Base test class
-#----------------------------------------------------------------------
-Class Test
-
-# Copied from Simulator::instance{}
-Test proc instance {} {
-	set t [Test info instances]
-	if { $t != "" } {
-		return $t
-	}
-	set tl [Test info subclass] 
-	while { $tl != "" } {
-		set ntl {}
-		foreach t $tl {
-			set tt [$t info instances]
-			if { $tt != "" } {
-				return $tt
-			}
-			set ntl [eval lappend ntl [$t info subclass]]
-		}
-		set tl $ntl
-	}
-	error "Cannot find instance of Test"
-}
-
-Test instproc init-instvar v {
-	set cl [$self info class]
-	while { "$cl" != "" } {
-		foreach c $cl {
-			if ![catch "$c set $v" val] {
-				$self set $v $val
-				return
-			}
-		}
-		set parents ""
-		foreach c $cl {
-			if { $cl != "Object" } {
-				set parents "$parents [$c info superclass]"
-			}
-		}
-		set cl $parents
-	}
-}
-
-Test instproc init {} {
-	$self instvar ns_ trace_ net_ defNet_ testName_ node_ test_ topo_ \
-			ntrace_
-
-	set ns_ [new Simulator -multicast on]
-
-	set cls [$self info class]
-	set cls [split $cls /]
-	set test_ [lindex $cls [expr [llength $cls] - 1]]
-
-	global opts
-	ns-random $opts(ns-random-seed)
-
-	# XXX We only output LOGs, but no packet traces. 
-	if ![info exists opts(net)] {
-		set net_ $defNet_
-	} else {
-		set net_ $opts(net)
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-}
-
-Test instproc create-ranvar { dist args } {
-	# options
-	array set opts $args
-	switch $dist {
-		Constant {
-			set tmp [new RandomVariable/Constant]
-			$tmp set val_ $opts(avg)
-		}
-		Poisson {
-			set tmp [new RandomVariable/Exponential]
-			$tmp set avg_ $opts(avg)
-		}
-		Uniform {
-			set tmp [new RandomVariable/Uniform]
-			$tmp set min $opts(min)
-			$tmp set max $opts(max)
-		}
-		Pareto {
-			set tmp [new RandomVariable/Pareto]
-			$tmp set avg_ $opts(avg)
-			$tmp set shape_ $opts(shape)
-		}
-		default {
-			error "Unknown random variable distribution $dist"
-		}
-	}
-	if [info exists opts(rng)] {
-		$tmp use-rng $opts(rng)
-	}
-	return $tmp
-}
-
-# Use this so derived class would have a chance to overwrite the default net
-# of parent classes
-Test instproc set-defnet { defnet } {
-	$self instvar defNet_
-	if ![info exists defNet_] {
-		set defNet_ $defnet
-	}
-}
-
-Test instproc inherit-set { name val } {
-	$self instvar $name
-	if ![info exists $name] {
-		set $name $val
-	}
-}
-
-Test instproc write-testconf { file } {
-	$self instvar test_ net_
-	puts $file "# TESTNAME: $test_"
-	puts $file "# TOPOLOGY: $net_"
-	global opts
-	foreach n [lsort [array names opts]] {
-		# XXX Remove this after validating existing traces
-		if {$n == "quiet"} { continue }
-		puts $file "# $n: $opts($n)" 
-	}
-}
-
-Test instproc set-routing {} {
-}
-
-Test instproc set-members {} {
-}
-
-Test instproc finish {} {
-	$self instvar ns_ trace_ ntrace_
-
-	if [info exists trace_] {
-		$ns_ flush-trace
-		close $trace_
-	}
-	if [info exists ntrace_] {
-		close $ntrace_
-	}
-	exit 0
-}
-
-Test instproc run {} {
-	$self instvar finishTime_ ns_ trace_
-
-	$self set-routing
-	$self set-members
-
-	$ns_ set-abort-proc "$ns_ flush-trace; \
-		$self finish"
-	$ns_ at $finishTime_ "$self finish"
-	$ns_ run
-}
-
-Simulator instproc set-abort-proc { exp } {
-	$self instvar abortProc_
-	set abortProc_ $exp
-}
-
-Simulator instproc abort {} {
-	$self instvar abortProc_
-	eval $abortProc_
-}
-
-# option processing copied from John's ~ns/tcl/ex/rbp_demo.tcl
-proc default_options {} {
-	global opts opt_wants_arg raw_opt_info
-
-	# raw_opt_info can be set in user's script
-
-	while {$raw_opt_info != ""} {
-		if {![regexp "^\[^\n\]*\n" $raw_opt_info line]} {
-			break
-		}
-		regsub "^\[^\n\]*\n" $raw_opt_info {} raw_opt_info
-		set line [string trim $line]
-		if {[regexp "^\[ \t\]*#" $line]} {
-			continue
-		}
-		if {$line == ""} {
-			continue
-		} elseif [regexp {^([^ ]+)[ ]+([^ ]+)$} $line dummy key value] {
-			set opts($key) $value
-			set opt_wants_arg($key) 1
-		} elseif [regexp {^([^ ]+)[ ]*$} $line dummy key] {
-			# So we don't need to assign opt($key)
-			set opt_wants_arg($key) 1
-		} else {
-			set opt_wants_arg($key) 0
-			error "unknown stuff \"$line\" in raw_opt_info"
-		}
-	}
-}
-
-proc process_args {} {
-	global argc argv opts opt_wants_arg
-
-	default_options
-	for {set i 0} {$i < $argc} {incr i} {
-		set key [lindex $argv $i]
-		if {$key == "-?" || $key == "--help" || $key == "-help" || $key == "-h"} {
-			usage
-		}
-		regsub {^--} $key {} key
-		if {![info exists opt_wants_arg($key)]} {
-			continue
-		}
-		if {$opt_wants_arg($key)} {
-			incr i
-			set opts($key) [lindex $argv $i]
-		} else {
-			set opts($key) [expr !opts($key)]
-		}
-	}
-}
-
-# XXX User can reset/append raw_opt_info in their scripts. 
-# At the end of user test script, call proc run to start.
-# Startup procedure, called at the end of the script
-proc run {} {
-	global argc argv opts raw_opt_info
-
-	# We don't actually have any real arguments, but we do have 
-	# various initializations, which the script depends on.
-	process_args
-
-	# Calling convention by test-all-template1: 
-	# ns <file> <test> [QUIET]
-	set prot [lindex $argv 0]
-	set opts(prot) $prot
-	if {$argc > 1} {
-		set opts(quiet) 1
-	} else {
-		set opts(quiet) 0
-	}
-	set test [new Test/$prot]
-	$test run
-}
-
-
-#----------------------------------------------------------------------
-# Section 2 Base class for cache testing
-#----------------------------------------------------------------------
-
-# Simple 2 node, one server, one client
-Class Topology/2node -superclass SkelTopology
-
-Topology/2node instproc init { ns } {
-	$self next 
-	$self instvar node_
-
-	set node_(c) [$ns node]
-	set node_(s) [$ns node]
-
-	# A modem link + a T1 cross-country link
-	$ns duplex-link $node_(c) $node_(s) 10Mb 2ms DropTail
-	$ns duplex-link-op $node_(c) $node_(s) orient right
-	$ns duplex-link-op $node_(c) $node_(s) queuePos 0.5
-
-	# Possible congestion near the client
-	$ns queue-limit $node_(c) $node_(s) 10
-}
-
-#
-# 3 node linear topology testing SimpleTcp and TcpApp
-#
-Class Topology/3node -superclass SkelTopology
-
-Topology/3node instproc init { ns } {
-	$self next 
-	$self instvar node_
-
-	set node_(c) [$ns node]
-	set node_(1) [$ns node]
-	set node_(s) [$ns node]
-
-	# A modem link + a T1 cross-country link
-	$ns duplex-link $node_(c) $node_(1) 56Kb 100ms DropTail
-	$ns duplex-link $node_(1) $node_(s) 1.5Mb 50ms DropTail
-	$ns duplex-link-op $node_(c) $node_(1) orient right
-	$ns duplex-link-op $node_(1) $node_(s) orient right
-	$ns duplex-link-op $node_(c) $node_(1) queuePos 0.5
-	$ns duplex-link-op $node_(1) $node_(s) queuePos 0.5
-
-	# Possible congestion near the client
-	$ns queue-limit $node_(c) $node_(1) 10
-	$ns queue-limit $node_(1) $node_(c) 10
-}
-
-# Simplest topology: 1 client + 1 cache + 1 server
-Class Topology/cache0 -superclass SkelTopology
-
-Topology/cache0 instproc init ns {
-	$self next
-	$self instvar node_
-
-	set node_(c) [$ns node]
-	set node_(e) [$ns node]
-	set node_(s) [$ns node]
-
-	# A modem link + a T1 cross-country link
-	$ns duplex-link $node_(c) $node_(e) 56Kb 100ms DropTail
-	$ns duplex-link $node_(e) $node_(s) 1.5Mb 50ms DropTail
-	$ns duplex-link-op $node_(c) $node_(e) orient right
-	$ns duplex-link-op $node_(e) $node_(s) orient right
-	$ns duplex-link-op $node_(c) $node_(e) queuePos 0.5
-	$ns duplex-link-op $node_(e) $node_(s) queuePos 0.5
-
-	$ns queue-limit $node_(c) $node_(e) 2
-	$ns queue-limit $node_(e) $node_(c) 2
-	$ns queue-limit $node_(e) $node_(s) 5
-	$ns queue-limit $node_(s) $node_(e) 5
-}
-
-# Same as cache0 but with the bottleneck link at the server side
-Class Topology/cache1 -superclass SkelTopology
-
-Topology/cache1 instproc init ns {
-	$self next
-	$self instvar node_
-
-	set node_(c) [$ns node]
-	set node_(e) [$ns node]
-	set node_(s) [$ns node]
-
-	# A modem link + a T1 cross-country link
-	$ns duplex-link $node_(c) $node_(e) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e) $node_(s) 56Kb 100ms DropTail
-	$ns duplex-link-op $node_(c) $node_(e) orient right
-	$ns duplex-link-op $node_(e) $node_(s) orient right
-	$ns duplex-link-op $node_(c) $node_(e) queuePos 0.5
-	$ns duplex-link-op $node_(e) $node_(s) queuePos 0.5
-
-	$ns queue-limit $node_(c) $node_(e) 5
-	$ns queue-limit $node_(e) $node_(c) 5
-	$ns queue-limit $node_(e) $node_(s) 2
-	$ns queue-limit $node_(s) $node_(e) 2
-}
-
-#
-# 4 nodes: one server, one cache, 2 clients
-#
-Class Topology/4node -superclass SkelTopology
-
-Topology/4node instproc init ns {
-	$self next
-	$self instvar node_
-
-	set node_(c0) [$ns node]
-	set node_(c1) [$ns node]
-	set node_(e) [$ns node]
-	set node_(s) [$ns node]
-
-	# Ethernet from clients to cache
-	$ns duplex-link $node_(c0) $node_(e) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(c1) $node_(e) 1.5Mb 50ms DropTail
-	# 56K link from cache to server
-	$ns duplex-link $node_(e) $node_(s) 56K 100ms DropTail
-
-	$ns duplex-link-op $node_(c0) $node_(e) orient left
-	$ns duplex-link-op $node_(c1) $node_(e) orient down
-	$ns duplex-link-op $node_(e) $node_(s) orient left
-	$ns duplex-link-op $node_(c0) $node_(e) queuePos 0.5
-	$ns duplex-link-op $node_(c1) $node_(e) queuePos 0.5
-	$ns duplex-link-op $node_(e) $node_(s) queuePos 0.5
-
-	$ns queue-limit $node_(c0) $node_(e) 5
-	$ns queue-limit $node_(e) $node_(c0) 5
-	$ns queue-limit $node_(c1) $node_(e) 5
-	$ns queue-limit $node_(e) $node_(c1) 5
-	$ns queue-limit $node_(e) $node_(s) 2
-	$ns queue-limit $node_(s) $node_(e) 2
-}
-
-
-#
-# Heterogeneous 4 nodes: one server, one cache, 2 clients
-#
-Class Topology/4node-h -superclass SkelTopology
-
-Topology/4node-h instproc init ns {
-	$self next
-	$self instvar node_
-
-	set node_(c0) [$ns node]
-	set node_(c1) [$ns node]
-	set node_(e) [$ns node]
-	set node_(s) [$ns node]
-
-	# Ethernet from clients to cache
-	# node c0: abundant bw, node c1: limited bw
-	$ns duplex-link $node_(c0) $node_(e) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(c1) $node_(e) 56Kb 50ms DropTail
-	# 56K link from cache to server
-	$ns duplex-link $node_(e) $node_(s) 56Kb 100ms DropTail
-
-	$ns duplex-link-op $node_(c0) $node_(e) orient left
-	$ns duplex-link-op $node_(c1) $node_(e) orient down
-	$ns duplex-link-op $node_(e) $node_(s) orient left
-	$ns duplex-link-op $node_(c0) $node_(e) queuePos 0.5
-	$ns duplex-link-op $node_(c1) $node_(e) queuePos 0.5
-	$ns duplex-link-op $node_(e) $node_(s) queuePos 0.5
-
-	$ns queue-limit $node_(c0) $node_(e) 5
-	$ns queue-limit $node_(e) $node_(c0) 5
-	$ns queue-limit $node_(c1) $node_(e) 2
-	$ns queue-limit $node_(e) $node_(c1) 2
-	$ns queue-limit $node_(e) $node_(s) 2
-	$ns queue-limit $node_(s) $node_(e) 2
-}
-
-# 10 continuous TCP sessions and 10 continuous RAP sessions
-Class Topology/mess-h -superclass SkelTopology
-
-Topology/mess-h instproc init ns {
-	$self next
-	$self instvar node_
-
-	set node_(c0) [$ns node]
-	set node_(c1) [$ns node]
-	set node_(e) [$ns node]
-	set node_(s) [$ns node]
-
-	set d1 [$ns node]
-	set d2 [$ns node]
-
-	# Ethernet from clients to cache
-	# node c0: abundant bw, node c1: limited bw
-	$ns duplex-link $node_(c0) $node_(e) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(c1) $node_(e) 56Kb 50ms DropTail
-	# 56K*20 links from cache to server
-	$ns duplex-link $node_(e) $d1 1.5Mb 50ms DropTail
-	$ns duplex-link $d2 $node_(s) 56Kb 50ms DropTail
-	$ns duplex-link $d1 $d2 1.5Mb 100ms DropTail
-
-	$ns duplex-link-op $node_(c0) $node_(e) queuePos 0.5
-	$ns duplex-link-op $node_(c1) $node_(e) queuePos 0.5
-	$ns duplex-link-op $node_(e) $d1 queuePos 0.5
-	$ns duplex-link-op $d2 $d1 queuePos 0.5
-	$ns duplex-link-op $node_(s) $d2 queuePos 0.5
-
-	# Buffer: 1 RTT at every link, but 4 RTT at the bottleneck link
-	$ns queue-limit $node_(c0) $node_(e) 18
-	$ns queue-limit $node_(e) $node_(c0) 18
-	$ns queue-limit $node_(c1) $node_(e) 3
-	$ns queue-limit $node_(e) $node_(c1) 3
-	$ns queue-limit $node_(e) $d1 18
-	$ns queue-limit $d1 $node_(e) 18
-	# 1 RTT for the bottleneck link
-	$ns queue-limit $d1 $d2 37
-	$ns queue-limit $d2 $d1 37
-	# 1 RTT for web server link
-	$ns queue-limit $d2 $node_(s) 3
-	$ns queue-limit $node_(s) $d2 3
-
-	# Create rap and tcp nodes
-	for {set i 0} {$i < 10} {incr i} {
-		set node_(t$i) [$ns node]	;# TCP client
-		set node_(T$i) [$ns node]	;# TCP server
-		set node_(r$i) [$ns node]	;# RAP client
-		set node_(R$i) [$ns node]	;# RAP server
-
-		# clients connect to cache, servers connect to dummy
-		$ns duplex-link $node_(t$i) $d1 1.5Mb 50ms DropTail
-		$ns duplex-link $node_(T$i) $d2 1.5Mb 50ms DropTail
-		$ns duplex-link $node_(r$i) $d1 1.5Mb 50ms DropTail
-		$ns duplex-link $node_(R$i) $d2 1.5Mb 50ms DropTail
-		# Set all queue limits to 1 RTT
-		$ns queue-limit $node_(t$i) $d1 18
-		$ns queue-limit $d1 $node_(t$i) 18
-		$ns queue-limit $node_(T$i) $d2 18
-		$ns queue-limit $d2 $node_(T$i) 18
-		$ns queue-limit $node_(r$i) $d1 18
-		$ns queue-limit $d1 $node_(r$i) 18
-		$ns queue-limit $node_(R$i) $d2 18
-		$ns queue-limit $d2 $node_(R$i) 18
-	}
-}
-
-
-Agent/TCP/FullTcp set segsize_ 1500 	;# segment size 1.5K
-Agent/TCP/FullTcp set nodelay_ true	;# don't use Nagle's algorithm
-PagePool/Media set page_size_ 1000
-
-# QA-related setup
-Application/MediaApp/QA set LAYERBW_ 2500 ;# Byte rate of layer consumption
-Application/MediaApp/QA set MAXACTIVELAYERS_ 10
-Application/MediaApp/QA set SRTTWEIGHT_ 0.95
-Application/MediaApp/QA set SMOOTHFACTOR_ 4
-Application/MediaApp/QA set MAXBKOFF_ 100
-Application/MediaApp/QA set pref_srtt_ 0.6
-Application/MediaApp/QA set debug_output_ 0
-
-
-#----------------------------------------------------------------------
-# Base class for web cache testing
-#----------------------------------------------------------------------
-Class Test-mcache -superclass Test
-
-Test-mcache set startTime_ 10
-
-Test-mcache instproc init {} {
-	$self next
-	$self instvar startTime_ log_
-	set startTime_ [$class set startTime_]
-
-	# XXX This is the main output of the test suite
-	global opts
-	if $opts(enable-log) {
-		set log_ [open "temp.rands" w]
-		$self write-testconf $log_
-	}
-
-	# By default set to selective push
-	$self set-pagepool
-
-	global opts
-	if [info exists opts(cache-ims-size)] {
-		Http set IMSSize_ $opts(cache-ims-size)
-	}
-	if [info exists opt(server-inv-size)] {
-		Http set INVSize_ $opt(server-inv-size)
-	}
-	if [info exists opts(cache-ref-size)] {
-		Http set REFSize_ $opts(cache-ref-size)
-	}
-	if [info exists opts(client-req-size)] {
-		Http set REQSize_ $opts(client-req-size)
-	}
-}
-
-# Allow global options to preempt, and derived classes to overwrite.
-Test-mcache instproc set-server-type { servertype } {
-	$self instvar serverType_ 
-	global opts
-	if [info exists opts(server)] {
-		set serverType_ $opts(server)
-	} else {
-		set serverType_ $servertype
-	}
-}
-
-Test-mcache instproc set-cache-type { cachetype } {
-	$self instvar cacheType_ 
-	global opts
-	if [info exists opts(cache)] {
-		set cacheType_ $opts(cache)
-	} else {
-		set cacheType_ $cachetype
-	}
-}
-
-Test-mcache instproc set-client-type { clienttype } {
-	$self instvar clientType_
-	global opts
-	if [info exists opts(client)] {
-		set clientType_ $opts(client)
-	} else {
-		set clientType_ $clienttype
-	}
-}
-
-Test-mcache instproc set-pagepool {} {
-	$self instvar startTime_ finishTime_ pgp_
-	global opts
-
-	# Use PagePool/Media
-	set pgp_ [new PagePool/Media]
-	# PagePool/Media MUST know the duration of the simulation; it needs
-	# the info to set correct page modification time. 
-	$pgp_ set-duration $opts(duration)
-	# Number of streams
-	$pgp_ set-num-pages $opts(num-pages)
-	# Page sizes
-	# XXX Should be overwritten later
-	for {set i 0} {$i < $opts(num-pages)} {incr i} {
-		$pgp_ set-pagesize $i $opts(avg-page-size)
-	}
-	# Layers
-	$pgp_ set-layer $opts(obj-layer)
-
-	# Request generator
-	set tmp [new RandomVariable/Uniform]
-	$tmp set min_ 0
-	$tmp set max_ $opts(num-pages)
-	$pgp_ ranvar-req $tmp
-	
-	$pgp_ set-start-time $startTime_
-	set finishTime_ [expr $startTime_ + $opts(duration)]
-}
-
-Test-mcache instproc set-req-generator { client } {
-	$self instvar pgp_ reqRNG_
-
-	global opts
-	if ![info exists reqRNG_] {
-		set reqRNG_ [new RNG]
-		$reqRNG_ seed $opts(ns-random-seed)
-	}
-	
-	switch $opts(req-dist) {
-		Poisson {
-			set tmp [new RandomVariable/Exponential]
-			$tmp set avg_ $opts(avg-req-interval)
-		}
-		Pareto {
-			set tmp [new RandomVariable/Pareto]
-			$tmp set avg_ $opts(avg-req-interval)
-			$tmp set shape_ $opts(req-rv-shape)
-		}
-		Uniform {
-			set tmp [new RandomVariable/Uniform]
-			set opts(min-req-interval) \
-				[expr $opts(avg-req-interval)*0.84]
-			set opts(max-req-interval) \
-				[expr $opts(avg-req-interval)*1.17]
-			$tmp set min_ $opts(min-req-interval)
-			$tmp set max_ $opts(max-req-interval)
-		}
-		default {
-			puts "Unkown page request distribution $opts(req-dist)"
-			exit 1
-		}
-	}
-	$tmp use-rng $reqRNG_
-	$client set-interval-generator $tmp
-	$client set-page-generator $pgp_
-}
-
-Test-mcache instproc flush-trace {} {
-	$self instvar log_
-	flush $log_
-	[Simulator instance] flush-trace
-}
-
-Test-mcache instproc create-members {} {
-	$self instvar client_ server_ cache_ log_ test_ pgp_ node_ ns_ \
-		serverType_ cacheType_ clientType_
-
-	set st $serverType_
-	set lt $clientType_
-	# We may not have cache
-	if [info exists cacheType_] {
-		set ct $cacheType_
-	}
-
-	global opts
-	foreach n [array names node_] {
-		set type [string range $n 0 0]
-		set num [string range $n 1 end]
-		if {$num == ""} {
-			set num 0
-		}
-		switch $type {
-			s {
-			 set server_($num) [new Http/Server$st $ns_ $node_($n)]
-			 if $opts(enable-log) {
-				 $server_($num) log $log_
-			 }
-			 $server_($num) set-page-generator $pgp_
-			}
-			e {
-			 set cache_($num) [new Http/Cache$ct $ns_ $node_($n)]
-			 if $opts(enable-log) {
-				 $cache_($num) log $log_
-			 }
-			}
-			c {
-			  set client_($num) [new Http/Client$lt $ns_ $node_($n)]
-			  $self set-req-generator $client_($num)
-			  if $opts(enable-log) {
-				  $client_($num) log $log_
-			  }
-			}
-		}
-	}
-}
-
-Test-mcache instproc set-routing {} {
-	$self instvar ns_ 
-	$ns_ rtproto Session
-}
-
-Test-mcache instproc set-members {} {
-	$self instvar ns_ finishTime_ startTime_
-	$ns_ at $startTime_ "$self start-connection"
-}
-
-# Create media contents in servers
-Test-mcache instproc populate-server {} {
-	$self instvar pgp_ cache_ server_ 
-	for {set i 0} {$i < [$pgp_ get-poolsize]} {incr i} {
-		set pageid $server_(0):$i
-		$server_(0) gen-page $pageid
-	}
-}
-
-Test-mcache instproc start-connection {} {
-	$self instvar ns_
-
-	$self create-members
-	$self populate-server
-	$self set-connections
-
-	# Let initializations settles down, then start requests
-	$ns_ at [expr [$ns_ now] + 10] "$self start-requests"
-}
-
-Test-mcache instproc finish {} {
-	$self instvar log_
-	if [info exists log_] {
-		close $log_
-	}
-	$self next
-}
-
-
-
-# Transmitting a single stream from a client to a server via a bottleneck 
-# 56Kb link. NO quality adaptation
-Class Test/media1 -superclass Test-mcache
-
-Test/media1 instproc init {} {
-	$self set-defnet 3node
-
-	global opts
-	set opts(avg-page-size) 102400
-	# Since we are NOT doing QA, must use a single layer!!
-	set opts(obj-layer) 1
-
-	$self next
-
-	$self set-server-type /Media
-	$self set-client-type /Media
-	Http set TRANSPORT_ FullTcp
-	Http set MEDIA_TRANSPORT_ RAP
-}
-
-Test/media1 instproc set-connections {} {
-	$self instvar client_ server_ cache_
-	$client_(0) connect $server_(0)
-}
-
-Test/media1 instproc start-requests {} {
-	$self instvar client_ cache_ server_ ns_
-	$client_(0) start-session $server_(0) $server_(0)
-}
-
-
-
-# Simple test of client/cache/server, no quality adaptation
-# Bottleneck link (56Kb) is near the client
-Class Test/media2 -superclass Test-mcache
-
-Test/media2 instproc init {} {
-	$self set-defnet cache0
-
-	global opts
-	set opts(avg-page-size) 4096
-	set opts(avg-req-interval) 600
-	# Since we are NOT doing QA, must use a single layer!!
-	set opts(obj-layer) 1
-
-	$self next
-
-	$self set-server-type /Media
-	$self set-client-type /Media
-	$self set-cache-type /Media
-	Http set TRANSPORT_ FullTcp
-	Http set MEDIA_TRANSPORT_ RAP
-}
-
-Test/media2 instproc set-connections {} {
-	$self instvar client_ server_ cache_
-	$client_(0) connect $cache_(0)
-	$cache_(0) connect $server_(0)
-}
-
-Test/media2 instproc start-requests {} {
-	$self instvar client_ cache_ server_ ns_
-	$client_(0) start-session $cache_(0) $server_(0)
-}
-
-
-# Simple test of QA, one server, one client, 56Kb bottleneck link
-Class Test/media3 -superclass Test-mcache
-
-Test/media3 instproc init {} {
-	$self set-defnet 3node
-
-	global opts
-	set opts(avg-page-size) 524288
-	set opts(avg-req-interval) 2000
-	set opts(obj-layer) 4
-	set opts(duration) 800
-
-	$self next
-
-	$self set-server-type /Media
-	$self set-client-type /Media
-	Http set TRANSPORT_ FullTcp
-	Http set MEDIA_TRANSPORT_ RAP
-	Http set MEDIA_APP_ MediaApp/QA
-}
-
-Test/media3 instproc set-connections {} {
-	$self instvar client_ server_ cache_
-	$client_(0) connect $server_(0)
-}
-
-Test/media3 instproc start-requests {} {
-	$self instvar client_ server_ ns_
-	$client_(0) set-cache $server_(0)
-	$client_(0) send-request $server_(0) GET $server_(0):0 
-}
-
-# Same as above, but 10Mb bottleneck link (basically high enough to hold
-# all 8 layers)
-Class Test/media3a -superclass Test/media3
-
-Test/media3a instproc init {} {
-	$self set-defnet 2node
-	$self next
-}
-
-
-# One server, one cache and one client. 
-# 56Kb bottleneck link between client and cache.
-Class Test/media4 -superclass Test-mcache
-
-Test/media4 instproc init {} {
-	$self set-defnet cache0
-
-	global opts
-	set opts(avg-req-interval) 60
-	set opts(duration) 400
-	# Page size set to 300 seconds
-	set opts(avg-page-size) 600000
-	set opts(obj-layer) 8
-
-	$self next
-
-	$self set-server-type /Media
-	$self set-client-type /Media
-	$self set-cache-type /Media
-	Http set TRANSPORT_ FullTcp
-	Http set MEDIA_TRANSPORT_ RAP
-	Http set MEDIA_APP_ MediaApp/QA
-}
-
-Test/media4 instproc set-connections {} {
-	$self instvar client_ server_ cache_
-	$client_(0) connect $cache_(0)
-	$cache_(0) connect $server_(0)
-}
-
-Test/media4 instproc start-requests {} {
-	$self instvar client_ cache_ server_ ns_
-	$client_(0) set-cache $cache_(0)
-
-	# First request
-	$client_(0) send-request $cache_(0) GET $server_(0):0 
-
-	# 5 additional requests
-	set time [$ns_ now]
-	for {set i 1} {$i < 15} {incr i} {
-		incr time 50
-		$ns_ at $time "$client_(0) send-request $cache_(0) GET \
-$server_(0):0"
-	}
-}
-
-# Same as media4, but with 56Kb bottleneck link between server and cache.
-#Class Test/media4a -superclass Test/media4
-
-#Test/media4a instproc init {} {
-#	$self set-defnet cache1
-#	$self next
-#}
-
-
-# Test cache replacement
-# Clients with heterogeneous bandwidth to the cache: client0-cache is 1.5Mb,
-# client1-cache is 56Kb, cache-server is the same as in media5, 56Kb.
-#
-# We distribute 95% of the requests to the low-bw client 1
-Class Test/media5 -superclass Test-mcache
-
-Test/media5 instproc init {} {
-	$self set-defnet 4node-h
-
-	global opts
-	set opts(num-pages) 3
-	set opts(obj-layer) 8
-	set opts(cache-sizefac) 0.4
-	set opts(total-requests) 10
-	set opts(duration) [expr 50*$opts(total-requests)+50]
-
-	$self next
-
-	$self set-server-type /Media
-	$self set-client-type /Media
-	$self set-cache-type /Media
-	Http set TRANSPORT_ FullTcp
-	Http set MEDIA_TRANSPORT_ RAP
-	Http set MEDIA_APP_ MediaApp/QA
-}
-
-Test/media5 instproc set-pagepool {} {
-	$self next
-
-	# Set sizes of the pages
-	$self instvar pgp_ ns_
-	global opts
-	set layer $opts(obj-layer)
-	set lbw [Application/MediaApp/QA set LAYERBW_]
-
-	# Uniformly distribute stream lengths
-	set rv [new RandomVariable/Uniform]
-	$rv set min_ 10
-	$rv set max_ 20
-
-	$self instvar totalSize_ log_
-	set totalSize_ 0
-	for {set i 0} {$i < $opts(num-pages)} {incr i} {
-		set tmp [expr int([$rv value]*$layer*$lbw)]
-		puts $log_ "# Page $i has size $tmp"
-		incr totalSize_ $tmp
-		$pgp_ set-pagesize $i $tmp
-	}
-	delete $rv
-}
-
-Test/media5 instproc set-connections {} {
-	$self instvar client_ server_ cache_ totalSize_
-
-	# Set cache size to be 
-	global opts
-	set np $opts(num-pages)
-	set layer $opts(obj-layer)
-	set lbw [Application/MediaApp/QA set LAYERBW_]
-	# Set cache size to be 0.5 times total page size
-	$cache_(0) set-cachesize [expr $opts(cache-sizefac) * $totalSize_]
-
-	# Establish connection
-	$client_(0) connect $cache_(0)
-	$client_(1) connect $cache_(0)
-	$cache_(0) connect $server_(0)
-}
-
-Test/media5 instproc start-requests {} {
-	$self instvar client_ cache_ server_ ns_ log_
-
-	# Client setting parent caches
-	$client_(0) set-cache $cache_(0)
-	$client_(1) set-cache $cache_(0)
-
-	# Generate non-overlapping request sequence
-	global opts
-	set np $opts(num-pages)
-	set time [$ns_ now]
-	set tr $opts(total-requests)
-
-	# Build page popularity table according to total requests and 
-	# Zipf's law
-	set omega 0
-	for {set i 1} {$i <= $np} {incr i} {
-		set omega [expr $omega + 1.0/$i]
-	}
-	set omega [expr 1.0 / $omega]
-	# Calculate number of requests for each page
-	set j 0
-	for {set i 0} {$i < $np} {incr i} {
-		set nreq($i) [expr round($omega*$tr/($i+1.0))]
-		for {set ii 0} {$ii < $nreq($i)} {incr ii} {
-			set tmp1($j) 0	;# Whether this request is occupied
-			set tmp2($j) $i ;# which page this request belong to
-			incr j
-		}
-		puts $log_ "# Total $nreq($i) requests for page $i"
-	}
-	if {$j != $tr} {
-		error "Mis-calculated number of requests: this $j orig $tr"
-	}
-	# Build request sequence, uniform distribution
-	set rv [new RandomVariable/Uniform]
-	$rv set min_ 0
-	$rv set max_ $j
-	set i 0
-	set time 0
-	$self instvar reqlist_
-	# Schedule requests, 500s interval should suffice for 56K bottleneck
-	# link and 600s stream with 8 layers of 2.5K bw.
-	while {$i < $j} {
-		set rid [expr int([$rv value])]
-		if {$tmp1($rid) != 0} {
-			# Already allocated
-			continue
-		}
-		set tmp1($rid) 1
-		# Determine client ID
-		set cid [$self req2client $tmp2($rid) [$rv value] $j]
-
-		# Instead of scheduling a request right now, let's do it
-		# step by step so that scheduler won't complain.
-		lappend reqlist_ $cid $tmp2($rid)
-
-		# XXX Interval 500 second. Should adjust it according to 
-		# maximum page size
-		incr time 50
-		incr i
-	}
-	$self next-request
-}
-
-# Get the first request from reqlist_
-Test/media5 instproc next-request {} {
-	$self instvar server_ cache_ client_ reqlist_ ns_
-	set cid [lindex $reqlist_ 0]
-	set pagenum [lindex $reqlist_ 1]
-	set reqlist_ [lrange $reqlist_ 2 end]
-
-	$client_($cid) send-request $cache_(0) GET $server_(0):$pagenum
-
-	# Do our next request 50 seconds later
-	if {[llength $reqlist_] > 0} {
-		# If we still have more requests, continue
-		$ns_ at [expr [$ns_ now] + 50] "$self next-request"
-	}
-}
-
-# Use a random number and the upper bound of the random number to 
-# decide whether the request goes to client 0 or 1
-Test/media5 instproc req2client { pagenum ran max } {
-	# Most requests go to the low-bw client
-	set thresh [expr $max * 0.95]
-	if {$ran > $thresh} {
-		return 0
-	} else {
-		return 1
-	}
-}
-
-# 95% requests go to the high-bw client
-#Class Test/media5a -superclass Test/media5 
-
-#Test/media5a instproc req2client { pagenum ran max } {
-#	# Distribute 95% requests of all pages to the high-bw client, 
-#	# and 5% to the low-bw client
-#	set thresh [expr $max*0.05]
-#	if {$ran > $thresh} {
-#		return 0
-#	} else {
-#		return 1
-#	}
-#}
-
-# 50:50 distribution among 2 clients
-#Class Test/media5b -superclass Test/media5
-#
-#Test/media5b instproc req2client { pagenum ran max } {
-#	# Uniformly distribute requests of all pages
-#	set thresh [expr $max*0.5]
-#	if {$ran > $thresh} {
-#		return 0
-#	} else {
-#		return 1
-#	}
-#}
-
-
-# Configurations
-global raw_opt_info
-set raw_opt_info {
-	# Random number seed; default is 0, so ns will give a 
-	# diff. one on each invocation.
-	# XXX Get a "good" seed from predef_seeds[] in rng.cc
-	ns-random-seed 188312339
-		
-	# Animation options; complete traces are useful
-	# for nam only, so do those only when a tracefile
-	# is being used for nam
-	enable-log 1
-	duration 500
-
-	# Packet size configurations
-	cache-ims-size	50
-	cache-ref-size	50
-	server-inv-size	43
-	client-req-size 43
-
-	# request intervals
-	avg-req-interval 1000
-	req-dist Poisson
-
-	# Cache size factor, i.e., what % of the total stream size
-	cache-sizefac 0.5
-	# Object layers
-	obj-layer 8
-	# One media stream takes 5 layers, and 512K in total
-	avg-page-size 512000
-	# Number of pages 
-	num-pages 1
-	# Total number of requests
-	total-requests 10
-}
-
-
-#----------------------------------------------------------------------
-# Execution starts...
-#----------------------------------------------------------------------
-run
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mcast.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mcast.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mcast.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mcast.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,956 +0,0 @@
-# This test suite is for validating the multicast support in ns.
-#
-# To run all tests:  test-mcast
-#
-# To run individual tests:
-# ns test-suite-mcast.tcl DM1
-# ns test-suite-mcast.tcl DM2
-# ...
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-mcast.tcl
-#
-
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_
-	set ns_ [new Simulator -multicast on]
-	#$ns_ use-scheduler List
-	
-	$ns_ trace-all [open temp.rands w]
-	$ns_ namtrace-all [open temp.rands.nam w]
-	$ns_ color 0 blue
-	$ns_ color 1 red
-	$ns_ color 2 yellow
-	$ns_ color 30 purple
-	$ns_ color 31 green
-	
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-	
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-	
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-}
-
-TestSuite instproc finish { file } {
-	$self instvar ns_ 
-	global quiet
-	
-	$ns_ flush-trace
-	if { !$quiet } {
-		puts "running nam..."
-		exec nam temp.rands.nam &
-	}
-	exit 0
-}
-
-TestSuite instproc openTrace { stopTime testName } {
-	$self instvar ns_
-	exec rm -f temp.rands
-	set traceFile [open temp.rands w]
-	puts $traceFile "v testName $testName"
-	$ns_ at $stopTime \
-		"close $traceFile ; $self finish $testName"
-	return $traceFile
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-	
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set quiet 0
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-			set a [lindex $argv 1]
-			if {$a == "QUIET"} {
-				set topo ""
-				set quiet 1
-			} else {
-				set topo $a
-				isProc? Topology $topo
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-# Skeleton topology base class
-Class SkelTopology
-
-SkelTopology instproc init {} {
-	$self next
-}
-
-SkelTopology instproc node? n {
-	$self instvar node_
-	if [info exists node_($n)] {
-		set ret $node_($n)
-	} else {
-		set ret ""
-	}
-	set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-	$self instvar node_
-	set n1 [lindex $nodelist 0]
-	foreach n2 [lrange $nodelist 1 end] {
-		if ![info exists node_($n2)] {
-			set node_($n2) [$ns node]
-		}
-		$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-		foreach opt $args {
-			set cmd [lindex $opt 0]
-			set val [lindex $opt 1]
-			if {[llength $opt] > 2} {
-				set x1 [lindex $opt 2]
-				set x2 [lindex $opt 3]
-			} else {
-				set x1 $n1
-				set x2 $n2
-			}
-			$ns $cmd $node_($x1) $node_($x2) $val
-			$ns $cmd $node_($x2) $node_($x1) $val
-		}
-		set n1 $n2
-	}
-}
-
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-
-NodeTopology/4nodes instproc init ns {
-	$self next
-	
-	$self instvar node_
-	set node_(n0) [$ns node]
-	set node_(n1) [$ns node]
-	set node_(n2) [$ns node]
-	set node_(n3) [$ns node]
-}
-
-
-Class Topology/net4a -superclass NodeTopology/4nodes
-
-# Create a simple four node topology:
-#
-#	              n3
-#	             / 
-#       1.5Mb,10ms  / 1.5Mb,10ms                              
-#    n0 --------- n1
-#                  \  1.5Mb,10ms
-#	            \ 
-#	             n2
-#
-
-Topology/net4a instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-Class Topology/net4b -superclass NodeTopology/4nodes
-
-# 4 nodes on the same LAN
-#
-#           n0   n1
-#           |    |
-#       -------------
-#           |    |
-#           n2   n3
-#
-#
- 
-Topology/net4b instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns multi-link-of-interfaces [list $node_(n0) $node_(n1) $node_(n2) $node_(n3)] 1.5Mb 10ms DropTail
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-Class NodeTopology/5nodes -superclass SkelTopology
-
-NodeTopology/5nodes instproc init ns {
-	$self next
-	
-	$self instvar node_
-	set node_(n0) [$ns node]
-	set node_(n1) [$ns node]
-	set node_(n2) [$ns node]
-	set node_(n3) [$ns node]
-	set node_(n4) [$ns node]
-}
-
-
-Class Topology/net5a -superclass NodeTopology/5nodes
-
-#
-# Create a simple five node topology:
-#
-#                  n4
-#                 /  \                    
-#               n3    n2
-#               |     |
-#               n0    n1
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net5a instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns duplex-link $node_(n0) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n1) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n3) $node_(n4) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-
-Class Topology/net5b -superclass NodeTopology/5nodes
-
-#
-# Create a five node topology:
-#
-#                  n4
-#                 /  \                    
-#               n3----n2
-#               |     |
-#               n0    n1
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net5b instproc init ns {
-    $self next $ns
-	$self instvar node_
-	$ns duplex-link $node_(n0) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n1) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n3) $node_(n4) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-    }
-}
-
-Class Topology/net5c -superclass NodeTopology/5nodes
-
-#
-# Create a five node topology:
-#
-#                  n4
-#                 /  \                    
-#               n3----n2
-#               | \  /|
-#               |  \  |
-#               | / \ |
-#               n0    n1
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net5c instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns duplex-link $node_(n0) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n3) $node_(n4) 1.5Mb 10ms DropTail 
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-
-Class Topology/net5d -superclass NodeTopology/5nodes
-
-#
-# Create a five node topology:
-#
-#                  n4
-#                 /  \                    
-#               n3----n2
-#               | \  /|
-#               |  \  |
-#               | / \ |
-#               n0----n1
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net5d instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns duplex-link $node_(n0) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n3) $node_(n4) 1.5Mb 10ms DropTail 
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-
-Class Topology/net5e -superclass NodeTopology/5nodes
-
-#
-# Create a five node topology with 4 nodes on a LAN:
-#
-#                  n4
-#                 /  \                    
-#               n3    n2
-#               |     |
-#             -----------
-#               |     |
-#               n0    n1
-#
-
-Topology/net5e instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns newLan [list $node_(n0) $node_(n3) $node_(n1) $node_(n2)] 1.5Mb 10ms
-
-	$ns duplex-link $node_(n3) $node_(n4) 1.5Mb 3ms DropTail
-	$ns duplex-link-op $node_(n3) $node_(n4) orient right-down
-	$ns duplex-link $node_(n2) $node_(n4) 1.5Mb 3ms DropTail
-	$ns duplex-link-op $node_(n2) $node_(n4) orient left-down
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-NodeTopology/6nodes instproc init ns {
-	$self next
-	
-	$self instvar node_
-	set node_(n0) [$ns node]
-	set node_(n1) [$ns node]
-	set node_(n2) [$ns node]
-	set node_(n3) [$ns node]
-	set node_(n4) [$ns node]
-	set node_(n5) [$ns node]
-}
-
-
-Class Topology/net6a -superclass NodeTopology/6nodes
-
-#
-# Create a simple six node topology:
-#
-#                  n0
-#                 /  \                    
-#               n1    n2
-#              /  \  /  \
-#             n3   n4   n5
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net6a instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n1) $node_(n4) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-	$ns duplex-link $node_(n2) $node_(n5) 1.5Mb 10ms DropTail 
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-Class Topology/net6b -superclass NodeTopology/6nodes
-
-# 6 node topology with nodes n2, n3 and n5 on a LAN.
-#
-#          n4
-#          |
-#          n3
-#          |
-#    --------------
-#      |       |
-#      n5      n2
-#      |       |
-#      n0      n1
-#
-# All point-to-point links have 1.5Mbps Bandwidth, 10ms latency.
-#
-
-Topology/net6b instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns multi-link-of-interfaces [list $node_(n5) $node_(n2) $node_(n3)] 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n4) $node_(n3) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n5) $node_(n0) 1.5Mb 10ms DropTail
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-
-Class NodeTopology/8nodes -superclass SkelTopology
-
-NodeTopology/8nodes instproc init ns {
-	$self next
-	
-	$self instvar node_
-	set node_(n0) [$ns node]
-	set node_(n1) [$ns node]
-	set node_(n2) [$ns node]
-	set node_(n3) [$ns node]
-	set node_(n4) [$ns node]
-	set node_(n5) [$ns node]
-	set node_(n6) [$ns node]
-	set node_(n7) [$ns node]
-}
-
-Class Topology/net8a -superclass NodeTopology/8nodes
-
-# 8 node topology with nodes n2, n3, n4 and n5 on a LAN.
-#
-#      n0----n1     
-#      |     |
-#      n2    n3
-#      |     |
-#    --------------
-#      |     |
-#      n4    n5
-#      |     |
-#      n6    n7
-#
-# All point-to-point links have 1.5Mbps Bandwidth, 10ms latency.
-#
-
-Topology/net8a instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns multi-link-of-interfaces [list $node_(n2) $node_(n3) $node_(n4) $node_(n5)] 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n4) $node_(n6) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n5) $node_(n7) 1.5Mb 10ms DropTail
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-
-# Definition of test-suite tests
-
-# Testing group join/leave in a simple topology
-Class Test/DM1 -superclass TestSuite
-Test/DM1 instproc init topo {
-	source ../mcast/DM.tcl
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4a
-	set test_	DM1
-	$self next
-}
-Test/DM1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set mproto DM
-	set mrthandle [$ns_ mrtproto $mproto {}]
-	
-	set grp0 [Node allocaddr]
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n1) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	
-	set grp1 [Node allocaddr]
-	set udp1 [new Agent/UDP]
-	$ns_ attach-agent $node_(n3) $udp1
-	$udp1 set dst_addr_ $grp1
-	$udp1 set dst_port_ 0
-	$udp1 set class_ 1
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-	
-	set rcvr [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr
-	$ns_ at 1.2 "$node_(n2) join-group $rcvr $grp1"
-	$ns_ at 1.25 "$node_(n2) leave-group $rcvr $grp1"
-	$ns_ at 1.3 "$node_(n2) join-group $rcvr $grp1"
-	$ns_ at 1.35 "$node_(n2) join-group $rcvr $grp0"
-	
-	$ns_ at 1.0 "$cbr0 start"
-	$ns_ at 1.1 "$cbr1 start"
-	
-	$ns_ at 1.8 "$self finish 4a-nam"
-	$ns_ run
-}
-
-# Testing group join/leave in a richer topology. Testing rcvr join before
-# the source starts sending pkts to the group.
-Class Test/DM2 -superclass TestSuite
-Test/DM2 instproc init topo {
-	source ../mcast/DM.tcl
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net6a
-	set test_	DM2
-	$self next
-}
-Test/DM2 instproc run {} {
-	$self instvar ns_ node_ testName_
-	
-	### Start multicast configuration
-	DM set PruneTimeout 0.3
-	set mproto DM
-	set mrthandle [$ns_ mrtproto $mproto  {}]
-	### End of multicast  config
-	
-	set grp0 [Node allocaddr]
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n0) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	
-	set rcvr [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr
-	$ns_ attach-agent $node_(n4) $rcvr
-	$ns_ attach-agent $node_(n5) $rcvr
-	
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr $grp0"
-	$ns_ at 0.4 "$node_(n4) join-group $rcvr $grp0"
-	$ns_ at 0.6 "$node_(n3) leave-group $rcvr $grp0"
-	$ns_ at 0.7 "$node_(n5) join-group $rcvr $grp0"
-	$ns_ at 0.95 "$node_(n3) join-group $rcvr $grp0"
-	
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 1.0 "$self finish 6a-nam"
-	
-	$ns_ run
-}
-
-#Same as DM2 but with dvmrp-like cache miss rules
-Class Test/DM3 -superclass TestSuite
-Test/DM3 instproc init topo {
-	source ../mcast/DM.tcl
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net6a
-	set test_	DM3
-	$self next
-}
-Test/DM3 instproc run {} {
-	$self instvar ns_ node_ testName_
-	
-	### Start multicast configuration
-	DM set PruneTimeout  0.3
-	DM set CacheMissMode dvmrp
-	set mproto DM
-	set mrthandle [$ns_ mrtproto $mproto  {}]
-	### End of multicast  config
-	
-	set grp0 [Node allocaddr]
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n0) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	
-	set rcvr [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr
-	$ns_ attach-agent $node_(n4) $rcvr
-	$ns_ attach-agent $node_(n5) $rcvr
-	
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr $grp0"
-	$ns_ at 0.4 "$node_(n4) join-group $rcvr $grp0"
-	$ns_ at 0.6 "$node_(n3) leave-group $rcvr $grp0"
-	$ns_ at 0.7 "$node_(n5) join-group $rcvr $grp0"
-	$ns_ at 0.95 "$node_(n3) join-group $rcvr $grp0"
-	
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 1.0 "$self finish 6a-nam"
-	
-	$ns_ run
-}
-
-# Testing dynamics of links going up/down.
-Class Test/DM4 -superclass TestSuite
-Test/DM4 instproc init topo {
-	source ../mcast/DM.tcl
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net6a
-	set test_	DM4
-	$self next
-}
-Test/DM4 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$ns_ rtproto Session
-	### Start multicast configuration
-	DM set PruneTimeout 0.3
-	set mproto DM
-	set mrthandle [$ns_ mrtproto $mproto  {}]
-	### End of multicast  config
-	
-	set grp0 [Node allocaddr]
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n0) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	
-	set rcvr [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr
-	$ns_ attach-agent $node_(n4) $rcvr
-	$ns_ attach-agent $node_(n5) $rcvr
-	
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr $grp0"
-	$ns_ at 0.4 "$node_(n4) join-group $rcvr $grp0"
-	$ns_ at 0.6 "$node_(n3) leave-group $rcvr $grp0"
-	$ns_ at 0.7 "$node_(n5) join-group $rcvr $grp0"
-	$ns_ at 0.8 "$node_(n3) join-group $rcvr $grp0"
-	#### Link between n0 & n1 down at 1.0, up at 1.2
-	$ns_ rtmodel-at 1.0 down $node_(n0) $node_(n1)
-	$ns_ rtmodel-at 1.2 up   $node_(n0) $node_(n1)
-	####
-	
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 1.6 "$self finish 6a-nam"
-	
-	$ns_ run
-}
-# testing lan topologies
-#Class Test/DM5 -superclass TestSuite
-#Test/DM5 instproc init topo {
-	#source ../mcast/DM.tcl
-
-	#$self instvar net_ defNet_ test_
-	#set net_	$topo
-	#set defNet_	net5e
-	#set test_	DM5
-	#$self next
-#}
-#Test/DM5 instproc run {} {
-	#$self instvar ns_ node_ testName_
-	#$ns_ rtproto Session
-	#### Start multicast configuration
-	#DM set PruneTimeout 0.3
-	#DM set CacheMissMode dvmrp
-	#set mproto DM
-	#set mrthandle [$ns_ mrtproto $mproto  {}]
-	### End of multicast  config
-	
-	#set udp0 [new Agent/UDP]
-	#$ns_ attach-agent $node_(n4) $udp0
-	#$udp0 set dst_addr_ 0x8002
-	#$udp0 set dst_port_ 0
-	#set cbr0 [new Application/Traffic/CBR]
-	#$cbr0 attach-agent $udp0
-	
-	#set rcvr [new Agent/LossMonitor]
-	#$ns_ attach-agent $node_(n0) $rcvr
-	#$ns_ attach-agent $node_(n1) $rcvr
-	#$ns_ attach-agent $node_(n2) $rcvr
-	
-	#$ns_ at 0.2 "$node_(n0) join-group  $rcvr 0x8002"
-	#$ns_ at 0.3 "$node_(n1) join-group  $rcvr 0x8002"
-	#$ns_ at 0.4 "$node_(n1) leave-group $rcvr 0x8002"
-	#$ns_ at 0.5 "$node_(n2) join-group  $rcvr 0x8002"
-	#$ns_ at 0.6 "$node_(n2) leave-group $rcvr 0x8002"
-	#$ns_ at 0.7 "$node_(n0) leave-group $rcvr 0x8002"
-
-	####
-	
-	#$ns_ at 0.1 "$cbr0 start"
-#	#$ns_ at 0.11 "$node_(n4) dump-routes stdout"
-#	#$ns_ at 0.25 "$node_(n0) dump-routes stdout"
-	#$ns_ at 1.0 "$self finish 5e-nam"
-	
-	#$ns_ run
-#}
-
-# Testing group join/leave in a simple topology, changing the RP set. 
-# The RP node also has a source.
-Class Test/CtrMcast1 -superclass TestSuite
-Test/CtrMcast1 instproc init topo {
-	source ../ctr-mcast/CtrMcast.tcl
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4a
-	set test_	CtrMcast1
-	$self next
-}
-# source and RP on same node
-Test/CtrMcast1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set mproto CtrMcast
-	set mrthandle [$ns_ mrtproto $mproto  {}]
-	$mrthandle set_c_rp $node_(n2)
-	
-	set udp1 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp1
-	
-	set grp [Node allocaddr]
-	
-	$udp1 set dst_addr_ $grp
-	$udp1 set dst_port_ 0
-	$udp1 set class_ 1
-	##$udp1 set dst_addr_ 0x8003
-	
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-
-	set udp2 [new Agent/UDP]
-	$ns_ attach-agent $node_(n3) $udp2
-	$udp2 set dst_addr_ $grp
-	$udp2 set dst_port_ 0
-	$udp2 set class_ 2
-	##$udp2 set dst_addr_ 0x8003
-	
-	set cbr2 [new Application/Traffic/CBR]
-	$cbr2 attach-agent $udp2
-
-	set rcvr0 [new Agent/Null]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/Null]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2  [new Agent/Null]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/Null]
-	$ns_ attach-agent $node_(n3) $rcvr3
-	
-	$ns_ at 0.2 "$cbr1 start"
-	$ns_ at 0.25 "$cbr2 start"
-	$ns_ at 0.3 "$node_(n1) join-group  $rcvr1 $grp"
-	$ns_ at 0.4 "$node_(n0) join-group  $rcvr0 $grp"
-
-	$ns_ at 0.45 "$mrthandle switch-treetype $grp"
-
-	$ns_ at 0.5 "$node_(n3) join-group  $rcvr3 $grp"
-	$ns_ at 0.65 "$node_(n2) join-group  $rcvr2 $grp"
-	
-	$ns_ at 0.7 "$node_(n0) leave-group $rcvr0 $grp"
-	$ns_ at 0.8 "$node_(n2) leave-group  $rcvr2 $grp"
-
-	$ns_ at 0.9 "$node_(n3) leave-group  $rcvr3 $grp"
-	$ns_ at 1.0 "$node_(n1) leave-group $rcvr1 $grp"
-	$ns_ at 1.1 "$node_(n1) join-group $rcvr1 $grp"
-	$ns_ at 1.2 "$self finish 4a-nam"
-	
-	$ns_ run
-}
-
-
-
-
-# Testing performance in the presence of dynamics. Also testing a rcvr joining
-# a group before the src starts sending pkts to the group.
-Class Test/CtrMcast2 -superclass TestSuite
-Test/CtrMcast2 instproc init topo {
-	  $self instvar net_ defNet_ test_
-	  set net_	$topo
-	  set defNet_	net6a
-	  set test_	CtrMcast2
-	  $self next
-}
-Test/CtrMcast2 instproc run {} {
-	  $self instvar ns_ node_ testName_
-
-	  $ns_ rtproto Session
-	  set mproto CtrMcast
-	  set mrthandle [$ns_ mrtproto $mproto  {}]
-	  
-	  set grp0 [Node allocaddr]
-	  set udp0 [new Agent/UDP]
-	  $ns_ attach-agent $node_(n0) $udp0
-	  $udp0 set dst_addr_ $grp0
-	  $udp0 set dst_port_ 0
-	  $udp0 set class_ 1
-	  set cbr0 [new Application/Traffic/CBR]
-	  $cbr0 attach-agent $udp0
-
-	  set rcvr [new Agent/Null]
-	  $ns_ attach-agent $node_(n3) $rcvr
-	  $ns_ attach-agent $node_(n4) $rcvr
-	  $ns_ attach-agent $node_(n5) $rcvr
-	  
-	  $ns_ at 0.3 "$node_(n3) join-group  $rcvr $grp0"
-	  $ns_ at 0.35 "$cbr0 start"
-	  $ns_ at 0.4 "$node_(n4) join-group  $rcvr $grp0"
-	  $ns_ at 0.5 "$node_(n5) join-group  $rcvr $grp0"
-
-	  ### Link between n2 & n4 down at 0.6, up at 1.2
-	  $ns_ rtmodel-at 0.6 down $node_(n2) $node_(n4)
-	  $ns_ rtmodel-at 0.8 up $node_(n2) $node_(n4)
-	  ###
-
-	  $ns_ at 1.2 "$mrthandle switch-treetype $grp0"
-
-	  ### Link between n0 & n1 down at 1.5, up at 2.0
-	  $ns_ rtmodel-at 1.0 down $node_(n0) $node_(n1)
-	  $ns_ rtmodel-at 1.4 up $node_(n0) $node_(n1)
-	  ###
-	  $ns_ at 1.5 "$self finish 6a-nam"
-	  
-	  $ns_ run
-}
-
-# Testing dynamics of joining and leaving for shared tree
-Class Test/ST1 -superclass TestSuite
-Test/ST1 instproc init topo {
-	source ../mcast/ST.tcl
-	global quiet
-	if { $quiet } {
-		ST instproc dbg arg {}
-	}
-
-	$self instvar net_ defNet_ test_ 
-	set net_	$topo
-	set defNet_	net6a
-	set test_	ST1
-	$self next
-}
-Test/ST1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set grp3 [Node allocaddr]
-	set udp3 [new Agent/UDP]
-	$ns_ attach-agent $node_(n3) $udp3
-	$udp3 set dst_addr_ $grp3
-	$udp3 set dst_port_ 0
-	set cbr3 [new Application/Traffic/CBR]
-	$cbr3 attach-agent $udp3
-
-	$cbr3 set interval_ 30ms
-
-	set rcvr2 [new Agent/LossMonitor]
-	set rcvr4 [new Agent/LossMonitor]
-	set rcvr5 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	$ns_ attach-agent $node_(n4) $rcvr4
-	$ns_ attach-agent $node_(n5) $rcvr5
-	
-	### Start multicast configuration
-	ST set RP_($grp3) $node_(n0)
-	$ns_ mrtproto ST  ""
-
-	### End of multicast  config
-
-	$ns_ at 0.1 "$cbr3 start"
-	$ns_ at 0.2 "$node_(n2) join-group $rcvr2 $grp3"
-	$ns_ at 0.4 "$node_(n4) join-group $rcvr4 $grp3"
-	$ns_ at 0.6 "$node_(n2) leave-group $rcvr2 $grp3"
-	$ns_ at 0.7 "$node_(n5) join-group $rcvr5 $grp3"
-	$ns_ at 0.8 "$node_(n2) join-group $rcvr2 $grp3"
-	####
-	
-	$ns_ at 1.6 "$self finish 6a-nam"
-	
-	$ns_ run
-}
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-message.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-message.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-message.tcl	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-message.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,227 +0,0 @@
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# Test message passing developed by Tim.
-#
-# Each agent keeps track of what messages it has seen
-# and only forwards those which it hasn't seen before.
-
-# Each message is of the form "ID:DATA" where ID is some arbitrary
-# message identifier and DATA is the payload.  In order to reduce
-# memory usage, the agent stores only the message ID.
-
-# Note that I have not put in any mechanism to expire old message IDs
-# from the list of seen messages.  There also isn't any standard mechanism
-# for assigning message IDs.  An actual assignment may wish to have the
-# students come up with solutions for these problems.
-
-set MESSAGE_PORT 42
-
-# subclass Agent/MessagePassing to make it do flooding
-
-Class Agent/MessagePassing/Flooding -superclass Agent/MessagePassing
-
-Agent/MessagePassing/Flooding instproc send_message {size msgid msg} {
-    $self instvar messages_seen node_
-    global MESSAGE_PORT
-
-    #$ns trace-annotate "Node [$node_ node-addr] is sending {$msgid:$msg}"
-    puts "Node [$node_ node-addr] is sending {$msgid:$msg}"
-
-    lappend messages_seen $msgid
-    $self send_to_neighbors -1 $MESSAGE_PORT $size "$msgid:$msg"
-}
-
-Agent/MessagePassing/Flooding instproc send_to_neighbors {skip port size data} {
-    $self instvar node_
-
-	foreach x [$node_ neighbors] {
-	    set addr [$x set address_]
-	    if {$addr != $skip} {
-		$self sendto $size $data $addr $port
-	    }
-	}
-}
-
-Agent/MessagePassing/Flooding instproc recv {source sport size data} {
-    $self instvar messages_seen node_
-    global ns
-
-    # extract message ID from message
-    set message_id [lindex [split $data ":"] 0]
-
-    if {[lsearch $messages_seen $message_id] == -1} {
-	lappend messages_seen $message_id
-	    puts "Node [$node_ node-addr] received {$data}"
-	    #$ns trace-annotate "Node [$node_ node-addr] received {$data}"
-	$self send_to_neighbors $source $sport $size $data
-    } else {
-	    puts "Node [$node_ node-addr] received redundant copy of message #$message_id"
-	#$ns trace-annotate "Node [$node_ node-addr] received redundant copy of message #$message_id"
-    }
-}
-
-Class TestSuite
-
-TestSuite instproc init { name } {
-	$self instvar ns_ testname_ group_size num_groups num_nodes n a
-	global MESSAGE_PORT
-
-	set testname_ $name
-	set ns_ [new Simulator]
-
-	# parameters for topology generator
-	set group_size 7
-	set num_groups 5
-	set num_nodes [expr $group_size * $num_groups]
-	# create a bunch of nodes
-	for {set i 0} {$i < $num_nodes} {incr i} {
-		set n($i) [$ns_ node]
-	}
-
-	# attach a new Agent/MessagePassing/Flooding to each node on port $MESSAGE_PORT
-	for {set i 0} {$i < $num_nodes} {incr i} {
-		set a($i) [new Agent/MessagePassing/Flooding]
-		$n($i) attach  $a($i) $MESSAGE_PORT
-		$a($i) set messages_seen {}
-	}	
-}
-
-TestSuite instproc finish args {
-	$self instvar traceFile_ ns_
-	$ns_ flush-trace
-	close $traceFile_
-	exit 0
-}
-
-TestSuite instproc openTrace { stopTime } {
-	$self instvar ns_ traceFile_
-
-	set traceFile_ [open flooding.tr w]
-	$ns_ trace-all $traceFile_
-
-	$ns_ at $stopTime "$self finish"
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<quiet>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set quiet false
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-			set extra [lindex $argv 1]
-			if {$extra == "QUIET"} {
-				set quiet true
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $test]
-	$t run
-}
-
-# First case: in a wired network
-Class Test/wired -superclass TestSuite
-
-Test/wired instproc init args {
-	eval $self next $args
-	$self openTrace 1.0
-	$self create-topo
-}
-
-Test/wired instproc create-topo args {
-	$self instvar ns_ n num_groups group_size
-
-	# create links between the nodes
-	for {set g 0} {$g < $num_groups} {incr g} {
-		for {set i 0} {$i < $group_size} {incr i} {
-			$ns_ duplex-link $n([expr $g*$group_size+$i]) $n([expr $g*$group_size+($i+1)%$group_size]) 2Mb 15ms DropTail
-		}
-		$ns_ duplex-link $n([expr $g*$group_size]) $n([expr (($g+1)%$num_groups)*$group_size+2]) 2Mb 15ms DropTail
-		if {$g%2} {
-			$ns_ duplex-link $n([expr $g*$group_size+3]) $n([expr (($g+3)%$num_groups)*$group_size+1]) 2Mb 15ms DropTail
-		}
-	}
-}
-
-Test/wired instproc run {} {
-	$self instvar ns_ a
-	
-	# now set up some events
-	$ns_ at 0.0 "$a(5) send_message 900 1 {first message}"
-	$ns_ at 0.3 "$a(17) send_message 700 2 {another one}"
-	$ns_ at 0.6 "$a(24) send_message 500 abc {yet another one}"
-	
-	
-	$ns_ run
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mip.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mip.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mip.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mip.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,292 +0,0 @@
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# This test suite is for validating the Mobile IP simulation support
-# in ns.
-#
-# To run all tests:  test-all-mip
-#
-# To run individual tests:
-# ns test-suite-mip.tcl mip-adv-one
-# ns test-suite-mip.tcl mip-adv-zero
-# ns test-suite-mip.tcl mip-adv-multi
-# ...
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-mip.tcl
-#
-
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP TCP MIP IPinIP ARP LL Mac ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-Agent/TCP set SetCWRonRetransmit_ true
-# Changing the default value.
-
-Class TestSuite
-
-# Mobile IP test - simple case
-Class Test/mip-adv-one -superclass TestSuite
-
-# Mobile IP test - MH hears no advertisements from either HA or FA and 
-# starts sending solicitations for a period of time
-Class Test/mip-adv-zero -superclass TestSuite
-
-# Mobile IP test - MH hears multiple advertisements for a period of time
-Class Test/mip-adv-multi -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests>"
-	puts stderr "Valid tests are: mip-adv-one mip-adv-zero mip-adv-multi"
-	exit 1
-}
-
-TestSuite instproc finish {} {
-    $self instvar ns_
-    global quiet
-    
-    $ns_ flush-trace
-    if { !$quiet } {
-	puts "running nam..."
-	exec ../../../nam-1/nam temp.rands.nam &
-    }
-    exit 0
-}
-
-TestSuite instproc init {} {
-    $self instvar ns_ testName_ lan_ node_ source_ tcp_
-    set ns_ [new Simulator]
-    $ns_ instvar link_
-    
-    $ns_ trace-all [open temp.rands w]
-    $ns_ namtrace-all [open temp.rands.nam w]
-    
-    set node_(s) [$ns_ node]
-    set node_(g) [$ns_ node]
-    Simulator set node_factory_ Node/MIPBS
-    set node_(ha) [$ns_ node]
-    $node_(ha) shape "hexagon"
-    set node_(fa) [$ns_ node]
-    $node_(fa) shape "hexagon"
-    Simulator set node_factory_ Node/MIPMH
-    set node_(mh) [$ns_ node]
-    $node_(mh) shape "circle"
-    
-    $ns_ duplex-link $node_(s) $node_(g) 2Mb 5ms DropTail 
-    $ns_ duplex-link-op $node_(s) $node_(g) orient right
-    
-    $ns_ duplex-link $node_(g) $node_(ha) 2Mb 5ms DropTail
-    $ns_ duplex-link-op $node_(g) $node_(ha) orient up
-    $ns_ duplex-link $node_(g) $node_(fa) 2Mb 5ms DropTail
-    $ns_ duplex-link-op $node_(g) $node_(fa) orient right-up
-    $ns_ duplex-link $node_(ha) $node_(mh) 2Mb 5ms DropTail 
-    $ns_ duplex-link-op $node_(ha) $node_(mh) orient right
-    $ns_ duplex-link $node_(fa) $node_(mh) 4Mb 5ms DropTail 
-    $ns_ duplex-link-op $node_(fa) $node_(mh) orient left
-
-    set mhid [$node_(mh) id]
-    set haid [$node_(ha) id]
-    set faid [$node_(fa) id]
-
-    [$node_(ha) set regagent_] add-ads-bcast-link $link_($haid:$mhid)
-    [$node_(fa) set regagent_] add-ads-bcast-link $link_($faid:$mhid)
-
-    [$node_(mh) set regagent_] set home_agent_ $haid
-    [$node_(mh) set regagent_] add-sol-bcast-link $link_($mhid:$haid)
-    [$node_(mh) set regagent_] add-sol-bcast-link $link_($mhid:$faid)
-    
-    $link_($mhid:$faid) dynamic
-    $link_($faid:$mhid) dynamic
-    $link_($mhid:$faid) down
-    $link_($faid:$mhid) down
-    $link_($mhid:$haid) dynamic
-    $link_($haid:$mhid) dynamic
-        
-    $ns_ at 0.0 "$node_(ha) label HomeAgent"
-    $ns_ at 0.0 "$node_(fa) label ForeignAgent"
-    $ns_ at 0.0 "$node_(mh) label MobileHost"
-
-    set tcp_ [$ns_ create-connection TCP/Reno \
-	    $node_(s) TCPSink $node_(mh) 0]
-    set source_ [$tcp_ attach-source FTP]
-
-}
-
-TestSuite instproc run {} {
-    $self instvar ns_ source_
-    $ns_ at 0.0 "$source_ start"
-    $ns_ at 20.0 "$self finish"
-    $ns_ run
-}
-
-Test/mip-adv-one instproc init {} {
-    $self instvar ns_ testName_ lan_ node_ source_ tcp_
-    set testName_ mip-adv-one
-    $self next
-    $ns_ instvar link_
-
-    $ns_ at 0.0 "$node_(ha) color gold"
-    $ns_ at 0.0 "$node_(mh) color gold"	
-
-    $ns_ rtmodel-at 0.1 down $node_(mh) $node_(fa)
-    
-    set swtm [expr 3.0+(20.0-3.0)/4.0]
-	$ns_ rtmodel-at $swtm down $node_(mh) $node_(ha)
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(fa)
-	$ns_ at $swtm "$node_(ha) color black"
-	$ns_ at $swtm "$node_(fa) color gold"
-
-	set swtm [expr 3.0+(20.0-3.0)/2.0]
-	$ns_ rtmodel-at $swtm down $node_(mh) $node_(fa)
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(ha)
-	$ns_ at $swtm "$node_(ha) color gold"
-	$ns_ at $swtm "$node_(fa) color black"
-
-
-	set swtm [expr 3.0+(20.0-3.0)*3.0/4.0]
-	$ns_ rtmodel-at $swtm down $node_(mh) $node_(ha)
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(fa)
-	$ns_ at $swtm "$node_(ha) color black"
-	$ns_ at $swtm "$node_(fa) color gold"
-}
-
-Test/mip-adv-zero instproc init {} {
-        $self instvar ns_ testName_ lan_ node_ source_ tcp_
-        set testName_ mip-adv-zero
-        $self next
-
-	$ns_ instvar link_
-
-	$ns_ at 0.0 "$node_(ha) color gold"
-	$ns_ at 0.0 "$node_(mh) color gold"
-
-	$ns_ rtmodel-at 0.1 down $node_(mh) $node_(fa)
-
-        #MH cannot hear advertisements from either HA or FA
-	set swtm [expr 3.0+(20.0-3.0)/4.0] 
-        $ns_ rtmodel-at $swtm down $node_(mh) $node_(ha)
-	$ns_ at $swtm "$node_(ha) color black"
-	$ns_ at $swtm "$node_(fa) color black"
-
-        set swtm [expr 3.0+(20.0-3.0)/4.0+2.0]   
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(fa)
-	$ns_ at $swtm "$node_(ha) color black"
-	$ns_ at $swtm "$node_(fa) color gold"
-
-	set swtm [expr 3.0+(20.0-3.0)/2.0]
-	$ns_ rtmodel-at $swtm down $node_(mh) $node_(fa)
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(ha)
-	$ns_ at $swtm "$node_(ha) color gold"
-	$ns_ at $swtm "$node_(fa) color black"
-
-	set swtm [expr 3.0+(20.0-3.0)*3.0/4.0]
-	$ns_ rtmodel-at $swtm down $node_(mh) $node_(ha)
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(fa)
-	$ns_ at $swtm "$node_(ha) color black"
-	$ns_ at $swtm "$node_(fa) color gold"
-
-}
-
-Test/mip-adv-multi instproc init {} {
-        $self instvar ns_ testName_ lan_ node_ source_ tcp_
-        set testName_ mip-adv-multi
-
-        $self next
-        $ns_ instvar link_
-
-	$ns_ at 0.0 "$node_(ha) color gold"
-	$ns_ at 0.0 "$node_(mh) color gold"
-
-	$ns_ rtmodel-at 0.1 down $node_(mh) $node_(fa)
-
-        #MH can hear advertisements from both HA and FA
-        set swtm [expr 3.0+(20.0-3.0)/4.0] 
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(fa)
-	$ns_ at $swtm "$node_(fa) color gold"
-
-        #MH can hear advertisements from only FA now
-        set swtm [expr 3.0+(20.0-3.0)/4.0+3.0]
-	$ns_ rtmodel-at $swtm down $node_(mh) $node_(ha)
-	$ns_ at $swtm "$node_(ha) color black"
-	$ns_ at $swtm "$node_(fa) color gold"
-
-        #MH can hear advertisements from HA only now
-	set swtm [expr 3.0+(20.0-3.0)/2.0+1.0]
-	$ns_ rtmodel-at $swtm down $node_(mh) $node_(fa)
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(ha)
-	$ns_ at $swtm "$node_(ha) color gold"
-	$ns_ at $swtm "$node_(fa) color black"
-
-        #MH can hear advertisements from only FA now
-	set swtm [expr 3.0+(20.0-3.0)*3.0/4.0]
-	$ns_ rtmodel-at $swtm down $node_(mh) $node_(ha)
-	$ns_ rtmodel-at $swtm up $node_(mh) $node_(fa)
-	$ns_ at $swtm "$node_(ha) color black"
-	$ns_ at $swtm "$node_(fa) color gold"
-}
-
-
-proc runtest {arg} {
-    global quiet
-    set quiet 0
-    set b [llength $arg]
-    if {$b == 1} {
-	set test $arg
-    } elseif {$b == 2} {
-	set test [lindex $arg 0]
-	set q [lindex $arg 1]
-	if { $q == "QUIET" } {
-	    set quiet 1
-	} else usage
-    } else usage
-    
-    switch $test {
-	mip-adv-one -
-	mip-adv-zero -
-	mip-adv-multi {
-	    set t [new Test/$test]
-	}
-	default {
-	    puts stderr "Unknown test $test"
-	    exit 1
-	}
-    }
-    $t run
-}
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-misc.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-misc.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-misc.tcl	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-misc.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,260 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-
-# ns-random 0
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_
-	set ns_ [new Simulator]
-	# trace-all is only used in more extensive test suites
-	# $ns_ trace-all [open all.tr w]
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set quiet false
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			if {$topo == "QUIET"} {
-				set quiet true
-				set topo ""
-			} else {
-				isProc? Topology $topo
-			}
-		}
-		3 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			isProc? Topology $topo
-
-			set extra [lindex $argv 2]
-			if {$extra == "QUIET"} {
-				set quiet true
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-# Skeleton topology base class
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-NodeTopology/4nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(k1) [$ns node]
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 100ms bottleneck.
-# Queue-limit on bottleneck is 6 packets.
-#
-Class Topology/net0 -superclass NodeTopology/4nodes
-Topology/net0 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(k1) 10000Mb 20ms DropTail
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-# Definition of test-suite tests
-
-TestSuite instproc print64 { qmon } {
-	set f [open temp.rands w]
-	puts $f "This test is checking for problems with int64 counters."
-	close $f
-  	if {[ns-hasint64] ==  1} {
-		set bdep [$qmon set bdepartures_]
-		puts "This test is checking for problems with int64 counters."
-	 	puts "Byte departures in different data formats:"
-		puts "Qmon set bdepartures_, or bdep: $bdep"
-	        puts "ns-add64 bdep 0:                [ns-add64 $bdep 0]"
-	 	set bdepDbl [ns-int64todbl $bdep]
-	  	puts "ns-int64todbl bdep:             $bdepDbl"
-	 	puts "ns-int64todbl bdep + 0:         [expr $bdepDbl + 0]"
-		puts "These will give the wrong answer:" 
-	 	puts "bdep + 0:                       [expr $bdep + 0]"
-	 	puts "bdep * 1:                       [expr $bdep * 1]"
- 	} else {
-		puts "This machine doesn't use int64 counters."
-	}
-}
-
-Class Test/stats64 -superclass TestSuite
-Test/stats64 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	Queue/DropTail set summarystats_ true
-	set test_	stats64
-	$self next
-}
-Test/stats64 instproc run {} {
-	$self instvar ns_ node_ testName_ 
-
-	Agent/TCP set packetSize_ 2000
-	set stoptime 75.1
-	set printtime [expr $stoptime - 0.1]
-
-	set slink [$ns_ link $node_(s1) $node_(k1)]; # link to collect stats on
-#	set fmon [$ns_ makeflowmon Fid]
-#	$ns_ attach-fmon $slink $fmon
-	set qmon [$ns_ monitor-queue $node_(s1) $node_(k1) ""]
-
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp0 set window_ 1000
-	set ftp0 [$tcp0 attach-app FTP]
-	$ns_ at 0.0 "$ftp0 start"
-
-	$ns_ at $printtime "$self print64 $qmon"
-	$ns_ at $stoptime "exit 0"
-	# call finish, make an output file.
-	$ns_ run
-}
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mixmode.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mixmode.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mixmode.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mixmode.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,858 +0,0 @@
-# This test suite is for validating the session level simulation support
-# in ns.
-#
-# To run all tests:  test-all-mixmode
-#
-# To run individual tests:
-# ns test-suite-mixmode.tcl Mixmode1
-# ns test-suite-mixmode.tcl Mixmode2
-# ...
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-mixmode.tcl
-#
-
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_
-	set ns_ [new SessionSim]
-	#$ns_ use-scheduler List
-        $ns_ multicast
-
-	#$ns_ namtrace-all [open all.tr w]
-	puts "tracing"
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-}
-
-TestSuite instproc finish args {
-	$self instvar ns_
-	
-	$ns_ flush-trace
-	puts "\t#pkt\t#pkt"
-	puts "rcvr\trcvd\tlost"
-	set i 0
-	foreach index $args {
-		puts "$i\t[$index set npkts_]\t[$index set nlost_]"
-		incr i
-	}
-#	exec awk -f ../nam-demo/nstonam.awk all.tr > [append file \.tr]
-#	puts "running nam ..."
-#	exec nam $file &
-	exit 0
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv
-
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			isProc? Topology $topo
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-# Skeleton topology base class
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-   $self instvar node_
-    set n1 [lindex $nodelist 0]
-    foreach n2 [lrange $nodelist 1 end] {
-	if ![info exists node_($n2)] {
-	    set node_($n2) [$ns node]
-	}
-	$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-	foreach opt $args {
-	    set cmd [lindex $opt 0]
-	    set val [lindex $opt 1]
-	    if {[llength $opt] > 2} {
-		set x1 [lindex $opt 2]
-		set x2 [lindex $opt 3]
-	    } else {
-		set x1 $n1
-		set x2 $n2
-	    }
-	    $ns $cmd $node_($x1) $node_($x2) $val
-	    $ns $cmd $node_($x2) $node_($x1) $val
-	}
-	set n1 $n2
-    }
-}
-
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-
-NodeTopology/4nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-    set node_(n3) [$ns node]
-}
-
-
-Class Topology/net4 -superclass NodeTopology/4nodes
-
-# Create a simple four node topology:
-#
-#	              n3
-#	             / 
-#       1.5Mb,10ms  / 1.5Mb,10ms                              
-#    n0 --------- n1
-#                  \  1.5Mb,10ms
-#	            \ 
-#	             n2
-#
-
-Topology/net4 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail
-    $ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail
-    $ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-NodeTopology/6nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-    set node_(n3) [$ns node]
-    set node_(n4) [$ns node]
-    set node_(n5) [$ns node]
-}
-
-
-Class Topology/net6 -superclass NodeTopology/6nodes
-
-#
-# Create a simple six node topology:
-#
-#                  n0
-#                 /  \                    
-#               n1    n2
-#              /  \  /  \
-#             n3   n4   n5
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net6 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n5) 1.5Mb 10ms DropTail 
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class NodeTopology/10nodes -superclass SkelTopology
-NodeTopology/10nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-    set node_(n3) [$ns node]
-    set node_(n4) [$ns node]
-    set node_(n5) [$ns node]
-    set node_(n6) [$ns node]
-    set node_(n7) [$ns node]
-    set node_(n8) [$ns node]
-    set node_(n9) [$ns node]
-}
-
-
-Class Topology/net10 -superclass NodeTopology/10nodes
-
-#
-# Create a simple ten node topology:
-#
-#                  n0
-#               +---+-+
-#              n1     n2
-#            +--+-+   |
-#           n3    n4  n5
-#          +-+-+  |   |
-#         n6  n7  n8  n9
-#
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net10 instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n5) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n3) $node_(n6) 1.5Mb 10ms DropTail
-    $ns duplex-link $node_(n3) $node_(n7) 1.5Mb 10ms DropTail
-    $ns duplex-link $node_(n4) $node_(n8) 1.5Mb 10ms DropTail
-    $ns duplex-link $node_(n5) $node_(n9) 1.5Mb 10ms DropTail
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-# Definition of test-suite tests
-
-# Testing group join for mix-mode sim in a simple topology
-Class Test/Mixmode1 -superclass TestSuite
-Test/Mixmode1 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net4
-	set test_	Mixmode1
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ detailed-duplex-link $node_(n0) $node_(n1)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n2) $udp0	
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 0.3 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.3 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.3 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.3 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 1.1 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3]"
-	$ns_ run
-}
-
-Class Test/Mixmode2 -superclass TestSuite
-Test/Mixmode2 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net4
-	set test_	Mixmode2
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ detailed-duplex-link $node_(n1) $node_(n2)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype 0x8001"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n2) $udp0	
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 0.3 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.3 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.3 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.3 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 1.1 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3]"
-	$ns_ run
-}
-
-Class Test/Mixmode3 -superclass TestSuite
-Test/Mixmode3 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net4
-	set test_	Mixmode3
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode3 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ detailed-duplex-link $node_(n1) $node_(n3)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n2) $udp0	
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 0.3 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.3 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.3 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.3 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 1.1 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3]"
-	$ns_ run
-}
-
-Class Test/Mixmode4 -superclass TestSuite
-Test/Mixmode4 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net4
-	set test_	Mixmode4
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode4 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ detailed-duplex-link $node_(n0) $node_(n1)
-	$ns_ detailed-duplex-link $node_(n1) $node_(n2)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n2) $udp0	
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 0.3 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.3 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.3 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.3 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 1.1 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3]"
-	$ns_ run
-}
-
-Class Test/Mixmode5 -superclass TestSuite
-Test/Mixmode5 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net4
-	set test_	Mixmode5
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode5 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ detailed-duplex-link $node_(n0) $node_(n1)
-	$ns_ detailed-duplex-link $node_(n1) $node_(n3)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n2) $udp0	
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 0.3 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.3 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.3 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.3 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 1.1 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3]"
-	$ns_ run
-}
-
-Class Test/Mixmode6 -superclass TestSuite
-Test/Mixmode6 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net4
-	set test_	Mixmode6
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode6 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ detailed-duplex-link $node_(n1) $node_(n2)
-	$ns_ detailed-duplex-link $node_(n1) $node_(n3)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n2) $udp0	
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 0.3 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.3 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.3 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.3 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 1.1 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3]"
-	$ns_ run
-}
-
-Class Test/Mixmode7 -superclass TestSuite
-Test/Mixmode7 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net4
-	set test_	Mixmode7
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode7 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ detailed-duplex-link $node_(n0) $node_(n1)
-	$ns_ detailed-duplex-link $node_(n1) $node_(n2)
-	$ns_ detailed-duplex-link $node_(n1) $node_(n3)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n2) $udp0	
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 0.3 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.3 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.3 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.3 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 1.1 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3]"
-	$ns_ run
-}
-
-
-# Testing group join for mix-mode sim in a 6-node topology
-Class Test/Mixmode8 -superclass TestSuite
-Test/Mixmode8 instproc init net {
-	$self instvar net_ defNet_ test_
-	set defNet_	net6
-	set test_	Mixmode8
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode8 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-        $ns_ detailed-duplex-link $node_(n0) $node_(n2)
-        $ns_ detailed-duplex-link $node_(n1) $node_(n3)
-        $ns_ detailed-duplex-link $node_(n2) $node_(n4)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n0) $udp0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	$ns_ create-session $node_(n0) $udp0
-	
-	set rcvr0 [new Agent/LossMonitor]
-	set rcvr1 [new Agent/LossMonitor]
-	set rcvr2 [new Agent/LossMonitor]
-	set rcvr3 [new Agent/LossMonitor]
-	set rcvr4 [new Agent/LossMonitor]
-	set rcvr5 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	$ns_ attach-agent $node_(n1) $rcvr1
-	$ns_ attach-agent $node_(n2) $rcvr2
-	$ns_ attach-agent $node_(n3) $rcvr3
-	$ns_ attach-agent $node_(n4) $rcvr4
-	$ns_ attach-agent $node_(n5) $rcvr5
-	
-	$ns_ at 0.2 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.2 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.2 "$node_(n2) join-group $rcvr2 $grp0"
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.2 "$node_(n4) join-group $rcvr4 $grp0"
-	$ns_ at 0.2 "$node_(n5) join-group $rcvr5 $grp0"
-	
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 1.6 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3 \
-$rcvr4 $rcvr5]"
-	
-	$ns_ run
-}
-
-# Testing loss dependency for mix-mode sim in a 6-node topology
-Class Test/Mixmode9 -superclass TestSuite
-Test/Mixmode9 instproc init net {
-	$self instvar net_ defNet_ test_
-	set defNet_	net6
-	set test_	Mixmode9
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode9 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-        $ns_ detailed-duplex-link $node_(n1) $node_(n3)
-        $ns_ detailed-duplex-link $node_(n2) $node_(n5)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$udp0 set ttl_ 3
-	$ns_ attach-agent $node_(n0) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n0) $udp0
-	
-	set rcvr0 [new Agent/LossMonitor]
-	set rcvr1 [new Agent/LossMonitor]
-	set rcvr2 [new Agent/LossMonitor]
-	set rcvr3 [new Agent/LossMonitor]
-	set rcvr4 [new Agent/LossMonitor]
-	set rcvr5 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	$ns_ attach-agent $node_(n1) $rcvr1
-	$ns_ attach-agent $node_(n2) $rcvr2
-	$ns_ attach-agent $node_(n3) $rcvr3
-	$ns_ attach-agent $node_(n4) $rcvr4
-	$ns_ attach-agent $node_(n5) $rcvr5
-	
-	$ns_ at 0.2 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.2 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.2 "$node_(n2) join-group $rcvr2 $grp0"
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.2 "$node_(n4) join-group $rcvr4 $grp0"
-	$ns_ at 0.2 "$node_(n5) join-group $rcvr5 $grp0"
-	
-	set loss_module1 [new SelectErrorModel]
-	$loss_module1 drop-packet 2 20 1
-	$loss_module1 drop-target [$ns_ set nullAgent_]
-
-	set loss_module2 [new SelectErrorModel]
-	$loss_module2 drop-packet 2 10 1
-	$loss_module2 drop-target [$ns_ set nullAgent_]
-
-	set loss_module3 [new SelectErrorModel]
-	$loss_module3 drop-packet 2 10 1
-	$loss_module3 drop-target [$ns_ set nullAgent_]
-
-	$ns_ insert-loss $loss_module1 $node_(n0) $node_(n1)
-	$ns_ insert-loss $loss_module2 $node_(n1) $node_(n3)
-	$ns_ insert-loss $loss_module3 $node_(n0) $node_(n2)
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 1.6 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3 \
-$rcvr4 $rcvr5]"
-	
-	$ns_ run
-}
-
-# Testing for detailed-session-detailed mix-mode sim in a 10-node topology
-Class Test/Mixmode10 -superclass TestSuite
-Test/Mixmode10 instproc init net {
-	$self instvar net_ defNet_ test_
-	set defNet_	net10
-	set test_	Mixmode10
-	set net_	$net
-	$self next
-}
-
-Test/Mixmode10 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-        $ns_ detailed-duplex-link $node_(n0) $node_(n1)
-        $ns_ detailed-duplex-link $node_(n3) $node_(n6)
-
-	set grp0 [Node allocaddr]
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto  {}]
-        if {$mrthandle != ""} {
-	    $ns_ at 0.01 "$mrthandle switch-treetype $grp0"
-	}
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n0) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	set sessionhelper [$ns_ create-session $node_(n0) $udp0]
-	
-	set rcvr0 [new Agent/LossMonitor]
-	set rcvr1 [new Agent/LossMonitor]
-	set rcvr2 [new Agent/LossMonitor]
-	set rcvr3 [new Agent/LossMonitor]
-	set rcvr4 [new Agent/LossMonitor]
-	set rcvr5 [new Agent/LossMonitor]
-	set rcvr6 [new Agent/LossMonitor]
-	set rcvr7 [new Agent/LossMonitor]
-	set rcvr8 [new Agent/LossMonitor]
-	set rcvr9 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	$ns_ attach-agent $node_(n1) $rcvr1
-	$ns_ attach-agent $node_(n2) $rcvr2
-	$ns_ attach-agent $node_(n3) $rcvr3
-	$ns_ attach-agent $node_(n4) $rcvr4
-	$ns_ attach-agent $node_(n5) $rcvr5
-	$ns_ attach-agent $node_(n6) $rcvr6
-	$ns_ attach-agent $node_(n7) $rcvr7
-	$ns_ attach-agent $node_(n8) $rcvr8
-	$ns_ attach-agent $node_(n9) $rcvr9
-	
-	$ns_ at 0.2 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.2 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.2 "$node_(n2) join-group $rcvr2 $grp0"
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.2 "$node_(n4) join-group $rcvr4 $grp0"
-	$ns_ at 0.2 "$node_(n5) join-group $rcvr5 $grp0"
-	$ns_ at 0.2 "$node_(n6) join-group $rcvr6 $grp0"
-	$ns_ at 0.2 "$node_(n7) join-group $rcvr7 $grp0"
-	$ns_ at 0.2 "$node_(n8) join-group $rcvr8 $grp0"
-	$ns_ at 0.2 "$node_(n9) join-group $rcvr9 $grp0"
-	
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 1.6 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3 \
-$rcvr4 $rcvr5 $rcvr6 $rcvr7 $rcvr8 $rcvr9]"
-	
-	$ns_ run
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-monitor.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-monitor.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-monitor.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-monitor.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,229 +0,0 @@
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-
-# This test suite is for monitoring TCP variable trace
-# To run all tests: test-all-monitor
-# to run individual test:
-# ns test-suite-monitor.tcl tcp
-# ns test-suite-monitor.tcl tcp-monitor
-#
-# To view a list of available test to run with this script:
-# ns test-suite-monitor.tcl
-#
-# Each of the tests uses 6 nodes 
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-Class TestSuite
-
-Class Test/tcp -superclass TestSuite
-# Simple tcp without monitoring
-
-Class Test/tcp-monitor -superclass TestSuite
-# Simple tcp with monitoring (nam_tracevar_)
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid <tests> : tcp tcp-monitor"
-	exit 1
-}
-
-TestSuite instproc init {} {
-
-    $self instvar ns_ n_
-
-    set ns_ [new Simulator]
-
-    $ns_ namtrace-all [open temp.rands w]
-
-    foreach i " 0 1 2 3 4 5" {
-	set n_($i) [$ns_ node]
-    }
-
-    $ns_ duplex-link $n_(0) $n_(2) 1Mb 20ms DropTail
-    $ns_ duplex-link $n_(1) $n_(2) 1Mb 20ms DropTail
-    $ns_ duplex-link $n_(2) $n_(3) 0.5Mb 20ms DropTail
-    $ns_ duplex-link $n_(3) $n_(4) 1Mb 20ms DropTail
-    $ns_ duplex-link $n_(3) $n_(5) 1Mb 20ms DropTail
-
-    $ns_ duplex-link-op $n_(0) $n_(2) orient right-down
-    $ns_ duplex-link-op $n_(1) $n_(2) orient right-up
-    $ns_ duplex-link-op $n_(2) $n_(3) orient right
-    $ns_ duplex-link-op $n_(3) $n_(4) orient right-up
-    $ns_ duplex-link-op $n_(3) $n_(5) orient right-down
-
-    $ns_ duplex-link-op $n_(2) $n_(3) queuePos 0.5
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        if { !$quiet } {
-                puts "running nam..."
-                exec nam temp.rands &
-        }
-	exit 0
-}
-
-Test/tcp instproc init {flag} {
-	$self instvar ns_ testName_ flag_
-	set testName_ tcp
-	set flag_ $flag
-	$self next
-}
-
-Test/tcp instproc run {} {
-
-	$self instvar ns_ n_ 
-        $ns_ queue-limit $n_(2) $n_(3) 20
-
-        ### TCP between n_(0) & n_(4)
-        Agent/TCP set maxcwnd_ 8
-        set tcp0 [new Agent/TCP]
-        $ns_ attach-agent $n_(0) $tcp0
-        set sink0 [new Agent/TCPSink]
-        $ns_ attach-agent $n_(4) $sink0
-        $ns_ connect $tcp0 $sink0
-        set ftp0 [new Application/FTP]
-        $ftp0 attach-agent $tcp0
-
-        ### CBR traffic between n_(1) & n_(5)
-        set udp0 [new Agent/UDP]
-        $ns_ attach-agent $n_(1) $udp0
-        set cbr0 [new Application/Traffic/CBR]
-        $cbr0 set packetSize_ 500
-        $cbr0 set interval_ 0.01
-        $cbr0 attach-agent $udp0
-        set null0 [new Agent/Null]
-        $ns_ attach-agent $n_(5) $null0
-        $ns_ connect $udp0 $null0
-
-        ### setup operation
-        $ns_ at 0.1 "$cbr0 start"
-        $ns_ at 1.1 "$cbr0 stop"
-        $ns_ at 0.2 "$ftp0 start"
-        $ns_ at 1.1 "$ftp0 stop"
-        $ns_ at 1.2 "$self finish"
-        $ns_ run
-}
-
-Test/tcp-monitor instproc init {flag} {
-	$self instvar ns_ testName_ flag_
-	set testName_ tcp-monitor
-	set flag_ $flag
-	$self next 
-}
-
-Test/tcp-monitor instproc run {} {
-
-	$self instvar ns_ n_
-        $ns_ queue-limit $n_(2) $n_(3) 20
-
-        ### TCP between n_(0) & n_(4)
-
-        Agent/TCP set nam_tracevar_ true
-        Agent/TCP set maxcwnd_ 8
-        set tcp0 [new Agent/TCP]
-        $ns_ attach-agent $n_(0) $tcp0
-        set sink0 [new Agent/TCPSink]
-        $ns_ attach-agent $n_(4) $sink0
-        $ns_ connect $tcp0 $sink0
-        $ns_ add-agent-trace $tcp0 tcp
-        $ns_ monitor-agent-trace $tcp0
-        $tcp0 tracevar cwnd_
-        $tcp0 tracevar ssthresh_
-        set ftp0 [new Application/FTP]
-        $ftp0 attach-agent $tcp0
-
-        ### CBR traffic between n_(1) & n_(5)
-        set udp0 [new Agent/UDP]
-        $ns_ attach-agent $n_(1) $udp0
-        set cbr0 [new Application/Traffic/CBR]
-        $cbr0 set packetSize_ 500
-        $cbr0 set interval_ 0.01
-        $cbr0 attach-agent $udp0
-        set null0 [new Agent/Null]
-        $ns_ attach-agent $n_(5) $null0
-        $ns_ connect $udp0 $null0
-
-        ### setup operation
-        $ns_ at 0.1 "$cbr0 start"
-        $ns_ at 1.1 "$cbr0 stop"
-        $ns_ at 0.2 "$ftp0 start"
-        $ns_ at 1.1 "$ftp0 stop"
-        $ns_ at 1.2 "$self finish"
-        $ns_ run
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-	    if {[lindex $arg 1] == "QUIET"} {
-		set quiet 1
-	    }
-	} else {
-		usage
-	}
-	switch $test {
-                tcp -
-                tcp-monitor {
-			set t [new Test/$test 1]
-		}
-		default {
-			stderr "Unknown test $test"
-			exit 1
-		}
-	}
-	$t run
-}
-
-global argv arg0
-runtest $argv
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mpls.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mpls.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-mpls.tcl	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-mpls.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,583 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-#
-# Time-stamp: <2000-09-11 15:22:45 haoboy>
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-mpls.tcl,v 1.6 2005/06/11 04:42:09 sfloyd Exp $
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP MPLS LDP ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-Class TestSuite
-
-TestSuite instproc init { name } {
-	$self instvar ns_ totalpkt_ testname_
-	set testname_ $name
-	set ns_ [new Simulator]
-	set totalpkt_ 0
-}
-
-TestSuite instproc finish args {
-	$self instvar traceFile_ ns_
-	$self recv-pkts
-	global quiet
-	if { $quiet != "true" } {
-		$ns_ flush-trace
-		close $traceFile_
-	}
-	exit 0
-}
-
-TestSuite instproc openTrace { stopTime } {
-	$self instvar ns_ traceFile_ testname_
-	global quiet
-	if { $quiet != "true" } {
-		set traceFile_ [open $testname_.nam w]
-		$ns_ namtrace-all $traceFile_
-	}
-	$ns_ at $stopTime "$self finish"
-}
-
-TestSuite instproc attach-expoo-traffic { node sink size burst idle rate } {
-	$self instvar ns_
-		
-	set udp [new Agent/UDP]
-	$ns_ attach-agent $node $udp
-		
-	set traffic [new Application/Traffic/Exponential]
-	$traffic set packetSize_ $size
-	$traffic set burst_time_ $burst
-	$traffic set idle_time_ $idle
-	$traffic set rate_ $rate
-	$traffic attach-agent $udp
-
-	$ns_ connect $udp $sink
-	return $traffic
-}
-
-TestSuite instproc record {} {
-        $self instvar sink0_ totalpkt_ ns_
-	# Set the time after which the procedure should be called again
-        set time 0.005
-	# How many bytes have been received by the traffic sink?
-        set bw0 [$sink0_ set bytes_]
-	# Get the current time
-        set now [$ns_ now]
-	# Calculate the bandwidth (in MBit/s) and write it to the file
-	puts "$now [expr $bw0/$time*8/1000000]"
-	# Reset the bytes_ values on the traffic sink
-        $sink0_ set bytes_ 0
-	#Re-schedule the procedure
-        $ns_ at [expr $now+$time] "$self record"
-        set bw0 [expr $bw0 / 200]
-        set totalpkt_ [expr $totalpkt_ + $bw0]
-}
-
-TestSuite instproc recv-pkts {} {
-	$self instvar totalpkt_
-	flush stdout
-	puts "The Number of Total received packet is $totalpkt_"
-}
-
-TestSuite instproc run {} {
-	$self instvar ns_
-	$ns_ run
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<quiet>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set quiet false
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-			set extra [lindex $argv 1]
-			if {$extra == "QUIET"} {
-				set quiet true
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $test]
-	$t run
-}
-
-Class Test/simple -superclass TestSuite
-
-Test/simple instproc recv-pkts {} {
-	# Nothing, since we do not do record{}.
-}
-
-Test/simple instproc init args {
-	eval $self next $args
-	$self instvar ns_
-
-	Classifier/Addr/MPLS set control_driven_ 1
-
-	# Turn on all traces to stdout
-	Agent/LDP set trace_ldp_ 1
-	Classifier/Addr/MPLS set trace_mpls_ 1
-
-	$self openTrace 5.0
-
-	set Node0  [$ns_ node]
-	set Node1  [$ns_ node]
-	$ns_ node-config -MPLS ON
-	set LSR2   [$ns_ node]
-	set LSR3   [$ns_ node]
-	set LSR4   [$ns_ node]
-	set LSR5   [$ns_ node]
-	set LSR6   [$ns_ node]
-	set LSR7   [$ns_ node]
-	set LSR8   [$ns_ node]
-	$ns_ node-config -MPLS OFF
-	set Node9  [$ns_ node]
-	set Node10 [$ns_ node]
-
-	$ns_ duplex-link $Node0 $LSR2  1Mb  10ms DropTail
-	$ns_ duplex-link $Node1 $LSR2  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR2  $LSR3  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR3  $LSR4  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR4  $LSR8  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR2  $LSR5  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR5  $LSR6  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR5  $LSR4  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR6  $LSR7  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR6  $LSR8  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR7  $LSR8  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR7  $Node9  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR8  $Node10 1Mb  10ms DropTail
-
-	#
-	# configure ldp agents on all mpls nodes
-	#
-	for {set i 2} {$i < 9} {incr i} {
-		for {set j [expr $i+1]} {$j < 9} {incr j} {
-			set a LSR$i
-			set b LSR$j
-			eval $ns_ LDP-peer $$a $$b
-		}
-	}
-
-	#
-	# set ldp-message clolr
-	#
-	$ns_ ldp-request-color       blue
-	$ns_ ldp-mapping-color       red
-	$ns_ ldp-withdraw-color      magenta
-	$ns_ ldp-release-color       orange
-	$ns_ ldp-notification-color  yellow
-	
-	#
-	# make agent to send packets
-	#
-	set Src0 [new Application/Traffic/CBR]
-	set udp0 [new Agent/UDP]
-	$Src0 attach-agent $udp0
-	$ns_ attach-agent $Node0 $udp0
-	$Src0 set packetSize_ 500
-	$Src0 set interval_ 0.010
-	
-	set Src1 [new Application/Traffic/CBR]
-	set udp1 [new Agent/UDP]
-	$Src1 attach-agent $udp1
-	$ns_ attach-agent $Node1 $udp1
-	$Src1 set packetSize_ 500
-	$Src1 set interval_ 0.010
-
-	set Dst0 [new Agent/Null]
-	$ns_ attach-agent $Node9 $Dst0
-	set Dst1 [new Agent/Null]
-	$ns_ attach-agent $Node10 $Dst1
-	$ns_ connect $udp0 $Dst0
-	$ns_ connect $udp1 $Dst1
-	
-	$ns_ at 0.1  "$Src0 start"
-	$ns_ at 0.1  "$Src1 start"
-
-	for {set i 2} {$i < 9} {incr i} {
-		set a LSR$i
-		set m [eval $$a get-module "MPLS"]
-		eval set LSR$i $m
-	}
-
-	$ns_ at 0.2  "$LSR7 ldp-trigger-by-withdraw 9 -1"
-	$ns_ at 0.2  "$LSR8 ldp-trigger-by-withdraw 10 -1"
-
-	$ns_ at 0.3  "$LSR2 flow-aggregation 9 -1  6 -1"
-	$ns_ at 0.3  "$LSR2 flow-aggregation 10 -1 6 -1"
-	$ns_ at 0.5  "$LSR6 ldp-trigger-by-withdraw 6 -1"
-	$ns_ at 0.7  "$Src1 stop"
-
-	$ns_ at 0.7  "$LSR2 make-explicit-route  7  5_4_8_6_7  3000  -1"
-	$ns_ at 0.9  "$LSR2 flow-erlsp-install   9 -1   3000"
-	$ns_ at 1.1  "$LSR2 ldp-trigger-by-release  7 3000"
-
-	$ns_ at 1.2  "$LSR4 make-explicit-route  8  4_5_6_8       3500  -1"
-	$ns_ at 1.4  "$LSR2 make-explicit-route  7  2_3_4_3500_7  3600  -1"
-	$ns_ at 1.6  "$LSR2 flow-erlsp-install   9 -1   3600"
-	
-	$ns_ at 2.0 "$Src0 stop"
-
-	$ns_ at 2.1 "$LSR2 pft-dump"
-	$ns_ at 2.1 "$LSR2 erb-dump"
-	$ns_ at 2.1 "$LSR2 lib-dump"
-
-	$ns_ at 2.1 "$LSR3 pft-dump"
-	$ns_ at 2.1 "$LSR3 erb-dump"
-	$ns_ at 2.1 "$LSR3 lib-dump"
-	
-	$ns_ at 2.1 "$LSR4 pft-dump"
-	$ns_ at 2.1 "$LSR4 erb-dump"
-	$ns_ at 2.1 "$LSR4 lib-dump"
-
-	$ns_ at 2.1 "$LSR5 pft-dump"
-	$ns_ at 2.1 "$LSR5 erb-dump"
-	$ns_ at 2.1 "$LSR5 lib-dump"
-
-	$ns_ at 2.1 "$LSR6 pft-dump"
-	$ns_ at 2.1 "$LSR6 erb-dump"
-	$ns_ at 2.1 "$LSR6 lib-dump"
-
-	$ns_ at 2.1 "$LSR7 pft-dump"
-	$ns_ at 2.1 "$LSR7 erb-dump"
-	$ns_ at 2.1 "$LSR7 lib-dump"
-
-	$ns_ at 2.1 "$LSR8 pft-dump"
-	$ns_ at 2.1 "$LSR8 erb-dump"
-	$ns_ at 2.1 "$LSR8 lib-dump"
-}
-
-Class Test/control-driven -superclass TestSuite
-
-Test/control-driven instproc init args {
-	Classifier/Addr/MPLS set control_driven_ 1
-
-	Agent/LDP set trace_ldp_ 1
-	Classifier/Addr/MPLS set trace_mpls_ 1
-
-	eval $self next $args
-	$self instvar ns_
-
-	$ns_ use-scheduler List
-
-	$self openTrace 0.7
-	$ns_ rtproto DV
-
-	set node0  [$ns_ node]
-	$ns_ node-config -MPLS ON
-	set LSR1   [$ns_ node]
-	set LSR2   [$ns_ node]
-	set LSR3   [$ns_ node]
-	set LSR4   [$ns_ node]
-	set LSR5   [$ns_ node]
-	set LSR6   [$ns_ node]
-	set LSR7   [$ns_ node]
-	$ns_ node-config -MPLS OFF
-	set node8  [$ns_ node]
-
-	$ns_ duplex-link $node0 $LSR1  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR1 $LSR2 1Mb 10ms DropTail
-	$ns_ duplex-link $LSR1 $LSR3 1Mb 10ms DropTail
-	$ns_ duplex-link $LSR2  $LSR4  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR4  $LSR6  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR6  $LSR7  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR3  $LSR5  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR3  $LSR4  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR5  $LSR7  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR5  $LSR6  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR7  $node8 1Mb  10ms DropTail
-
-	$ns_ duplex-link-op $node0 $LSR1 orient right
-	$ns_ duplex-link-op $LSR1 $LSR2 orient down
-	$ns_ duplex-link-op $LSR1 $LSR3 orient right
-	$ns_ duplex-link-op $LSR2  $LSR4 orient right
-	$ns_ duplex-link-op $LSR4  $LSR6 orient right
-	$ns_ duplex-link-op $LSR6  $LSR7  orient right-up
-	$ns_ duplex-link-op $LSR3  $LSR5 orient right
-	$ns_ duplex-link-op $LSR3  $LSR4 orient down
-	$ns_ duplex-link-op $LSR5  $LSR7 orient right
-	$ns_ duplex-link-op $LSR5  $LSR6 orient down
-	$ns_ duplex-link-op $LSR7  $node8 orient right
-
-	#
-	# configure ldp agents on all mpls nodes
-	#
-	for {set i 1} {$i < 8} {incr i} {
-		set a LSR$i
-		for {set j [expr $i+1]} {$j < 8} {incr j} {
-			set b LSR$j
-			eval $ns_ LDP-peer $$a $$b
-		}
-		set m [eval $$a get-module "MPLS"]
-		$m enable-reroute "drop"
-	}
-
-	#
-	# set ldp-message clolr
-	#
-	$ns_ ldp-request-color       blue
-	$ns_ ldp-mapping-color       red
-	$ns_ ldp-withdraw-color      magenta
-	$ns_ ldp-release-color       orange
-	$ns_ ldp-notification-color  yellow
-
-	#Create a traffic sink and attach it to the node node8
-	$self instvar sink0_
-	set sink0_ [new Agent/LossMonitor]
-	$ns_ attach-agent $node8 $sink0_
-
-	# Create a traffic source
-	set src0 [$self attach-expoo-traffic $node0 $sink0_ 200 0 0 400k]
-	$ns_ at 0.0 "$self record"
-	$ns_ at 0.1 "$src0 start"
-	$ns_ rtmodel-at 0.3 down $LSR3 $LSR5
-	$ns_ rtmodel-at 0.5 up   $LSR3 $LSR5
-	$ns_ at 0.6 "$src0 stop"
-}
-
-Class Test/data-driven -superclass TestSuite
-
-Test/data-driven instproc init args {
-	eval $self next $args
-	$self instvar ns_
-
-	Agent/LDP set trace_ldp_ 1
-	Classifier/Addr/MPLS set trace_mpls_ 1
-
-	$ns_ use-scheduler List
-
-	$self openTrace 0.7
-	$ns_ rtproto DV
-
-	set node0  [$ns_ node]
-	$ns_ node-config -MPLS ON
-	set LSR1   [$ns_ node]
-	set LSR2   [$ns_ node]
-	set LSR3   [$ns_ node]
-	set LSR4   [$ns_ node]
-	set LSR5   [$ns_ node]
-	set LSR6   [$ns_ node]
-	set LSR7   [$ns_ node]
-	$ns_ node-config -MPLS OFF
-	set node8  [$ns_ node]
-
-	$ns_ duplex-link $node0 $LSR1  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR1  $LSR2  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR2  $LSR4  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR4  $LSR6  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR6  $LSR7  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR1  $LSR3  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR3  $LSR5  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR5  $LSR7  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR3  $LSR4  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR5  $LSR6  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR7  $node8 1Mb  10ms DropTail
-
-	#
-	# configure ldp agents on all mpls nodes
-	#
-	for {set i 1} {$i < 8} {incr i} {
-		set a LSR$i
-		for {set j [expr $i+1]} {$j < 8} {incr j} {
-			set b LSR$j
-			eval $ns_ LDP-peer $$a $$b
-		}
-		set m [eval $$a get-module "MPLS"]
-		$m enable-reroute "new"
-	}
-
-	#
-	# set ldp-message clolr
-	#
-	$ns_ ldp-request-color       blue
-	$ns_ ldp-mapping-color       red
-	$ns_ ldp-withdraw-color      magenta
-	$ns_ ldp-release-color       orange
-	$ns_ ldp-notification-color  yellow
-
-	#
-	# set ldp events
-	#
-	Classifier/Addr/MPLS enable-on-demand
-	Classifier/Addr/MPLS enable-ordered-control
-	
-	[$LSR1 get-module "MPLS"] enable-data-driven
-	[$LSR3 get-module "MPLS"] enable-data-driven
-
-	# Create a traffic sink and attach it to the node node8
-	$self instvar sink0_
-	set sink0_ [new Agent/LossMonitor]
-	$ns_ attach-agent $node8 $sink0_
-	# Create a traffic source
-	set src0 [$self attach-expoo-traffic $node0 $sink0_ 200 0 0 400k]
-
-	$ns_ at 0.0 "$self record"
-	$ns_ at 0.1 "$src0 start"
-	$ns_ rtmodel-at 0.3 down $LSR3 $LSR5
-	$ns_ rtmodel-at 0.5 up   $LSR3 $LSR5
-	$ns_ at 0.6 "$src0 stop"
-}
-
-Class Test/reroute -superclass TestSuite
-
-Test/reroute instproc init args {
-	eval $self next $args
-	$self instvar ns_
-
-	Agent/LDP set trace_ldp_ 1
-	Classifier/Addr/MPLS set trace_mpls_ 1
-
-	$ns_ use-scheduler List
-
-	$self openTrace 0.7
-	$ns_ rtproto DV
-
-	set node0  [$ns_ node]
-	$ns_ node-config -MPLS ON
-	set LSR1   [$ns_ node]
-	set LSR2   [$ns_ node]
-	set LSR3   [$ns_ node]
-	set LSR4   [$ns_ node]
-	set LSR5   [$ns_ node]
-	set LSR6   [$ns_ node]
-	set LSR7   [$ns_ node]
-	$ns_ node-config -MPLS OFF
-	set node8  [$ns_ node]
-
-	$ns_ duplex-link $node0 $LSR1  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR1  $LSR2  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR2  $LSR4  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR4  $LSR6  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR6  $LSR7  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR1  $LSR3  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR3  $LSR5  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR5  $LSR7  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR3  $LSR4  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR5  $LSR6  1Mb  10ms DropTail
-	$ns_ duplex-link $LSR7  $node8 1Mb  10ms DropTail
-
-	#
-	# configure ldp agents on all mpls nodes
-	#
-	for {set i 1} {$i < 8} {incr i} {
-		set a LSR$i
-		for {set j [expr $i+1]} {$j < 8} {incr j} {
-			set b LSR$j
-			eval $ns_ LDP-peer $$a $$b
-		}
-		set m [eval $$a get-module "MPLS"]
-		$m enable-reroute "new"
-	}
-
-	#
-	# set ldp-message clolr
-	#
-	$ns_ ldp-request-color       blue
-	$ns_ ldp-mapping-color       red
-	$ns_ ldp-withdraw-color      magenta
-	$ns_ ldp-release-color       orange
-	$ns_ ldp-notification-color  yellow
-
-	Classifier/Addr/MPLS enable-on-demand
-	Classifier/Addr/MPLS enable-ordered-control
-	[$LSR1 get-module "MPLS"] enable-data-driven
-	[$LSR3 get-module "MPLS"] enable-data-driven
-
-	# Create a traffic sink and attach it to the node node8
-	$self instvar sink0_
-	set sink0_ [new Agent/LossMonitor]
-	$ns_ attach-agent $node8  $sink0_
-	# Create a traffic source
-	set src0 [$self attach-expoo-traffic $node0 $sink0_ 200 0 0 400k]
-
-	$ns_ at 00 "$self record"
-	$ns_ at 0.1  "$src0 start"
-	$ns_ at 0.1  "[$LSR1 get-module MPLS] make-explicit-route 7 2_4_6_7 1000 -1"
-	$ns_ at 0.2  "[$LSR7 get-module MPLS] make-explicit-route  7  5_3_1_1000  1005  -1"
-	$ns_ at 0.3  "[$LSR1 get-module MPLS] reroute-binding      8 -1    1005"
-	$ns_ at 0.3  "[$LSR3 get-module MPLS] reroute-binding      8 -1    1005"
-	$ns_ at 0.3  "[$LSR5 get-module MPLS] reroute-binding      8 -1    1005"
-	$ns_ rtmodel-at 0.3 down $LSR3 $LSR5
-	$ns_ rtmodel-at 0.5 up   $LSR3 $LSR5
-	$ns_ at 0.6 "$src0 stop"
-}
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-newreno.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-newreno.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-newreno.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-newreno.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1488 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-newreno.tcl,v 1.31 2006/01/25 22:02:05 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP/Newreno set newreno_changes1_ 0
-# The default is being changed to 1 on 5/5/03, to reflect RFC 2582.
-Agent/TCP/Newreno set partial_window_deflation_ 0  
-# The default is being changed to 1 on 5/5/03, to reflect RFC 2582.
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid] 
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-Class Topology/net4a -superclass Topology
-Topology/net4a instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 80
-    $ns queue-limit $node_(k1) $node_(r1) 80
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid] 
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-Class Topology/net4b -superclass Topology
-Topology/net4b instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 200ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid] 
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc finish file {
-	global quiet wrap PERL
-        #exec $PERL ../../bin/set_flow_id -s all.tr | \
-        #  $PERL ../../bin/getrc -s 2 -d 3 | \
-        #  $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-        exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-          $PERL ../../bin/raw2xg -a -c -p -s 0.01 -m $wrap -t $file >> \
-          temp.rands
-        #exec echo $stoptime 0 >> temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-	# exec csh gnuplotC1.com temp.rands temp1.rands $file
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc rfc2582 {} {
-    Agent/TCP/Newreno set newreno_changes1_ 1
-    Agent/TCP/Newreno set partial_window_deflation_ 1
-}
-
-TestSuite instproc setup {tcptype list {settopo 1} {stoptime 6} {window 28}} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	if {$settopo == 1} {$self setTopo}
-
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "FullTcp"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp]
-	        set sink [new Agent/TCP/FullTcp]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpTahoe"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Tahoe]
-	        set sink [new Agent/TCP/FullTcp/Tahoe]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpNewreno"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Newreno]
-	        set sink [new Agent/TCP/FullTcp/Newreno]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpSack1"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Sack]
-	        set sink [new Agent/TCP/FullTcp/Sack]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	}
-        $tcp1 set window_ $window
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 1.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-        $self drop_pkts $list
-
-	$ns_ at $stoptime "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-
-###################################################
-## Three drops, Reno has a retransmit timeout.
-###################################################
-
-# With Limited Transmit, without bugfix.
-Class Test/reno -superclass TestSuite
-Test/reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	reno
-	Agent/TCP set singledup_ 1
-	set guide_ "Reno, with Limited Transmit, without bugfix."
-	$self next pktTraceFile
-}
-Test/reno instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP set bugFix_ false
-        $self setup Reno {14 26 28}
-}
-
-# Without Limited Transmit, without bugfix.
-Class Test/reno_noLT -superclass TestSuite
-Test/reno_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	reno_noLT
-	Agent/TCP set singledup_ 0
-	set guide_ "Reno, without Limited Transmit, without bugfix."
-	Test/reno_noLT instproc run {} [Test/reno info instbody run ]
-	$self next pktTraceFile
-}
-
-# Class Test/reno_bugfix -superclass TestSuite
-# Test/reno_bugfix instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	reno_bugfix
-# 	$self next pktTraceFile
-# }
-# Test/reno_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-#         $self setup Reno {14 26 28}
-# }
-
-# With Limited Transmit
-Class Test/newreno -superclass TestSuite
-Test/newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno
-	Agent/TCP set singledup_ 1
-	set guide_ "NewReno, with Limited Transmit, without bugfix."
-	$self next pktTraceFile
-}
-Test/newreno instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP set bugFix_ false
-        $self setup Newreno {14 26 28}
-}
-
-# Without Limited Transmit
-Class Test/newreno_noLT -superclass TestSuite
-Test/newreno_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_noLT
-	Agent/TCP set singledup_ 0
-	set guide_ "NewReno, without Limited Transmit, without bugfix."
-	Test/newreno_noLT instproc run {} [Test/newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-# Class Test/newreno_bugfix -superclass TestSuite
-# Test/newreno_bugfix instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	newreno_bugfix
-# 	$self next pktTraceFile
-# }
-# Test/newreno_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-#         $self setup Newreno {14 26 28}
-# }
-
-# Class Test/newreno_A -superclass TestSuite
-# Test/newreno_A instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	newreno_A
-# 	$self next pktTraceFile
-# }
-# Test/newreno_A instproc run {} {
-# 	Agent/TCP set bugFix_ false
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-#         $self setup Newreno {14 26 28}
-# }
-
-# Class Test/newreno_bugfix_A -superclass TestSuite
-# Test/newreno_bugfix_A instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	newreno_bugfix_A
-# 	$self next pktTraceFile
-# }
-# Test/newreno_bugfix_A instproc run {} {
-# 	Agent/TCP set bugFix_ true
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-#         $self setup Newreno {14 26 28}
-# }
-
-# With Limited Transmit
-Class Test/newreno_B -superclass TestSuite
-Test/newreno_B instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_B
-	Agent/TCP set singledup_ 1
-	set guide_ "NewReno, with Limited Transmit, without bugfix."
-	$self next pktTraceFile
-}
-Test/newreno_B instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP set bugFix_ false
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP/Newreno set exit_recovery_fix_ 1
-        $self setup Newreno {14 26 28}
-}
-
-# Without Limited Transmit
-Class Test/newreno_B_noLT -superclass TestSuite
-Test/newreno_B_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_B_noLT
-	Agent/TCP set singledup_ 0
-	set guide_ "NewReno, without Limited Transmit, without bugfix."
-	Test/newreno_B_noLT instproc run {} [Test/newreno_B info instbody run ]
-	$self next pktTraceFile
-}
-
-###################################################
-## Many drops, Reno has a retransmit timeout.
-###################################################
-
-
-Class Test/reno1 -superclass TestSuite
-Test/reno1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	reno1
-	set guide_ "Reno, #1, without Limited Transmit, without bugfix."
-	$self next pktTraceFile
-}
-Test/reno1 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP set bugFix_ false
-        $self setup Reno {14 15 16 17 18 19 20 21 25 }
-}
-
-# Class Test/reno1_bugfix -superclass TestSuite
-# Test/reno1_bugfix instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	reno1_bugfix
-# 	$self next pktTraceFile
-# }
-# Test/reno1_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-#         $self setup Reno {14 15 16 17 18 19 20 21 25 }
-# }
-
-Class Test/newreno1 -superclass TestSuite
-Test/newreno1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1
-	Agent/TCP set bugFix_ false
-	set guide_ "NewReno, #1, with Limited Transmit, without bugfix."
-	$self next pktTraceFile
-}
-Test/newreno1 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Newreno {14 15 16 17 18 19 20 21 25 }
-}
-
-Class Test/newreno1_BF -superclass TestSuite
-Test/newreno1_BF instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1_BF
-	Agent/TCP set bugFix_ true
-	set guide_ "NewReno, #1, with Limited Transmit, with bugfix."
-	Test/newreno1_BF instproc run {} [Test/newreno1 info instbody run ]
-
-	$self next pktTraceFile
-}
-
-# With Limited Transmit, without bugfix, with newreno_changes1_
-# 
-# With newreno_changes1_, we don't reset the retransmit timer for 
-#  later partial ACKS, so the retransmit timer is more likely to
-#  expire, leading to more unnecessarily-retransmitted packets.
-#  With this example, we just *happen* to only have an unnecessary 
-#  Fast Retransmit with Limited Transmit, and not without it.
-#  The subsequent Fast Retransmits happen because we are not
-#  using bugfix.
-Class Test/newreno1_A -superclass TestSuite
-Test/newreno1_A instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1_A
-	Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ false
-	set guide_ \
-	"NewReno, #1A, with Limited Transmit, without bugfix.  Bad behavior."
-	$self next pktTraceFile
-}
-Test/newreno1_A instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP/Newreno set newreno_changes1_ 1
-        $self setup Newreno {14 15 16 17 18 19 20 21 25 }
-}
-
-# Without Limited Transmit, without bugfix.
-Class Test/newreno1_A_noLT -superclass TestSuite
-Test/newreno1_A_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1_A_noLT
-	Agent/TCP set singledup_ 0
-	Agent/TCP set bugFix_ false
-	set guide_ "NewReno, #1A, without Limited Transmit, without bugfix."
-	Test/newreno1_A_noLT instproc run {} [Test/newreno1_A info instbody run ]
-	$self next pktTraceFile
-}
-
-# With Limited Transmit, with bugfix.
-Class Test/newreno1_A_BF -superclass TestSuite
-Test/newreno1_A_BF instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       newreno1_A_BF
-        Agent/TCP set singledup_ 1
-        Agent/TCP set bugFix_ true
-        set guide_ \
-        "NewReno, #1A, with Limited Transmit, with bugfix."
-	Test/newreno1_A_BF instproc run {} [Test/newreno1_A info instbody run ]
-        $self next pktTraceFile
-}
-
-# With Limited Transmit, with bugfix, with the Less Careful variant.
-Class Test/newreno1_A_BF_LC -superclass TestSuite
-Test/newreno1_A_BF_LC instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       newreno1_A_BF_LC
-        Agent/TCP set singledup_ 1
-        Agent/TCP set bugFix_ true
-	Agent/TCP set lessCareful_ true
-        set guide_ \
-        "NewReno, #1A, with Limited Transmit, with Less Careful bugfix."
-	Test/newreno1_A_BF_LC instproc run {} [Test/newreno1_A info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/newreno1_B0 -superclass TestSuite
-Test/newreno1_B0 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1_B0
-	set guide_ "NewReno, #1B0, with Limited Transmit, without bugfix."
-	$self next pktTraceFile
-}
-Test/newreno1_B0 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP set bugFix_ false
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP/Newreno set exit_recovery_fix_ 1
-        $self setup Newreno {14 15 16 17 18 19 20 21 25 }
-}
-
-# With Limited Transmit, without bugfix.
-Class Test/newreno1_B -superclass TestSuite
-Test/newreno1_B instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1_B
-	Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ false
-	set guide_ \
-	"NewReno, #1B, with Limited Transmit, without bugfix."
-	$self next pktTraceFile
-}
-Test/newreno1_B instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP/Newreno set exit_recovery_fix_ 1
-        $self setup Newreno {14 15 16 17 18 19 20 21 25 }
-}
-
-# With Limited Transmit, with bugfix.
-Class Test/newreno1_B_BF -superclass TestSuite
-Test/newreno1_B_BF instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       newreno1_B_BF
-        Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ true
-        set guide_ \
-        "NewReno, #1B, with Limited Transmit, with bugfix." 
-	Test/newreno1_B_BF instproc run {} [Test/newreno1_B info instbody run ]
-        $self next pktTraceFile
-}
-
-# With Limited Transmit, with bugfix, with the Less Careful variant.
-Class Test/newreno1_B_BF_LC -superclass TestSuite
-Test/newreno1_B_BF_LC instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       newreno1_B_BF_LC
-        Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ true
-        set guide_ \
-        "NewReno, #1B, with Limited Transmit, with Less Careful bugfix." 
-	Test/newreno1_B_BF_LC instproc run {} [Test/newreno1_B info instbody run ]
-        $self next pktTraceFile
-}
-
-# Without Limited Transmit, without bugfix.
-Class Test/newreno1_B_noLT -superclass TestSuite
-Test/newreno1_B_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1_B_noLT
-	Agent/TCP set singledup_ 0
-	set guide_ "NewReno, #1B, without Limited Transmit, without bugfix."
-	Test/newreno1_B_noLT instproc run {} [Test/reno info instbody run ]
-	$self next pktTraceFile
-}
-
-# With Limited Transmit, without bugfix, with newreno_changes1_
-# With newreno_changes1_
-# With newreno_changes1_, we don't reset the retransmit timer for 
-#  later partial ACKS, so the retransmit timer is more likely to
-#  expire, leading to more unnecessarily-retransmitted packets.
-#  With this example, we have an unnecessary Fast Retransmit both
-#  with and without Limited Transmit, but the behavior is worse
-#  with Limited Transmit.
-Class Test/newreno1A_A -superclass TestSuite
-Test/newreno1A_A instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1A_A
-	Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ false
-	set guide_ \
-	"NewReno, #1A-A, with Limited Transmit, without bugfix.  Bad behavior."
-	$self next pktTraceFile
-}
-Test/newreno1A_A instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP/Newreno set newreno_changes1_ 1
-        $self setup Newreno {24 25 26 27 28 29 31 33 36 }
-}
-
-# With Limited Transmit, with bugfix.
-Class Test/newreno1A_A_BF -superclass TestSuite
-Test/newreno1A_A_BF instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1A_A_BF
-	Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ true
-	set guide_ "NewReno, #1A-A, with Limited Transmit, with bugfix."
-	Test/newreno1A_A_BF instproc run {} [Test/newreno1A_A info instbody run ]
-	$self next pktTraceFile
-}
-
-# With Limited Transmit, with Less Careful bugfix.
-Class Test/newreno1A_A_BF_LC -superclass TestSuite
-Test/newreno1A_A_BF_LC instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1A_A_BF_LC
-	Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ true
-	set guide_ \
-	"NewReno, #1A-A, with Limited Transmit, with Less Careful bugfix."
-	Test/newreno1A_A_BF_LC instproc run {} [Test/newreno1A_A info instbody run ]
-	$self next pktTraceFile
-}
-
-# Without Limited Transmit, without bugfix.
-Class Test/newreno1A_A_noLT -superclass TestSuite
-Test/newreno1A_A_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno1A_A_noLT
-	Agent/TCP set singledup_ 0
-	Agent/TCP set bugFix_ false
-	set guide_ "NewReno, #1A-A, without Limited Transmit, without bugfix."
-	Test/newreno1A_A_noLT instproc run {} [Test/newreno1A_A info instbody run ]
-	$self next pktTraceFile
-}
-
-###################################################
-## Multiple fast retransmits.
-###################################################
-
-# With Limited Transmit, without bugfix.
-Class Test/reno2 -superclass TestSuite
-Test/reno2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	reno2
-	Agent/TCP set singledup_ 1
-	set guide_ "NewReno, with Limited Transmit, without bugfix."
-	$self next pktTraceFile
-}
-Test/reno2 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP set bugFix_ false
-        $self setup Reno {24 25 26 28 31 35 40 45 46 47 48 }
-}
-
-# Without Limited Transmit, without bugfix.
-Class Test/reno2_noLT -superclass TestSuite
-Test/reno2_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	reno2_noLT
-	Agent/TCP set singledup_ 0
-	set guide_ "NewReno, without Limited Transmit, without bugfix."
-	Test/reno2_noLT instproc run {} [Test/reno2 info instbody run ]
-	$self next pktTraceFile
-}
-
-# With Limited Transmit, with bugfix.
-Class Test/reno2_bugfix -superclass TestSuite
-Test/reno2_bugfix instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	reno2_bugfix
-	Agent/TCP set singledup_ 1
-	set guide_ "NewReno, with Limited Transmit, with bugfix."
-	$self next pktTraceFile
-}
-Test/reno2_bugfix instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP set bugFix_ true
-        $self setup Reno {24 25 26 28 31 35 40 45 46 47 48 }
-}
-
-# Without Limited Transmit, with bugfix.
-Class Test/reno2_bugfix_noLT -superclass TestSuite
-Test/reno2_bugfix_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	reno2_bugfix_noLT
-	Agent/TCP set singledup_ 0
-	set guide_ "NewReno, without Limited Transmit, with bugfix."
-	Test/reno2_bugfix_noLT instproc run {} [Test/reno2_bugfix info instbody run ]
-	$self next pktTraceFile
-}
-
-# With Limited Transmit, without bugfix.
-Class Test/newreno2_A -superclass TestSuite
-Test/newreno2_A instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno2_A
-	Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ false
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	set guide_ \
-	"NewReno, #2A, with Limited Transmit, without bugfix.  Bad behavior."
-	$self next pktTraceFile
-}
-Test/newreno2_A instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-}
-
-# Without Limited Transmit, without bugfix.
-Class Test/newreno2_A_noLT -superclass TestSuite
-Test/newreno2_A_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno2_A_noLT
-	Agent/TCP set singledup_ 0
-	Agent/TCP set bugFix_ false
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	set guide_ "NewReno, #2A, without Limited Transmit, without bugfix."
-	Test/newreno2_A_noLT instproc run {} [Test/newreno2_A info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/newreno2_A_bugfix -superclass TestSuite
-Test/newreno2_A_bugfix instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno2_A_bugfix
-	Agent/TCP set bugFix_ true
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	set guide_ "NewReno, #2A, with Limited Transmit, with bugfix."
-	Test/newreno2_A_bugfix instproc run {} [Test/newreno2_A info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/newreno2_A_bugfix_LC -superclass TestSuite
-Test/newreno2_A_bugfix_LC instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno2_A_bugfix_LC
-	set guide_ "NewReno, #2A, with Limited Transmit, with bugfix."
-	Agent/TCP set bugFix_ true
-	Agent/TCP set lessCareful_ true
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	Test/newreno2_A_bugfix_LC instproc run {} [Test/newreno2_A info instbody run ]
-	$self next pktTraceFile
-}
-
-# With Limited Transmit, without bugfix.
-Class Test/newreno2_B -superclass TestSuite
-Test/newreno2_B instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno2_B
-	Agent/TCP set singledup_ 1
-	Agent/TCP set bugFix_ false
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP/Newreno set exit_recovery_fix_ 1
-	set guide_ \
-	"NewReno, #2B, with Limited Transmit, without bugfix." 
-	$self next pktTraceFile
-}
-Test/newreno2_B instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-}
-
-# Without Limited Transmit, without bugfix.
-Class Test/newreno2_B_noLT -superclass TestSuite
-Test/newreno2_B_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno2_B_noLT
-	Agent/TCP set singledup_ 0
-	Agent/TCP set bugFix_ false
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP/Newreno set exit_recovery_fix_ 1
-	set guide_ \
-	"NewReno, #2B, without Limited Transmit, without bugfix."
-	Test/newreno2_B_noLT instproc run {} [Test/newreno2_B info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/newreno2_B_bugfix -superclass TestSuite
-Test/newreno2_B_bugfix instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno2_B_bugfix
-	Agent/TCP set bugFix_ true
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP/Newreno set exit_recovery_fix_ 1
-	set guide_ "NewReno, #2B, with Limited Transmit, with bugfix."
-	Test/newreno2_B_bugfix instproc run {} [Test/newreno2_B info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/newreno2_B_bugfix_LC -superclass TestSuite
-Test/newreno2_B_bugfix_LC instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno2_B_bugfix_LC
-	Agent/TCP set bugFix_ true
-	Agent/TCP set lessCareful_ true
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP/Newreno set exit_recovery_fix_ 1
-	set guide_ \
-	"NewReno, #2B, with Limited Transmit, with Less Careful bugfix."
-	Test/newreno2_B_bugfix_LC instproc run {} [Test/newreno2_B info instbody run ]
-	$self next pktTraceFile
-}
-
-# Class Test/newreno3 -superclass TestSuite
-# Test/newreno3 instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	newreno3
-# 	$self next pktTraceFile
-# }
-# Test/newreno3 instproc run {} {
-# 	Agent/TCP set bugFix_ false
-# 	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-# }
-
-# Class Test/newreno3_bugfix -superclass TestSuite
-# Test/newreno3_bugfix instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	newreno3_bugfix
-# 	$self next pktTraceFile
-# }
-# Test/newreno3_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-# 	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-# }
-
-# Class Test/newreno4_A -superclass TestSuite
-# Test/newreno4_A instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	newreno4_A
-# 	$self next pktTraceFile
-# }
-# Test/newreno4_A instproc run {} {
-# 	Agent/TCP set bugFix_ false
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-# 	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-# }
-
-# Class Test/newreno4_A_bugfix -superclass TestSuite
-# Test/newreno4_A_bugfix instproc init {} {
-# 	$self instvar net_ test_ guide_
-# 	set net_	net4
-# 	set test_	newreno4_A_bugfix
-# 	$self next pktTraceFile
-# }
-# Test/newreno4_A_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-# 	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-# }
-
-TestSuite instproc set_lossylink1 {} {
-        $self instvar lossylink1_ ns_ node_ guide_
-        set lossylink1_ [$ns_ link $node_(s1) $node_(r1)]
-        set em [new ErrorModule Fid]
-        #set errmodel [new ErrorModel/Periodic]
-        #$errmodel unit pkt
-        $lossylink1_ errormodule $em
-}
-
-TestSuite instproc emod1 {} {
-        $self instvar lossylink1_
-        set errmodule [$lossylink1_ errormodule]
-        return $errmodule 
-}
-
-TestSuite instproc drop_pkts1 pkts {
-        $self instvar ns_
-        set emod [$self emod1]
-        set errmodel1 [new ErrorModel/List]
-        $errmodel1 droplist $pkts
-        $emod insert $errmodel1
-        $emod bind $errmodel1 1
-}
-
-#
-# With bugfix, there an a single unnecessary Fast Retransmit, and
-# a single unnecessary retransmission of a window of data.
-#
-Class Test/newreno5 -superclass TestSuite
-Test/newreno5 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	newreno5
-	Agent/TCP set bugFix_ true
-	Agent/TCP set singledup_ 1
-	set guide_ \
-	"NewReno #5, reordering, with Limited Transmit, with bugfix."
-	$self next pktTraceFile
-}
-Test/newreno5 instproc run {} {
-	global quiet
-	$self instvar guide_ ns_ node_
-	puts "Guide: $guide_"
-        ErrorModel set delay_pkt_ true
-        ErrorModel set drop_ false
-        ErrorModel set delay_ 0.05
-	$self setTopo
-	$self set_lossylink1
-	$self drop_pkts1 { 25 }
-        $self setup Newreno {100000} 0
-
-}
-
-#
-#
-Class Test/sack5 -superclass TestSuite
-Test/sack5 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	sack5
-	Agent/TCP set bugFix_ true
-	Agent/TCP set singledup_ 1
-	set guide_ \
-	"Sack #5, reordering, with Limited Transmit, with bugfix."
-	$self next pktTraceFile
-}
-Test/sack5 instproc run {} {
-	global quiet
-	$self instvar guide_ ns_ node_
-	puts "Guide: $guide_"
-        ErrorModel set delay_pkt_ true
-        ErrorModel set drop_ false
-        ErrorModel set delay_ 0.05
-	$self setTopo
-	$self set_lossylink1
-	$self drop_pkts1 { 25 }
-        $self setup Sack1 {100000} 0
-}
-
-Class Test/newreno5_LC -superclass TestSuite
-Test/newreno5_LC instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	newreno5_LC
-	Agent/TCP set bugFix_ true
-	Agent/TCP set lessCareful_ true
-	Agent/TCP set singledup_ 1
-	set guide_ \
-	"NewReno #5, reordering, with Limited Transmit, with Less Care. bugfix."
-	Test/newreno5_LC instproc run {} [Test/newreno5 info instbody run ]
-	$self next pktTraceFile
-}
-
-#
-# With bugfix, this looks essentially the same with and without
-# Limited Transmit (i.e., singledup_ set to 1).
-#
-Class Test/newreno5_noLT -superclass TestSuite
-Test/newreno5_noLT instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	newreno5_noLT
-	Agent/TCP set bugFix_ true
-	Agent/TCP set singledup_ 0
-	set guide_ \
-	"NewReno #5, reordering, without Limited Transmit, with bugfix."
-	Test/newreno5_noLT instproc run {} [Test/newreno5 info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/newreno5_noLT_LC -superclass TestSuite
-Test/newreno5_noLT_LC instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	newreno5_noLT_LC
-	Agent/TCP set bugFix_ true
-	Agent/TCP set lessCareful_ true
-	Agent/TCP set singledup_ 0
-	set guide_ \
-	"NewReno #5, reordering, without Lim. Transmit, with Less Care. bugfix."
-	Test/newreno5_noLT_LC instproc run {} [Test/newreno5 info instbody run ]
-	$self next pktTraceFile
-}
-
-#
-# With Limited Transmit but without bugfix, each unnecessary Fast
-# Retransmit results in three dup acks, and a subsequent unnecessary
-# Fast Retransmit.
-#
-Class Test/newreno5_noBF -superclass TestSuite
-Test/newreno5_noBF instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	newreno5_noBF
-	Agent/TCP set bugFix_ false
-	Agent/TCP set singledup_ 1
-	set guide_ \
-	"NewReno #5, reordering, with Limited Transmit, without bugfix.  Bad."
-	Test/newreno5_noBF instproc run {} [Test/newreno5 info instbody run ]
-	$self next pktTraceFile
-}
-
-#
-# Without Limited Transmit and without bugfix, each unnecessary Fast
-# Retransmit results in three dup acks, and a subsequent unnecessary
-# Fast Retransmit, but the Limited Transmits are there to keep the
-# number of packets in flight from shrinking below a certain number.
-# So without Limited Transmit, eventually the congestion window is
-# reduced to one or two, and the pattern of unnecessary Fast Retransmits
-# is halted.
-#
-Class Test/newreno5_noLT_noBF -superclass TestSuite
-Test/newreno5_noLT_noBF instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	newreno5_noLT_noBF
-	Agent/TCP set bugFix_ false
-	Agent/TCP set singledup_ 0
-	set guide_ \
-	"NewReno #5, reordering, without Limited Transmit, without bugfix."
-	Test/newreno5_noLT_noBF instproc run {} [Test/newreno5 info instbody run ]
-	$self next pktTraceFile
-}
-
-#########################
-# Now Reno tests:
-#########################
-
-#
-# With Reno, there an a single unnecessary Fast Retransmit, but
-#  NO unnecessary retransmission of a window of data.
-#
-Class Test/reno5 -superclass TestSuite
-Test/reno5 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	reno5
-	Agent/TCP set bugFix_ true
-	Agent/TCP set singledup_ 1
-	set guide_ \
-	"Reno #5, reordering, with Limited Transmit, with bugfix."
-	$self next pktTraceFile
-}
-Test/reno5 instproc run {} {
-	global quiet
-	$self instvar guide_ ns_ node_
-	puts "Guide: $guide_"
-        ErrorModel set delay_pkt_ true
-        ErrorModel set drop_ false
-        ErrorModel set delay_ 0.05
-	$self setTopo
-	$self set_lossylink1
-	$self drop_pkts1 { 25 }
-        $self setup Reno {100000} 0
-}
-
-#
-# With Reno:
-# With Limited Transmit but without bugfix, with reordering there
-#  is only one unnecessary Fast Retransmit. 
-#
-Class Test/reno5_noBF -superclass TestSuite
-Test/reno5_noBF instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	reno5_noBF
-	Agent/TCP set bugFix_ false
-	Agent/TCP set singledup_ 1
-	set guide_ \
-	"Reno #5, reordering, with Limited Transmit, without bugfix."  
-	Test/reno5_noBF instproc run {} [Test/reno5 info instbody run ]
-	$self next pktTraceFile
-}
-
-#
-# Reno:
-# Only one unnecessary retransmit
-#
-Class Test/reno5_noLT_noBF -superclass TestSuite
-Test/reno5_noLT_noBF instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	reno5_noLT_noBF
-	Agent/TCP set bugFix_ false
-	Agent/TCP set singledup_ 0
-	set guide_ \
-	"Reno #5, reordering, without Limited Transmit, without bugfix."
-	Test/reno5_noLT_noBF instproc run {} [Test/reno5 info instbody run ]
-	$self next pktTraceFile
-}
-
-#
-# With multiple reordering events, Reno reduces the congestion
-#   window more times than necessary.
-#
-Class Test/reno5a -superclass TestSuite
-Test/reno5a instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	reno5a
-	Agent/TCP set bugFix_ true
-	Agent/TCP set singledup_ 1
-	set guide_ \
-	"Reno #5, reordering, with Limited Transmit, with bugfix."
-	$self next pktTraceFile
-}
-Test/reno5a instproc run {} {
-	global quiet
-	$self instvar guide_ ns_ node_
-	puts "Guide: $guide_"
-        ErrorModel set delay_pkt_ true
-        ErrorModel set drop_ false
-        ErrorModel set delay_ 0.05
-	$self setTopo
-	$self set_lossylink1
-	$self drop_pkts1 { 25 31 35 40 }
-        $self setup Reno {100000} 0
-}
-
-#
-# Reno:
-#
-Class Test/reno5a_noLT_noBF -superclass TestSuite
-Test/reno5a_noLT_noBF instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	reno5a_noLT_noBF
-	Agent/TCP set bugFix_ false
-	Agent/TCP set singledup_ 0
-	set guide_ \
-	"Reno #5a, reordering, without Limited Transmit, without bugfix."
-	Test/reno5a_noLT_noBF instproc run {} [Test/reno5a info instbody run ]
-	$self next pktTraceFile
-}
-
-#
-# In this scenario, we do a Fast Retransmit after packet 33 is dropped,
-# and that seems good.  Packet 33 was sent after the first
-# Fast Retransmit was initiated.
-#
-Class Test/newreno6 -superclass TestSuite
-Test/newreno6 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno6
-	Agent/TCP set singledup_ 1
-	set guide_ "NewReno, a new packet transmitted after FR is dropped."
-	$self next pktTraceFile
-}
-Test/newreno6 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP set bugFix_ false
-        $self setup Newreno {14 26 28 33}
-}
-
-##########################################################
-# New validation tests on timestamps, from Andrei Gurtov
-##########################################################
-
-# BugFix prevents a Fast Retransmit for a lost packet.
-Class Test/newreno_rto_loss -superclass TestSuite
-Test/newreno_rto_loss instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_rto
-	set guide_ "NewReno after timeout, lost packet."
-	$self next pktTraceFile
-}
-Test/newreno_rto_loss instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	$self rfc2582
-        $self setup Newreno {15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 37}
-}
- 
-# The ACK heuristic allows a productive Fast Retransmit.
-Class Test/newreno_rto_loss_ack -superclass TestSuite
-Test/newreno_rto_loss_ack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_rto_loss_ack
-	Agent/TCP set bugFix_ack_ true
-	set guide_ "NewReno after timeout, lost packet, ACK heuristic."
-	$self next pktTraceFile
-	Test/newreno_rto_loss_ack instproc run {} [Test/newreno_rto_loss info instbody run]
-}
- 
-Class Test/newreno_rto_loss_ts -superclass TestSuite
-Test/newreno_rto_loss_ts instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_rto_loss_ts
-	Agent/TCP set timestamps_ true
-	Agent/TCPSink set ts_echo_rfc1323_ true
-        set guide_ "NewReno after timeout, lost packet, timestamps."
-	$self next pktTraceFile
-	Test/newreno_rto_loss_ts instproc run {} [Test/newreno_rto_loss info instbody run]
-}
-
-Class Test/newreno_rto_loss_tsh -superclass TestSuite
-Test/newreno_rto_loss_tsh instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_rto_loss_tsh
-	Agent/TCP set bugFix_ts_ true
-	Agent/TCP set timestamps_ true
-	Agent/TCPSink set ts_echo_rfc1323_ true
-	set guide_ "NewReno after timeout, lost packet, timestamp heuristic."
-	$self next pktTraceFile
-	Test/newreno_rto_loss_tsh instproc run {} [Test/newreno_rto_loss info instbody run]
-}
- 
-Class Test/newreno_rto_dup -superclass TestSuite
-Test/newreno_rto_dup instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       newreno_rto_dup
-        set guide_ "NewReno after timeout, false dupacks"
-        $self next pktTraceFile
-}
-Test/newreno_rto_dup instproc run {} {
-        global quiet; $self instvar guide_
-        puts "Guide: $guide_"
-        $self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 51}
-}
- 
-## The ACK heuristic doesn't make any difference in this case,
-## as one would want.
-Class Test/newreno_rto_dup_ack -superclass TestSuite
-Test/newreno_rto_dup_ack instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       newreno_rto_dup_ack
-	Agent/TCP set bugFix_ack_ true
-        set guide_ "NewReno after timeout, false dupacks, ACK heuristic"
-        $self next pktTraceFile
-	Test/newreno_rto_dup_ack instproc run {} [Test/newreno_rto_dup info instbody run]
-}
- 
-TestSuite instproc drop_acks acks {
-    $self instvar ns_ node_
-    set emod2 [new ErrorModule Fid]
-    [$ns_ link $node_(k1) $node_(r1)] errormodule $emod2
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $acks
-    $emod2 insert $errmodel1
-    $emod2 bind $errmodel1 1
-}
-
-# ACK heuristic fails due to ACK losses.
-Class Test/newreno_rto_loss_ackf -superclass TestSuite
-Test/newreno_rto_loss_ackf instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       newreno_rto_loss_ackf
-        Agent/TCP set bugFix_ack_ true
-        set guide_ "NewReno after timeout, lost packet and ACKs, ACK heuristic fails."      
-        $self next pktTraceFile
-}
-Test/newreno_rto_loss_ackf instproc run {} {
-        global quiet
-        $self instvar guide_
-        puts "Guide: $guide_"
-	$self rfc2582
-        $self setTopo
-        $self drop_acks {23 24 25 26}
-        $self setup Newreno {15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 43} 0
-} 
-
-Class Test/newreno_rto_dup_ts -superclass TestSuite
-Test/newreno_rto_dup_ts instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_rto_dup_ts
-	Agent/TCP set timestamps_ true
-	set guide_ "NewReno after timeout, false dupacks, timestamps."
-	$self next pktTraceFile
-	Test/newreno_rto_dup_ts instproc run {} [Test/newreno_rto_dup info instbody run]
-}
-
-## The timestamp heuristic doesn't make any difference in this case,
-## as one would want.
-Class Test/newreno_rto_dup_tsh -superclass TestSuite
-Test/newreno_rto_dup_tsh instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	newreno_rto_dup_tsh
-	Agent/TCP set timestamps_ true
-	Agent/TCP set bugFix_ts_ true
-	set guide_ "NewReno after timeout, false dupacks, timestamp heuristic."
-	$self next pktTraceFile
-	Test/newreno_rto_dup_tsh instproc run {} [Test/newreno_rto_dup info instbody run]
-}
-
-#########################################################################3
-# Impatient (newreno_changes1_ to 1) vs. 
-# Slow-but-steady (newreno_changes1_ 0)
-#########################################################################3
-
-
-Class Test/impatient1 -superclass TestSuite
-Test/impatient1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4b
-	set test_	impatient1
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	set guide_ \
-	"NewReno, Impatient."
-	$self next pktTraceFile
-}
-Test/impatient1 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP set singledup_ 1
-        $self setup Newreno {15 16 17 18 19 20 21 22 23 24 25 26 27 } 1 10 16
-}
-
-Class Test/slow1 -superclass TestSuite
-Test/slow1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4b
-	set test_	slow1
-	Agent/TCP/Newreno set newreno_changes1_ 0
-	set guide_ \
-	"NewReno, Slow-but-Steady.  Impatient is better."
-	Test/slow1 instproc run {} [Test/impatient1 info instbody run]
-	$self next pktTraceFile
-}
-
-Class Test/impatient2 -superclass TestSuite
-Test/impatient2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4b
-	set test_	impatient2
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	set guide_ \
-	"NewReno, Impatient.  Slow-but-Steady is better."
-	$self next pktTraceFile
-}
-Test/impatient2 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP set singledup_ 1
-        $self setup Newreno {15 16 17 18 19 } 1 10 16
-}
-
-Class Test/slow2 -superclass TestSuite
-Test/slow2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4b
-	set test_	slow2
-	Agent/TCP/Newreno set newreno_changes1_ 0
-	set guide_ \
-	"NewReno, Slow-but-Steady."
-	Test/slow2 instproc run {} [Test/impatient2 info instbody run]
-	$self next pktTraceFile
-}
-
-Class Test/impatient3 -superclass TestSuite
-Test/impatient3 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4b
-	set test_	impatient3
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	set guide_ \
-	"NewReno, Impatient.  Slow-but-Steady is better."
-	$self next pktTraceFile
-}
-Test/impatient3 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP set singledup_ 1
-        $self setup Newreno {15 16 17 18 19 22 27 } 1 10 16
-}
-
-Class Test/slow3 -superclass TestSuite
-Test/slow3 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4b
-	set test_	slow3
-	Agent/TCP/Newreno set newreno_changes1_ 0
-	set guide_ \
-	"NewReno, Slow-but-Steady."
-	Test/slow3 instproc run {} [Test/impatient3 info instbody run]
-	$self next pktTraceFile
-}
-
-Class Test/impatient4 -superclass TestSuite
-Test/impatient4 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4b
-	set test_	impatient4
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	set guide_ \
-	"NewReno, Impatient."
-	$self next pktTraceFile
-}
-Test/impatient4 instproc run {} {
-	global quiet; $self instvar guide_
-	puts "Guide: $guide_"
-	Agent/TCP/Newreno set partial_window_deflation_ 1
-	Agent/TCP set singledup_ 1
-        $self setup Newreno {30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55} 1 20 32
-}
-
-Class Test/slow4 -superclass TestSuite
-Test/slow4 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4b
-	set test_	slow4
-	Agent/TCP/Newreno set newreno_changes1_ 0
-	set guide_ \
-	"NewReno, Slow-but-Steady.  Impatient is better."
-	Test/slow4 instproc run {} [Test/impatient4 info instbody run]
-	$self next pktTraceFile
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-nixvec.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-nixvec.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-nixvec.tcl	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-nixvec.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,207 +0,0 @@
-#
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-# This test suite is for validating nixvector routing
-# To run the test: test-all-nixvec
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-
-
-
-Simulator instproc progress { } {
-    global progress_interval
-    puts [format "Progress to %6.1f seconds" [$self now]]
-    if { ![info exists progress_interval] } {
-	set progress_interval [$self now]
-    }
-    $self at [expr [$self now] + $progress_interval] "$self progress"
-}
-
-Class TestSuite
-
-# Nixvector tests
-Class Test/NixVec -superclass TestSuite
-Class Test/NoNixVec -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: NixVec NoNixVec"
-	exit 1
-}
-
-proc RunNix { ns usenix } {
-    global f
-    set f [open temp.rands w]
-
-    $ns trace-all $f
-
-    set n0  [$ns node]
-    set n1  [$ns node]
-    set n2  [$ns node]
-    set n3  [$ns node]
-    set n4  [$ns node]
-    set n5  [$ns node]
-    set n6  [$ns node]
-    set n7  [$ns node]
-    set n8  [$ns node]
-    set n9  [$ns node]
-    set n10 [$ns node]
-    set n11 [$ns node]
-    set n12 [$ns node]
-
-    $ns duplex-link    $n0  $n1  10mb 20ms DropTail
-    $ns duplex-link-op $n0  $n1  orient 0
-
-    $ns duplex-link    $n1  $n2  10mb 20ms DropTail
-    $ns duplex-link-op $n1  $n2  orient 0.5
-
-    $ns duplex-link    $n1  $n3  10mb 20ms DropTail
-    $ns duplex-link-op $n1  $n3  orient 0
-
-    $ns duplex-link    $n3  $n4  10mb 20ms DropTail
-    $ns duplex-link-op $n3  $n4  orient 0.5
-
-    $ns duplex-link    $n3  $n5  10mb 20ms DropTail
-    $ns duplex-link-op $n3  $n5  orient 0
-
-    $ns duplex-link    $n3  $n6  10mb 20ms DropTail
-    $ns duplex-link-op $n3  $n6  orient 1.5
-
-    $ns duplex-link    $n5  $n7  10mb 20ms DropTail
-    $ns duplex-link-op $n5  $n7  orient 0.5
-
-    $ns duplex-link    $n5  $n8  10mb 20ms DropTail
-    $ns duplex-link-op $n5  $n8  orient 0.25
-
-    $ns duplex-link    $n5  $n9  10mb 20ms DropTail
-    $ns duplex-link-op $n5  $n9  orient 0
-
-    $ns duplex-link    $n5  $n10 10mb 20ms DropTail
-    $ns duplex-link-op $n5  $n10 orient 1.75
-
-    $ns duplex-link    $n5  $n11 10mb 20ms DropTail
-    $ns duplex-link-op $n5  $n11 orient 1.5
-
-    $ns duplex-link    $n9  $n12 10mb 20ms DropTail
-    $ns duplex-link-op $n9  $n12 orient 0
-
-    set tcp0 [$ns create-connection TCP $n0 TCPSink $n12 0]
-    set ftp0 [new Source/FTP]
-    $ftp0 attach $tcp0
-    $ns at 0.1 "$ftp0 produce 500"
-    $ns at 1.0 "$ns progress"
-    $ns run
-}
-
-TestSuite instproc init {} {
-    #puts "Hello from TestSuite::init"
-}
-
-
-Test/NixVec instproc init {} {
-
-# check if nixvector module is disabled
-    if {![TclObject is-class RtModule/Nix]} {
-	puts "Nixvector module is not present; validation skipped"
-	exit 2
-    }
-    $self instvar ns
-    set ns [new Simulator]
-    $ns set-nix-routing
-    $self next
-    #puts "Hello from Test/NixVec::init"
-}
-
-Test/NixVec instproc run {} {
-    $self instvar ns
-    puts "Test/NixVec Starting Simulation..."
-    $ns at 10.0 "$self finish"
-    RunNix $ns 1
-}
-
-
-Test/NoNixVec instproc init {} {
-    $self instvar ns
-    set ns [new Simulator]
-    $self next
-    #puts "Hello from Test/NoNixVec::init"
-}
-
-Test/NoNixVec instproc run {} {
-    $self instvar ns
-    puts "Test/NoNixVec Starting Simulation..."
-    $ns at 10.0 "$self finish"
-    RunNix $ns 0
-}
-
-
-TestSuite instproc finish {} {
-    $self instvar ns
-    global quiet
-    global f
-
-    puts "finishing.."
-    $ns flush-trace
-    if { [info exists f] } {
-        close $f
-    }
-    exit 0
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-global argv arg0
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-oddBehaviors.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-oddBehaviors.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-oddBehaviors.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-oddBehaviors.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,274 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-oddBehaviors.tcl,v 1.16 2007/10/24 02:13:50 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-Agent/TCP set singledup_ 0
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc finish file {
-	global quiet wrap PERL
-        exec $PERL ../../bin/set_flow_id -s all.tr | \
-          $PERL ../../bin/getrc -s 2 -d 3 | \
-          $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-         exec $PERL ../../bin/set_flow_id -d all.tr | \
-          $PERL ../../bin/getrc -s 3 -d 2 | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m $wrap -t $file > temp1.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-			temp1.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype list} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_ guide_
-	$self setTopo
-
-        Agent/TCP set bugFix_ false
-        puts "Guide: $guide_"
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "Fack"} {
-      		set tcp1 [$ns_ create-connection TCP/Fack $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "SackRH"} {
-      		set tcp1 [$ns_ create-connection TCP/SackRH $node_(s1) \
-          	TCPSink/Sack1 $node_(k1) $fid]
-    	} elseif {$tcptype == "FullTcp"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp]
-	        set sink [new Agent/TCP/FullTcp]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpTahoe"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Tahoe]
-	        set sink [new Agent/TCP/FullTcp/Tahoe]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpNewreno"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Newreno]
-	        set sink [new Agent/TCP/FullTcp/Newreno]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpSack1"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Sack]
-	        set sink [new Agent/TCP/FullTcp/Sack]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 50
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 2.0
-        $self drop_pkts $list
-
-        #$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-	$ns_ at 2.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-###################################################
-## One drop, numdupacks
-###################################################
-
-# cwnd is 4 when a packet is dropped.
-# When three dup acks come in, cwnd in halved to 2.  
-# dupwnd_ is set # to three, 
-# so the sender retransmits the lost packet, 
-# and also sends a new packet off the top, because
-# cwnd has been "inflated" by the three dup acks.
-# This occurs, appropriately, with both Reno and Newreno.
-# This does not occur for Sack, because Sack only sends one packet
-# in response to the third dup ack.
-#
-Class Test/onedrop_reno -superclass TestSuite
-Test/onedrop_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_reno
-        set guide_      "Reno, inflated congestion window after Fast Retransmit."
-	$self next pktTraceFile
-}
-Test/onedrop_reno instproc run {} {
-        $self setup Reno {3}
-}
-
-Class Test/onedrop_sack -superclass TestSuite
-Test/onedrop_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_sack
-        set guide_      "Sack, no inflated congestion window after Fast Retransmit."
-	$self next pktTraceFile
-}
-Test/onedrop_sack instproc run {} {
-        $self setup Sack1 {3}
-}
-
-Class Test/onedrop_sack1 -superclass TestSuite
-Test/onedrop_sack1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_sack1
-	Agent/TCP set singledup_ 1
-        set guide_      "Sack, Limited Transmit, inflated congestion window."
-	$self next pktTraceFile
-}
-Test/onedrop_sack1 instproc run {} {
-        $self setup Sack1 {3}
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-packmime.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-packmime.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-packmime.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-packmime.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,374 +0,0 @@
-# test-suite-PackMime.tcl
-#
-# Based on ns/tcl/test/test-suite-full.tcl
-#
-# Modified by Michele Weigle, UNC-Chapel Hill, Dec 2003
-#
-
-#*************************************************************************
-# Tests to validate PackMime
-#
-#  1node-http1_0 - one PackMime node running HTTP 1.0
-#  1node-http1_1 - one PackMime node running HTTP 1.1
-#  2node-http1_1 - two PackMime nodes running HTTP 1.1
-#
-#*************************************************************************
-
-source misc.tcl
-
-TestSuite instproc finish testname {
-	$self instvar ns_
-	$ns_ halt
-}
-
-Class SkelTopology
-
-Class Topology -superclass SkelTopology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/DB -superclass Topology
-
-#
-# PackMime test topology
-#
-#           s1                      k1
-#             \                    /
-#  100Mb, 1ms  \    100Mb, 1ms    / 100Mb, 1ms
-#               r1 ----------- r2 
-#  100Mb, 1ms  /                 \ 100Mb, 1ms
-#             /                   \
-#          s2                       k2
-#
-Topology/DB instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns DelayBox]
-    set node_(r2) [$ns DelayBox]
-    set node_(k1) [$ns node]
-    set node_(k2) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 100Mb 1ms DropTail
-    $ns duplex-link $node_(k1) $node_(r2) 100Mb 1ms DropTail
-    $ns duplex-link $node_(k2) $node_(r2) 100Mb 1ms DropTail
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-}
-
-TestSuite instproc setup_topo {{all_links 1}} {
-    $self instvar ns_ node_ testName_
-
-    # clear output files
-    exec rm -f temp.rands
-
-    remove-all-packet-headers
-    add-packet-header IP TCP
-    $ns_ use-scheduler Heap
-
-    Trace set show_tcphdr_ 1 
-    Agent/TCP set minrto_ 1;     # ns-2.27 value
-
-   # setup tracing
-    set trace_file [open temp.rands w]
-    if ($all_links) {
-        $ns_ trace-queue $node_(s1) $node_(r1) $trace_file
-        $ns_ trace-queue $node_(r1) $node_(s1) $trace_file
-        $ns_ trace-queue $node_(s2) $node_(r1) $trace_file
-        $ns_ trace-queue $node_(r1) $node_(s2) $trace_file
-    }
-    $ns_ trace-queue $node_(r1) $node_(r2) $trace_file
-    $ns_ trace-queue $node_(r2) $node_(r1) $trace_file
-    if ($all_links) {
-        $ns_ trace-queue $node_(k1) $node_(r2) $trace_file
-        $ns_ trace-queue $node_(r2) $node_(k1) $trace_file
-        $ns_ trace-queue $node_(k2) $node_(r2) $trace_file
-        $ns_ trace-queue $node_(r2) $node_(k2) $trace_file
-    }
-
-    # create random variables
-    set srcd_rng [new RNG];
-    set src_delay [new RandomVariable/Uniform];   # delay 20-50 ms
-    $src_delay set min_ 20
-    $src_delay set max_ 50
-    $src_delay use-rng $srcd_rng
-
-    set srcbw_rng [new RNG];
-    set src_bw [new RandomVariable/Uniform];      # bw 1-20 Mbps
-    $src_bw set min_ 1
-    $src_bw set max_ 20
-    $src_delay use-rng $srcbw_rng
-
-    set sinkd_rng [new RNG];
-    set sink_delay [new RandomVariable/Uniform];   # delay 1-20 ms
-    $sink_delay set min_ 1
-    $sink_delay set max_ 20
-    $sink_delay use-rng $sinkd_rng
-
-    set sinkbw_rng [new RNG];
-    set sink_bw [new RandomVariable/Constant];      # bw 100 Mbps
-    $sink_bw set val_ 100
-    $sink_bw use-rng $sinkbw_rng
-
-    set loss_rng [new RNG];
-    set loss_rate [new RandomVariable/Uniform];    # loss 0-1%
-    $loss_rate set min_ 0
-    $loss_rate set max_ 0.01
-    $loss_rate use-rng $loss_rng
-    
-    # setup rules for DelayBoxes
-    $node_(r1) add-rule [$node_(s1) id] [$node_(k1) id] $src_delay \
-	    $loss_rate $src_bw
-    $node_(r1) add-rule [$node_(s2) id] [$node_(k2) id] $src_delay \
-	    $loss_rate $src_bw
-    $node_(r2) add-rule [$node_(s1) id] [$node_(k1) id] $sink_delay \
-	    $loss_rate $sink_bw
-    $node_(r2) add-rule [$node_(s2) id] [$node_(k2) id] $sink_delay \
-	    $loss_rate $sink_bw
-}
-
-TestSuite instproc setloss {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        set errmodel [$errmodule errormodels]
-        if { [llength $errmodel] > 1 } {
-                puts "droppedfin: confused by >1 err models..abort"
-                exit 1
-        }
-        return $errmodel
-}
-
-# Mark the specified packet.
-TestSuite instproc mark_pkt { number } {
-    $self instvar ns_ lossmodel
-    set lossmodel [$self setloss]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ 10000
-    $lossmodel set markecn_ true
-}
-
-#################################################################
-#
-# 1node-http_1_0
-#
-Class Test/1node-http_1_0 -superclass TestSuite
-Test/1node-http_1_0 instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 1node-http_1_0
-	$self next 0
-}
-
-Test/1node-http_1_0 instproc run {{PMrate 10} {markpkt 100000} {all_links 1}} {
-	$self instvar ns_ node_
-        $self setup_topo $all_links
-
-        set PM [new PackMimeHTTP]
-        $PM set-server $node_(s1)
-        $PM set-client $node_(k1)
-        $PM set-rate $PMrate
-	$self mark_pkt $markpkt
-
-        $ns_ at 0 "$PM start"
-        $ns_ at 5 "$PM stop"
-
-	$ns_ run
-}
-
-#
-# 1node-http_1_1
-#
-Class Test/1node-http_1_1 -superclass TestSuite
-Test/1node-http_1_1 instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 1node-http_1_1
-	$self next 0
-}
-Test/1node-http_1_1 instproc run {{PMrate 5} {markpkt 100000} {all_links 1}} {
-	$self instvar ns_ node_
-        $self setup_topo $all_links
-
-        set PM [new PackMimeHTTP]
-        $PM set-server $node_(s1)
-        $PM set-client $node_(k1)
-        $PM set-rate $PMrate
-	$self mark_pkt $markpkt
-        $PM set-1.1
-
-        $ns_ at 0 "$PM start"
-        $ns_ at 5 "$PM stop"
-
-	$ns_ run
-}
-
-#
-# 2node-http_1_1
-#
-Class Test/2node-http_1_1 -superclass TestSuite
-Test/2node-http_1_1 instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 2node-http_1_1
-	$self next 0
-}
-Test/2node-http_1_1 instproc run {{PMrate 5} {markpkt 100000} {all_links 1}} {
-	$self instvar ns_ node_
-        $self setup_topo $all_links
-
-        set PM [new PackMimeHTTP]
-        $PM set-server $node_(s1)
-        $PM set-client $node_(k1)
-        $PM set-server $node_(s2)
-        $PM set-client $node_(k2)
-        $PM set-rate $PMrate
-	$self mark_pkt $markpkt
-        $PM set-1.1
-    
-        $ns_ at 0 "$PM start"
-        $ns_ at 5 "$PM stop"
-
-	$ns_ run
-}
-
-####################################################################
-#
-# To count at ECN-Capable SYN/ACK packets:
-# grep "C-----N" temp.rands | grep "ack" | grep "+" | wc -l
-# To count at marked ECN-Capable SYN/ACK packets:
-# grep "C---E-N" temp.rands | grep "ack" | grep "r" | wc -l
-# To count at non-ECN-Capable SYN/ACK packets:
-# grep "C------" temp.rands | grep "ack" | grep "+" | wc -l
-####################################################################
-# 1node-http_1_0_ecn+
-# 12 ECN-Capable SYN/ACK packets.
-# 1 marked ECN-Capable SYN/ACK packets.
-# 0 non-ECN-Capable SYN/ACK packets.
-#
-Class Test/1node-http_1_0_ecn+ -superclass TestSuite
-Test/1node-http_1_0_ecn+ instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 1node-http_1_0_ecn+
-	Agent/TCP set ecn_ 1
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 0
-	Test/1node-http_1_0_ecn+ instproc run {{PMrate 1} {markpkt 1} {all_links 0}} [Test/1node-http_1_0 info instbody run ]
-	$self next 0
-}
-
-# ? ECN-Capable SYN/ACK packets.
-Class Test/1node-http_1_1_ecn+ -superclass TestSuite
-Test/1node-http_1_1_ecn+ instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $$defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 1node-http_1_1_ecn+
-	Agent/TCP set ecn_ 1
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 0
-	Test/1node-http_1_1_ecn+ instproc run {{PMrate 1} {markpkt 1} {all_links 0}} [Test/1node-http_1_1 info instbody run ]
-	$self next 0
-}
-
-# ? ECN-Capable SYN/ACK packets.
-Class Test/2node-http_1_1_ecn+ -superclass TestSuite
-Test/2node-http_1_1_ecn+ instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 2node-http_1_1_ecn+
-	Agent/TCP set ecn_ 1
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 0
-	Test/2node-http_1_1_ecn+ instproc run {{PMrate 1} {markpkt 1} {all_links 0}} [Test/2node-http_1_1 info instbody run ]
-	$self next 0
-}
-####################################################################
-# 1node-http_1_0_ecn+B
-# 12 ECN-Capable SYN/ACK packets.
-# 1 marked ECN-Capable SYN/ACK packets.
-# 1 non-ECN-Capable SYN/ACK packets.
-# egrep '0.0 4.0|4.0 0.0' temp.rands
-#
-Class Test/1node-http_1_0_ecn+B -superclass TestSuite
-Test/1node-http_1_0_ecn+B instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 1node-http_1_0_ecn+B
-	Agent/TCP set ecn_ 1
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 2
-	Test/1node-http_1_0_ecn+B instproc run {{PMrate 1} {markpkt 1} {all_links 0}} [Test/1node-http_1_0 info instbody run ]
-	$self next 0
-}
-
-# ? ECN-Capable SYN/ACK packets.
-
-Class Test/1node-http_1_1_ecn+B -superclass TestSuite
-Test/1node-http_1_1_ecn+B instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 1node-http_1_1_ecn+B
-	Agent/TCP set ecn_ 1
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 2
-	Test/1node-http_1_1_ecn+B instproc run {{PMrate 1} {markpkt 1} {all_links 0}} [Test/1node-http_1_1 info instbody run ]
-	$self next 0
-}
-
-# ? ECN-Capable SYN/ACK packets.
-Class Test/2node-http_1_1_ecn+B -superclass TestSuite
-Test/2node-http_1_1_ecn+B instproc init topo {
-        global defaultRNG
-	$self instvar net_ defNet_ test_
-        $defaultRNG seed 9999
-        set net_ $topo
-	set defNet_ DB
-	set test_ 2node-http_1_1_ecn+B
-	Agent/TCP set ecn_ 1
-	Agent/TCP/FullTcp set ecn_syn_ true
-	Agent/TCP/FullTcp set ecn_syn_wait_ 2
-	Test/2node-http_1_1_ecn+B instproc run {{PMrate 1} {markpkt 1} {all_links 0}} [Test/2node-http_1_1 info instbody run ]
-	$self next 0
-}
-####################################################################
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-pi.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-pi.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-pi.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-pi.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,681 +0,0 @@
-#
-# Copyright (c) 2001  International Computer Science Institute
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by ACIRI, the AT&T
-#      Center for Internet Research at ICSI (the International Computer
-#      Science Institute).
-# 4. Neither the name of ACIRI nor of ICSI may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY ICSI AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL ICSI OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# To run all tests: test-all-pi
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-catch "cd $dir"
-#Agent/TCP set oldCode_ true
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-Agent/TCP set exitFastRetrans_ false
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set piq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$piq trace curq_
-	$piq attach $tchan_
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms PI
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 10ms PI
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 3ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for PI gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q
-	exec touch temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-Class Test/pi1 -superclass TestSuite
-Test/pi1 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ pi1
-    $self next pktTraceFile
-}
-Test/pi1 instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-
-    set piq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-		$piq set a_ 0.00743488595689 
-		$piq set b_ 0.00736090699216 
-		$piq set w_ 4.353741496598639e+02 
-		$piq set qref_ 6 
-		
-    set stoptime 10.0
-    
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 15
-
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s3) 1]
-    $tcp2 set window_ 15
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-Class Test/ecn -superclass TestSuite
-Test/ecn instproc init {} {
-    $self instvar net_ test_
-    Queue/PI set setbit_ true
-    Agent/TCP set old_ecn_ 1
-    set net_	net2
-    set test_	ecn
-    $self next pktTraceFile
-}
-Test/ecn instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo 
-
-    set stoptime 10.0
-    set piq [[$ns_ link $node_(r1) $node_(r2)] queue]
-		$piq set a_ 0.00743488595689 
-		$piq set b_ 0.00736090699216 
-		$piq set w_ 4.353741496598639e+02 
-		$piq set qref_ 6 
-    $piq set setbit_ true
-
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 15
-    $tcp1 set ecn_ 1
-
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s3) 1]
-    $tcp2 set window_ 15
-    $tcp2 set ecn_ 1
-        
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-        
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-        
-    $self tcpDump $tcp1 5.0
-        
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-        
-    $ns_ run
-}
-
-Class Test/pi2 -superclass TestSuite
-Test/pi2 instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	pi2
-    $self next pktTraceFile
-}
-Test/pi2 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set piq [[$ns_ link $node_(r1) $node_(r2)] queue]
-		$piq set a_ 0.11086249861225 
-		$piq set b_ 0.10975938917335 
-		$piq set w_ 2.370370370370370e+03 
-		$piq set qref_ 50
-	
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 100 
-
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s3) 1]
-    $tcp2 set window_ 100
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-# The queue is measupi in "packets".
-Class Test/pi_twoway -superclass TestSuite
-Test/pi_twoway instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	pi_twoway
-    $self next pktTraceFile
-}
-Test/pi_twoway instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set piq [[$ns_ link $node_(r1) $node_(r2)] queue]
-		$piq set a_ 0.01198611957431 
-		$piq set b_ 0.01186685470289 
-		$piq set w_ 5.925925925925926e+02 
-		$piq set qref_ 20
-	
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 100 
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s4) 1]
-    $tcp2 set window_ 100 
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Reno $node_(s3) TCPSink $node_(s1) 2]
-    $tcp3 set window_ 100 
-    set tcp4 [$ns_ create-connection TCP/Reno $node_(s4) TCPSink $node_(s2) 3]
-    $tcp4 set window_ 100 
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-# The queue is measupi in "bytes".
-Class Test/pi_twowaybytes -superclass TestSuite
-Test/pi_twowaybytes instproc init {} {
-    $self instvar net_ test_
-    set net_	net2
-    set test_	pi_twowaybytes
-    $self next pktTraceFile
-}
-Test/pi_twowaybytes instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set piq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $piq set bytes_ true
-    $piq set queue_in_bytes_ true
-		$piq set a_ 0.00743488595689 
-		$piq set b_ 0.00736090699216 
-		$piq set w_ 4.353741496598639e+02 
-		$piq set qref_ 6 
-		
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 15
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s4) 1]
-    $tcp2 set window_ 15
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Reno $node_(s3) TCPSink $node_(s1) 2]
-    $tcp3 set window_ 15
-    set tcp4 [$ns_ create-connection TCP/Reno $node_(s4) TCPSink $node_(s2) 3]
-    $tcp4 set window_ 15
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-#
-#######################################################################
-
-TestSuite instproc create_flowstats {} {
-
-	global flowfile flowchan
-	$self instvar ns_ node_ r1fm_
-
-	set r1fm_ [$ns_ makeflowmon Fid]
-	set flowchan [open $flowfile w]
-	$r1fm_ attach $flowchan
-	$ns_ attach-fmon [$ns_ link $node_(r1) $node_(r2)] $r1fm_ 1
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [pkts]
-#	(verified compatible for ns2 - kfall, 10/30/97)
-TestSuite instproc unforcedmakeawk { } {
-        set awkCode {
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && $14 > 0) {
-			    print 100.0 * $9/$13, 100.0 * $10 / $14
-			}
-			prev = $2;
-                } else if ($13 > 0 && $14 > 0) {
-                        print 100.0 * $9 / $13, 100.0 * $10 / $14
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [bytes]
-#	(modified for compatibility with ns2 flowmon - kfall, 10/30/97)
-TestSuite instproc forcedmakeawk { } {
-        set awkCode {
-            BEGIN { print "\"flow 0" }
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && ($17 - $15) > 0) {
-				print 100.0 * $9/$13, 100.0 * ($19 - $11) / ($17 - $15);
-			}
-			prev = $2;
-                } else if ($13 > 0 && ($17 - $15) > 0) {
-                        print 100.0 * $9 / $13, 100.0 * ($19 - $11) / ($17 - $15)
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#      x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#      y axis: # drops for this flow / # drops [pkts and bytes combined]
-TestSuite instproc allmakeawk { } {
-    set awkCode {
-        BEGIN {prev=-1; tot_bytes=0; tot_packets=0; forced_total=0; unforced_total=0}
-        {
-            if ($5 != prev) {
-                print " "; print "\"flow ",$5;
-                prev = $5
-            }
-            tot_bytes = $19-$11;
-            forced_total= $16-$14;
-            tot_packets = $10;
-            tot_arrivals = $9;
-            unforced_total = $14;
-            if (unforced_total + forced_total > 0) {
-                if ($14 > 0) {
-                    frac_packets = tot_packets/$14;
-                }
-                else { frac_packets = 0;}
-                if ($17-$15 > 0) {
-                    frac_bytes = tot_bytes/($17-$15);
-                }
-                else {frac_bytes = 0;} 
-                if ($13 > 0) {
-                    frac_arrivals = tot_arrivals/$13;
-                }
-                else {frac_arrivals = 0;}
-                if (frac_packets + frac_bytes > 0) {
-                    unforced_total_part = frac_packets * unforced_total / ( unforced_total + forced_total)
-                    forced_total_part = frac_bytes * forced_total / ( unforced_total + forced_total)
-                    print 100.0 * frac_arrivals, 100.0 * ( unforced_total_part +forced_total_part)
-                }
-            }
-        }
-    }
-    return $awkCode
-}
-
-TestSuite instproc create_flow_graph { graphtitle graphfile } {
-        global flowfile quiet
-	$self instvar awkprocedure_
-
-        if {$quiet == "false"} {
-		puts "awkprocedure: $awkprocedure_"
-	}
-
-        set tmpfile1 /tmp/fg1[pid]
-        set tmpfile2 /tmp/fg2[pid]
-
-        exec rm -f $graphfile
-        set outdesc [open $graphfile w]
-        #
-        # this next part is xgraph specific
-        #
-        puts $outdesc "TitleText: $graphtitle"
-        puts $outdesc "Device: Postscript"
-
-        exec rm -f $tmpfile1 $tmpfile2
-	if {$quiet == "false"} {
-        	puts "writing flow xgraph data to $graphfile..."
-	}
-
-        exec sort -n -k2 -o $flowfile $flowfile
-        exec awk [$self $awkprocedure_] $flowfile >@ $outdesc
-        close $outdesc
-}
-
-TestSuite instproc finish_flows testname {
-	global flowgraphfile flowfile flowchan quiet
-	$self instvar r1fm_
-	$r1fm_ dump
-	close $flowchan
-	$self create_flow_graph $testname $flowgraphfile
-	if {$quiet == "false"} {
-		puts "running xgraph..."
-	}
-	exec cp $flowgraphfile temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -lx 0,100 -ly 0,100 -x "% of data bytes" -y "% of discards" $flowgraphfile &
-	}
-	exit 0
-}
-
-
-TestSuite instproc new_tcp { startTime source dest window fid verbose size } {
-	$self instvar ns_
-	set tcp [$ns_ create-connection TCP/Reno $source TCPSink $dest $fid]
-	$tcp set window_ $window
-	if {$size > 0}  {$tcp set packetSize_ $size }
-	set ftp [$tcp attach-app FTP]
-	$ns_ at $startTime "$ftp start"
-	if {$verbose == "1"} {
-
-	  $self tcpDumpAll $tcp 20.0 $fid 
-	}
-}
-
-TestSuite instproc new_cbr { startTime source dest pktSize interval fid } {
-
-	$self instvar ns_
-    set s_agent [new Agent/UDP]	
-    set d_agent [new Agent/LossMonitor]
-    $s_agent set fid_ $fid 
-    $d_agent set fid_ $fid 
-    set cbr [new Application/Traffic/CBR]
-    $cbr attach-agent $s_agent
-    $ns_ attach-agent $source $s_agent
-    $ns_ attach-agent $dest $d_agent
-    $ns_ connect $s_agent $d_agent
-
-    if {$pktSize > 0} {
-	$cbr set packetSize_ $pktSize
-    }
-    $cbr set rate_ [expr 8 * $pktSize / $interval]
-    $ns_ at $startTime "$cbr start"
-}
-
-TestSuite instproc dumpflows interval {
-    $self instvar dumpflows_inst_ ns_ r1fm_
-    $self instvar awkprocedure_ dump_pthresh_
-    global flowchan
-
-    if ![info exists dumpflows_inst_] {
-        set dumpflows_inst_ 1
-        $ns_ at 0.0 "$self dumpflows $interval"
-        return  
-    }
-    if { $awkprocedure_ == "unforcedmakeawk" } {
-	set pcnt [$r1fm_ set epdrops_]
-    } elseif { $awkprocedure_ == "forcedmakeawk" } {
-	set pcnt [expr [$r1fm_ set pdrops_] - [$r1fm_ set epdrops_]]
-    } elseif { $awkprocedure_ == "allmakeawk" } {
-	set pcnt [$r1fm_ set pdrops_]
-    } else {
-	puts stderr "unknown handling of flow dumps!"
-	exit 1
-    }
-    if { $pcnt >= $dump_pthresh_ } {
-	    $r1fm_ dump
-	    flush $flowchan
-	    foreach f [$r1fm_ flows] {
-		$f reset
-	    }
-	    $r1fm_ reset
-	    set interval 2.0
-    } else {
-	    set interval 1.0
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self dumpflows $interval"
-}   
-
-TestSuite instproc droptest { stoptime } {
-	$self instvar ns_ node_ testName_ r1fm_ awkprocedure_
-
-	set forwq [[$ns_ link $node_(r1) $node_(r2)] queue]
-	set revq [[$ns_ link $node_(r2) $node_(r1)] queue]
-
-	$forwq set mean_pktsize_ 1000
-	$revq set mean_pktsize_ 1000
-	$forwq set linterm_ 10
-	$revq set linterm_ 10
-	$forwq set limit_ 100
-	$revq set limit_ 100
-
-	$self create_flowstats 
-	$self dumpflows 10.0
-
-	$forwq set bytes_ true
-	$forwq set queue_in_bytes_ true
-	$forwq set wait_ false
-
-        $self new_tcp 1.0 $node_(s1) $node_(s3) 100 1 1 1000
-	$self new_tcp 1.2 $node_(s2) $node_(s4) 100 2 1 50
-	$self new_cbr 1.4 $node_(s1) $node_(s4) 190 0.003 3
-
-	$ns_ at $stoptime "$self finish_flows $testName_"
-
-	$ns_ run
-}
-
-
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-pktExample.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-pktExample.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-pktExample.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-pktExample.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,184 +0,0 @@
-#
-# Copyright (c) 2003  International Computer Science Institute
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by ACIRI, the AT&T
-#      Center for Internet Research at ICSI (the International Computer
-#      Science Institute).
-# 4. Neither the name of ACIRI nor of ICSI may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY ICSI AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL ICSI OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-source misc_simple.tcl
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-
-source support.tcl
-
-# Uncomment the line below to use a random seed for the
-#  random number generator.
-# ns-random 0
-
-TestSuite instproc finish {file stoptime} {
-        global quiet PERL
-	set wrap 90
-	exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	  $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-        exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-          $PERL ../../bin/raw2xg -a -c -p -s 0.01 -m $wrap -t $file >> \
-	  temp.rands
-        exec echo $stoptime 0 >> temp.rands 
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-        }
-        exit 0
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 50
-    $ns queue-limit $node_(r2) $node_(r1) 50 
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-Class Test/oneTCP -superclass TestSuite
-Test/oneTCP instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_ 
-    set net_	net2
-    set test_ oneTCP	
-    set guide_  \
-    "Example validation test with TCP, packet traces."
-    set stopTime1_ 10
-    Agent/TCP set window_ 64
-    $self next pktTraceFile
-}
-Test/oneTCP instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ stopTime1_ 
-    puts "Guide: $guide_"
-    $self setTopo
-    set stopTime $stopTime1_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    set ftp [new Application/FTP]
-    $ftp attach-agent $tcp1
-    $ns_ at 0 "$ftp produce 100"
-    $ns_ at 3 "$ftp producemore 1000"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/twoTCPs -superclass TestSuite
-Test/twoTCPs instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_ 
-    set net_	net2
-    set test_ twoTCPs	
-    set guide_  \
-    "Example validation test with two TCPs, packet traces."
-    set stopTime1_ 10
-    Agent/TCP set window_ 64
-    $self next pktTraceFile
-}
-Test/twoTCPs instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ stopTime1_ 
-    puts "Guide: $guide_"
-    $self setTopo
-    set stopTime $stopTime1_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    set ftp [new Application/FTP]
-    $ftp attach-agent $tcp1
-    $ns_ at 0 "$ftp produce 100"
-    $ns_ at 3 "$ftp producemore 1000"
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window 8
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 1.0 "$ftp2 produce 100"
-
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/oneTFRC -superclass TestSuite
-Test/oneTFRC instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_ 
-    set net_	net2
-    set test_ oneTFRC	
-    set guide_  \
-    "Example validation test with TFRC, packet traces."
-    set stopTime1_ 10
-    Agent/TFRC set SndrType_ 1
-    $self next pktTraceFile
-}
-Test/oneTFRC instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ stopTime1_ 
-    puts "Guide: $guide_"
-    $self setTopo
-    set stopTime $stopTime1_
-
-    set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    set ftp [new Application/FTP]
-    $ftp attach-agent $tf1
-    $ns_ at 0 "$ftp produce 100"
-    $ns_ at 3 "$ftp producemore 1000"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-plm.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-plm.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-plm.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-plm.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,240 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 2000 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Network Research
-#	Group at Lawrence Berkeley National Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-plm.tcl,v 1.6 2005/06/11 05:51:37 sfloyd Exp $
-#
-# Contributed by Arnaud Legout at EURECOM
-
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP RTP TCP LRWPAN ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-set packetSize 500
-set runtime 80
-set plm_debug_flag 3; #from 0 to 3: 0 no output, 3 full output
-set rates "20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3 20e3"
-set level [llength $rates]
-set rates_cum [calc_cum $rates]
-#puts stderr $rates_cum
-set run_nam 0
-
-set check_estimate 1
-set Queue_sched_ FQ
-set PP_burst_length 2
-set PP_estimation_length 3
-
-
-Class Test/PLM -superclass PLMTopology
-
-#This scenario is for validation purpose. It aims to trigger most of
-#the PLM functionalities.
-Test/PLM instproc init args {
-
-	$self instvar ns node
-	set ns [new Simulator -multicast on]
-	$ns color 1 blue
-	$ns color 2 green
-	$ns color 3 red
-	$ns color 4 white
-	# prunes, grafts
-	$ns color 30 orange
-	$ns color 31 yellow
-
-	global f check_estimate nb_plm runtime
-    
-	set f [open temp.rands w]
-	$ns trace-all $f
-	$ns at [expr $runtime +1] "$self finish"
-
-	eval $self next $ns
-	set nb_src 20
-	Queue/DropTail set limit_ 5
- 
-	$self build_link 0 1 200ms 200e3
-	$ns duplex-link-op $node(0) $node(1) queuePos 0.5
-  
-	#create sources links
-	for {set i 2} {$i<=[expr $nb_src + 1]} {incr i} {
-		set delay [expr 5 * $i]ms
-		set bp ${i}e5
-		#	puts stderr "$delay $bp"
-		$self build_link $i 0 $delay  $bp
-	}
-
-	#create receivers links
-	for {set i [expr $nb_src + 2]} {$i<=[expr 2 * $nb_src + 1]} {incr i} {
-		set delay [expr 4 * ($i -20)]ms
-		set bp [expr $i - 20]e5
-		#	puts stderr "$delay $bp"
-		$self build_link 1 $i $delay  $bp
-	}
-
-	#place three PLM sources
-	for {set i 2} {$i <= 4} {incr i} {
-		set addr($i) [$self place_source $i 3]
-	}
-	#    puts stderr "sender placed"
-
-	#place six PLM receiver: 2 receivers per source
-	set j 2
-	for {set i 2} {$i <=  7} {incr i 2} {
-		set time [expr $i/2. + 3]
-		$self place_receiver [expr $i + $nb_src] $addr($j) $time $check_estimate $i
-		$self place_receiver [expr $i + $nb_src +1] $addr($j) $time $check_estimate [expr $i + 1]
-		incr j
-	}
-	
-
-	for {set i 1} {$i<=10} {incr i} {
-		set null($i) [new Agent/Null]
-		set udp($i) [new Agent/UDP]
-		$udp($i) set fid_ [expr $i + 3]
-		$ns attach-agent $node([expr $i + 4]) $udp($i)
-		$ns attach-agent $node([expr $i + 27]) $null($i)
-		$ns connect $udp($i) $null($i)
-		set cbr($i) [new Application/Traffic/CBR]
-		$cbr($i) attach-agent $udp($i)
-		$cbr($i) set random_ 0
-		$cbr($i) set rate_ 1Mb
-		$cbr($i) set packet_size_ 1000
-	}
-	#    puts stderr "receivers placed"  
-	
-	for {set i 1} {$i<=3} {incr i} {
-		$ns at 10 "$cbr($i) start"
-		$ns at 15 "$cbr($i) stop"
-	}
-	
-	for {set i 1} {$i<=10} {incr i} {
-		$ns at 20 "$cbr($i) start"
-		$ns at 25 "$cbr($i) stop"
-	}
-	#mcast set up
-	DM set PruneTimeout 1000
-	set mproto DM
-	set mrthandle [$ns mrtproto $mproto {} ]
-}
-
-Test/PLM instproc finish {} {
-    global run_nam PLMrcvr
-
-    #    puts finish
-    if {$run_nam} {
-	puts "running nam..."
-	exec nam -g 600x700 -f dynamic-nam.conf out.nam &
-    }
-    exit 0
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-Test/PLM instproc run {} {
-	$self instvar ns
-	$ns run
-}
-
-Test/PLM proc runTest {} {
-	global argc argv quiet
-
-	set quiet false
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			if {$topo == "QUIET"} {
-				set quiet true
-				set topo ""
-			} else {
-				isProc? Topology $topo
-			}
-		}
-		3 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			isProc? Topology $topo
-
-			set extra [lindex $argv 2]
-			if {$extra == "QUIET"} {
-				set quiet true
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-Test/PLM runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-pushback.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-pushback.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-pushback.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-pushback.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1200 +0,0 @@
-#
-# Copyright (c) 2000  International Computer Science Institute
-# All rights reserved.
-# 
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by ACIRI, the AT&T
-#      Center for Internet Research at ICSI (the International Computer
-#      Science Institute).
-# 4. Neither the name of ACIRI nor of ICSI may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED BY ICSI AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL ICSI OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-catch "cd $dir"
-Queue/RED set gentle_ true
-Agent/Pushback set verbose_ false
-#Agent/Pushback set verbose_ true
-
-Queue/RED/Pushback set rate_limiting_ 0
-Agent/Pushback set enable_pushback_ 0
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_ tmpschan_ maxAggregates_
-	# was: -s 2 -d 3 
-        #exec $PERL ../../bin/getrc -s 12 -d 13 all.tr | \
-        #  $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp2.rands
-	#if {$quiet == "false"} {
-        #	exec xgraph -bb -tk -nl -m -x time -y packets temp2.rands &
-	#}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		#$self plotQueue $testName_
-	}
-	if { [info exists tmpschan_]} {
-		$self finishflows $testName_ $maxAggregates_
-		close $tmpschan_
-	}
-	$ns_ halt
-}
-
-# display graph of results
-#
-# temp.s:
-# time: 4.000 LinkUtilThisTime  1.002 totalLinkUtil: 1.000 totalOQPkts: 1250
-# fid: 1 Util: 0.124 OQdroprate: 0.320 OQpkts: 155 OQdrops: 73
-#
-TestSuite instproc finishflows {testname maxAggregate} {
-        global quiet
-        $self instvar tmpschan_ tmpqchan_ topo_ node_ ns_
-	$self instvar packetsize_
-        $topo_ instvar cbqlink_ bandwidth1_
-
-        set graphfile temp.rands
-        set maxbytes [expr $bandwidth1_ / 8.0]
-	set maxpkts [expr 1.0 * $maxbytes / $packetsize_]
-
-        set awkCode  {
-		{
-		if ($1 == 0) {time=1; oldpkts=0;}
-		if ($1 == "time:" && $3 == "LinkUtilThisTime") {
-			time = $2
-		}
-		if ($1 == "fid:" && $2==flow) {
-		  newpkts = $8;
-		  pkts = newpkts - oldpkts;
-		  print time, pkts/maxpkts;
-		  oldpkts = newpkts
-		}}
-        }
-        set awkCodeAll {
-		{
-		if ($1==0) {oldpkts=0}
-		if ($1 == "time:" && $7 == "totalOQPkts:") {
-			time = $2;
-		  	newpkts = $8;
-		  	pkts = newpkts - oldpkts;
-		  	print time, pkts/maxpkts;
-		  	oldpkts = newpkts
-		}}
-        }
-        set awkCodeDrop {
-		{
-		if ($1==0) {oldpkts = 0; olddrops = 0; time=0;}
-		if ($5~"totalOQDrops:"){
-		  time = $2;
-		  pkts = $4;
-		  drops = $6;
-		  newpkts = pkts - oldpkts;
-		  newdrops = drops - olddrops;
-		  print time, newdrops/newpkts;
-		  oldpkts = pkts; olddrops = drops;
-		}}
-	}
-
-
-        if { [info exists tmpschan_] } {
-                close $tmpschan_
-        }
-
-        set f [open $graphfile w]
-        puts $f "TitleText: $testname"
-        puts $f "Device: Postscript"
-
-        exec rm -f temp.p
-        exec touch temp.p
-	for {set i 1} {$i < $maxAggregate + 1 } {incr i} {
-                exec echo "\n\"flow $i" >> temp.p
-                exec awk $awkCode flow=$i maxpkts=$maxpkts temp.s > flows$i
-                exec cat flows$i >> temp.p
-                exec echo " " >> temp.p
-        }
-
-        exec awk $awkCodeAll maxpkts=$maxpkts temp.s > all
-        exec echo "\n\"all " >> temp.p
-        exec cat all >> temp.p  
-
-        exec cat temp.p >@ $f
-        close $f
-        exec awk $awkCodeDrop temp.s > temp.droprate
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -ly 0,1 -x time -y bandwidth $graphfile &
-        }
-#       exec csh gnuplotE.com $testname
-#       exec csh gnuplotF.com $testname
-
-        exit 0
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_ bandwidth_ bandwidth1_
-    set bandwidth_ 0.5Mb
-    set bandwidth1_ 500000
-    #the destinations; declared first 
-    for {set i 0} {$i < 2} {incr i} {
-        set node_(d$i) [$ns node]
-    }
-
-    #the routers
-    for {set i 0} {$i < 4} {incr i} {
-        set node_(r$i) [$ns node]
-        #$node_(r$i) add-pushback-agent
-    }
-    $node_(r0) add-pushback-agent
-
-    #the sources
-    for {set i 0} {$i < 4} {incr i} {
-        set node_(s$i) [$ns node]
-    }
-
-    $self next 
-
-    $ns duplex-link $node_(s0) $node_(r0) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s1) $node_(r0) 10Mb 3ms DropTail
-    $ns pushback-simplex-link $node_(r0) $node_(r1) $bandwidth_ 10ms 
-    $ns simplex-link $node_(r1) $node_(r0) $bandwidth_ 10ms DropTail
-    $ns duplex-link $node_(d0) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(d1) $node_(r1) 10Mb 2ms DropTail
-
-    $ns queue-limit $node_(r0) $node_(r1) 100
-    $ns queue-limit $node_(r1) $node_(r0) 100
-}   
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self next 
-    $self instvar node_ bandwidth_ bandwidth1_
-    set bandwidth_ 1.0Mb
-    set bandwidth1_ 1000000
-    #the destinations; declared first 
-    for {set i 0} {$i < 2} {incr i} {
-        set node_(d$i) [$ns node]
-    }
-
-    #the routers
-    for {set i 0} {$i < 4} {incr i} {
-        set node_(r$i) [$ns node]
-	$node_(r$i) add-pushback-agent
-    }
-
-    #the sources
-    for {set i 0} {$i < 4} {incr i} {
-        set node_(s$i) [$ns node]
-	set pushback($i) [$node_(s$i) add-pushback-agent]
-    }
-
-
-    $ns pushback-duplex-link $node_(s0) $node_(r2) 10Mb 2ms 
-    #$ns duplex-link $node_(s0) $node_(r2) 10Mb 2ms DropTail
-    $ns pushback-duplex-link $node_(s1) $node_(r2) 10Mb 3ms
-    #$ns duplex-link $node_(s1) $node_(r3) 10Mb 3ms DropTail
-    $ns pushback-duplex-link $node_(s2) $node_(r3) 10Mb 3ms
-    $ns pushback-duplex-link $node_(s3) $node_(r3) 10Mb 3ms
-    $ns pushback-duplex-link $node_(r0) $node_(r1) $bandwidth_ 10ms 
-    $ns pushback-duplex-link $node_(r2) $node_(r0) 10Mb 10ms 
-    $ns pushback-duplex-link $node_(r3) $node_(r0) 10Mb 10ms 
-    #
-    $ns pushback-simplex-link $node_(r1) $node_(d0) 10Mb 2ms
-    $ns simplex-link $node_(d0) $node_(r1) 10Mb 2ms DropTail
-    #$ns duplex-link $node_(d0) $node_(r1) 10Mb 2ms DropTail
-    #
-    $ns pushback-simplex-link $node_(r1) $node_(d1) 10Mb 2ms 
-    $ns simplex-link $node_(d1) $node_(r1) 10Mb 2ms DropTail
-    #$ns duplex-link $node_(d1) $node_(r1) 10Mb 2ms DropTail
-
-    $ns queue-limit $node_(r0) $node_(r1) 100
-    $ns queue-limit $node_(r1) $node_(r0) 100
-}   
-
-TestSuite instproc new-tcp {source dest size window fid startTime} {
-    $self instvar ns_
-
-    set tcp [$ns_ create-connection TCP/Sack1 $source TCPSink/Sack1 $dest $fid]
-    $tcp set window_ $window
-    $tcp set tcpTick_ 0.01
-
-    if {$size > 0}  {
-        $tcp set packetSize_ $size
-    }
-    set ftp [$tcp attach-source FTP]
-    #if {$maxPkts > 0} {$ftp set maxpkts_ $maxPkts}
-    $ns_ at $startTime "$ftp start"
-}
-
-TestSuite instproc new-cbr {src dst pktSize rate fid startTime {stopTime -1}} {
-    $self instvar ns_
-    set udp [$ns_ create-connection UDP $src Null $dst $fid]
-    set cbr [$udp attach-app Traffic/CBR]
-    $cbr set packetSize_ $pktSize
-    $cbr set rate_ $rate
-    $cbr set random_ 1
-
-    $ns_ at $startTime "$cbr start"
-    if {$stopTime != -1} {
-        $ns_ at $stopTime "$cbr set rate_ 1000"
-    }
-    return $cbr
-}
-
-#    
-# Arrange for time to be printed every
-# $interval seconds of simulation time
-#    
-TestSuite instproc statsDump { interval fmon packetsize oldpkts } {
-        global quiet 
-        $self instvar dump_inst_ ns_ tmpschan_ f
-	$self instvar maxAggregates_
-	set dumpfile temp.s
-        if ![info exists dump_inst_] {
-		$self instvar tmpschan_ f
-                set dump_inst_ 1
-		set f [open $dumpfile w]
-		set tmpschan_ $f
-                $ns_ at 0.0 "$self statsDump $interval $fmon $packetsize $oldpkts"
-                return
-        }
-        set time [$ns_ now]
-        puts $f "$time"
-        set newtime [expr [$ns_ now] + $interval]
-	## $quiet == "false"
-        if { $time > 0} {
-            set totalPkts [$fmon set pdepartures_]
-            set totalArrivals [$fmon set parrivals_]
-	    set totalDrops [$fmon set pdrops_]
-            set packets [expr $totalPkts - $oldpkts]
-            set oldpkts $totalPkts
-    	    set linkBps [ expr 500000/8 ]
-    	    set recentUtil [expr (1.0*$packets*$packetsize)/($interval*$linkBps)]
-    	    set totalLinkUtil [expr (1.0*$totalPkts*$packetsize)/($time*$linkBps)]
-            set now [$ns_ now]
-	    puts $f "time: [format %.3f $now] totalOQArrivals: $totalArrivals totalOQDrops: $totalDrops"
-    	    puts $f "time: [format %.3f $now] LinkUtilThisTime  [format %.3f $recentUtil] totalLinkUtil: [format %.3f $totalLinkUtil] totalOQPkts: $totalPkts" 
-    	    set fcl [$fmon classifier];
-	    ## this 
-	    for {set i 1} {$i < $maxAggregates_ + 1} {incr i} {
-    	        set flow [$fcl lookup auto 0 0 $i]
-		if {$flow != "" } {
-		  set flowpkts($flow) [$flow set pdepartures_]
-    	          set flowutil [expr (1.0*$flowpkts($flow)*$packetsize)/($time*$linkBps)]
-		  set flowdrops($flow) [$flow set pdrops_]
-		  if {$flowpkts($flow) + $flowdrops($flow) > 0} {
-    	            set flowdroprate [expr (1.0*$flowdrops($flow)/($flowpkts($flow) + $flowdrops($flow)))] 
-                  } else { set flowdroprate 0 }
-		  puts $f "fid: $i Util: [format %.3f $flowutil] OQdroprate: [format %.3f $flowdroprate] OQpkts: [format %d $flowpkts($flow)] OQdrops: [format %d $flowdrops($flow)]"
-		}
-	    }
-        }
-        $ns_ at $newtime "$self statsDump $interval $fmon $packetsize $oldpkts"
-}
-
-TestSuite instproc setup {} {
-    $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_ packetsize_
-    $self instvar maxAggregates_
-
-    set stoptime 100.0
-    #set stoptime 5.0
-    #set dumptime 5.0
-    set dumptime 1.0
-    set stoptime1 [expr $stoptime + 1.0]
-    set packetsize_ 200
-    Application/Traffic/CBR set random_ 0
-    Application/Traffic/CBR set packetSize_ $packetsize_
-
-    set slink [$ns_ link $node_(r0) $node_(r1)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    set udp1 [$ns_ create-connection UDP $node_(s0) Null $node_(d0) 1]
-    set cbr1 [$udp1 attach-app Traffic/CBR]
-    $cbr1 set rate_ 0.12Mb
-    $cbr1 set random_ 0.005
-
-    set udp2 [$ns_ create-connection UDP $node_(s1) Null $node_(d1) 2]
-    set cbr2_ [$udp2 attach-app Traffic/CBR]
-    $cbr2_ set rate_ 0.08Mb
-    $cbr2_ set random_ 0.005
-
-    # bad traffic
-    set udp [$ns_ create-connection UDP $node_(s0) Null $node_(d1) 3]
-    set cbr_ [$udp attach-app Traffic/CBR]
-    $cbr_ set rate_ 0.5Mb
-    $cbr_ set random_ 0.001
-    $ns_ at 0.0 "$cbr_ start"
-
-    set udp4 [$ns_ create-connection UDP $node_(s1) Null $node_(d0) 4]
-    set cbr4 [$udp4 attach-app Traffic/CBR]
-    $cbr4 set rate_ 0.07Mb
-    $cbr4 set random_ 0.005
-
-    set udp5 [$ns_ create-connection UDP $node_(s0) Null $node_(d0) 5]
-    set cbr5 [$udp5 attach-app Traffic/CBR]
-    $cbr5 set rate_ 0.06Mb
-    $cbr5 set random_ 0.005
-
-    set udp6 [$ns_ create-connection UDP $node_(s0) Null $node_(d0) 6]
-    set cbr6 [$udp6 attach-app Traffic/CBR]
-    $cbr6 set rate_ 0.05Mb
-    $cbr6 set random_ 0.005
-
-
-    set maxAggregates_ 6
-
-    $ns_ at 0.2 "$cbr1 start"
-    $ns_ at 0.1 "$cbr2_ start"
-    $ns_ at 0.3 "$cbr4 start"
-    $ns_ at 0.4 "$cbr5 start"
-
-    $self statsDump $dumptime $fmon $packetsize_ 0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime1 "$self cleanupAll $testName_"
-}
-
-#
-# one complete test with CBR flows only, no pushback and no ACC.
-#
-Class Test/cbrs -superclass TestSuite
-Test/cbrs instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ cbrs
-    $self next noTraceFiles
-}
-Test/cbrs instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $self setup
-    $ns_ run
-}
-
-#
-# one complete test with CBR flows only, with ACC.
-#
-Class Test/cbrs-acc -superclass TestSuite
-Test/cbrs-acc instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ cbrs-acc
-    Queue/RED/Pushback set rate_limiting_ 1
-    Test/cbrs-acc instproc run {} [Test/cbrs info instbody run]
-    $self next noTraceFiles
-}
-
-#
-# one complete test with CBR flows only, with no ACC
-# CBR flows flows starting and stopping 
-#
-Class Test/cbrs1 -superclass TestSuite
-Test/cbrs1 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ cbrs1
-    $self next noTraceFiles
-}
-Test/cbrs1 instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_
-    $self setTopo
-    $self setup
-    $ns_ at 10.0 "$cbr_ set rate_ 0.1Mb"
-    $ns_ at 15.0 "$cbr2_ set rate_ 0.5Mb"
-    $ns_ run
-}
-
-#
-# one complete test with CBR flows only, with ACC 
-# CBR flows flows starting and stopping 
-#
-Class Test/cbrs-acc1 -superclass TestSuite
-Test/cbrs-acc1 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ cbrs-acc1
-    Queue/RED/Pushback set rate_limiting_ 1
-    Test/cbrs-acc1 instproc run {} [Test/cbrs1 info instbody run]
-    $self next noTraceFiles
-}
-
-TestSuite instproc setup1 {} {
-    $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_ packetsize_
-    $self instvar maxAggregates_
-
-    set stoptime 50.0
-    #set dumptime 5.0
-    set dumptime 1.0
-    #set stoptime 5.0
-    set stoptime1 [expr $stoptime + 1.0]
-    set packetsize_ 200
-    Application/Traffic/CBR set random_ 0.001
-    Application/Traffic/CBR set packetSize_ $packetsize_
-
-    set slink [$ns_ link $node_(r0) $node_(r1)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    $self new-cbr $node_(s0) $node_(d0) $packetsize_ 0.12Mb 1 0.1 
-    $self new-cbr $node_(s1) $node_(d1) $packetsize_ 0.08Mb 2 0.2
-    $self new-cbr $node_(s1) $node_(d1) $packetsize_ 0.07Mb 3 0.3
-    $self new-cbr $node_(s1) $node_(d1) $packetsize_ 0.06Mb 4 0.4
-    $self new-cbr $node_(s1) $node_(d1) $packetsize_ 0.04Mb 5 0.5
-
-    # bad traffic
-    set cbr_ [$self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.09Mb 5 0.0]
-
-    set maxAggregates_ 5
-
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.1Mb 5 13.0 39.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.1Mb 5 14.0 38.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 15.0 37.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 16.0 36.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 17.0 35.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 18.0 34.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 19.0 33.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 20.0 32.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 21.0 31.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 22.0 30.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 23.0 29.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 24.0 28.0
-    $self new-cbr $node_(s0) $node_(d1) $packetsize_ 0.05Mb 5 25.0 27.0
-
-    $self statsDump $dumptime $fmon $packetsize_ 0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime1 "$self cleanupAll $testName_"
-}
-
-#
-# one complete test with CBR flows only, no pushback and no ACC.
-# Slowly-growing bad CBR aggregate.
-#
-Class Test/slowgrow -superclass TestSuite
-Test/slowgrow instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ slowgrow
-    $self next noTraceFiles
-}
-Test/slowgrow instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $self setup1
-    $ns_ run
-}
-
-#
-# one complete test with CBR flows only, with ACC.
-# Slowly-growing bad CBR aggregate.
-#
-Class Test/slowgrow-acc -superclass TestSuite
-Test/slowgrow-acc instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ slowgrow-acc
-    Queue/RED/Pushback set rate_limiting_ 1
-    Test/slowgrow-acc instproc run {} [Test/slowgrow info instbody run]
-    $self next noTraceFiles
-}
-
-######################################################33
-
-TestSuite instproc setup6 {} {
-    $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_ packetsize_
-    $self instvar maxAggregates_
-
-    set stoptime 50.0
-    #set dumptime 5.0
-    set dumptime 1.0
-    #set stoptime 5.0
-    set stoptime1 [expr $stoptime + 1.0]
-    set packetsize_ 500
-    Application/Traffic/CBR set random_ 0
-    Application/Traffic/CBR set packetSize_ $packetsize_
-
-    set slink [$ns_ link $node_(r0) $node_(r1)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-    Application/Traffic/CBR set random_ 0.001 
-
-    $self new-cbr $node_(s0) $node_(d0) 500 0.12Mb 1 0.1 
-    $self new-tcp $node_(s0) $node_(d0) 500 10 2 1.2
-    $self new-tcp $node_(s1) $node_(d1) 500 10 3 2.3
-    $self new-tcp $node_(s1) $node_(d1) 500 10 3 3.4
-    $self new-tcp $node_(s0) $node_(d1) 500 10 4 5.6
-    $self new-tcp $node_(s0) $node_(d1) 500 10 4 6.7
-    $self new-tcp $node_(s1) $node_(d0) 500 20 4 7.7
-
-    # bad traffic
-    set cbr_ [$self new-cbr $node_(s0) $node_(d1) 500 0.1Mb 5 0.0]
-    $cbr_ set random_ 0.001
-
-    set maxAggregates_ 6
-
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 13.0 39.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 14.0 38.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 15.0 37.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 16.0 36.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 17.0 35.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 18.0 34.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 19.0 33.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 20.0 32.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 21.0 31.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 22.0 30.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 23.0 29.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 24.0 28.0
-    $self new-cbr $node_(s0) $node_(d1) 500 0.05Mb 5 25.0 27.0
-
-    $self statsDump $dumptime $fmon $packetsize_ 0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime1 "$self cleanupAll $testName_"
-}
-
-#
-# Slowly-growing bad CBR aggregate, competing TCP and CBR traffic, no ACC.
-#
-Class Test/demo -superclass TestSuite
-Test/demo instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ demo
-    $self next noTraceFiles
-}
-Test/demo instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $self setup6
-    $ns_ run
-}
-
-#
-# Slowly-growing bad CBR aggregate, competing TCP and CBR traffic, local ACC.
-#
-Class Test/demo-acc -superclass TestSuite
-Test/demo-acc instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ demo-acc
-    Queue/RED/Pushback set rate_limiting_ 1
-    Test/demo-acc instproc run {} [Test/demo info instbody run]
-    $self next noTraceFiles
-}
-
-######################################################33
-
-TestSuite instproc manytcps {starttime} {
-    $self instvar ns_ node_
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s0) TCPSink/Sack1 $node_(d0) 1 ]
-    $tcp1 set window_ 10
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at $starttime.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 2 ]
-    $tcp2 set window_ 12
-    set ftp2 [$tcp2 attach-app FTP]
-    $ns_ at $starttime.1 "$ftp2 start"
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s0) TCPSink/Sack1 $node_(d1) 3 ]
-    $tcp3 set window_ 15
-    set ftp3 [$tcp3 attach-app FTP]
-    $ns_ at $starttime.2 "$ftp3 start"
-
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s0) TCPSink/Sack1 $node_(d0) 4 ]
-    $tcp4 set window_ 8
-    set ftp4 [$tcp4 attach-app FTP]
-    $ns_ at $starttime.3 "$ftp4 start"
-
-    set tcp5 [$ns_ create-connection TCP/Sack1 $node_(s0) TCPSink/Sack1 $node_(d1) 5 ]
-    $tcp5 set window_ 4
-    set ftp5 [$tcp5 attach-app FTP]
-    $ns_ at $starttime.4 "$ftp5 start"
-}
-
-TestSuite instproc badtcps {} {
-    $self instvar ns_ node_
-    Agent/TCP set window_ 100
-    # bad traffic
-
-    set tcp [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp set window_ 1000
-    set ftp [$tcp attach-app FTP]
-    $ns_ at 11.0 "$ftp start"
-    $ns_ at 50.0 "$ftp stop"
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp1 set window_ 1000
-    set ftp1 [$tcp attach-app FTP]
-    $ns_ at 12.0 "$ftp1 start"
-    $ns_ at 49.0 "$ftp1 stop"
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp2 set window_ 1000
-    set ftp2 [$tcp attach-app FTP]
-    $ns_ at 13.0 "$ftp2 start"
-    $ns_ at 48.0 "$ftp2 stop"
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp3 set window_ 1000
-    set ftp3 [$tcp attach-app FTP]
-    $ns_ at 14.0 "$ftp3 start"
-    $ns_ at 47.0 "$ftp3 stop"
-
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp4 set window_ 1000
-    set ftp4 [$tcp attach-app FTP]
-    $ns_ at 15.0 "$ftp4 start"
-    $ns_ at 46.0 "$ftp4 stop"
-
-    set tcp [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    set ftp [$tcp attach-app FTP]
-    $ns_ at 16.0 "$ftp start"
-    $ns_ at 45.0 "$ftp stop"
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    set ftp1 [$tcp attach-app FTP]
-    $ns_ at 17.0 "$ftp1 start"
-    $ns_ at 44.0 "$ftp1 stop"
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    set ftp2 [$tcp attach-app FTP]
-    $ns_ at 18.0 "$ftp2 start"
-    $ns_ at 43.0 "$ftp2 stop"
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    set ftp3 [$tcp attach-app FTP]
-    $ns_ at 19.0 "$ftp3 start"
-    $ns_ at 42.0 "$ftp3 stop"
-
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    set ftp4 [$tcp attach-app FTP]
-    $ns_ at 20.0 "$ftp4 start"
-    $ns_ at 41.0 "$ftp4 stop"
-
-    set tcp [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp set window_ 1000
-    set ftp [$tcp attach-app FTP]
-    $ns_ at 21.0 "$ftp start"
-    $ns_ at 40.0 "$ftp stop"
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp1 set window_ 1000
-    set ftp1 [$tcp attach-app FTP]
-    $ns_ at 22.0 "$ftp1 start"
-    $ns_ at 39.0 "$ftp1 stop"
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp2 set window_ 1000
-    set ftp2 [$tcp attach-app FTP]
-    $ns_ at 23.0 "$ftp2 start"
-    $ns_ at 38.0 "$ftp2 stop"
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp3 set window_ 1000
-    set ftp3 [$tcp attach-app FTP]
-    $ns_ at 24.0 "$ftp3 start"
-    $ns_ at 37.0 "$ftp3 stop"
-
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(d0) 5 ]
-    $tcp4 set window_ 1000
-    set ftp4 [$tcp attach-app FTP]
-    $ns_ at 25.0 "$ftp4 start"
-    $ns_ at 36.0 "$ftp4 stop"
-
-}
-
-TestSuite instproc badcbr {} {
-    $self instvar ns_ node_
-
-    set udp [$ns_ create-connection UDP $node_(s0) Null $node_(d1) 5]
-    set cbr_ [$udp attach-app Traffic/CBR]
-    $cbr_ set rate_ 0.1Mb
-    $cbr_ set random_ 0.001
-
-    $ns_ at 0.0 "$cbr_ start"
-    $ns_ at 11.0 "$cbr_ set rate_ 0.15Mb"
-    $ns_ at 12.0 "$cbr_ set rate_ 0.2Mb"
-    $ns_ at 13.0 "$cbr_ set rate_ 0.25Mb"
-    $ns_ at 14.0 "$cbr_ set rate_ 0.3Mb"
-    $ns_ at 15.0 "$cbr_ set rate_ 0.35Mb"
-    $ns_ at 16.0 "$cbr_ set rate_ 0.4Mb"
-    $ns_ at 17.0 "$cbr_ set rate_ 0.45Mb"
-    $ns_ at 18.0 "$cbr_ set rate_ 0.5Mb"
-    $ns_ at 19.0 "$cbr_ set rate_ 0.55Mb"
-    $ns_ at 20.0 "$cbr_ set rate_ 0.6Mb"
-    $ns_ at 21.0 "$cbr_ set rate_ 0.65Mb"
-    $ns_ at 22.0 "$cbr_ set rate_ 0.7Mb"
-    $ns_ at 23.0 "$cbr_ set rate_ 0.75Mb"
-    $ns_ at 24.0 "$cbr_ set rate_ 0.8Mb"
-    $ns_ at 25.0 "$cbr_ set rate_ 0.855Mb"
-    $ns_ at 37.0 "$cbr_ set rate_ 0.8Mb"
-    $ns_ at 37.0 "$cbr_ set rate_ 0.75Mb"
-    $ns_ at 38.0 "$cbr_ set rate_ 0.7Mb"
-    $ns_ at 39.0 "$cbr_ set rate_ 0.65Mb"
-    $ns_ at 40.0 "$cbr_ set rate_ 0.6Mb"
-    $ns_ at 41.0 "$cbr_ set rate_ 0.55Mb"
-    $ns_ at 42.0 "$cbr_ set rate_ 0.5Mb"
-    $ns_ at 43.0 "$cbr_ set rate_ 0.45Mb"
-    $ns_ at 44.0 "$cbr_ set rate_ 0.4Mb"
-    $ns_ at 45.0 "$cbr_ set rate_ 0.35Mb"
-    $ns_ at 46.0 "$cbr_ set rate_ 0.3Mb"
-    $ns_ at 47.0 "$cbr_ set rate_ 0.25Mb"
-    $ns_ at 48.0 "$cbr_ set rate_ 0.2Mb"
-    $ns_ at 49.0 "$cbr_ set rate_ 0.15Mb"
-    $ns_ at 50.0 "$cbr_ set rate_ 0.1Mb"
-}
-
-TestSuite instproc setup4 {} {
-    $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_ packetsize_
-    $self instvar maxAggregates_
-
-    set stoptime 60.0
-    #set dumptime 5.0
-    set dumptime 1.0
-    #set stoptime 5.0
-    set stoptime1 [expr $stoptime + 1.0]
-    set packetsize_ 200
-    Application/Traffic/CBR set random_ 0
-    Application/Traffic/CBR set packetSize_ $packetsize_
-    Agent/TCP set packetSize_ $packetsize_
-
-    set slink [$ns_ link $node_(r0) $node_(r1)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    $self manytcps 0
-    set maxAggregates_ 6
-    $self badcbr
-
-    $self statsDump $dumptime $fmon $packetsize_ 0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime1 "$self cleanupAll $testName_"
-}
-
-#
-# Slowly-growing CBR aggregate competing against small TCP aggregates.  
-# No ACC.
-#
-Class Test/tcp -superclass TestSuite
-Test/tcp instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ tcp
-    $self next noTraceFiles
-}
-Test/tcp instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $self setup4
-    $ns_ run
-}
-
-#
-# Slowly-growing CBR aggregate competing against small TCP aggregates.  
-# No pushback, but with local ACC.
-#
-Class Test/tcp-acc -superclass TestSuite
-Test/tcp-acc instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ tcp-acc
-    Queue/RED/Pushback set rate_limiting_ 1
-    Test/tcp-acc instproc run {} [Test/tcp info instbody run]
-    $self next noTraceFiles
-}
-
-TestSuite instproc setup4a {} {
-    $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_ packetsize_
-    $self instvar maxAggregates_
-
-    set stoptime 60.0
-    #set dumptime 5.0
-    set dumptime 1.0
-    #set stoptime 5.0
-    set stoptime1 [expr $stoptime + 1.0]
-    set packetsize_ 200
-    Application/Traffic/CBR set random_ 0
-    Application/Traffic/CBR set packetSize_ $packetsize_
-    Agent/TCP set packetSize_ $packetsize_
-
-    set slink [$ns_ link $node_(r0) $node_(r1)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    $self manytcps 0
-    $self manytcps 1
-    $self manytcps 2
-    $self manytcps 3
-    $self manytcps 4
-    $self manytcps 5
-
-    set maxAggregates_ 6
-    $self badcbr
-
-    $self statsDump $dumptime $fmon $packetsize_ 0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime1 "$self cleanupAll $testName_"
-}
-
-#
-# Slowly-growing CBR aggregate competing against large TCP aggregates.  
-# No ACC.
-#
-Class Test/tcp1 -superclass TestSuite
-Test/tcp1 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ tcp1
-    $self next noTraceFiles
-}
-Test/tcp1 instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $self setup4a
-    $ns_ run
-}
-
-#
-# Slowly-growing CBR aggregate competing against large TCP aggregates.
-# No pushback, but with local ACC.
-#
-Class Test/tcp1-acc -superclass TestSuite
-Test/tcp1-acc instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ tcp1-acc
-    Queue/RED/Pushback set rate_limiting_ 1
-    Test/tcp1-acc instproc run {} [Test/tcp1 info instbody run]
-    $self next noTraceFiles
-}
-
-TestSuite instproc setup4b {} {
-    $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_ packetsize_
-    $self instvar maxAggregates_
-
-    set stoptime 60.0
-    #set dumptime 5.0
-    set dumptime 1.0
-    #set stoptime 5.0
-    set stoptime1 [expr $stoptime + 1.0]
-    set packetsize_ 200
-    Application/Traffic/CBR set random_ 0
-    Application/Traffic/CBR set packetSize_ $packetsize_
-    Agent/TCP set packetSize_ $packetsize_
-
-    set slink [$ns_ link $node_(r0) $node_(r1)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    $self manytcps 0
-    $self manytcps 1
-    $self manytcps 2
-    $self manytcps 3
-    $self manytcps 4
-    $self manytcps 5
-
-    set maxAggregates_ 6
-    $self badtcps
-    $self badtcps
-    $self badtcps
-    $self badtcps
-    $self badtcps
-    $self badtcps
-    $self badtcps
-    $self badtcps
-    $self badtcps
-    $self badtcps
-    $self badtcps
-
-    $self statsDump $dumptime $fmon $packetsize_ 0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime1 "$self cleanupAll $testName_"
-}
-
-#
-# Slowly-growing TCP aggregate competing against large TCP aggregates.  
-# No ACC.
-#
-Class Test/tcp2 -superclass TestSuite
-Test/tcp2 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ tcp2
-    $self next noTraceFiles
-}
-Test/tcp2 instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $self setup4b
-    $ns_ run
-}
-
-#
-# Slowly-growing TCP aggregate competing against large TCP aggregates.  
-# No pushback, but with local ACC.
-#
-Class Test/tcp2-acc -superclass TestSuite
-Test/tcp2-acc instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ tcp2-acc
-    Queue/RED/Pushback set rate_limiting_ 1
-    Test/tcp2-acc instproc run {} [Test/tcp2 info instbody run]
-    $self next noTraceFiles
-}
-
-######################################################33
-
-## TestSuite instproc setup5 {} {
-##     $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_ packetsize_
-##     $self instvar maxAggregates_
-## 
-##     set stoptime 100.0
-##     #set stoptime 5.0
-##     #set dumptime 5.0
-##     set dumptime 1.0
-##     set stoptime1 [expr $stoptime + 1.0]
-##     set packetsize_ 200
-##     Application/Traffic/CBR set random_ 0
-##     Application/Traffic/CBR set packetSize_ $packetsize_
-## 
-##     set slink [$ns_ link $node_(r0) $node_(r1)]; # link to collect stats on
-##     set fmon [$ns_ makeflowmon Fid]
-##     $ns_ attach-fmon $slink $fmon
-## 
-##     set udp1 [$ns_ create-connection UDP $node_(s0) Null $node_(d0) 1]
-##     set cbr1 [$udp1 attach-app Traffic/CBR]
-##     $cbr1 set rate_ 0.12Mb
-##     $cbr1 set random_ 0.005
-## 
-##     set udp2 [$ns_ create-connection UDP $node_(s1) Null $node_(d1) 2]
-##     set cbr2 [$udp2 attach-app Traffic/CBR]
-##     $cbr2 set rate_ 0.08Mb
-##     $cbr2 set random_ 0.005
-## 
-##     # bad traffic
-##     set udp [$ns_ create-connection UDP $node_(s0) Null $node_(d1) 3]
-##     set cbr_ [$udp attach-app Traffic/CBR]
-##     $cbr_ set rate_ 0.5Mb
-##     $cbr_ set random_ 0.001
-##     $ns_ at 0.0 "$cbr_ start"
-## 
-##     set udp4 [$ns_ create-connection UDP $node_(s1) Null $node_(d0) 4]
-##     set cbr4 [$udp4 attach-app Traffic/CBR]
-##     $cbr4 set rate_ 0.07Mb
-##     $cbr4 set random_ 0.005
-## 
-##     set udp5 [$ns_ create-connection UDP $node_(s0) Null $node_(d0) 5]
-##     set cbr5 [$udp5 attach-app Traffic/CBR]
-##     $cbr5 set rate_ 0.06Mb
-##     $cbr5 set random_ 0.005
-## 
-##     set udp6 [$ns_ create-connection UDP $node_(s0) Null $node_(d0) 6]
-##     set cbr6 [$udp6 attach-app Traffic/CBR]
-##     $cbr6 set rate_ 0.05Mb
-##     $cbr6 set random_ 0.005
-## 
-## 
-##     set maxAggregates_ 6
-## 
-##     $ns_ at 0.2 "$cbr1 start"
-##     $ns_ at 0.1 "$cbr2 start"
-##     $ns_ at 0.3 "$cbr4 start"
-##     $ns_ at 0.4 "$cbr5 start"
-## 
-##     $self statsDump $dumptime $fmon $packetsize_ 0
-##     # trace only the bottleneck link
-##     #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-##     $ns_ at $stoptime1 "$self cleanupAll $testName_"
-## }
-## 
-## #
-## #
-## Class Test/onoff -superclass TestSuite
-## Test/onoff instproc init {} {
-##     $self instvar net_ test_
-##     set net_ net2 
-##     set test_ onoff
-##     $self next noTraceFiles
-## }
-## Test/onoff instproc run {} {
-##     $self instvar ns_ node_ testName_ net_ topo_
-##     $self setTopo
-##     $self setup5
-##     $ns_ run
-## }
-## 
-## #
-## #
-## Class Test/onoff-acc -superclass TestSuite
-## Test/onoff-acc instproc init {} {
-##     $self instvar net_ test_
-##     set net_ net2 
-##     set test_ onoff-acc
-##     Queue/RED/Pushback set rate_limiting_ 1
-##     Test/onoff-acc instproc run {} [Test/onoff info instbody run]
-##     $self next noTraceFiles
-## }
-## 
-
-######################################################33
-
-TestSuite instproc setup2 {} {
-    $self instvar ns_ node_ testName_ net_ topo_ cbr_ cbr2_ packetsize_
-    $self instvar maxAggregates_
-
-    set stoptime 100.0
-    set dumptime 1.0
-    set stoptime1 [expr $stoptime + 1.0]
-    set packetsize_ 200
-    Application/Traffic/CBR set random_ 0
-    Application/Traffic/CBR set packetSize_ $packetsize_
-
-    set slink [$ns_ link $node_(r0) $node_(r1)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    set udp1 [$ns_ create-connection UDP $node_(s2) Null $node_(d0) 1]
-    set cbr1 [$udp1 attach-app Traffic/CBR]
-    $cbr1 set rate_ 0.2Mb
-    $cbr1 set random_ 0.001
-
-    set udp2 [$ns_ create-connection UDP $node_(s3) Null $node_(d0) 2]
-    set cbr2_ [$udp2 attach-app Traffic/CBR]
-    $cbr2_ set rate_ 0.2Mb
-    $cbr2_ set random_ 0.001
-
-    # bad traffic
-    set udp [$ns_ create-connection UDP $node_(s0) Null $node_(d1) 3]
-    set cbr_ [$udp attach-app Traffic/CBR]
-    $cbr_ set rate_ 3.0Mb
-    $cbr_ set random_ 0.001
-    $ns_ at 0.0 "$cbr_ start"
-
-    # poor traffic
-    set udp6 [$ns_ create-connection UDP $node_(s1) Null $node_(d1) 3]
-    set cbr6_ [$udp attach-app Traffic/CBR]
-    $cbr6_ set rate_ 0.2Mb
-    $cbr6_ set random_ 0.001
-    $ns_ at 0.0 "$cbr6_ start"
-
-    set maxAggregates_ 3
-
-    $ns_ at 0.2 "$cbr1 start"
-    $ns_ at 0.1 "$cbr2_ start"
-
-    $self statsDump $dumptime $fmon $packetsize_ 0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime1 "$self cleanupAll $testName_"
-}
-
-
-#
-# CBR flows only, no pushback and no local ACC
-#
-Class Test/A_noACC -superclass TestSuite
-Test/A_noACC instproc init {} {
-    $self instvar net_ test_
-    set net_ net3 
-    set test_ A_noACC
-    $self next noTraceFiles
-}
-Test/A_noACC instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $self setup2
-    $ns_ run
-}
-
-#
-# CBR flows only, local ACC
-#
-Class Test/A_ACC -superclass TestSuite
-Test/A_ACC instproc init {} {
-    $self instvar net_ test_
-    set net_ net3 
-    set test_ A_ACC
-    Queue/RED/Pushback set rate_limiting_ 1
-    Agent/Pushback set enable_pushback_ 0
-    Test/A_ACC instproc run {} [Test/A_noACC info instbody run]
-    $self next noTraceFiles
-}
-
-#
-# CBR flows only, local and Pushback.
-#
-Class Test/A_Push -superclass TestSuite
-Test/A_Push instproc init {} {
-    $self instvar net_ test_
-    set net_ net3 
-    set test_ A_Push
-    Queue/RED/Pushback set rate_limiting_ 1
-    Agent/Pushback set enable_pushback_ 1
-    Test/A_Push instproc run {} [Test/A_noACC info instbody run]
-    $self next noTraceFiles
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-quickstart.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-quickstart.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-quickstart.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-quickstart.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1115 +0,0 @@
-#
-# Copyright (c) 2003  International Computer Science Institute
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by ACIRI, the AT&T
-#      Center for Internet Research at ICSI (the International Computer
-#      Science Institute).
-# 4. Neither the name of ACIRI nor of ICSI may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY ICSI AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL ICSI OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-source misc_simple.tcl
-source support.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP QS ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set bugfix_ss_ 0
-
-set wrap 90
-set wrap1 [expr $wrap * 512 + 40]
-
-Queue set util_weight_ 2  
-# 18 seconds
-Agent/QSAgent set alloc_rate_ 0.5    
-# up to 0.5 of link bandwidth.
-Agent/QSAgent set qs_enabled_ 1
-Agent/QSAgent set state_delay_ 0.35  
-# 0.35 seconds for past approvals
-Agent/QSAgent set rate_function_ 1
-
-Agent/TCPSink set qs_enabled_ true
-Agent/TCP set qs_enabled_ true
-
-# Uncomment the line below to use a random seed for the
-#  random number generator.
-# ns-random 0
-
-TestSuite instproc finish {file stoptime} {
-        global quiet PERL wrap wrap1
-
-        set space 512
-        if [string match {*full*} $file] {
-                exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-                   $PERL ../../bin/raw2xg -c -n $space -s 0.01 -m $wrap1 -t $file > temp.rands
-                #exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-                #   $PERL ../../bin/raw2xg -a -c -f -p -y -n $space -s 0.01 -m $wrap1 -t $file >> temp.rands
-        } else {
-                exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-                  $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-                #exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-                #  $PERL ../../bin/raw2xg -a -c -p -y -s 0.01 -m $wrap -t $file \
-                #  >> temp.rands
-        } 
-#	exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-#	  $PERL ../../bin/raw2xg -s 0.01 -m 90 -t $file > temp.rands
-        exec echo $stoptime 0 >> temp.rands 
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-        }
-	#exec csh gnuplotA.com temp.rands quickstart
-	#exec csh gnuplotA2.com temp.rands quickstart
-        exit 0
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-}
-
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_ errmodel
-    set emod [$self emod]
-    set errmodel [new ErrorModel/List]
-    $errmodel droplist $pkts
-    $emod insert $errmodel
-    $emod bind $errmodel 1
-}
-
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 1000Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 1000Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 100Mb 500ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100 
-    $ns duplex-link $node_(s3) $node_(r2) 1000Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 1000Mb 5ms DropTail
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(s1) $node_(r1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-}
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 1000Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 1000Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 100Mb 500ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100 
-    $ns duplex-link $node_(s3) $node_(r2) 1000Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 1000Mb 5ms DropTail
-}
-
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 1000Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 1000Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 10Mb 200ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 50
-    $ns queue-limit $node_(r2) $node_(r1) 50 
-    $ns duplex-link $node_(s3) $node_(r2) 1000Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 1000Mb 5ms DropTail
-}
-
-Class Test/no_quickstart -superclass TestSuite
-Test/no_quickstart instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ no_quickstart	
-    set guide_  "Two TCPs, no quickstart."
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    set qs OFF
-    Agent/QSAgent set qs_enabled_ 0
-    $self next pktTraceFile
-}
-Test/no_quickstart instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 6
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s3) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 20
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/quickstart -superclass TestSuite
-Test/quickstart instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ quickstart	
-    set guide_  "Two TCPs, TCP/Newreno, with QuickStart."
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    set qs ON
-    Test/quickstart instproc run {} [Test/no_quickstart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/quickstart1 -superclass TestSuite
-Test/quickstart1 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ quickstart1	
-    set guide_  "Two TCPs, plain TCP, with QuickStart."
-    set sndr TCP
-    set rcvr TCPSink
-    set qs ON
-    Test/quickstart1 instproc run {} [Test/no_quickstart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/quickstart2 -superclass TestSuite
-Test/quickstart2 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ quickstart2	
-    set guide_  "Two TCPs, Reno TCP, with QuickStart."
-    set sndr TCP/Reno
-    set rcvr TCPSink
-    set qs ON
-    Test/quickstart2 instproc run {} [Test/no_quickstart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/quickstart3 -superclass TestSuite
-Test/quickstart3 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ quickstart3	
-    set guide_  "Two TCPs, NewReno TCP, with QuickStart."
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    set qs ON
-    Test/quickstart3 instproc run {} [Test/no_quickstart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/quickstart4 -superclass TestSuite
-Test/quickstart4 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ quickstart4	
-    set guide_  "Two TCPs, Sack TCP, with QuickStart."
-    set sndr TCP/Sack1
-    set rcvr TCPSink/Sack1
-    set qs ON
-    Test/quickstart4 instproc run {} [Test/no_quickstart info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/quickstart4full -superclass TestSuite
-Test/quickstart4full instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net2
-    set test_ quickstart4	
-    set guide_  "Two TCPs, Sack Full TCP.  QuickStart not added to Full TCP yet."
-    set sndr TCP/Sack1
-    set rcvr TCPSink/Sack1
-    set qs ON
-    $self next pktTraceFile
-}
-Test/quickstart4full instproc run {} {
-    global quiet wrap1 wrap
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 6
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set wrap $wrap1
-    set fid 1
-    set tcp2 [new Agent/TCP/FullTcp/Sack]
-    set sink [new Agent/TCP/FullTcp/Sack]
-    $ns_ attach-agent $node_(s1) $tcp2
-    $ns_ attach-agent $node_(s3) $sink
-    $tcp2 set fid_ $fid
-    $sink set fid_ $fid
-    $ns_ connect $tcp2 $sink
-    # set up TCP-level connections
-    $sink listen ; # will figure out who its peer is
-
-    #set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s3) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 20
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-
-Class Test/high_request -superclass TestSuite
-Test/high_request instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ high_request	
-    set guide_  "A high Quick-Start request."
-    set sndr TCP/Sack1
-    set rcvr TCPSink/Sack1
-    Agent/QSAgent set alloc_rate_ 0.01
-    Agent/QSAgent set algorithm_ 1
-    Agent/TCP set qs_request_mode_ 0
-    set qs ON
-    $self next pktTraceFile
-}
-Test/high_request instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 6
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s3) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 1000
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/bad_router -superclass TestSuite
-Test/bad_router instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ bad_router	
-    set guide_  "Not all routers support quickstart."
-    set sndr TCP/Sack1
-    set rcvr TCPSink/Sack1
-    set qs ON
-    $self next pktTraceFile
-}
-Test/bad_router instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set router $node_(r2)
-    [$router qs-agent] set qs_enabled_ 0
-    set stopTime 6
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s3) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 20
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/changing_rtt -superclass TestSuite
-Test/changing_rtt instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ changing_rtt	
-    set guide_  "Changing round-trip times."
-    set sndr TCP/Sack1
-    set rcvr TCPSink/Sack1
-    set qs ON
-    $self next pktTraceFile
-}
-Test/changing_rtt instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 6
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s3) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 20
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-    $ns_ at 3.1 "$ns_ delay $node_(r1) $node_(r2) 100ms duplex"
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/changing_rtt1 -superclass TestSuite
-Test/changing_rtt1 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ changing_rtt1	
-    set guide_  "Changing round-trip times."
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    set qs ON
-    Test/changing_rtt1 instproc run {} [Test/changing_rtt info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/no_acks_back -superclass TestSuite
-Test/no_acks_back instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ no_acks_back	
-    set guide_  "After the first exchange, sender receives no acks."
-    set sndr TCP/Sack1
-    set rcvr TCPSink/Sack1
-    set qs ON
-    $self next pktTraceFile
-}
-
-Test/no_acks_back instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 10
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s4) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 20
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-    $ns_ at 3.0 "$ns_ delay $node_(r2) $node_(s4) 10000ms duplex"
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/pkt_drops -superclass TestSuite
-Test/pkt_drops instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net2
-    set test_ pkt_drops	
-    set guide_  "Packets are dropped in the initial window after quickstart."
-    set sndr TCP/Sack1
-    set rcvr TCPSink/Sack1
-    set qs ON
-    $self next pktTraceFile
-}
-
-Test/pkt_drops instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 20
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s4) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 20
-    $tcp2 set tcp_qs_recovery_ true
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-
-    $self drop_pkts {5 6}
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-proc printdrops { fid fmon } {
-        set fcl [$fmon classifier]; # flow classifier
-        set flow [$fcl lookup auto 0 0 $fid]
-        if {$flow != ""} {
-          puts "fid: $fid per-link total_packets [$flow set pdepartures_]"
-          puts "fid: $fid per-link total_bytes [$flow set bdepartures_]"
-          puts "fid: $fid per-link total_drops [$flow set pdrops_]"
-          puts "fid: $fid per-link qs_pkts [$flow set qs_pkts_]"
-          puts "fid: $fid per-link qs_bytes [$flow set qs_bytes_]"
-          puts "fid: $fid per-link qs_drops [$flow set qs_drops_]"
-        }
-}
-
-Class Test/many_requests -superclass TestSuite
-Test/many_requests instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net4
-    set test_ many_requests	
-    set guide_  "Many Quick-Start requests."
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    set qs ON
-    $self next pktTraceFile
-}
-Test/many_requests instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 10
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s3) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 100
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 400"
-
-    set tcp3 [$ns_ create-connection $sndr $node_(s2) $rcvr $node_(s4) 2]
-    $tcp3 set window_ 1000
-    $tcp3 set rate_request_ 100
-    set ftp3 [new Application/FTP]
-    $ftp3 attach-agent $tcp3
-    $ns_ at 3.0 "$ftp3 produce 200"
-
-    set tcp4 [$ns_ create-connection $sndr $node_(s2) $rcvr $node_(s4) 3]
-    $tcp4 set window_ 1000
-    $tcp4 set rate_request_ 100
-    set ftp4 [new Application/FTP]
-    $ftp4 attach-agent $tcp4
-    $ns_ at 4.0 "$ftp4 produce 100"
-
-    set tcp5 [$ns_ create-connection $sndr $node_(s2) $rcvr $node_(s4) 4]
-    $tcp5 set window_ 1000
-    $tcp5 set rate_request_ 100
-    set ftp5 [new Application/FTP]
-    $ftp5 attach-agent $tcp5
-    $ns_ at 6.0 "$ftp5 produce 100"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/many_requests3 -superclass TestSuite
-Test/many_requests3 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net4
-    set test_ many_requests3
-    set guide_  "Many Quick-Start requests, generous router."
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    set qs ON
-    Agent/QSAgent set alloc_rate_ 0.95 
-    Agent/QSAgent set threshold_ 0.95
-    Test/many_requests3 instproc run {} [Test/many_requests info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/stats -superclass TestSuite
-Test/stats instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_  net2
-    set test_ stats   
-    set guide_  "Two TCPs, statistics."
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    Agent/TCP set print_request_ true
-    set qs ON
-    $self next pktTraceFile
-}
-Test/stats instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    if {$quiet == "false"} {puts $guide_}
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 6
-
-    set slink [$ns_ link $node_(r1) $node_(r2)] 
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s3) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 20
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-
-    $ns_ at $stopTime "printdrops 1 $fmon;"
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/stats1 -superclass TestSuite
-Test/stats1 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net2
-    set test_ stats1	
-    set guide_  "Quick-Start packet drops, statistics."
-    Agent/TCP set print_request_ true
-    set sndr TCP/Sack1
-    set rcvr TCPSink/Sack1
-    set qs ON
-    $self next pktTraceFile
-}
-
-Test/stats1 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 20
-
-    set slink [$ns_ link $node_(s1) $node_(r1)] 
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 8
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    set tcp2 [$ns_ create-connection $sndr $node_(s1) $rcvr $node_(s4) 1]
-    $tcp2 set window_ 1000
-    $tcp2 set rate_request_ 20
-    $tcp2 set tcp_qs_recovery_ true
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 2.0 "$ftp2 produce 80"
-
-    $self drop_pkts {5 6}
-
-    $ns_ at $stopTime "printdrops 1 $fmon;"
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-# 20 KBps = 20 pkts per second
-Class Test/rate_request -superclass TestSuite
-Test/rate_request instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ rate_request	
-    set guide_  "Quick-Start, request of 20 Kbps."
-    set qs ON
-    Agent/TCP set qs_request_mode_ 0
-    $self next pktTraceFile
-}
-Test/rate_request instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 2
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 10000
-    $tcp1 set rate_request_ 20
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-    $ns_ run
-}
-
-# The request isn't limited by the TCP window, but
-#   the actual sending rate is.
-Class Test/rate_request1 -superclass TestSuite
-Test/rate_request1 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ rate_request1	
-    set guide_  "Quick-Start, request not limited by TCP window."
-    set qs ON
-    Agent/TCP set qs_request_mode_ 1
-    $self next pktTraceFile
-}
-Test/rate_request1 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 2
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 10
-    $tcp1 set rate_request_ 20
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-    $ns_ run
-}
-
-# Only make requesst if at least qs_thresh_ packets to send.
-Class Test/rate_request3 -superclass TestSuite
-Test/rate_request3 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ rate_request3	
-    set guide_  "Quick-Start, no request because of insufficient data."
-    set qs ON
-    Agent/TCP set qs_request_mode_ 1
-    Agent/TCP set qs_thresh_ 20
-    Agent/TCP set qs_rtt_ 1000
-    $self next pktTraceFile
-}
-Test/rate_request3 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 2
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 100
-    $tcp1 set rate_request_ 2000
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 produce 10"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-    $ns_ run
-}
-
-# Requesst limited by available data.
-Class Test/rate_request4 -superclass TestSuite
-Test/rate_request4 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ rate_request4	
-    set guide_  "Quick-Start, rate request limited by available data."
-    set qs ON
-    Agent/TCP set qs_request_mode_ 1
-    Agent/TCP set qs_thresh_ 5
-    Agent/TCP set qs_rtt_ 1000
-    $self next pktTraceFile
-}
-Test/rate_request4 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 2
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 100
-    $tcp1 set rate_request_ 2000
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 0.0 "$ftp1 produce 10"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-    $ns_ run
-}
-
-Class Test/routers1 -superclass TestSuite
-Test/routers1 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ routers1	
-    set guide_  "Quick-Start, rate request 100KBps."
-    set qs ON
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    Agent/QSAgent set algorithm_ 3
-    Agent/QSAgent set threshold_ 0.9
-    Agent/QSAgent set alloc_rate_ 0.9
-    $self next pktTraceFile
-}
-Test/routers1 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 6
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-
-    Agent/TCP set window_ 10000
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set rate_request_ 100
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 1.0 "$ftp1 produce 100"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/routers2 -superclass TestSuite
-Test/routers2 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ routers2	
-    set guide_  "Quick-Start, routers approve only 62 KBps"
-    # 100 Mbps * 0.005 = 500 Kbps = 62 KBps. 
-
-    set qs ON
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    Agent/QSAgent set algorithm_ 3
-    Agent/QSAgent set threshold_ 0.005
-    Agent/QSAgent set alloc_rate_ 0.005
-    Test/routers2 instproc run {} [Test/routers1 info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/routers3 -superclass TestSuite
-Test/routers3 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ routers3	
-    set guide_  "Quick-Start, log-scale for rate encoding"
-    # 100 Mbps * 0.005 = 500 Kbps = 62 KBps. 
-
-    set qs ON
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    Agent/QSAgent set algorithm_ 3
-    Agent/QSAgent set threshold_ 0.9
-    Agent/QSAgent set alloc_rate_ 0.9
-    Agent/QSAgent set rate_function_ 2
-    Test/routers3 instproc run {} [Test/routers1 info instbody run ]
-    $self next pktTraceFile
-}
-
-# This router allocates the full link bandwidth for QS,
-# and the sender requests the full bandwidth for QS.
-Class Test/routers4 -superclass TestSuite
-Test/routers4 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ routers4	
-    set guide_  "Quick-Start, request for full link bandwidth."
-
-    set qs ON
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    Agent/QSAgent set algorithm_ 3
-    Agent/QSAgent set threshold_ 1.0
-    Agent/QSAgent set alloc_rate_ 1.0
-    Agent/QSAgent set rate_function_ 2
-    $self next pktTraceFile
-}
-Test/routers4 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 4
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-    $ns_ at 0.0 "$ns_ bandwidth $node_(r1) $node_(r2) 0.64Mbps duplex"
-
-    Agent/TCP set window_ 10000
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set rate_request_ 80
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 1.0 "$ftp1 produce 100"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-# This router allocates the full link bandwidth for QS,
-Class Test/routers5 -superclass TestSuite
-Test/routers5 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ routers5	
-    set guide_  "Quick-Start, two requests, total for full link bandwidth."
-
-    set qs ON
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    Agent/QSAgent set algorithm_ 3
-    Agent/QSAgent set threshold_ 1.0
-    Agent/QSAgent set alloc_rate_ 1.0
-    Agent/QSAgent set rate_function_ 2
-    $self next pktTraceFile
-}
-Test/routers5 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 4
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-    $ns_ at 0.0 "$ns_ bandwidth $node_(r1) $node_(r2) 0.64Mbps duplex"
-
-    Agent/TCP set window_ 10000
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set rate_request_ 40
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 1.0 "$ftp1 produce 100"
-
-    set tcp2 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 1]
-    $tcp2 set rate_request_ 40
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 1.1 "$ftp2 produce 100"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-# This router allocates the full link bandwidth for QS,
-Class Test/routers6 -superclass TestSuite
-Test/routers6 instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ routers6	
-    set guide_  "Quick-Start, three requests, total for more than link bandwidth."
-
-    set qs ON
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    Agent/QSAgent set algorithm_ 3
-    #Agent/QSAgent set algorithm_ 2
-    Agent/QSAgent set threshold_ 1.0
-    Agent/QSAgent set alloc_rate_ 1.0
-    Agent/QSAgent set rate_function_ 2
-    $self next pktTraceFile
-}
-Test/routers6 instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 4
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-    $ns_ at 0.0 "$ns_ bandwidth $node_(r1) $node_(r2) 0.64Mbps duplex"
-
-    Agent/TCP set window_ 10000
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set rate_request_ 40
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 1.0 "$ftp1 produce 100"
-
-    set tcp2 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 1]
-    $tcp2 set rate_request_ 40
-    set ftp2 [new Application/FTP]
-    $ftp2 attach-agent $tcp2
-    $ns_ at 1.1 "$ftp2 produce 100"
-
-    set tcp3 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 2]
-    $tcp3 set rate_request_ 40
-    set ftp3 [new Application/FTP]
-    $ftp3 attach-agent $tcp3
-    $ns_ at 1.2 "$ftp3 produce 100"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-Class Test/small-request -superclass TestSuite
-Test/small-request instproc init {} {
-    $self instvar net_ test_ guide_ sndr rcvr qs
-    set net_	net3
-    set test_ small-request	
-    set guide_  "Quick-Start, a very small request."
-    set qs ON
-    set sndr TCP/Newreno
-    set rcvr TCPSink
-    $self next pktTraceFile
-}
-Test/small-request instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sndr rcvr qs
-    puts "Guide: $guide_"
-    $ns_ node-config -QS $qs
-    $self setTopo
-    set stopTime 6
-    if {$quiet == "false"} {
-        Agent/TCP set print_request_ true
-    }
-
-    Agent/TCP set window_ 10000
-    set tcp1 [$ns_ create-connection TCP/Newreno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set rate_request_ 4
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $tcp1
-    $ns_ at 1.0 "$ftp1 produce 100"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    $ns_ run
-}
-
-
-# We still need a test that tests state_delay_:
-# Agent/QSAgent set state_delay_  0.3
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-quiescent.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-quiescent.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-quiescent.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-quiescent.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,298 +0,0 @@
-# copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-quiescent.tcl,v 1.14 2006/03/15 04:04:28 sallyfloyd Exp $
-#
-
-source misc_simple.tcl
-source support.tcl
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-
-Agent/TCP set packetSize_ 500
-Application/Traffic/CBR set packetSize_ 500
-Agent/TCP set window_ 1000
-Agent/TCP set partial_ack_ 1
-Agent/TFRC set SndrType_ 1 
-Agent/TFRC set packetSize_ 500 
-
-# Uncomment the line below to use a random seed for the
-#  random number generator.
-# ns-random 0
-
-TestSuite instproc finish {file stoptime} {
-        global quiet PERL
-	exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	  $PERL ../../bin/raw2xg -s 0.01 -m 90 -t $file > temp.rands
-        exec echo $stoptime 0 >> temp.rands 
-        if {$quiet == "false"} {
-                exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-        }
-        ## now use default graphing tool to make a data file
-        ## if so desired
-#       exec csh figure2.com $file
-#	exec cp temp.rands temp.$file 
-#	exec csh gnuplotA.com temp.$file $file
-        exit 0
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    #$ns duplex-link $node_(r1) $node_(r2) 10Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 50
-    $ns queue-limit $node_(r2) $node_(r1) 50 
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-Class Test/tfrc_onoff -superclass TestSuite
-Test/tfrc_onoff instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_ sender 
-    set net_	net2
-    set test_ tfrc_onoff	
-    set guide_  \
-    "TFRC with a data source with limited, bursty data, no congestion."
-    set sender TFRC
-    Agent/TFRC set oldCode_ false
-    set stopTime1_ 10
-    $self next pktTraceFile
-}
-Test/tfrc_onoff instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ stopTime1_ sender 
-    puts "Guide: $guide_"
-    $self setTopo
-    set stopTime $stopTime1_
-
-    if {$sender == "TFRC"} {
-      set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    } elseif {$sender == "TCP"} {
-      set tf1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    }
-    set ftp [new Application/FTP]
-    $ftp attach-agent $tf1
-    $ns_ at 0 "$ftp produce 100"
-    $ns_ at 5 "$ftp producemore 100"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/tfrc_onoff_oldcode -superclass TestSuite
-Test/tfrc_onoff_oldcode instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_ sender 
-    set net_	net2
-    set test_ tfrc_onoff_oldcode	
-    set guide_  \
-    "TFRC, bursty data, no congestion, old code."
-    set sender TFRC
-    Agent/TFRC set oldCode_ true
-    set stopTime1_ 10
-    Test/tfrc_onoff_oldcode instproc run {} [Test/tfrc_onoff info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/tcp_onoff -superclass TestSuite
-Test/tcp_onoff instproc init {} {
-    $self instvar net_ test_ guide_ stopTime1_ sender 
-    set net_	net2
-    set test_ tcp_onoff	
-    set guide_  \
-    "TCP with a data source with limited, bursty data, no congestion."
-    set sender TCP
-    set stopTime1_ 10
-    Test/tcp_onoff instproc run {} [Test/tfrc_onoff info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/tfrc_telnet -superclass TestSuite
-Test/tfrc_telnet instproc init {} {
-    $self instvar net_ test_ guide_ sender 
-    set net_	net2
-    set test_ tfrc_telnet	
-    set guide_  \
-    "TFRC with a Telnet data source, telnet data rate increased at time 4."
-    set sender TFRC
-    $self next pktTraceFile
-}
-Test/tfrc_telnet instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sender 
-    puts "Guide: $guide_"
-    $self setTopo
-    set stopTime 10
-
-    if {$sender == "TFRC"} {
-      set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    } elseif {$sender == "TCP"} {
-      set tf1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    }
-    set telnet1 [new Source/Telnet]
-    $telnet1 attach-agent $tf1
-    $telnet1 set interval_ 0.01
-    $ns_ at 0.0 "$telnet1 start"
-    $ns_ at 4.0 "$telnet1 set interval_ 0.001"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/tcp_telnet -superclass TestSuite
-Test/tcp_telnet instproc init {} {
-    $self instvar net_ test_ guide_ sender 
-    set net_	net2
-    set test_ tcp_telnet	
-    set guide_  \
-    "TCP with a Telnet data source, telnet data rate increased at time 4."
-    set sender TCP
-    Test/tcp_telnet instproc run {} [Test/tfrc_telnet info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/tcp_telnet_CWV -superclass TestSuite
-Test/tcp_telnet_CWV instproc init {} {
-    $self instvar net_ test_ guide_ sender 
-    set net_	net2
-    set test_ tcp_telnet_CWV	
-    set guide_  \
-    "TCP with a Telnet data source, with Congestion Window Validation."
-    set sender TCP
-    Agent/TCP set QOption_ 1
-    Agent/TCP set control_increase_ 1
-    # Agent/TCP set EnblRTTCtr_ 1
-    Test/tcp_telnet_CWV instproc run {} [Test/tfrc_telnet info instbody run]
-    $self next pktTraceFile
-}
-
-Class Test/tfrc_cbr -superclass TestSuite
-Test/tfrc_cbr instproc init {} {
-    $self instvar net_ test_ guide_ sender 
-    set net_	net2
-    set test_ tfrc_cbr	
-    set guide_  \
-    "TFRC with a CBR data source, CBR data rate changes over time."
-    set sender TFRC
-    $self next pktTraceFile
-}
-Test/tfrc_cbr instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ guide_ sender 
-    puts "Guide: $guide_"
-    $self setTopo
-    set stopTime 15
-
-    if {$sender == "TFRC"} {
-      set tf1 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(s3) 0]
-    } elseif {$sender == "TCP"} {
-      set tf1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    }
-    set cbr1 [new Application/Traffic/CBR]
-    $cbr1 attach-agent $tf1
-    # $tf1 set type_ CBR
-    $cbr1 set interval_ 0.01
-    $ns_ at 0.01 "$cbr1 start"
-    $ns_ at 2.0 "$cbr1 set interval_ 0.002"
-    $ns_ at 3.0 "$cbr1 set interval_ 0.01"
-    $ns_ at 8.0 "$cbr1 set interval_ 0.002"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_ $stopTime" 
-
-    # trace only the bottleneck link
-    $ns_ run
-}
-
-Class Test/tfrc_cbr_conservative -superclass TestSuite
-Test/tfrc_cbr_conservative instproc init {} {
-    $self instvar net_ test_ guide_ sender
-    set net_	net2
-    set test_ tfrc_cbr_conservative	
-    set guide_  \
-    "TFRC with a CBR data source, conservative option."
-    set sender TFRC
-    Agent/TFRC set conservative_ true
-    Agent/TFRC set scmult_ 1.2
-    Test/tfrc_cbr_conservative instproc run {} [Test/tfrc_cbr info instbody run ]
-    $self next pktTraceFile
-}
-Class Test/tcp_cbr -superclass TestSuite
-Test/tcp_cbr instproc init {} {
-    $self instvar net_ test_ guide_ sender
-    set net_	net2
-    set test_ tcp_cbr	
-    set guide_  \
-    "TCP with a CBR data source, CBR data rate changes over time."
-    set sender TCP
-    Test/tcp_cbr instproc run {} [Test/tfrc_cbr info instbody run ]
-    $self next pktTraceFile
-}
-
-Class Test/tcp_cbr_CWV -superclass TestSuite
-Test/tcp_cbr_CWV instproc init {} {
-    $self instvar net_ test_ guide_ sender 
-    set net_	net2
-    set test_ tcp_cbr_CWV	
-    set guide_  \
-    "TCP with a CBR data source, with Congestion Window Validation." 
-    set sender TCP
-    Agent/TCP set QOption_ 1
-    Agent/TCP set control_increase_ 1
-    # Agent/TCP set EnblRTTCtr_ 1
-    Test/tcp_cbr_CWV instproc run {} [Test/tfrc_cbr info instbody run ]
-    $self next pktTraceFile
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rap.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rap.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rap.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rap.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,228 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-rap.tcl,v 1.7 2004/10/18 19:42:18 sfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc_simple.tcl
-# FOR UPDATING GLOBAL DEFAULTS:
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc finish file {
-	global quiet wrap PERL
-        exec $PERL ../../bin/set_flow_id -s all.tr | \
-          $PERL ../../bin/getrc -s 2 -d 3 | \
-          $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype list} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set fid 1
-        # Set up connection
-    	if {$tcptype == "RAP"} {
-      		set conn1 [$ns_ create-connection RAP $node_(s1) \
-          	RAP $node_(k1) $fid]
-    	} 
-        $ns_ at 1.0 "$conn1 start"
-
-        $self drop_pkts $list
-
-        #$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-	$ns_ at 8.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-###################################################
-## One drop
-###################################################
-
-Class Test/onedrop_rap -superclass TestSuite
-Test/onedrop_rap instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	onedrop_rap
-	$self next pktTraceFile
-}
-Test/onedrop_rap instproc run {} {
-        $self setup RAP {14}
-}
-
-###################################################
-## Two drops
-###################################################
-
-Class Test/twodrops_rap -superclass TestSuite
-Test/twodrops_rap instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	twodrops_rap
-	$self next pktTraceFile
-}
-Test/twodrops_rap instproc run {} {
-        $self setup RAP {14 28}
-}
-
-
-###################################################
-## Three drops
-###################################################
-
-Class Test/threedrops_rap -superclass TestSuite
-Test/threedrops_rap instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	threedrops_rap
-	$self next pktTraceFile
-}
-Test/threedrops_rap instproc run {} {
-        $self setup RAP {14 26 28}
-}
-
-###################################################
-## Four drops
-###################################################
-
-Class Test/fourdrops_rap -superclass TestSuite
-Test/fourdrops_rap instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	fourdrops_rap
-	$self next pktTraceFile
-}
-Test/fourdrops_rap instproc run {} {
-        $self setup RAP {14 24 26 28}
-}
-
-###################################################
-## Different parameters
-###################################################
-
-Class Test/diff_decrease_rap -superclass TestSuite
-Test/diff_decrease_rap instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	diff_decrease_rap
-	Agent/RAP set beta_ 0.875
-	$self next pktTraceFile
-}
-Test/diff_decrease_rap instproc run {} {
-        $self setup RAP {14}
-}
-
-###################################################
-## Different parameters
-###################################################
-
-Class Test/diff_increase_rap -superclass TestSuite
-Test/diff_increase_rap instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	diff_increase_rap
-	Agent/RAP set alpha_ 0.2
-	$self next pktTraceFile
-}
-Test/diff_increase_rap instproc run {} {
-        $self setup RAP {14}
-}
-
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rbp.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rbp.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rbp.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rbp.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,473 +0,0 @@
-#
-# Copyright (c) 1997 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-rbp.tcl,v 1.15 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-
-#
-# invoked as ns $file $t [QUIET]
-# expected to pop up xgraph output (unless QUIET)
-# and to leave the plot in temp.rands
-#
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-proc usage {} {
-	puts stderr {usage: ns test-suite-rbp.tcl test [QUIET]
-
-Test suites for pacing.
-and was written by John Heidemann and Vikram Visweswaraiah <visweswa@isi.edu>.
-It demonstrates rate-based pacing as described in the paper
-``Improving Restart of Idle TCP Connections'' (submitted for publication),
-available at <http://www.isi.edu/~johnh/PAPERS/Visweswaraiah97a.html>
-when invoked as.
-}
-	exit 1
-}
-
-# these are fakes for test-all
-
-Class Test/reno_slow_start_restart
-# expect to see slow-start restart every time
-# (one packet sent before the first ack of each phase)
-
-Class Test/reno_no_slow_start_restart
-# expect to see increasing burst of back-to-packets each phase
-# 7 the second phase, 10 the third.
-
-Class Test/vegas_slow_start_restart
-
-Class Test/vegas_no_slow_start_restart
-
-Class Test/reno_pacing
-# expect to see  0/5/8 packets paced
-
-Class Test/vegas_pacing_rate
-# expect to see  0/2/2 packets paced
-
-Class Test/vegas_pacing_cwnd
-# expect to see  0/3/5 packets paced
-
-
-proc default_options {} {
-	global opts opt_wants_arg
-
-	set raw_opt_info {
-		duration 0
-
-		client-count 10
-		client-bw 10Mb
-		client-delay 1ms
-		# client network Ethernet or Myrinet
-		client-queue-method DropTail
-		# queue length in packets
-		client-queue-length 10
-		client-ack-method TCPSink/DelAck
-
-		bottle-bw 800kb
-		bottle-delay 100ms
-		bottle-queue-method DropTail
-		# experiments: 10KB
-		# here, measured in packets
-		bottle-queue-length 10
-
-		server-bw 10Mb
-		server-delay 1ms
-		server-queue-method DropTail
-		server-queue-length 10
-		server-tcp-method TCP/Vegas/RBP
-		server-tcp-slow-start-restart true
-		server-tcp-window 32
-		server-tcp-rbp-scale 0.75
-
-		# packet size is 1000B
-		# web page size in 10 pkts
-		web-page-size 10
-
-		experiment-trials 10
-		# next two are times measured in seconds
-		trial-jitter 3
-		inter-trial-pause 20
-
-		graph-results 1
-		graph-join-queueing 1
-		title none
-
-		# For controlling algorithm rate or cwnd
-		# 1 is Vegas computed rates, 2 is cwnd based alg
-		rbp-rate-algorithm 1 
-
-                # time-scale: factor to multiply seconds by to get ns
-		# scheduler time units
-		time-scale 1
-		gen-map 0
-		debug 0
-		debug-fire-times 0
-		    
-		# Random number seed; default is 0, so ns will give a 
-		# diff. one on each invocation.
-		ns-random-seed 0
-		
-		# Animation options; complete traces are useful
-		# for nam only, so do those only when a tracefile
-		# is being used for nam
-		nam-trace-all 0
-		
-		# Switch to generate the nam tcl file from here
-		# itself
-		nam-generate-cmdfile 0
-	}
-
-	while {$raw_opt_info != ""} {
-		if {![regexp "^\[^\n\]*\n" $raw_opt_info line]} {
-			break
-		}
-		regsub "^\[^\n\]*\n" $raw_opt_info {} raw_opt_info
-		set line [string trim $line]
-		if {[regexp "^\[ \t\]*#" $line]} {
-			continue
-		}
-		if {$line == ""} {
-			continue
-		} elseif [regexp {^([^ ]+)[ ]+([^ ]+)$} $line dummy key value] {
-			set opts($key) $value
-			set opt_wants_arg($key) 1
-		} else {
-			set opt_wants_arg($key) 0
-			# die "unknown stuff in raw_opt_info\n"
-		}
-	}
-}
-
-proc process_args argv {
-	global opts opt_wants_arg
-
-	set argc [llength $argv]
-	default_options
-	for {set i 0} {$i < $argc} {incr i} {
-		set key [lindex $argv $i]
-		if {$key == "-?" || $key == "--help" || $key == "-help" || $key == "-h"} {
-			usage
-		}
-		regsub {^-} $key {} key
-		if {![info exists opt_wants_arg($key)]} {
-			puts stderr "unknown option $key";
-			usage
-		}
-		if {$opt_wants_arg($key)} {
-			incr i
-			set opts($key) [lindex $argv $i]
-		} else {
-			set opts($key) [expr !opts($key)]
-		}
-	}
-}
-
-
-
-proc my-duplex-link {ns n1 n2 bw delay queue_method queue_length} {
-	$ns duplex-link $n1 $n2 $bw $delay $queue_method
-	$ns queue-limit $n1 $n2 $queue_length
-	$ns queue-limit $n2 $n1 $queue_length
-}
-
-
-#
-#  clients
-#  c1
-#  c2    ---- bottle_c ---- bottle_s ---- s
-#  ...
-#
-
-Class TestScale
-
-TestScale instproc init_network {} {
-	global opts
-	# nodes
-	# build right to left
-	$self instvar ns_ cs_ bottle_c_ bottle_s_ s_
-
-	# build clients
-	for {set i 0} {$i < $opts(client-count)} {incr i} {
-		set cs_($i) [$ns_ node]
-	}
-
-	set bottle_c_ [$ns_ node]
-	set bottle_s_ [$ns_ node]
-	set s_ [$ns_ node]
-
-
-	# links
-	my-duplex-link $ns_ $s_ $bottle_s_ $opts(server-bw) $opts(server-delay) $opts(server-queue-method) $opts(server-queue-length)
-	my-duplex-link $ns_ $bottle_s_ $bottle_c_ $opts(bottle-bw) $opts(bottle-delay) $opts(bottle-queue-method) $opts(bottle-queue-length)
-	for {set i 0} {$i < $opts(client-count)} {incr i} {
-		my-duplex-link $ns_ $cs_($i) $bottle_c_ $opts(client-bw) $opts(client-delay) $opts(client-queue-method) $opts(client-queue-length)
-	}
-}
-
-Application/FTP instproc fire {} {
-	global opts
-	$self instvar maxpkts_
-	set maxpkts_ [expr $maxpkts_ + $opts(web-page-size)]
-	$self produce $maxpkts_
-}
-
-TestScale instproc init_connections {} {
-	global opts
-	$self instvar ns_ s_  tcp_ ftp_ cs_
-	for {set i 0} {$i < $opts(client-count)} {incr i} {
-		set tcp_($i) [$ns_ create-connection $opts(server-tcp-method) $s_ $opts(client-ack-method) $cs_($i) 0]
-		$tcp_($i) set restart_bugfix_ 1
-		$tcp_($i) set window_ $opts(server-tcp-window)
-		if {[regexp "RBP" $opts(server-tcp-method)]} {
-			$tcp_($i) set rbp_scale_ $opts(server-tcp-rbp-scale)
-			$tcp_($i) set rbp_rate_algorithm_ $opts(rbp-rate-algorithm)
-		}
-		$tcp_($i) set slow_start_restart_ $opts(server-tcp-slow-start-restart)
-		set ftp_($i) [$tcp_($i) attach-app FTP]
-		$ftp_($i) set maxpkts_ 0
-		# $ftp_($i) set experiment_matching_tcp_ $tcp_($i)
-		# $tcp_($i) set experiment_matching_ftp_ $ftp_($i)
-		$tcp_($i) set experiment_connection_i_ $i
-		if {$opts(debug)} {
-			puts "tcp_($i) $tcp_($i)"
-			puts "ftp_($i) $ftp_($i)"
-		}
-	}
-	# report on number paced
-	if [string match {*Vegas/RBP*} $opts(server-tcp-method)] {
-		Agent/$opts(server-tcp-method) instproc done {} {
-			$self instvar rbp_segs_actually_paced_ rbp_inter_pace_delay_ experiment_connection_i_ cwnd_ v_rtt_
-			# puts "$experiment_connection_i_: cwnd_=$cwnd_ v_rtt_=$v_rtt_ rbp_segs_actually_paced_=$rbp_segs_actually_paced_ rbp_inter_pace_delay_=$rbp_inter_pace_delay_"
-		}
-	}
-	if [string match {*Reno/RBP*} $opts(server-tcp-method)] {
-		Agent/$opts(server-tcp-method) instproc done {} {
-			$self instvar rbp_segs_actually_paced_ rbp_inter_pace_delay_ experiment_connection_i_ cwnd_ rtt_ srtt_
-			# puts "$experiment_connection_i_: cwnd_=$cwnd_ rtt=$rtt_ srtt=$srtt_ rbp_segs_actually_paced_=$rbp_segs_actually_paced_ rbp_inter_pace_delay_=$rbp_inter_pace_delay_"
-		}
-	}
-}
-
-TestScale instproc schedule_traffic {} {
-	global opts
-	$self instvar ns_ s_ tcp_ ftp_ rng_
-
-	set base_time [expr 10*$opts(time-scale)]
-	for {set i 0} {$i < $opts(experiment-trials)} {incr i} {
-		if {$opts(debug-fire-times)} {
-			puts "trial $i"
-		}
-		# schedule a trial
-		for {set j 0} {$j < $opts(client-count)} {incr j} {
-			set j_time [expr ($base_time + [$rng_ uniform 0 $opts(trial-jitter)] - ($opts(trial-jitter))/2) * $opts(time-scale)]
-			$ns_ at $j_time "$ftp_($j) fire"
-			if {$opts(debug-fire-times)} {
-				puts "$ns_ at $j_time $ftp_($j) fire"
-			}
-			if { $j == 0 && $opts(debug)} {
-				puts "$j fires at $j_time"
-			}
-		}
-		incr base_time $opts(inter-trial-pause)
-	}
-
-	# limit duration
-	if {$opts(duration) == 0} {
-		set opts(duration) [expr ($opts(experiment-trials)+2)*$opts(inter-trial-pause)*$opts(time-scale)]
-	}
-}
-
-TestScale instproc open_trace { stopTime testName } {
-	exec rm -f out.tr temp.rands
-	$self instvar ns_ trace_file_
-	set trace_file_ [open out.tr w]
-	$ns_ at $stopTime \
-		"close $trace_file_ ; $self finish"
-	return $trace_file_
-}
-
-# There seems to be a problem with the foll function, so quit plotting 
-# with -a -q, use just -a.
-
-TestScale instproc finish {} {
-        global opts PERL
-	$self instvar trace_file_
-
-	# for debugging
-	exec $PERL ../../bin/raw2xg -a -m $opts(web-page-size) -q < out.tr >temp.rands
-	if {!$opts(graph-results)} {
-		exit 0
-	}
-
-	if {$opts(graph-join-queueing)} {
-		set q "-q"
-	} else {
-		set q ""
-	}
-	set title $opts(title)
-	if {$title == "none"} {
-		set title $opts(server-tcp-method)
-	}
-	exec xgraph -t "$title" <temp.rands &
-#	exec raw2xg -a < out.tr | xgraph -t "$opts(server-tcp-method)" &
-	
-	exit 0
-}
-
-Simulator instproc nodes-to-link {n1 n2} {
-	$self instvar link_
-	return $link_([$n1 id]:[$n2 id])
-}
-
-TestScale instproc init {} {
-	global opts
-
-	$self instvar ns_ 
-	set ns_ [new Simulator]
-
-        # Seed random no. generator; ns-random with arg of 0 heuristically
-        # chooses a random number that changes on each invocation.
-	$self instvar rng_
-	set rng_ [new RNG]
-	$rng_ seed $opts(ns-random-seed)
-	$rng_ next-random
-
-	$self init_network
-	$self init_connections
-	$self schedule_traffic
-
-
-	$self instvar bottle_c_ bottle_s_ s_ cs_
-	set trace_file [$self open_trace $opts(duration) TestScale]
-
-        if {$opts(nam-trace-all)} {
-	        # trace-all should have worked, but it didn't, so the 
-	        # individual trace commands
-	    
-	        # Trace from server to server router and vice versa
-	        $ns_ trace-queue $s_ $bottle_s_ $trace_file
-                $ns_ trace-queue $bottle_s_ $s_ $trace_file
-		    
-	        # Trace from the server router to client router and vice 
-		# versa
-	        $ns_ trace-queue $bottle_s_ $bottle_c_ $trace_file
-	        $ns_ trace-queue $bottle_c_ $bottle_s_ $trace_file
-
-	        # Trace from client router to each client and vice versa
-	        for {set i 0} {$i < $opts(client-count)} {incr i} {
-		        $ns_ trace-queue  $bottle_c_ $cs_($i) $trace_file
-		        $ns_ trace-queue $cs_($i) $bottle_c_ $trace_file
-		}
-
-	} else {
-         	$ns_ trace-queue $bottle_s_ $bottle_c_ $trace_file
-		# note  that we trace after the delay of the bottleneck
-		$ns_ trace-queue $bottle_s_ $s_ $trace_file
-	}
-	if {$opts(gen-map)} {
-		$ns_ gen-map
-	}       
-	$ns_ run
-}
-
-
-proc main {} {
-	global argv
-
-	#
-	# Icky icky icky.
-	# We slap a test-suite-friendly interface over
-	# the otherwise nice interface provided by
-	# rbp_demo.tcl.
-	#
-	set tcp TCP/Vegas/RBP
-	set graph 1
-	set ssr true
-	set rbp_alg 1
-	foreach i $argv {
-		switch $i {
-			quiet {
-				set graph 0
-			}
-			QUIET {
-				set graph 0
-			}
-			reno_pacing {
-				set tcp TCP/Reno/RBP
-				set title $i
-			}
-			vegas_pacing_rate {
-				set tcp TCP/Vegas/RBP
-				set rbp_alg 1
-				set title $i
-			}
-			vegas_pacing_cwnd {
-				set tcp TCP/Vegas/RBP
-				set rbp_alg 2
-				set title $i
-			}
-			reno_slow_start_restart {
-				set tcp TCP/Reno
-				set title $i
-			}
-			reno_no_slow_start_restart {
-				set tcp TCP/Reno
-				set ssr false
-				set title $i
-			}
-			vegas_slow_start_restart {
-				set tcp TCP/Vegas
-				set title $i
-			}
-			vegas_no_slow_start_restart {
-				set tcp TCP/Vegas
-				set ssr false
-				set title $i
-			}
-		}
-	}
-	# Always set ns-random-seed so we get the same results every time.
-	process_args "-server-tcp-method $tcp -graph-results $graph -client-count 1 -experiment-trials 3 -server-tcp-slow-start-restart $ssr -rbp-rate-algorithm $rbp_alg -title $title -ns-random-seed 1"
-	new TestScale
-}
-
-main
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-realaudio.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-realaudio.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-realaudio.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-realaudio.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,229 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-realaudio.tcl,v 1.4 2005/06/11 04:42:09 sfloyd Exp $
-
-# To run all tests: test-all-realaudio
-#
-# To view a list of available test to run with this script:
-# ns test-suite-realaudio.tcl
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
-
-proc usage {}  {
-        global argv0
-	puts stderr "usage: ns $argv0 realaudio"
-        exit 1
-}
-
-
-Class TestSuite
-
-Class Test/realaudio -superclass TestSuite
-
-TestSuite instproc init {} {
-}
-
-Test/realaudio instproc init {} {
-##
-global seed packetsize nn cnn plottime
-
-set seed           1
-set packetsize     245
-set nn             3             ;# number of nodes
-set cnn            [expr $nn -2 ]   ;# number of clients
-set plottime 15000.0
-
-}
-
-
-Test/realaudio instproc run {} {
-global seed packetsize nn cnn plottime
-
-ns-random $seed
-
-##user start time from a poisson distribution
-set starttime(2) 0
-
-#set tmp [new RandomVariable/Exponential] ;# Poisson process
-#$tmp set avg_ 5.4674 ;# average arrival interval
-
-#artificially syncronize flow start time
-#every flow starts at multiple of 1.8s
-set tmp [new RandomVariable/Empirical]
-$tmp loadCDF userintercdf1
-
-for {set i 3} {$i < $nn} {incr i} {
-    set p [$tmp value]
-    set i1 [expr $i - 1 ]
-    set starttime($i) [expr $starttime($i1) + $p ]
-}
-
-##number of sequential flow per user
-set rv0 [new RandomVariable/Empirical]
-$rv0 loadCDF sflowcdf
-
-##flow duration
-set rv1 [new RandomVariable/Empirical]
-$rv1 loadCDF flowdurcdf
-
-for {set i 2} {$i < $nn} {incr i} {
-  set q [$rv0 value]
-  set sflow($i) [expr int($q) ]
-#  puts "node $i has $sflow($i) flow "
-  set p [$rv1 value]
-  set dur($i) [expr $p * 60 ]
-#  puts "node $i duration : $dur($i)"
-}
-
-
-for {set i 2} {$i < $nn} {incr i} {
-    set flowstoptime($i) [expr $starttime($i) + $dur($i) ]
-}
-
-
-set ns [new Simulator]
-
-for {set i 0} {$i < $nn} {incr i} {
-set n($i) [$ns node]
-}
-
-set f [open temp.rands w]
-$ns trace-all $f
-
-$ns duplex-link $n(0) $n(1) 1.5Mb 10ms DropTail
-
-for {set j 2} {$j < $nn} {incr j} {
-    $ns duplex-link $n(0) $n($j) 10Mb 5ms DropTail
-}
-
-set rv2 [new RandomVariable/Empirical]
-$rv2 loadCDF ontimecdf
-set rv3 [new RandomVariable/Empirical]
-$rv3 loadCDF fratecdf
-
-for {set i 2} {$i < $nn} {incr i} {
-  set s($i) [new Agent/UDP]
-  $ns attach-agent $n(1) $s($i)
-  set null($i) [new Agent/Null]
-  $ns attach-agent $n($i) $null($i)
-  $ns connect $s($i) $null($i)
-
-  set realaudio($i) [new Application/Traffic/RealAudio]
-  $realaudio($i) set packetSize_ $packetsize
-
-  $realaudio($i) set burst_time_ 0.05ms
-  $realaudio($i) set idle_time_ 1800ms
-
-
-  set flow_rate  [$rv3 value]  
-  set r [ format "%fk"  $flow_rate ]
-
-#  puts "node $i flow rate $r"
-
-  $realaudio($i) set rate_ $r
-  $realaudio($i) attach-agent $s($i)
-}
-
-
-
-for {set i 2} {$i < $nn} {incr i} {
-
-      $ns at $starttime($i) "$realaudio($i) start"
-      $ns at $flowstoptime($i) "$realaudio($i) stop"
-
-#      puts "node $i starttime $starttime($i)"
-#      puts "node $i stoptime $flowstoptime($i)"
-  
-
-      ##schedule for next flow
-      for {set h 2} {$h <= $sflow($i)} {incr h} {
-
-          set starttime($i) [expr $flowstoptime($i) + 0.001 ]
-          set p [$rv1 value]
-          set dur($i) [expr $p * 60 ]
-#         puts "node $i duration : $dur($i)"
-
-	  set flowstoptime($i) [expr $starttime($i) + $dur($i) ]
-
-          set realaudio($i) [new Application/Traffic/RealAudio]
-          $realaudio($i) set packetSize_ $packetsize
-          $realaudio($i) set burst_time_ 0.05ms
-          $realaudio($i) set idle_time_ 1800ms
-
-          set flow_rate  [$rv3 value]  
-          set r [ format "%fk"  $flow_rate ]
-
-#         puts "node $i flow rate $r"
-
-          $realaudio($i) set rate_ $r
-          $realaudio($i) attach-agent $s($i)
-          
-      }
-
-}
-
-$ns at $plottime "close $f"
-$ns at $plottime "puts \"NS EXITING...\" ; $ns halt"
-
-$ns run
-}
-
-TestSuite instproc finish {} {
-	exec awk {
-		{
-			if (($1 == "+") && ($3 == 1) ) \
-			     print $2, $10
-		}
-	} temp.rands > out.tr
-        exit 0
-}
-
-
-proc runtest {arg} {
-        global quiet
-        set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-	        set test $arg
-        } elseif {$b == 2} {
-	        set test [lindex $arg 0]
-            if {[lindex $arg 1] == "QUIET"} {
-	        set quiet 1
-            }
-        } else {
-	        usage
-        }
-	switch $test {
-		realaudio {
-                     set t [new Test/$test]
-                }
-                default {
-	             stderr "Unknown test $test"
-		     exit 1
-                }
-         }
-	 $t run
-}
-
-global argv arg0 
-runtest $argv
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-red-pd.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-red-pd.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-red-pd.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-red-pd.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,483 +0,0 @@
-#
-# Copyright (c) 2000  International Computer Science Institute
-# All rights reserved.
-# 
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by ACIRI, the AT&T
-#      Center for Internet Research at ICSI (the International Computer
-#      Science Institute).
-# 4. Neither the name of ACIRI nor of ICSI may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED BY ICSI AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL ICSI OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-catch "cd $dir"
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Queue/RED set gentle_ true
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-Agent/TCP set timerfix_ false
-# The default is being changed to true.
-
-source ../ex/red-pd/monitoring.tcl
-set target_rtt_ 0.040
-set testIdent_ 0
-set verbosity_ -1
-set listMode_ multi
-set unresponsive_test_ 1
-source ../ex/red-pd/helper.tcl
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set redq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$redq trace curq_
-	$redq trace ave_
-	$redq attach $tchan_
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_ redpdflowmon_ redpdq_ redpdlink_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns simplex-link $node_(r1) $node_(r2) 0.5Mb 20ms RED/PD 
-    $ns simplex-link $node_(r2) $node_(r1) 0.5Mb 20ms DropTail
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-
-    set redpdlink_ [$ns link $node_(r1) $node_(r2)]
-    set redpdq_ [$redpdlink_ queue]
-    set redpdflowmon_ [$redpdq_ makeflowmon $redpdlink_]
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for RED gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-			else if ($1 == "a" && NF>2)
-				print $2, $3 >> "temp.a";
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q temp.a 
-	exec touch temp.a temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	puts $f \n\"ave_queue
-	exec cat temp.a >@ $f
-	###puts $f \n"thresh
-	###puts $f 0 [[ns link $r1 $r2] get thresh]
-	###puts $f $end [[ns link $r1 $r2] get thresh]
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-TestSuite instproc monitorFlow {fid prob} {
-    $self instvar topo_ 
-    $topo_ instvar redpdflowmon_ redpdq_
-
-    foreach flow [$redpdflowmon_ flows] {
-	if {[$flow set flowid_] == $fid} {
-	    #monitor the flow with probability $prob
-	    $redpdq_ monitor-flow $flow $prob 
-	}
-    }	
-}
-
-TestSuite instproc unmonitorFlow {fid} {
-    $self instvar topo_ 
-    $topo_ instvar redpdflowmon_ redpdq_
-
-    foreach flow [$redpdflowmon_ flows] {
-	if {[$flow set flowid_] == $fid} {
-	    #unmonitor the flow
-	    $redpdq_ unmonitor-flow $flow 
-	}
-    }	
-}
-
-TestSuite instproc unresponsiveFlow {fid penalty} {
-    $self instvar topo_ 
-    $topo_ instvar redpdflowmon_ redpdq_
-
-    foreach flow [$redpdflowmon_ flows] {
-	if {[$flow set flowid_] == $fid} {
-	    #set the flow unresponsive 
-	    $redpdq_ unresponsive-flow $flow 
-	    #set unresponsive penalty imposed on an unresponsive flow
-	    $redpdq_ set unresponsive_penalty_ $penalty
-	}
-    }	
-}
-
-#
-# Start monitoring tcp1 at time 10.0 with probability 0.1,
-# and unmonitor it at 20.0
-#
-Class Test/simple -superclass TestSuite
-Test/simple instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ simple
-    $self next pktTraceFile
-}
-Test/simple instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $topo_ instvar redpdflowmon_ redpdq_
-
-
-    set stoptime 30.0
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 1]
-    $tcp1 set window_ 50
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 2]
-    $tcp2 set window_ 50
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-
-    $ns_ at 10.0 "$self monitorFlow 1 0.1"
-    $ns_ at 20.0 "$self unmonitorFlow 1"
-
-    $self tcpDump $tcp1 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-#
-# Start monitoring udp at time 10.0 with probability 0.1, 
-# declare it unresponsive at 20.0 and set unresponsive_penalty_ 3.0
-#
-Class Test/unresponsive -superclass TestSuite
-Test/unresponsive instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ unresponsive
-    $self next pktTraceFile
-}
-Test/unresponsive instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $topo_ instvar redpdflowmon_ redpdq_
-
-    set stoptime 30.0
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 1]
-    $tcp1 set window_ 50
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 2]
-    $tcp2 set window_ 50
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-
-    set udp [$ns_ create-connection UDP $node_(s1) Null $node_(s4) 3]
-    set cbr [$udp attach-app Traffic/CBR]
-    $cbr set rate_ 0.5Mb
-    $ns_ at 1.0 "$cbr start"
-    
-    $ns_ at 10.0 "$self monitorFlow 3 0.1"
-    $ns_ at 20.0 "$self unresponsiveFlow 3 3"
-
-    $self tcpDump $tcp1 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-#
-# drop from all flows at a fixed configured probability
-#
-Class Test/frp -superclass TestSuite
-Test/frp instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ frp
-    $self next pktTraceFile
-}
-Test/frp instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $topo_ instvar redpdflowmon_ redpdq_
-
-    set stoptime 30.0
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 1]
-    $tcp1 set window_ 50
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 2]
-    $tcp2 set window_ 50
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-
-    #set the constant dropping probability
-    $redpdq_ set P_testFRp_ 0.1
-
-    $self tcpDump $tcp1 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-#
-# one complete test using the identification engine
-#
-Class Test/complete -superclass TestSuite
-Test/complete instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ complete
-    $self next pktTraceFile
-}
-Test/complete instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $topo_ instvar redpdflowmon_ redpdq_ redpdlink_
-
-    set stoptime 30.0
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 1]
-    $tcp1 set window_ 50
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 2]
-    $tcp2 set window_ 50
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-
-    set udp [$ns_ create-connection UDP $node_(s1) Null $node_(s4) 3]
-    set cbr [$udp attach-app Traffic/CBR]
-    $cbr set rate_ 0.5Mb
-    $ns_ at 1.0 "$cbr start"
-
-    set redpdsim [new REDPDSim $ns_ $redpdq_ $redpdflowmon_ $redpdlink_ 0 true]
-    
-    $self tcpDump $tcp1 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-TestSuite instproc printall { fmon time packetsize} {
-	set packets [$fmon set pdepartures_]
-	set linkBps [ expr 500000/8 ]
-	set utilization [expr ($packets*$packetsize)/($time*$linkBps)]
-	puts "link utilization [format %.3f $utilization]"
-}
-
-#
-# one complete test using the identification engine, with CBR flows only
-#
-Class Test/cbrs -superclass TestSuite
-Test/cbrs instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ cbrs
-    Queue/RED/PD set noidle_ false
-    $self next pktTraceFile
-}
-Test/cbrs instproc run {} {
-    $self instvar ns_ node_ testName_ net_ topo_
-    $self setTopo
-    $topo_ instvar redpdflowmon_ redpdq_ redpdlink_
-    set packetsize_ 200
-    Application/Traffic/CBR set random_ 0
-    Application/Traffic/CBR set packetSize_ $packetsize_
-
-    set slink [$ns_ link $node_(r1) $node_(r2)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-    $ns_ attach-fmon $slink $fmon
-
-    set stoptime 30.0
-    #set stoptime 5.0
-    set udp1 [$ns_ create-connection UDP $node_(s1) Null $node_(s3) 1]
-    set cbr1 [$udp1 attach-app Traffic/CBR]
-    $cbr1 set rate_ 0.1Mb
-    $cbr1 set random_ 0.005
-
-    set udp2 [$ns_ create-connection UDP $node_(s2) Null $node_(s3) 2]
-    set cbr2 [$udp2 attach-app Traffic/CBR]
-    $cbr2 set rate_ 0.1Mb
-    $cbr2 set random_ 0.005
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.2 "$cbr1 start"
-    $ns_ at 0.1 "$cbr2 start"
-
-    set udp [$ns_ create-connection UDP $node_(s1) Null $node_(s4) 3]
-    set cbr [$udp attach-app Traffic/CBR]
-    $cbr set rate_ 0.5Mb
-    $cbr set random_ 0.001
-    $ns_ at 0.0 "$cbr start"
-
-    set redpdsim [new REDPDSim $ns_ $redpdq_ $redpdflowmon_ $redpdlink_ 0 true]
-    
-    $self timeDump 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self printall $fmon $stoptime $packetsize_"
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-#
-# one complete test using the identification engine, with CBR flows only,
-# with noidle set to true, so that we don't drop from unresponsive flows
-# when it would result in the link going idle
-#
-Class Test/cbrs-noidle -superclass TestSuite
-Test/cbrs-noidle instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ cbrs-noidle
-    Queue/RED/PD set noidle_ true
-    Test/cbrs-noidle instproc run {} [Test/cbrs info instbody run ]
-    $self next pktTraceFile
-}
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-red.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-red.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-red.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-red.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1109 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-red.tcl,v 1.64 2007/09/25 05:30:57 sallyfloyd Exp $
-#
-# This test suite reproduces most of the tests from the following note:
-# Floyd, S., 
-# Ns Simulator Tests for Random Early Detection (RED), October 1996.
-# URL ftp://ftp.ee.lbl.gov/papers/redsims.ps.Z.
-#
-# To run all tests: test-all-red
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Queue/RED set use_mark_p_ false
-# The default is being changed to true.
-
-catch "cd $dir"
-#Agent/TCP set oldCode_ true
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-Agent/TCP set SetCWRonRetransmit_ true
-# Changing the default value.
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set redq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$redq trace curq_
-	$redq trace ave_
-	$redq attach $tchan_
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-
-    # force identical behavior to ns-1.
-    # the recommended value for linterm is now 10
-    # and is placed in the default file (3/31/97)
-    [[$ns link $node_(r1) $node_(r2)] queue] set linterm_ 50
-    [[$ns link $node_(r2) $node_(r1)] queue] set linterm_ 50
-}   
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 10ms RED
-    $ns duplex-link $node_(r2) $node_(r1) 1.5Mb 10ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 3ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for RED gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-			else if ($1 == "a" && NF>2)
-				print $2, $3 >> "temp.a";
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q temp.a 
-	exec touch temp.a temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	puts $f \n\"ave_queue
-	exec cat temp.a >@ $f
-	###puts $f \n"thresh
-	###puts $f 0 [[ns link $r1 $r2] get thresh]
-	###puts $f $end [[ns link $r1 $r2] get thresh]
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-TestSuite instproc mainSim {TCPStyle {window 15} } {
-    $self instvar ns_ node_ testName_ 
-    set stoptime 10.0
-    
-    if {$TCPStyle=="Reno"} {
-	set sourceType TCP/Reno;  
-	set sinkType TCPSink;
-    } elseif {$TCPStyle=="Sack1"} {
-	set sourceType TCP/Sack1;  
-	set sinkType TCPSink/Sack1;
-    }
-    set tcp1 [$ns_ create-connection $sourceType $node_(s1) $sinkType $node_(s3) 0]
-    set tcp2 [$ns_ create-connection $sourceType $node_(s2) $sinkType $node_(s3) 1]
-    $tcp1 set window_ $window
-    $tcp2 set window_ $window
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-}
-
-Class Test/red1 -superclass TestSuite
-Test/red1 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net2 
-    set test_ red1
-    set guide_ "RED, without ECN."
-    $self next
-}
-Test/red1 instproc run {} {
-    $self instvar ns_ node_ testName_ net_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    $self mainSim Reno
-    $ns_ run
-}
-
-Class Test/ecn -superclass TestSuite
-Test/ecn instproc init {} {
-    $self instvar net_ test_ guide_
-    Queue/RED set setbit_ true
-    Agent/TCP set old_ecn_ 1
-    set net_	net2
-    set test_	ecn
-    set guide_ "RED with ECN."
-    $self next
-}
-Test/ecn instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    puts "Guide: $guide_"
-    $self setTopo 
-
-    set stoptime 10.0
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $redq set setbit_ true
-
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 15
-    $tcp1 set ecn_ 1
-
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s3) 1]
-    $tcp2 set window_ 15
-    $tcp2 set ecn_ 1
-        
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-        
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-        
-    $self tcpDump $tcp1 5.0
-        
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-        
-    $ns_ run
-}
-
-# "Red2" changes some of the RED gateway parameters.
-# This should give worse performance than "red1".
-Class Test/red2 -superclass TestSuite
-Test/red2 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	red2
-    set guide_ "RED, without ECN, with different parameters."
-    $self next
-}
-Test/red2 instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-
-    set stoptime 10.0
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $redq set thresh_ 5
-    $redq set maxthresh_ 10
-    $redq set q_weight_ 0.003
-	
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 15
-
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s3) 1]
-    $tcp2 set window_ 15
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-# The queue is measured in "packets".
-Class Test/red_twoway -superclass TestSuite
-Test/red_twoway instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	red_twoway
-    set guide_ "RED, two-way traffic, queue measured in packets."
-    $self next
-}
-Test/red_twoway instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-
-    set stoptime 10.0
-	
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 15
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s4) 1]
-    $tcp2 set window_ 15
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Reno $node_(s3) TCPSink $node_(s1) 2]
-    $tcp3 set window_ 15
-    set tcp4 [$ns_ create-connection TCP/Reno $node_(s4) TCPSink $node_(s2) 3]
-    $tcp4 set window_ 15
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-# The queue is measured in "bytes".
-Class Test/red_twowaybytes -superclass TestSuite
-Test/red_twowaybytes instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	red_twowaybytes
-    set guide_ "RED, two-way traffic, queue measured in bytes."
-    Queue/RED set ns1_compat_ true
-    $self next
-}
-Test/red_twowaybytes instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-
-    set stoptime 10.0
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-    $redq set bytes_ true
-    $redq set queue_in_bytes_ true
-		
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-    $tcp1 set window_ 15
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s4) 1]
-    $tcp2 set window_ 15
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Reno $node_(s3) TCPSink $node_(s1) 2]
-    $tcp3 set window_ 15
-    set tcp4 [$ns_ create-connection TCP/Reno $node_(s4) TCPSink $node_(s2) 3]
-    $tcp4 set window_ 15
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-#
-#######################################################################
-
-TestSuite instproc create_flowstats {} {
-
-	global flowfile flowchan
-	$self instvar ns_ node_ r1fm_
-
-	set r1fm_ [$ns_ makeflowmon Fid]
-	set flowchan [open $flowfile w]
-	$r1fm_ attach $flowchan
-	$ns_ attach-fmon [$ns_ link $node_(r1) $node_(r2)] $r1fm_ 1
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [pkts]
-#	(verified compatible for ns2 - kfall, 10/30/97)
-TestSuite instproc unforcedmakeawk { } {
-        set awkCode {
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && $14 > 0) {
-			    print 100.0 * $9/$13, 100.0 * $10 / $14
-			}
-			prev = $2;
-                } else if ($13 > 0 && $14 > 0) {
-                        print 100.0 * $9 / $13, 100.0 * $10 / $14
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [bytes]
-#	(modified for compatibility with ns2 flowmon - kfall, 10/30/97)
-TestSuite instproc forcedmakeawk { } {
-        set awkCode {
-            BEGIN { print "\"flow 0" }
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && ($17 - $15) > 0) {
-				print 100.0 * $9/$13, 100.0 * ($19 - $11) / ($17 - $15);
-			}
-			prev = $2;
-                } else if ($13 > 0 && ($17 - $15) > 0) {
-                        print 100.0 * $9 / $13, 100.0 * ($19 - $11) / ($17 - $15)
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#      x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#      y axis: # drops for this flow / # drops [pkts and bytes combined]
-TestSuite instproc allmakeawk { } {
-    set awkCode {
-        BEGIN {prev=-1; tot_bytes=0; tot_packets=0; forced_total=0; unforced_total=0}
-        {
-            if ($5 != prev) {
-                print " "; print "\"flow ",$5;
-                prev = $5
-            }
-            tot_bytes = $19-$11;
-            forced_total= $16-$14;
-            tot_packets = $10;
-            tot_arrivals = $9;
-            unforced_total = $14;
-            if (unforced_total + forced_total > 0) {
-                if ($14 > 0) {
-                    frac_packets = tot_packets/$14;
-                }
-                else { frac_packets = 0;}
-                if ($17-$15 > 0) {
-                    frac_bytes = tot_bytes/($17-$15);
-                }
-                else {frac_bytes = 0;} 
-                if ($13 > 0) {
-                    frac_arrivals = tot_arrivals/$13;
-                }
-                else {frac_arrivals = 0;}
-                if (frac_packets + frac_bytes > 0) {
-                    unforced_total_part = frac_packets * unforced_total / ( unforced_total + forced_total)
-                    forced_total_part = frac_bytes * forced_total / ( unforced_total + forced_total)
-                    print 100.0 * frac_arrivals, 100.0 * ( unforced_total_part +forced_total_part)
-                }
-            }
-        }
-    }
-    return $awkCode
-}
-
-TestSuite instproc create_flow_graph { graphtitle graphfile } {
-        global flowfile quiet
-	$self instvar awkprocedure_
-
-        if {$quiet == "false"} {
-		puts "awkprocedure: $awkprocedure_"
-	}
-
-        set tmpfile1 /tmp/fg1[pid]
-        set tmpfile2 /tmp/fg2[pid]
-
-        exec rm -f $graphfile
-        set outdesc [open $graphfile w]
-        #
-        # this next part is xgraph specific
-        #
-        puts $outdesc "TitleText: $graphtitle"
-        puts $outdesc "Device: Postscript"
-
-        exec rm -f $tmpfile1 $tmpfile2
-	if {$quiet == "false"} {
-        	puts "writing flow xgraph data to $graphfile..."
-	}
-
-        exec sort -n -k2 -k1 -o $flowfile $flowfile
-        exec awk [$self $awkprocedure_] $flowfile >@ $outdesc
-        close $outdesc
-}
-
-TestSuite instproc finish_flows testname {
-	global flowgraphfile flowfile flowchan quiet
-	$self instvar r1fm_
-	$r1fm_ dump
-	close $flowchan
-	$self create_flow_graph $testname $flowgraphfile
-	if {$quiet == "false"} {
-		puts "running xgraph..."
-	}
-	exec cp $flowgraphfile temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -lx 0,100 -ly 0,100 -x "% of data bytes" -y "% of discards" $flowgraphfile &
-	}
-	exit 0
-}
-
-
-TestSuite instproc new_tcp { startTime source dest window fid verbose size } {
-	$self instvar ns_
-	set tcp [$ns_ create-connection TCP/Reno $source TCPSink $dest $fid]
-	$tcp set window_ $window
-	if {$size > 0}  {$tcp set packetSize_ $size }
-	set ftp [$tcp attach-app FTP]
-	$ns_ at $startTime "$ftp start"
-	if {$verbose == "1"} {
-
-	  $self tcpDumpAll $tcp 20.0 $fid 
-	}
-}
-
-TestSuite instproc new_cbr { startTime source dest pktSize interval fid } {
-
-	$self instvar ns_
-    set s_agent [new Agent/UDP]	
-    set d_agent [new Agent/LossMonitor]
-    $s_agent set fid_ $fid 
-    $d_agent set fid_ $fid 
-    set cbr [new Application/Traffic/CBR]
-    $cbr attach-agent $s_agent
-    $ns_ attach-agent $source $s_agent
-    $ns_ attach-agent $dest $d_agent
-    $ns_ connect $s_agent $d_agent
-
-    if {$pktSize > 0} {
-	$cbr set packetSize_ $pktSize
-    }
-    $cbr set rate_ [expr 8 * $pktSize / $interval]
-    $ns_ at $startTime "$cbr start"
-}
-
-TestSuite instproc dumpflows interval {
-    $self instvar dumpflows_inst_ ns_ r1fm_
-    $self instvar awkprocedure_ dump_pthresh_
-    global flowchan
-
-    if ![info exists dumpflows_inst_] {
-        set dumpflows_inst_ 1
-        $ns_ at 0.0 "$self dumpflows $interval"
-        return  
-    }
-    if { $awkprocedure_ == "unforcedmakeawk" } {
-	set pcnt [$r1fm_ set epdrops_]
-    } elseif { $awkprocedure_ == "forcedmakeawk" } {
-	set pcnt [expr [$r1fm_ set pdrops_] - [$r1fm_ set epdrops_]]
-    } elseif { $awkprocedure_ == "allmakeawk" } {
-	set pcnt [$r1fm_ set pdrops_]
-    } else {
-	puts stderr "unknown handling of flow dumps!"
-	exit 1
-    }
-    if { $pcnt >= $dump_pthresh_ } {
-	    $r1fm_ dump
-	    flush $flowchan
-	    foreach f [$r1fm_ flows] {
-		$f reset
-	    }
-	    $r1fm_ reset
-	    set interval 2.0
-    } else {
-	    set interval 1.0
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self dumpflows $interval"
-}   
-
-TestSuite instproc droptest { stoptime } {
-	$self instvar ns_ node_ testName_ r1fm_ awkprocedure_
-
-	set forwq [[$ns_ link $node_(r1) $node_(r2)] queue]
-	set revq [[$ns_ link $node_(r2) $node_(r1)] queue]
-
-	$forwq set mean_pktsize_ 1000
-	$revq set mean_pktsize_ 1000
-	$forwq set linterm_ 10
-	$revq set linterm_ 10
-	$forwq set limit_ 100
-	$revq set limit_ 100
-
-	$self create_flowstats 
-	$self dumpflows 10.0
-
-	$forwq set bytes_ true
-	$forwq set queue_in_bytes_ true
-	$forwq set wait_ false
-
-        $self new_tcp 1.0 $node_(s1) $node_(s3) 100 1 1 1000
-	$self new_tcp 1.2 $node_(s2) $node_(s4) 100 2 1 50
-	$self new_cbr 1.4 $node_(s1) $node_(s4) 190 0.003 3
-
-	$ns_ at $stoptime "$self finish_flows $testName_"
-
-	$ns_ run
-}
-
-
-Class Test/flows_unforced -superclass TestSuite
-Test/flows_unforced instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_    net2   
-    set test_   flows_unforced
-    set guide_ "RED, sending rate vs. packet drop rate, unforced packet drops."
-    Queue/RED set gentle_ false
-    $self next noTraceFiles; # zero here means don't product all.tr
-}   
-
-Test/flows_unforced instproc run {} {
-
-	$self instvar ns_ node_ testName_ r1fm_ awkprocedure_ guide_
-        puts "Guide: $guide_"
-	$self instvar dump_pthresh_
-	$self setTopo
-        set stoptime 500.0
-	set testName_ test_flows_unforced
-	set awkprocedure_ unforcedmakeawk
-	set dump_pthresh_ 100
-
-	$self droptest $stoptime
-
-}
-
-Class Test/flows_forced -superclass TestSuite
-Test/flows_forced instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_    net2   
-    set test_   flows_forced
-    set guide_ "RED, sending rate vs. packet drop rate, forced packet drops."
-    Queue/RED set gentle_ false
-    $self next noTraceFiles; # zero here means don't product all.tr
-}   
-
-Test/flows_forced instproc run {} {
-
-	$self instvar ns_ node_ testName_ r1fm_ awkprocedure_ guide_
-        puts "Guide: $guide_"
-	$self instvar dump_pthresh_
-	$self setTopo
- 
-        set stoptime 500.0
-	set testName_ test_flows_forced
-	set awkprocedure_ forcedmakeawk
-	set dump_pthresh_ 100
-
-	$self droptest $stoptime
-}
-
-Class Test/flows_combined -superclass TestSuite
-Test/flows_combined instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_    net2   
-    set test_   flows_combined
-    set guide_ "RED, sending rate vs. packet drop rate, all packet drops."
-    Queue/RED set gentle_ false
-    $self next noTraceFiles; # zero here means don't product all.tr
-}   
-
-Test/flows_combined instproc run {} {
-
-	$self instvar ns_ node_ testName_ r1fm_ awkprocedure_ guide_
-	$self instvar dump_pthresh_
-        puts "Guide: $guide_"
-	$self setTopo
- 
-        set stoptime 500.0
-	set testName_ test_flows_combined
-	set awkprocedure_ allmakeawk
-	set dump_pthresh_ 100
-
-	$self droptest $stoptime
-}
-
-#--------------------------------------------------------------
-
-TestSuite instproc printall { fmon } {
-        puts "total_drops [$fmon set pdrops_] total_packets [$fmon set pdepartures_]"
-}
-
-Class Test/ungentle -superclass TestSuite
-Test/ungentle instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3 
-    set test_ ungentle
-    set guide_ "RED, not gentle."
-    Queue/RED set gentle_ false
-    $self next
-}
-Test/ungentle instproc run {} {
-    $self instvar ns_ node_ testName_ net_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TCP set packetSize_ 1500
-    Agent/TCP set window_ 50
-    Queue/RED set bytes_ true
-    Agent/TCP set timerfix_ false
-    # The default is being changed to true.
-
-    set stoptime 40.0
-    set slink [$ns_ link $node_(r1) $node_(r2)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-   #$ns_ attach-fmon $slink $fmon
-    $ns_ attach-fmon $slink $fmon 1
-    
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set packetSize_ 1000
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 2]
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 3]
-    $tcp4 set packetSize_ 512
-    set tcp5 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 4]
-    set tcp6 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 5]
-    set tcp7 [$ns_ create-connection TCP/Sack1 $node_(s4) TCPSink/Sack1 $node_(s2) 6]
-    set tcp8 [$ns_ create-connection TCP/Sack1 $node_(s3) TCPSink/Sack1 $node_(s1) 7]
-    $tcp8 set packetSize_ 2000
-
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-    set ftp3 [$tcp3 attach-app FTP]
-    set ftp4 [$tcp4 attach-app FTP]
-    set ftp5 [$tcp5 attach-app FTP]
-    set ftp6 [$tcp6 attach-app FTP]
-    set ftp7 [$tcp7 attach-app FTP]
-    set ftp8 [$tcp8 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-    $ns_ at 5.0 "$ftp3 start"
-    $ns_ at 6.0 "$ftp4 start"
-    $ns_ at 9.0 "$ftp5 start"
-    $ns_ at 10.0 "$ftp6 start"
-    $ns_ at 13.0 "$ftp7 start"
-    $ns_ at 14.0 "$ftp8 start"
-    $ns_ at $stoptime "$self printall $fmon"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-Class Test/gentle -superclass TestSuite
-Test/gentle instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3 
-    set test_ gentle
-    set guide_ "RED, gentle."
-    Queue/RED set gentle_ true
-    Test/gentle instproc run {} [Test/ungentle info instbody run ]
-    $self next
-}
-
-Class Test/gentleEcn -superclass TestSuite
-Test/gentleEcn instproc init {} {
-    $self instvar net_ test_ guide_
-    Queue/RED set setbit_ true
-    Agent/TCP set ecn_ 1
-    set net_ net3 
-    set test_ gentleEcn
-    set guide_ "RED, gentle, with ECN."
-    Queue/RED set gentle_ true
-    Test/gentleEcn instproc run {} [Test/ungentle info instbody run ]
-    $self next
-}
-
-Class Test/gentleEcn1 -superclass TestSuite
-Test/gentleEcn1 instproc init {} {
-    $self instvar net_ test_ guide_
-    Queue/RED set setbit_ true
-    Agent/TCP set ecn_ 1
-    set net_ net3 
-    set test_ gentleEcn1
-    set guide_ "RED, gentle, with ECN, with mark_p_ set to 0.1."
-    Queue/RED set gentle_ true
-    Queue/RED set mark_p_ 0.1
-    Queue/RED set use_mark_p_ true
-    Test/gentleEcn1 instproc run {} [Test/ungentle info instbody run ]
-    $self next
-}
-
-Class Test/ungentleBadParams -superclass TestSuite
-Test/ungentleBadParams instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3 
-    set test_ ungentleBadParams
-    set guide_ "RED, not gentle, bad RED parameters."
-    Queue/RED set gentle_ false
-    Queue/RED set linterm_ 50
-    Queue/RED set maxthresh_ 10
-    Test/ungentleBadParams instproc run {} [Test/ungentle info instbody run ]
-    $self next
-}
-
-Class Test/gentleBadParams -superclass TestSuite
-Test/gentleBadParams instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3 
-    set test_ gentleBadParams
-    Queue/RED set gentle_ true
-    set guide_ "RED, gentle, bad RED parameters."
-    Queue/RED set linterm_ 50
-    Queue/RED set maxthresh_ 10
-    Test/gentleBadParams instproc run {} [Test/ungentle info instbody run ]
-    $self next
-}
-
-Class Test/q_weight -superclass TestSuite
-Test/q_weight instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net2 
-    set test_ q_weight
-    set guide_ "RED, q_weight set to 0.002."
-    $self next
-}
-Test/q_weight instproc run {} {
-    $self instvar ns_ node_ testName_ net_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    $self mainSim Sack1
-    $ns_ run
-}
-
-Class Test/q_weight_auto -superclass TestSuite
-Test/q_weight_auto instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net2 
-    set test_ q_weight_auto
-    Queue/RED set q_weight_ 0.0
-    set guide_ "RED, q_weight and maxthresh_ set automatically."
-    Queue/RED set maxthresh_ 0
-    Test/q_weight_auto instproc run {} [Test/q_weight info instbody run ]
-    $self next
-}
-
-# Class Test/q_weight1 -superclass TestSuite
-# Test/q_weight1 instproc init {} {
-#     $self instvar net_ test_ guide_
-#     set net_ net2 
-#     set test_ q_weight
-#     $self next
-# }
-# Test/q_weight1 instproc run {} {
-#     $self instvar ns_ node_ testName_ net_
-#     $self setTopo
-#     $ns_ at 0.0 "$ns_ bandwidth $node_(r1) $node_(r2) 100Mb duplex"
-#     $self mainSim Sack1 100
-#     $ns_ run
-# }
-# 
-# Class Test/q_weight1_auto -superclass TestSuite
-# Test/q_weight1_auto instproc init {} {
-#     $self instvar net_ test_ guide_
-#     set net_ net2 
-#     set test_ q_weight1_auto
-#     Queue/RED set q_weight_ 0.0
-#     Queue/RED set maxthresh_ 0
-#     Test/q_weight1_auto instproc run {} [Test/q_weight1 info instbody run ]
-#     $self next
-# }
-
-##
-## Packets are marked instead of dropped if the average queue is
-## less than maxthresh.
-##
-Class Test/congested -superclass TestSuite
-Test/congested instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3 
-    set test_ congested
-    set guide_ "RED, not gentle, ECN."
-    Queue/RED set use_mark_p_ false
-    $self next
-}
-Test/congested instproc run {} {
-    $self instvar ns_ node_ testName_ net_ guide_
-    puts "Guide: $guide_"
-    Agent/TCP set packetSize_ 1500
-    Agent/TCP set window_ 75
-    Agent/TCP set ecn_ 1
-    Queue/RED set bytes_ true
-    Queue/RED set gentle_ false
-    Queue/RED set setbit_ true
-    $self setTopo
-    # The default is being changed to true.
-
-    set stoptime 5.0
-    set slink [$ns_ link $node_(r1) $node_(r2)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-   #$ns_ attach-fmon $slink $fmon
-    $ns_ attach-fmon $slink $fmon 1
-    
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-
-    set ftp1 [$tcp1 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at $stoptime "$self printall $fmon"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-##
-## Packets are marked instead of dropped if the buffer is not full
-##
-Class Test/congested_mark_p -superclass TestSuite
-Test/congested_mark_p instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3 
-    set test_ congested_mark_p
-    set guide_ "RED, not gentle, ECN.  Packets not dropped unless buffer full."
-    Queue/RED set mark_p_ 2.0
-    Queue/RED set use_mark_p_ true
-    Test/congested_mark_p instproc run {} [Test/congested info instbody run ]
-    $self next
-}
-
-##
-## Packets are marked instead of dropped if the drop probability
-## is less than one.
-##
-Class Test/congested1_mark_p -superclass TestSuite
-Test/congested1_mark_p instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3 
-    set test_ congested1_mark_p
-    set guide_ "RED, gentle, ECN.  Packets sometimes dropped instead of marked."
-    Queue/RED set mark_p_ 1.0
-    Queue/RED set use_mark_p_ true
-    $self next
-}
-Test/congested1_mark_p instproc run {} {
-    $self instvar ns_ node_ testName_ net_ guide_
-    puts "Guide: $guide_"
-    Agent/TCP set packetSize_ 1500
-    Agent/TCP set window_ 1000
-    Agent/TCP set ecn_ 1
-    Queue/RED set bytes_ true
-    Queue/RED set gentle_ true
-    Queue/RED set setbit_ true
-    $self setTopo
-    # The default is being changed to true.
-
-    set stoptime 5.0
-    set slink [$ns_ link $node_(r1) $node_(r2)]; # link to collect stats on
-    set fmon [$ns_ makeflowmon Fid]
-   #$ns_ attach-fmon $slink $fmon
-    $ns_ attach-fmon $slink $fmon 1
-    
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 0]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 0.2 "$ftp2 start"
-    $ns_ at $stoptime "$self printall $fmon"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-##
-## Packets are marked instead of dropped if the buffer is not full.
-##
-Class Test/congested2_mark_p -superclass TestSuite
-Test/congested2_mark_p instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3 
-    set test_ congested2_mark_p
-    set guide_ "RED, gentle, ECN.  Packets not dropped unless buffer full."
-    Queue/RED set mark_p_ 2.0
-    Queue/RED set use_mark_p_ true
-    Test/congested2_mark_p instproc run {} [Test/congested1_mark_p info instbody run ]
-    $self next
-}
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-red.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-red.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-red.txt	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-red.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,32 +0,0 @@
-Four new tests illustrate and validate the new "gentle_" 
-parameter added to RED.  These tests can be run with the
-following commands:
-
-../../ns test-suite-red.tcl ungentle
-../../ns test-suite-red.tcl gentle
-../../ns test-suite-red.tcl ungentleBadParams
-../../ns test-suite-red.tcl gentleBadParams
-
-The "gentle_" parameter implements a suggestion from
-an October 1997 email on "Optimum functions for computing the drop
-probability" available from "http://www.aciri.org/floyd/REDfunc.txt".
-From the ns man page on "gentle_":
-
- Set to true to increase the packet drop rate slowly from max_p to
- 1 as the average queue size ranges from maxthresh to twice maxthresh.
- The default is set to false, and max_p increases abruptly from
- max_p to 1 when the average queue size exceeds maxthresh.
-
-The first two tests compare the behavior of RED with "gentle_"
-set to false, and to true, with the default RED parameters.
-There is very little difference between the two tests.
-The next two tests compare the behavior of RED with "gentle_"
-set to false, and to true, with a less-optimal setting of
-the RED parameters.  (E.g., with "max_p" set to 0.02 instead of
-to 0.1.)  These two tests show that with "gentle_" set to true,
-RED gives more robust performance with less-optimal settings of
-the RED parameters.
-
-
-I will try to add other proposed RED modifications to the
-NS distribution as my spare time permits...
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rem.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rem.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rem.tcl	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rem.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,637 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# To run all tests: test-all-rem
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set singledup_ 0
-Agent/TCP set overhead_ 0.001
-# The default is being changed to 1
-catch "cd $dir"
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set remq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$remq trace curq_
-	$remq attach $tchan_
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms REM
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 10ms REM
-    $ns duplex-link $node_(r2) $node_(r1) 1.5Mb 10ms REM
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 3ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for REM gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q
-	exec touch temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-Class Test/rem1 -superclass TestSuite
-Test/rem1 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ rem1
-    $self next pktTraceFile
-}
-Test/rem1 instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-
-    set remq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$remq set markpkts_ false 
-   	$remq set phi_ 5 # This is just for fun.
-
-    set stoptime 10.0
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 50
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 50
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-Class Test/ecn -superclass TestSuite
-Test/ecn instproc init {} {
-    $self instvar net_ test_
-    Queue/REM set setbit_ true
-    Agent/TCP set old_ecn_ 1
-    set net_	net2
-    set test_	ecn
-    $self next pktTraceFile
-}
-Test/ecn instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo 
-
-    set stoptime 10.0
-    set remq [[$ns_ link $node_(r1) $node_(r2)] queue]
-		
-   	$remq set markpkts_ true 
-   	$remq set phi_ 5 # This is just for fun.
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 50
-    $tcp1 set ecn_ 1
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 50
-    $tcp2 set ecn_ 1
-        
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-        
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-        
-    $self tcpDump $tcp1 5.0
-        
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-        
-    $ns_ run
-}
-
-Class Test/rem2 -superclass TestSuite
-Test/rem2 instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	rem2
-    $self next pktTraceFile
-}
-Test/rem2 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set remq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$remq set markpkts_ false 
-   	$remq set queue_in_bytes_ false 
-	
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 100 
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 100
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-# The queue is measured in "packets".
-Class Test/rem_twoway -superclass TestSuite
-Test/rem_twoway instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	rem_twoway
-    $self next pktTraceFile
-}
-Test/rem_twoway instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set remq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$remq set markpkts_ false 
-   	$remq set phi_ 5 
-	
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 100 
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 1]
-    $tcp2 set window_ 100 
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s3) TCPSink/Sack1 $node_(s1) 2]
-    $tcp3 set window_ 100 
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s4) TCPSink/Sack1 $node_(s2) 3]
-    $tcp4 set window_ 100 
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-Class Test/rem_twowayecn -superclass TestSuite
-Test/rem_twowayecn instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	rem_twowayecn
-    $self next pktTraceFile
-}
-Test/rem_twowayecn instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set remq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$remq set markpkts_ true 
-   	$remq set phi_ 5 
-		
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 100
-    $tcp1 set ecn_ 1
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 1]
-    $tcp2 set window_ 100
-    $tcp2 set ecn_ 1
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s3) TCPSink/Sack1 $node_(s1) 2]
-    $tcp3 set window_ 100
-    $tcp3 set ecn_ 1
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s4) TCPSink/Sack1 $node_(s2) 3]
-    $tcp4 set window_ 100
-    $tcp4 set ecn_ 1
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-#
-#######################################################################
-
-TestSuite instproc create_flowstats {} {
-
-	global flowfile flowchan
-	$self instvar ns_ node_ r1fm_
-
-	set r1fm_ [$ns_ makeflowmon Fid]
-	set flowchan [open $flowfile w]
-	$r1fm_ attach $flowchan
-	$ns_ attach-fmon [$ns_ link $node_(r1) $node_(r2)] $r1fm_ 1
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [pkts]
-#	(verified compatible for ns2 - kfall, 10/30/97)
-TestSuite instproc unforcedmakeawk { } {
-        set awkCode {
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && $14 > 0) {
-			    print 100.0 * $9/$13, 100.0 * $10 / $14
-			}
-			prev = $2;
-                } else if ($13 > 0 && $14 > 0) {
-                        print 100.0 * $9 / $13, 100.0 * $10 / $14
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [bytes]
-#	(modified for compatibility with ns2 flowmon - kfall, 10/30/97)
-TestSuite instproc forcedmakeawk { } {
-        set awkCode {
-            BEGIN { print "\"flow 0" }
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && ($17 - $15) > 0) {
-				print 100.0 * $9/$13, 100.0 * ($19 - $11) / ($17 - $15);
-			}
-			prev = $2;
-                } else if ($13 > 0 && ($17 - $15) > 0) {
-                        print 100.0 * $9 / $13, 100.0 * ($19 - $11) / ($17 - $15)
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#      x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#      y axis: # drops for this flow / # drops [pkts and bytes combined]
-TestSuite instproc allmakeawk { } {
-    set awkCode {
-        BEGIN {prev=-1; tot_bytes=0; tot_packets=0; forced_total=0; unforced_total=0}
-        {
-            if ($5 != prev) {
-                print " "; print "\"flow ",$5;
-                prev = $5
-            }
-            tot_bytes = $19-$11;
-            forced_total= $16-$14;
-            tot_packets = $10;
-            tot_arrivals = $9;
-            unforced_total = $14;
-            if (unforced_total + forced_total > 0) {
-                if ($14 > 0) {
-                    frac_packets = tot_packets/$14;
-                }
-                else { frac_packets = 0;}
-                if ($17-$15 > 0) {
-                    frac_bytes = tot_bytes/($17-$15);
-                }
-                else {frac_bytes = 0;} 
-                if ($13 > 0) {
-                    frac_arrivals = tot_arrivals/$13;
-                }
-                else {frac_arrivals = 0;}
-                if (frac_packets + frac_bytes > 0) {
-                    unforced_total_part = frac_packets * unforced_total / ( unforced_total + forced_total)
-                    forced_total_part = frac_bytes * forced_total / ( unforced_total + forced_total)
-                    print 100.0 * frac_arrivals, 100.0 * ( unforced_total_part +forced_total_part)
-                }
-            }
-        }
-    }
-    return $awkCode
-}
-
-TestSuite instproc create_flow_graph { graphtitle graphfile } {
-        global flowfile quiet
-	$self instvar awkprocedure_
-
-        if {$quiet == "false"} {
-		puts "awkprocedure: $awkprocedure_"
-	}
-
-        set tmpfile1 /tmp/fg1[pid]
-        set tmpfile2 /tmp/fg2[pid]
-
-        exec rm -f $graphfile
-        set outdesc [open $graphfile w]
-        #
-        # this next part is xgraph specific
-        #
-        puts $outdesc "TitleText: $graphtitle"
-        puts $outdesc "Device: Postscript"
-
-        exec rm -f $tmpfile1 $tmpfile2
-	if {$quiet == "false"} {
-        	puts "writing flow xgraph data to $graphfile..."
-	}
-
-        exec sort -n -k2 -o $flowfile $flowfile
-        exec awk [$self $awkprocedure_] $flowfile >@ $outdesc
-        close $outdesc
-}
-
-TestSuite instproc finish_flows testname {
-	global flowgraphfile flowfile flowchan quiet
-	$self instvar r1fm_
-	$r1fm_ dump
-	close $flowchan
-	$self create_flow_graph $testname $flowgraphfile
-	if {$quiet == "false"} {
-		puts "running xgraph..."
-	}
-	exec cp $flowgraphfile temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -lx 0,100 -ly 0,100 -x "% of data bytes" -y "% of discards" $flowgraphfile &
-	}
-	exit 0
-}
-
-
-TestSuite instproc new_tcp { startTime source dest window fid verbose size } {
-	$self instvar ns_
-	set tcp [$ns_ create-connection TCP/Sack1 $source TCPSink/Sack1 $dest $fid]
-	$tcp set window_ $window
-	if {$size > 0}  {$tcp set packetSize_ $size }
-	set ftp [$tcp attach-app FTP]
-	$ns_ at $startTime "$ftp start"
-	if {$verbose == "1"} {
-
-	  $self tcpDumpAll $tcp 20.0 $fid 
-	}
-}
-
-TestSuite instproc new_cbr { startTime source dest pktSize interval fid } {
-
-	$self instvar ns_
-    set s_agent [new Agent/UDP]	
-    set d_agent [new Agent/LossMonitor]
-    $s_agent set fid_ $fid 
-    $d_agent set fid_ $fid 
-    set cbr [new Application/Traffic/CBR]
-    $cbr attach-agent $s_agent
-    $ns_ attach-agent $source $s_agent
-    $ns_ attach-agent $dest $d_agent
-    $ns_ connect $s_agent $d_agent
-
-    if {$pktSize > 0} {
-	$cbr set packetSize_ $pktSize
-    }
-    $cbr set rate_ [expr 8 * $pktSize / $interval]
-    $ns_ at $startTime "$cbr start"
-}
-
-TestSuite instproc dumpflows interval {
-    $self instvar dumpflows_inst_ ns_ r1fm_
-    $self instvar awkprocedure_ dump_pthresh_
-    global flowchan
-
-    if ![info exists dumpflows_inst_] {
-        set dumpflows_inst_ 1
-        $ns_ at 0.0 "$self dumpflows $interval"
-        return  
-    }
-    if { $awkprocedure_ == "unforcedmakeawk" } {
-	set pcnt [$r1fm_ set epdrops_]
-    } elseif { $awkprocedure_ == "forcedmakeawk" } {
-	set pcnt [expr [$r1fm_ set pdrops_] - [$r1fm_ set epdrops_]]
-    } elseif { $awkprocedure_ == "allmakeawk" } {
-	set pcnt [$r1fm_ set pdrops_]
-    } else {
-	puts stderr "unknown handling of flow dumps!"
-	exit 1
-    }
-    if { $pcnt >= $dump_pthresh_ } {
-	    $r1fm_ dump
-	    flush $flowchan
-	    foreach f [$r1fm_ flows] {
-		$f reset
-	    }
-	    $r1fm_ reset
-	    set interval 2.0
-    } else {
-	    set interval 1.0
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self dumpflows $interval"
-}   
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rfc2001.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rfc2001.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rfc2001.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rfc2001.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,499 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-rfc2001.tcl,v 1.11 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-# This validation test does not need to be included in "./validate", but it 
-# should be kept for documentation purposes, as it is referred to in
-# other documents.  
-
-source misc.tcl
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-source topologies.tcl
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-TestSuite instproc finish file {
-	global quiet wrap PERL
-        exec $PERL ../../bin/set_flow_id -s all.tr | \
-          $PERL ../../bin/getrc -s 2 -d 3 | \
-          $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass NodeTopology/4nodes
-Topology/net4 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid] 
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype list} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "FullTcp"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp]
-	        set sink [new Agent/TCP/FullTcp]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpTahoe"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Tahoe]
-	        set sink [new Agent/TCP/FullTcp/Tahoe]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpNewreno"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Newreno]
-	        set sink [new Agent/TCP/FullTcp/Newreno]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpSack1"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Sack]
-	        set sink [new Agent/TCP/FullTcp/Sack]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 28
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 1.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-        $self drop_pkts $list
-
-        $self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-
-###################################################
-## Three drops, Reno has a retransmit timeout.
-###################################################
-
-Class Test/reno -superclass TestSuite
-Test/reno instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	reno
-	$self next
-}
-Test/reno instproc run {} {
-	Agent/TCP set bugFix_ false
-        $self setup Reno {14 26 28}
-}
-
-# Class Test/reno_bugfix -superclass TestSuite
-# Test/reno_bugfix instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	reno_bugfix
-# 	$self next
-# }
-# Test/reno_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-#         $self setup Reno {14 26 28}
-# }
-
-Class Test/newreno -superclass TestSuite
-Test/newreno instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	newreno
-	$self next
-}
-Test/newreno instproc run {} {
-	Agent/TCP set bugFix_ false
-        $self setup Newreno {14 26 28}
-}
-
-# Class Test/newreno_bugfix -superclass TestSuite
-# Test/newreno_bugfix instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno_bugfix
-# 	$self next
-# }
-# Test/newreno_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-#         $self setup Newreno {14 26 28}
-# }
-
-# Class Test/newreno_A -superclass TestSuite
-# Test/newreno_A instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno_A
-# 	$self next
-# }
-# Test/newreno_A instproc run {} {
-# 	Agent/TCP set bugFix_ false
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-#         $self setup Newreno {14 26 28}
-# }
-
-# Class Test/newreno_bugfix_A -superclass TestSuite
-# Test/newreno_bugfix_A instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno_bugfix_A
-# 	$self next
-# }
-# Test/newreno_bugfix_A instproc run {} {
-# 	Agent/TCP set bugFix_ true
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-#         $self setup Newreno {14 26 28}
-# }
-
-###################################################
-## Many drops, Reno has a retransmit timeout.
-###################################################
-
-
-Class Test/reno1 -superclass TestSuite
-Test/reno1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	reno1
-	$self next
-}
-Test/reno1 instproc run {} {
-	Agent/TCP set bugFix_ false
-        $self setup Reno {14 15 16 17 18 19 20 21 25 }
-}
-
-# Class Test/reno1_bugfix -superclass TestSuite
-# Test/reno1_bugfix instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	reno1_bugfix
-# 	$self next
-# }
-# Test/reno1_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-#         $self setup Reno {14 15 16 17 18 19 20 21 25 }
-# }
-
-Class Test/newreno1 -superclass TestSuite
-Test/newreno1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	newreno1
-	$self next
-}
-Test/newreno1 instproc run {} {
-	Agent/TCP set bugFix_ false
-        $self setup Newreno {14 15 16 17 18 19 20 21 25 }
-}
-
-# Class Test/newreno1_bugfix -superclass TestSuite
-# Test/newreno1_bugfix instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno1_bugfix
-# 	$self next
-# }
-# Test/newreno1_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-#         $self setup Newreno {14 15 16 17 18 19 20 21 25 }
-# }
-
-Class Test/newreno1_A -superclass TestSuite
-Test/newreno1_A instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	newreno1_A
-	$self next
-}
-Test/newreno1_A instproc run {} {
-	Agent/TCP set bugFix_ false
-	Agent/TCP/Newreno set newreno_changes1_ 1
-        $self setup Newreno {14 15 16 17 18 19 20 21 25 }
-}
-
-# Class Test/newreno1_A_bugfix -superclass TestSuite
-# Test/newreno1_A_bugfix instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno1_A_bugfix
-# 	$self next
-# }
-# Test/newreno1_A_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-#         $self setup Newreno {14 15 16 17 18 19 20 21 25 }
-# }
-
-###################################################
-## Multiple fast retransmits.
-###################################################
-
-Class Test/reno2 -superclass TestSuite
-Test/reno2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	reno2
-	$self next
-}
-Test/reno2 instproc run {} {
-	Agent/TCP set bugFix_ false
-        $self setup Reno {24 25 26 28 31 35 40 45 46 47 48 }
-}
-
-Class Test/reno2_bugfix -superclass TestSuite
-Test/reno2_bugfix instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	reno2_bugfix
-	$self next
-}
-Test/reno2_bugfix instproc run {} {
-	Agent/TCP set bugFix_ true
-#        $self setup Reno {24 25 26 28 31 35 37 40 43 47 48 }
-        $self setup Reno {24 25 26 28 31 35 40 45 46 47 48 }
-}
-
-Class Test/newreno2_A -superclass TestSuite
-Test/newreno2_A instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	newreno2_A
-	$self next
-}
-Test/newreno2_A instproc run {} {
-	Agent/TCP set bugFix_ false
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-}
-
-Class Test/newreno2_A_bugfix -superclass TestSuite
-Test/newreno2_A_bugfix instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	newreno2_A_bugfix
-	$self next
-}
-Test/newreno2_A_bugfix instproc run {} {
-	Agent/TCP set bugFix_ true
-	Agent/TCP/Newreno set newreno_changes1_ 1
-	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-}
-
-# Class Test/newreno3 -superclass TestSuite
-# Test/newreno3 instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno3
-# 	$self next
-# }
-# Test/newreno3 instproc run {} {
-# 	Agent/TCP set bugFix_ false
-# 	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-# }
-
-# Class Test/newreno3_bugfix -superclass TestSuite
-# Test/newreno3_bugfix instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno3_bugfix
-# 	$self next
-# }
-# Test/newreno3_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-# 	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-# }
-
-# Class Test/newreno4_A -superclass TestSuite
-# Test/newreno4_A instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno4_A
-# 	$self next
-# }
-# Test/newreno4_A instproc run {} {
-# 	Agent/TCP set bugFix_ false
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-# 	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-# }
-
-# Class Test/newreno4_A_bugfix -superclass TestSuite
-# Test/newreno4_A_bugfix instproc init topo {
-# 	$self instvar net_ defNet_ test_
-# 	set net_	$topo
-# 	set defNet_	net4
-# 	set test_	newreno4_A_bugfix
-# 	$self next
-# }
-# Test/newreno4_A_bugfix instproc run {} {
-# 	Agent/TCP set bugFix_ true
-# 	Agent/TCP/Newreno set newreno_changes1_ 1
-# 	$self setup Newreno {24 25 26 28 31 35 40 45 46 47 48 }
-# }
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rfc2581.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rfc2581.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rfc2581.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rfc2581.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,285 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-rfc2581.tcl,v 1.10 2006/10/03 11:10:10 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc.tcl
-source topologies.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Agent/TCP set rfc2988_ false
-Agent/TCP set singledup_ 0
-Agent/TCP set windowInit_ 1
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-TestSuite instproc finish file {
-	global quiet wrap PERL
-        exec $PERL ../../bin/set_flow_id -s all.tr | \
-          $PERL ../../bin/getrc -s 2 -d 3 | \
-          $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass NodeTopology/4nodes
-Topology/net4 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 10ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid] 
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype list} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_ guide_
-
-	puts "Guide: $guide_"
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink/DelAck $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1/DelAck  $node_(k1) $fid]
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink/DelAck $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 28
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 1.0 "$ftp1 produce 10"
-
-        $self tcpDump $tcp1 3.0
-        $self drop_pkts $list
-
-        $self traceQueues $node_(r1) [$self openTrace 3.0 $testName_]
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-
-###################################################
-## Checking for RFC2581-compliant immediate ACK on filling a hole.
-###################################################
-
-Class Test/immediateAck -superclass TestSuite
-Test/immediateAck instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	immediateAck
-	set guide_      "Tahoe, immediate ACK after an out-of-order packet."
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-	$self next
-}
-Test/immediateAck instproc run {} {
-	Agent/TCPSink/DelAck set interval_ 200ms
-        $self setup Tahoe {3 4}
-}
-
-Class Test/noImmediateAck -superclass TestSuite
-Test/noImmediateAck instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	noImmediateAck
-	set guide_      "Tahoe, no immediate ACK after an out-of-order packet."
-	Agent/TCPSink set RFC2581_immediate_ack_ false
-	Test/noImmediateAck instproc run {} [Test/immediateAck info instbody run ]
-	$self next
-}
-
-Class Test/immediateAckReno -superclass TestSuite
-Test/immediateAckReno instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	immediateAckReno
-	set guide_      "Reno, immediate ACK after an out-of-order packet."
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-	$self next
-}
-Test/immediateAckReno instproc run {} {
-	Agent/TCPSink/DelAck set interval_ 200ms
-        $self setup Reno {3 4}
-}
-
-Class Test/noImmediateAckReno -superclass TestSuite
-Test/noImmediateAckReno instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	noImmediateAckReno
-	set guide_      "Reno, no immediate ACK after an out-of-order packet."
-	Agent/TCPSink set RFC2581_immediate_ack_ false
-	Test/noImmediateAckReno instproc run {} [Test/immediateAckReno info instbody run ]
-	$self next
-}
-
-Class Test/immediateAckNewReno -superclass TestSuite
-Test/immediateAckNewReno instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	immediateAckNewReno
-	set guide_      "New Reno, immediate ACK after an out-of-order packet."
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-	$self next
-}
-Test/immediateAckNewReno instproc run {} {
-	Agent/TCPSink/DelAck set interval_ 200ms
-        $self setup Newreno {3 4}
-}
-
-Class Test/noImmediateAckNewReno -superclass TestSuite
-Test/noImmediateAckNewReno instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	noImmediateAckNewReno
-	set guide_      "New Reno, no immediate ACK after an out-of-order packet."
-	Agent/TCPSink set RFC2581_immediate_ack_ false
-	Test/noImmediateAckNewReno instproc run {} [Test/immediateAckNewReno info instbody run ]
-	$self next
-}
-
-Class Test/immediateAckSack -superclass TestSuite
-Test/immediateAckSack instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	immediateAckSack
-	set guide_      "Sack, immediate ACK after an out-of-order packet."
-	Agent/TCPSink set RFC2581_immediate_ack_ true
-	$self next
-}
-Test/immediateAckSack instproc run {} {
-	Agent/TCPSink/Sack1/DelAck set interval_ 200ms
-        $self setup Sack1 {3 4}
-}
-
-Class Test/noImmediateAckSack -superclass TestSuite
-Test/noImmediateAckSack instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	noImmediateAckSack
-	set guide_      "Sack, no immediate ACK after an out-of-order packet."
-	Agent/TCPSink set RFC2581_immediate_ack_ false
-	Test/noImmediateAckSack instproc run {} [Test/immediateAckSack info instbody run ]
-	$self next
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rfc793edu.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rfc793edu.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rfc793edu.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rfc793edu.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,530 +0,0 @@
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Agent/TCP set rfc2988_ false
-Agent/TCP set windowInit_ 1
-Agent/TCP set singledup_ 0
-Agent/TCP set minrto_ 0
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net8 -superclass Topology
-Topology/net8 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    set node_(k2) [$ns node]
-    set node_(k3) [$ns node]
-    set node_(k4) [$ns node]
-    set node_(k5) [$ns node]
-    set node_(k6) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(d1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1)   $node_(r1)  10Mb        2ms    DropTail 
-    $ns duplex-link $node_(r1)   $node_(k1)  256Kb       10ms    DropTail
-    $ns duplex-link $node_(k1)   $node_(k2)  256Kb       10ms    DropTail
-    $ns duplex-link $node_(k2)   $node_(k3)  256Kb       10ms    DropTail
-    $ns duplex-link $node_(k3)   $node_(k4)  256Kb       10ms    DropTail
-    $ns duplex-link $node_(k4)   $node_(k5)  256Kb       10ms    DropTail
-    $ns duplex-link $node_(k5)   $node_(k6)  256Kb       10ms    DropTail
-    $ns duplex-link $node_(k6)   $node_(r2)  256Kb       10ms    DropTail
-    $ns duplex-link $node_(r2)   $node_(d1)  10Mb        2ms    DropTail
-
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0.5
-    $ns queue-limit $node_(r1) $node_(k1) 30
-    set qmon [$ns monitor-queue $node_(r1) $node_(k1) 1 2]
-}
-
-
-Class Topology/net7 -superclass Topology
-Topology/net7 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 1Mb 10s DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 0.9Mb 100ms DropTail
-    
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0.5
-    $ns queue-limit $node_(r1) $node_(k1) 4000
-    set qmon [$ns monitor-queue $node_(r1) $node_(k1)  1 2]
-}
-
-Class Topology/net6 -superclass Topology
-Topology/net6 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 1Mb 100ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 10Mb 10ms DropTail
-    
-    $ns duplex-link-op $node_(s1) $node_(r1) orient left-right
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0.5
-    $ns queue-limit $node_(r1) $node_(k1) 4000
-    set qmon [$ns monitor-queue $node_(r1) $node_(k1)  1 2]
-
-    lappend drops 60
-
-    set loss_module [new ErrorModel/List]
-    $loss_module droplist $drops
-    $loss_module drop-target [new Agent/Null]
-    $ns lossmodel $loss_module $node_(r1) $node_(k1)
-}
-
-Class Topology/net5 -superclass Topology
-Topology/net5 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    set node_(s3) [$ns node]   
-    
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 1Mb 100ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 1Mb 100ms DropTail
-    $ns duplex-link $node_(s3) $node_(r1) 1Mb 100ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 0.5Mb 100ms DropTail
-    
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right
-    $ns duplex-link-op $node_(s3) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0.5
-    $ns queue-limit $node_(r1) $node_(k1) 200
-    set qmon [$ns monitor-queue $node_(r1) $node_(k1)  1 2]
-}
-
-
-TestSuite instproc finish testname {
-    global quiet wrap PERL 
-    $self instvar trace_
-    
-    if {$testname == "rtt-rfc793" || $testname == "rtt-jacobson"} {
-	close $trace_(rto)
-        close $trace_(rtt)
-	exec cp rtt.tr temp.rands
-	if {$quiet == "false"} {	
-	    exec xgraph -x time -y "rtt,rto values"  rtt.tr rto.tr &
-	}
-    } 
-
-    if {$testname == "rto-karn" || $testname == "rto-nokarn"} {
-	close $trace_(srtt)
-	exec cp srtt.tr temp.rands
-	if {$quiet == "false"} {
-	    exec xgraph  -x time -y "Estimated RTT"  srtt.tr &
-	}
-    }
-
-    if {$testname == "seqno-fastrtx" || $testname == "seqno-nofastrtx" || $testname == "rto-karn" || $testname == "rto-nokarn"} {
-        exec $PERL ../../bin/getrc -s 1 -d 2 all.tr | \
-		$PERL ../../bin/raw2xg -a -e -s 0.01 -m 10000000 -t $testname > temp.rands
-        if {$quiet == "false"} {
-	    exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-    } 
-
-    if {$testname == "jacobson88-noss" || $testname ==
-    "jacobson88-ss"} {
-	exec awk {
-                {
-                        if (($1 == "+") && ($5 == "tcp") &&\
-                            ($3 == "0") && ($4 == "1"))\
-                                        print $2, $11
-                }
-        } all.tr > out.seq
-	exec cp out.seq temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -P out.seq & 
-	}
-    }
-    
-    if {$quiet == "false"} {
-    	exec nam all.nam &
-    }
-    exit 0
-}  
-
-
-TestSuite instproc printtimers { tcp time} {
-    global quiet
-    if {$quiet == "false"} {
-	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-    }
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcp)] {
-	set dump_inst_($tcp) 1
-	$ns_ at $time "$self printtimersAll $tcp $time $interval"
-	return
-    }
-    set newTime [expr [$ns_ now] + $interval]
-    $ns_ at $time "$self printtimers $tcp $time"
-    $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-## 
-TestSuite instproc setup {tcptype list} {
-    global wrap wrap1 quiet
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts "Guide: $guide_"
-    
-    $ns_ color 1 Red
-    $ns_ color 2 Green
-    $ns_ color 3 Blue
-    $ns_ color 4 Yellow
-
-    set fid 1
-    # Set up TCP connection
-    if {$tcptype == "rtt-jacobson" || $tcptype == "rtt-rfc793"} {
-	
-	$self instvar trace_
-	set trace_(rtt) [open "rtt.tr" w]
-	set trace_(rto) [open "rto.tr" w]
-
-	
-	if {$quiet == "false"} {
-	puts ""
-	puts "                    RTT Test."
-	puts "------------------------------------------------------------------------"
-	puts "    s1 1Mb"
-	puts "      \\             - s1 implements RFC793 estimation or Jacobson's"
-	puts "  1MB  \\  0.5Mb     - s1 tx to k; at 1.5 both s2 and s3 tx big pkts for 1sec;"
-	puts "    s2--r-------k    - nobody performs slowstart."
-	puts "       /             - The queue in r grows fast and so does the RTT seen by s1."
-	puts "      /1Mb           RFC793 RTO estimation can't adapt to the variance peak."
-	puts "    s3               When the situation becomes normal again, RFC793 estimates"
-	puts "                     RTO too pessimistically."
-	}
-	
-	set tcp1 [$ns_ create-connection TCP/RFC793edu $node_(s1) \
-		TCPSink $node_(k1) 1]
-	set tcp2 [$ns_ create-connection TCP/RFC793edu $node_(s2) \
-		TCPSink $node_(k1) 2]
-	set tcp3 [$ns_ create-connection TCP/RFC793edu $node_(s3) \
-			TCPSink $node_(k1) 3]
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-	set ftp3 [$tcp3 attach-app FTP]
-	$tcp1 set window_ 50
-	$tcp2 set packetSize_ 2000
-	$tcp3 set packetSize_ 2000
-	
-	if {$tcptype == "rtt-jacobson"} { 
-	    $tcp1 set add793jacobsonrtt_ true
-	}
-	$ns_ at 0.0  "$self plotrto $tcp1 0.25"
-	$ns_ at 0.5  "$ftp1 start"
-	$ns_ at 1.5  "$ftp2 start"
-	$ns_ at 1.5  "$ftp3 start"
-	$ns_ at 2.5 "$ftp2 stop"
-	$ns_ at 2.5 "$ftp3 stop"
-	##$self traceQueues $node_(r1) [$self openTrace 20.0 $testName_]
-	$ns_ at 20.0 "$self cleanupAll $testName_"
-    }	
-################################## seqno-{fastrtx, nofastrtx}
-    if {$tcptype == "seqno-fastrtx" || $tcptype == "seqno-nofastrtx" } {
-	
-	if {$quiet == "false"} {
-	puts ""
-	puts "                      Fast Retransmit"
-	puts "------------------------------------------------------------------------"
-	puts "         10Mb        - r1: Tahoe with/without fastrtx"
-	puts " s1----r1----k1      - r1 tx to k1"
-	puts "         10ms        - pkt 60 is dropped"
-	puts ""
-	puts "Without fast rtx., the source runs out of window and has to wait for a"
-	puts "timeout to force the retransmission of the lost packet and the associated"
-	puts "acknowledgement to open the window again."
-	}
-
-	$self instvar trace_
-	set trace_(seqn) [open "seqn.tr" w]
-
-	set tcp1 [$ns_ create-connection TCP/RFC793edu $node_(r1) \
-		TCPSink $node_(k1) 1]
-	set ftp1 [$tcp1 attach-app FTP]
-	#$tcp1 set window_ 40
-	if {$tcptype == "seqno-fastrtx"} {$tcp1 set add793fastrtx_ true}
-	$tcp1 set add793expbackoff_ true
-	$tcp1 set add793karnrtt_ true
-	$tcp1 set add793jacobsonrtt_ true
-	$tcp1 set add793slowstart_ true
-	
-	$ns_ at 0.5 "$ftp1 produce 100000"	
-	#$self traceQueues $node_(r1) [$self openTrace 1.25 $testName_]
-	$ns_ at 1.25 "$self cleanupAll $testName_"
-    }
-
-################################## rto-{karn, nokarn}
-	if {$tcptype == "rto-karn" || $tcptype == "rto-nokarn" } {
-	$self instvar trace_
-	set trace_(srtt) [open "srtt.tr" w]
-	    
-	if {$quiet == "false"} {
-	puts ""
-	puts "Karn Algorithm --- (Karn's RTT sampling + RTO Exponential Binary Backoff)" 
-	puts "------------------------------------------------------------------------"	
-	puts "   1Mb   0.9Mb        - s1 is a Tahoe source, (nokarn: without Karn's A.)"
-	puts " s1----r1----k1       - s1 tx; ack does not arrive, so s1 rtx;"
-	puts "    ^^                  if using karn, it will space exponentially"
-	puts "  delay 10s!!           the retx"
-	puts "                      - a packet will be rtx around t=18s; ack for the"
-	puts "                        first pkt sent arrives at t=20s; if Karn's"
-	puts "                        is not used, then we the RTT estimation is 2s!!"
-	}
-	set tcp1 [$ns_ create-connection TCP/RFC793edu $node_(s1) \
-		TCPSink $node_(k1) 1]
-	set ftp1 [$tcp1 attach-app FTP]
-	$tcp1 set window_ 28
-	if {$tcptype == "rto-karn"} {
-		$tcp1 set add793karnrtt_ true
-		$tcp1 set add793expbackoff_ true
-	} else {
-		$tcp1 set add793karnrtt_ false 
-                $tcp1 set add793expbackoff_ false
-	}
-	$tcp1 set add793fastrtx_ true
-	$tcp1 set add793jacobsonrtt_ false
-	$tcp1 set add793slowstart_ true
-	$ns_ at 0.0  "$self plotsrtt $tcp1 0.25"
-	$ns_ at 0.5 "$ftp1 produce 100000"
-
-	#$self traceQueues $node_(r1) [$self openTrace 50.0 $testName_]
-	$ns_ at 50.0 "$self cleanupAll $testName_"
-	}
-
-##################################  jacobson88-noss
-	if {$tcptype == "jacobson88-noss" || $tcptype == "jacobson88-ss" } {
-	
-	if {$quiet == "false"} {
-	puts ""
-	puts "Congestion avoidance and control" 
-	puts "------------------------------------------------------------------------"	
-	puts ""
-	puts " s1---r1---n1---n2---n3---n4---n5---n6---n7---n8---r2---d1"
-	puts "    ^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    ^"
-	puts " (10Mb,2ms)      (256Kb,10ms) all these links      (10Mb,2ms)"
-	puts ""
-	puts "Experiment based on Jacobson's SIGCOMM'88 paper:"
-	puts "- s1 uses a 32 pkt's tx. window and Karn's algorithm"
-	puts "- s1 performs slow-start (ss) or not (noss)"	
-	puts "- r1 has capacity for 30 packets only"
-	puts "- the 8 hops have capacity for a complete window, but r1 not" 
-	puts ""
-	}
-
-	set tcp1 [$ns_ create-connection TCP/RFC793edu $node_(s1) \
-		TCPSink $node_(d1) 1]
-	set ftp1 [$tcp1 attach-app FTP]
-	$tcp1 set window_ 32
-	$tcp1 set packetSize_ 512 
-	$tcp1 set add793karnrtt_ true
-	$tcp1 set add793expbackoff_ true
-	if {$tcptype == "jacobson88-ss"} {
-		$tcp1 set add793slowstart_ true
-	}
-	$ns_ at 0.0 "$ftp1 start"
-	#$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-	}
-
-    
-    #$self tcpDump $tcp1 1.0
-    
-    
-    $ns_ run
-}
-
-TestSuite instproc plotseqn { tcp interval} {
-    $self instvar trace_ ns_  
-    set now [$ns_ now]
-    puts $trace_(seqn) "$now [$tcp set seqno_]"
-    $ns_ at [expr $now+$interval] "$self plotseqn $tcp $interval"
-}
-
-
-TestSuite instproc plotrto { tcp interval} {
-    $self instvar trace_ ns_  
-    set now [$ns_ now]
-    puts $trace_(rto) "$now [expr [$tcp set tcpTick_] *[$tcp set rto_]]"
-    puts $trace_(rtt) "$now [expr [$tcp set tcpTick_] *[$tcp set rtt_]]"
-    $ns_ at [expr $now+$interval] "$self plotrto $tcp $interval"
-}
-
-TestSuite instproc plotsrtt { tcp interval} {
-    $self instvar trace_ ns_  
-    set now [$ns_ now]
-    puts $trace_(srtt) "$now [expr [$tcp set tcpTick_] * ( [$tcp set srtt_] >> [$tcp set T_SRTT_BITS])]"
-    $ns_ at [expr $now+$interval] "$self plotsrtt $tcp $interval"
-}
-
-
-# Definition of test-suite tests
-
-########## Jacobson/RFC793 RTT
-Class Test/rtt-jacobson -superclass TestSuite
-Test/rtt-jacobson instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net5
-    set test_   rtt-jacobson
-    set guide_  "Van Jacobson RTO estimation."
-    $self next
-}
-
-Test/rtt-jacobson instproc run {} {
-    $self setup rtt-jacobson {}
-}
-
-Class Test/rtt-rfc793 -superclass TestSuite
-Test/rtt-rfc793 instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net5
-    set test_       rtt-rfc793
-    set guide_  "RFC 793 RTO estimation."
-    $self next
-}
-
-Test/rtt-rfc793 instproc run {} {
-    $self setup rtt-rfc793 {}
-}
- 
-########## Arrival rate with/without fast rtx
-Class Test/seqno-nofastrtx -superclass TestSuite   
-Test/seqno-nofastrtx instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net6
-    set test_   seqno-nofastrtx
-    set guide_  "Without Fast Retransmit."
-    $self next
-}
-
-Test/seqno-nofastrtx instproc run {} {
-    $self setup seqno-nofastrtx {}
-}
-
-Class Test/seqno-fastrtx -superclass TestSuite
-Test/seqno-fastrtx instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net6
-    set test_   seqno-fastrtx
-    set guide_  "With Fast Retransmit."
-    $self next
-}
-
-Test/seqno-fastrtx instproc run {} {
-    $self setup seqno-fastrtx {}
-}
-
-#### Karn Algorithm (RTT sampling + exp. backoff)
-Class Test/rto-karn -superclass TestSuite
-Test/rto-karn instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net7
-    set test_   rto-karn
-    set guide_  "With Karn's RTT Sampling and Exponential Backoff."
-    $self next
-}
-
-Test/rto-karn instproc run {} {
-    $self setup rto-karn {}
-}
-
-Class Test/rto-nokarn -superclass TestSuite
-Test/rto-nokarn instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net7
-    set test_   rto-nokarn
-    set guide_  "Without Karn's RTT Sampling and Exponential Backoff."
-    Agent/TCP set bugfix_ss_ 0
-    $self next
-}
-
-Test/rto-nokarn instproc run {} {
-    $self setup rto-nokarn {}
-}
-
-
-
-########## Jacobson's SIGCOMM' 88 
-Class Test/jacobson88-noss -superclass TestSuite
-Test/jacobson88-noss instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net8
-    set test_   jacobson88-noss
-    set guide_  "Without Slow-Start."
-    $self next
-}
-
-Test/jacobson88-noss instproc run {} {
-    $self setup jacobson88-noss {}
-}
-
-Class Test/jacobson88-ss -superclass TestSuite
-Test/jacobson88-ss instproc init {} {
-    $self instvar net_ test_ guide_ 
-    set net_	net8
-    set test_   jacobson88-ss
-    set guide_  "With Slow-Start."
-    $self next
-}
-
-Test/jacobson88-ss instproc run {} {
-    $self setup jacobson88-ss {}
-}
-
-
-###
-TestSuite runTest
-
-
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rh.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rh.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rh.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rh.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,501 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-rh.tcl,v 1.11 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-# To run all tests: test-all-ecn
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-catch "cd $dir"
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Topology instproc makenodes ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    set node_(a1) [$ns node]
-    set node_(a2) [$ns node]
-    set node_(a3) [$ns node]
-    set node_(a4) [$ns node]
-    set node_(a5) [$ns node]
-    set node_(a6) [$ns node]
-    set node_(b1) [$ns node]
-    set node_(b2) [$ns node]
-    set node_(b3) [$ns node]
-    set node_(b4) [$ns node]
-    set node_(b5) [$ns node]
-    set node_(b6) [$ns node]
-}
-
-Topology instproc createlinks ns {  
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 15ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 30ms RED
-#    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 30ms DropTail
-    $ns queue-limit $node_(r1) $node_(r2) 40
-    $ns queue-limit $node_(r2) $node_(r1) 40
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-
-# Now create a mess of links for lots of conns 
-    $ns duplex-link $node_(a1) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(b1) $node_(r2) 10Mb 23ms DropTail
-    $ns duplex-link $node_(a2) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(b2) $node_(r2) 10Mb 22ms DropTail
-    $ns duplex-link $node_(a3) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(b3) $node_(r2) 10Mb 33ms DropTail
-    $ns duplex-link $node_(a4) $node_(r1) 10Mb 4ms DropTail
-    $ns duplex-link $node_(b4) $node_(r2) 10Mb 15ms DropTail
-    $ns duplex-link $node_(a5) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(b5) $node_(r2) 10Mb 12ms DropTail
-    $ns duplex-link $node_(a6) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(b6) $node_(r2) 10Mb 27ms DropTail
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
-}
-
-Class Topology/net2-lossy -superclass Topology
-Topology/net2-lossy instproc init ns {
-    $self instvar node_
-    $self makenodes $ns
-    $self createlinks $ns
- 
-    $self instvar lossylink_ lossylink2_
-
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-
-    set lossylink2_ [$ns link $node_(s1) $node_(r1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink2_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-} 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_ cwnd_chan_ xlimits_ fig_file_ stimes_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	   $PERL ../../bin/raw2xg -a -e -s 0.01 -m 90 -t $file > temp.rands
-	exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	  $PERL ../../bin/raw2xg -a -e -s 0.01 -m 90 -t $file > temp1.rands
-	if {$quiet == "false"} {
-#		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-# The line below plots both data and ack packets.
-#        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-#                     temp1.rands &
-# Here we plot again for the paper with extra limits:
-	        exec echo Disposition: To File > temp_fig.rands
-	        exec echo FileOrDev: $fig_file_ >> temp_fig.rands
-	        exec cat temp.rands >> temp_fig.rands
-		exec xgraph -bb -tk -nl -m -x time -y packets -lx $xlimits_ temp_fig.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	#  Keep the numerical results for later use:
-#	set ofile_ [open data.out a]
-#	set ecn_count [exec jgrep E-N all.tr | grep r | grep " 2 3 tcp" |  wc -l ]
-#	set drop_count [exec jgrep d all.tr |  wc -l ]
-#	set awkcode { {print $2} }
-#	set end_time [exec tail -1 all.tr | awk $awkcode]
-#	set bw [expr 1800000.0*8.0/$end_time/15000]
-#	puts $ofile_ "$testName_ $ecn_count $drop_count $end_time $bw $stimes_"
-#	close $ofile_
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	if { [info exists cwnd_chan_] && $quiet == "false" } {
-		$self plot_cwnd 
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set redq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$redq trace curq_
-	$redq trace ave_
-	$redq attach $tchan_
-}
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for RED gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-			else if ($1 == "a" && NF>2)
-				print $2, $3 >> "temp.a";
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q temp.a 
-	exec touch temp.a temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	puts $f \n\"ave_queue
-	exec cat temp.a >@ $f
-	###puts $f \n"thresh
-	###puts $f 0 [[ns link $r1 $r2] get thresh]
-	###puts $f $end [[ns link $r1 $r2] get thresh]
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-TestSuite instproc emod {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-	return $errmodule
-}
-
-TestSuite instproc emod2 {} {
-	$self instvar topo_
-	$topo_ instvar lossylink2_
-        set errmodule [$lossylink2_ errormodule]
-	return $errmodule
-}
-
-TestSuite instproc setloss {} {
-	$self instvar topo_
-	$topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        set errmodel [$errmodule errormodels]
-        if { [llength $errmodel] > 1 } {
-                puts "droppedfin: confused by >1 err models..abort"
-                exit 1
-        }
-	return $errmodel
-}
-
-TestSuite instproc enable_tracecwnd { ns tcp } {
-        $self instvar cwnd_chan_ 
-	if { ! [info exists cwnd_chan_] } then {
-	    set cwnd_chan_ [open all.cwnd w]
-	}
-        $tcp trace cwnd_
-        $tcp attach $cwnd_chan_
-}
-
-TestSuite instproc plot_cwnd {} {
-        global quiet
-        $self instvar cwnd_chan_
-        set awkCode {
-              {
-	      if ($6 == "cwnd_") {
-	      	print $1, $7 >> "temp.cwnd";
-	      } }
-        } 
-        set f [open cwnd.xgr w]
-        puts $f "TitleText: cwnd"
-        puts $f "Device: Postscript"
-
-        if { [info exists cwnd_chan_] } {
-                close $cwnd_chan_
-        }
-        exec rm -f temp.cwnd 
-        exec touch temp.cwnd
-
-        exec awk $awkCode all.cwnd
-
-        puts $f \"cwnd
-        exec cat temp.cwnd >@ $f
-        close $f
-        if {$quiet == "false"} {
-                exec xgraph -M -bb -tk -x time -y cwnd cwnd.xgr &
-        }
-}
-
-TestSuite instproc netsetup { {stoptime 3.0} {ecnmode false} } {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-##
-##  Agent/TCP set maxburst_ 4
-##
-    set delay 30ms
-    $ns_ delay $node_(r1) $node_(r2) $delay
-    $ns_ delay $node_(r2) $node_(r1) $delay
-
-    set redq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-## The following controls ECN:
-    $redq set setbit_ $ecnmode
-    $redq set maxthresh_ 20
-        
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-}
-
-TestSuite instproc tcpsetup { tcptype {starttime 0.0} {numpkts 10000} {ssthresh 30} { tcp1fid 0 } { delack 0 }  {src s1} {dst s3} } {
-    $self instvar ns_ node_
-
-    if {$tcptype == "Tahoe" && $delack == 0} {
-      set tcp1 [$ns_ create-connection TCP $node_($src) \
-	  TCPSink $node_($dst) $tcp1fid]
-    } elseif {$tcptype == "Sack1" && $delack == 0} {
-      set tcp1 [$ns_ create-connection TCP/Sack1 $node_($src) \
-	  TCPSink/Sack1  $node_($dst) $tcp1fid]
-    } elseif {$tcptype == "SackRH" && $delack == 0} {
-      set tcp1 [$ns_ create-connection TCP/SackRH $node_($src) \
-	  TCPSink/Sack1  $node_($dst) $tcp1fid]
-    } elseif {$tcptype == "SackRHNewReno" && $delack == 0} {
-      set tcp1 [$ns_ create-connection TCP/SackRH $node_($src) \
-	  TCPSink  $node_($dst) $tcp1fid]
-    } elseif {$delack == 0} {
-      set tcp1 [$ns_ create-connection TCP/$tcptype $node_($src) \
-	  TCPSink $node_($dst) $tcp1fid]
-    } elseif {$tcptype == "Tahoe" && $delack == 1} {
-      set tcp1 [$ns_ create-connection TCP $node_($src) \
-	  TCPSink/DelAck $node_($dst) $tcp1fid]
-    } elseif {$tcptype == "Sack1" && $delack == 1} {
-      set tcp1 [$ns_ create-connection TCP/Sack1 $node_($src) \
-	  TCPSink/Sack1/DelAck  $node_($dst) $tcp1fid]
-    } elseif {$tcptype == "SackRH" && $delack == 1} {
-      set  tcp1 [$ns_ create-connection TCP/SackRH $node_($src) \
-	  TCPSink/Sack1/DelAck  $node_($dst) $tcp1fid]
-    } else {
-      set tcp1 [$ns_ create-connection TCP/$tcptype $node_($src) \
-	  TCPSink/DelAck $node_($dst) $tcp1fid]
-    } 
-    $tcp1 set window_ 100
-    $tcp1 set ecn_ 1
-    $tcp1 set rtxcur_init_ 3.0
-    $ns_ at 0.2 "$tcp1 set ssthresh_ $ssthresh"
-    set ftp1 [$tcp1 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp1
-        
-#    $self enable_tracequeue $ns_
-    $ns_ at $starttime "$ftp1 produce $numpkts"
-        
-    $self tcpDump $tcp1 5.0
-
-}
-
-# Drop the specified packet.
-TestSuite instproc drop_pkt { number } {
-    $self instvar ns_ lossmodel
-    set lossmodel [$self setloss]
-    $lossmodel set offset_ $number
-    $lossmodel set period_ 10000
-}
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_ errmodel1
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-
-}
-
-TestSuite instproc ecn_pkts pkts {
-    $self instvar ns_ errmodel2
-    set emod [$self emod2]
-    set errmodel2 [new ErrorModel/List]
-    $errmodel2 droplist $pkts
-    $emod insert $errmodel2
-    $emod bind $errmodel2 1
-    $errmodel2 set markecn_ true
-}
-
-#######################################################################
-# All tests
-#######################################################################
-
-#  The following set of tests go through a pile of tests for SackRH
-#  to make sure that they all work correctly.  
-
-
-## Single Drop
-Class Test/test_sackRH -superclass TestSuite
-Test/test_sackRH instproc init {} {
-        $self instvar net_ test_ xlimits_ fig_file_
-        Queue/RED set setbit_ true
-        set net_	net2-lossy
-	Agent/TCP set bugFix_ true
-        set test_	"SackRH(NewReno)..SackRH..NewReno..Reno"
-        set xlimits_     "0,12.0"
-        set fig_file_     fig1B.eps
-        $self next
-}
-Test/test_sackRH instproc run {} {
-	$self instvar ns_ errmodel1
-	Agent/TCP set old_ecn_ 1
-
-	$self netsetup 12.0 true
-        $self tcpsetup SackRHNewReno 0.0 150 30 1 0 
-        $self tcpsetup SackRH 3.0 150 30 1 0 
-        $self tcpsetup Newreno 6.0 150 30 1 0 
-        $self tcpsetup Reno 9.0 150 30 1 0 
-
-
-    puts "Enter loss sequence"
-    gets stdin drops
-    set offset [expr 150 + [llength $drops]]
-        $self drop_pkts [offset_list_3 $drops $offset]
-
-    puts "Enter ecn sequence"
-    gets stdin ecns
-        $self ecn_pkts [offset_list_3 $ecns $offset]
-
-	$ns_ run
-}
-
-proc offset_list {l1 l2} {
-    set len1 [llength $l1]
-    set len2 [llength $l2]
-
-    for {set i 0} {$i < $len2} {incr i} {
-	for {set j 0} {$j < $len1} {incr j} {
-	    lappend l1 [expr [lindex $l1 $j] + [lindex $l2 $i]]
-	}
-    }
-
-    return $l1
-}
-
-# This applies the offset 3 times, so we get a total of
-# four of the same sequence of packet drops.
-
-proc offset_list_3 {l1 offset} {
-    set len1 [llength $l1]
-
-    for {set j 0} {$j < [expr $len1 * 3]} {incr j} {
-	lappend l1 [expr [lindex $l1 $j] + $offset]
-    }
-
-    return $l1
-}
-
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rio.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rio.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rio.tcl	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rio.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,371 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-rio.tcl,v 1.19 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-# This test suite reproduces most of the tests from the following note:
-# Floyd, S., 
-# Ns Simulator Tests for Random Early Detection (RED), October 1996.
-# URL ftp://ftp.ee.lbl.gov/papers/redsims.ps.Z.
-#
-# To run all tests: test-all-red
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-catch "cd $dir"
-Agent/TCP set oldCode_ true
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set redq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$redq trace curq_
-	$redq trace ave_
-	$redq attach $tchan_
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED/RIO
-    #$ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for RED gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-			else if ($1 == "a" && NF>2)
-				print $2, $3 >> "temp.a";
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q temp.a 
-	exec touch temp.a temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	puts $f \n\"ave_queue
-	exec cat temp.a >@ $f
-	###puts $f \n"thresh
-	###puts $f 0 [[ns link $r1 $r2] get thresh]
-	###puts $f $end [[ns link $r1 $r2] get thresh]
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-#
-# This test uses priority_method_ 1, so that flows with FlowID 0 have
-# priority over other flows.
-# OUT packets are dropped before any IN packets are dropped.
-#
-Class Test/strict -superclass TestSuite
-Test/strict instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ strict
-    Queue/RED/RIO set in_thresh_ 10
-    Queue/RED/RIO set in_maxthresh_ 20
-    Queue/RED/RIO set out_thresh_ 3
-    Queue/RED/RIO set out_maxthresh_ 9
-    Queue/RED/RIO set in_linterm_ 10
-    Queue/RED/RIO set linterm_ 10
-    Queue/RED/RIO set priority_method_ 1
-    #Queue/RED/RIO set debug_ true
-    Queue/RED/RIO set debug_ false
-    $self next pktTraceFile
-}
-Test/strict instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-
-    set stoptime 20.0
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 50
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 50
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-#
-# OUT packets are four times more likely to be dropped than IN packets. 
-#
-Class Test/proportional -superclass TestSuite
-Test/proportional instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ proportional
-    Queue/RED/RIO set in_thresh_ 3
-    Queue/RED/RIO set in_maxthresh_ 15
-    Queue/RED/RIO set out_thresh_ 3
-    Queue/RED/RIO set out_maxthresh_ 15
-    Queue/RED/RIO set in_linterm_ 3
-    Queue/RED/RIO set linterm_ 12
-    Queue/RED/RIO set priority_method_ 1
-    Test/proportional instproc run {} [Test/strict info instbody run]
-    $self next pktTraceFile
-}
-
-#
-# OUT packets are four times more likely to be dropped than IN packets. 
-#
-Class Test/gentle -superclass TestSuite
-Test/gentle instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ gentle
-    Queue/RED/RIO set in_thresh_ 3
-    Queue/RED/RIO set in_maxthresh_ 15
-    Queue/RED/RIO set out_thresh_ 3
-    Queue/RED/RIO set out_maxthresh_ 15
-    Queue/RED/RIO set in_linterm_ 50
-    Queue/RED/RIO set linterm_ 200
-    Queue/RED/RIO set priority_method_ 1
-    Queue/RED/RIO set gentle_ false
-    Queue/RED/RIO set in_gentle_ true
-    Queue/RED/RIO set out_gentle_ true
-    Test/gentle instproc run {} [Test/strict info instbody run]
-    $self next pktTraceFile
-}
-
-#
-# OUT packets are four times more likely to be dropped than IN packets. 
-#
-Class Test/notGentle -superclass TestSuite
-Test/notGentle instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ notGentle
-    Queue/RED/RIO set in_thresh_ 3
-    Queue/RED/RIO set in_maxthresh_ 15
-    Queue/RED/RIO set out_thresh_ 3
-    Queue/RED/RIO set out_maxthresh_ 15
-    Queue/RED/RIO set in_linterm_ 50
-    Queue/RED/RIO set linterm_ 200
-    Queue/RED/RIO set priority_method_ 1
-    Queue/RED/RIO set gentle_ false
-    Queue/RED/RIO set in_gentle_ false
-    Queue/RED/RIO set out_gentle_ false
-    Test/notGentle instproc run {} [Test/strict info instbody run]
-    $self next pktTraceFile
-}
-
-#
-# This test uses priority_method_ 0, with token bucket policing
-# and tagging.
-#
-Class Test/tagging -superclass TestSuite
-Test/tagging instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ tagging
-    Queue/RED/RIO set in_thresh_ 10
-    Queue/RED/RIO set in_maxthresh_ 20
-    Queue/RED/RIO set out_thresh_ 3
-    Queue/RED/RIO set out_maxthresh_ 9
-    Queue/RED/RIO set in_linterm_ 10
-    Queue/RED/RIO set linterm_ 10
-    Queue/RED/RIO set priority_method_ 0
-    $self next pktTraceFile
-}
-Test/tagging instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-
-    set stoptime 20.0
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 50
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 50
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    # make token bucket limiter for flow 0
-    # Fill rate 100000 Bps, or 100 packets per second.
-    set link1 [$ns_ link $node_(s1) $node_(r1)]
-    set tcm1 [$ns_ maketbtagger Fid]
-    $ns_ attach-tagger $link1 $tcm1
-    set fcl1 [$tcm1 classifier]; # flow classifier
-    $fcl1 set-flowrate 0 100000 10000 1
-    #target_rate_ (fill rate, in Bps), 
-    #bucket_depth_, 
-    #tbucket_ (current bucket size, in bytes) 
-    
-    # make token bucket limiter for flow 1
-    # Fill rate 1000000 Bps, or 1000 packets per second.
-    set link2 [$ns_ link $node_(s2) $node_(r1)]
-    set tcm2 [$ns_ maketbtagger Fid]
-    $ns_ attach-tagger $link2 $tcm2
-    set fcl2 [$tcm2 classifier]; # flow classifier
-    $fcl2 set-flowrate 1 1000000 10000 1
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rng.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rng.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-rng.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-rng.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,47 +0,0 @@
-
-
-# This test-suite uses the random number generator test (class rngtest)
-# See rng.cc for details.
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation
-
-# FOR UPDATING GLOBAL DEFAULTS:
-
-Class TestSuite
-
-Class Test/rngtest -superclass TestSuite
-
-Test/rngtest instproc init {} {
-    set rng [new RNG]
-    $rng test
-}
-
-proc usage {} {
-    global argv
-    puts stderr "usage: ns $argv0 <tests> "
-    puts "Valid tests: rngtest"
-    exit 1
-}
-    
-
-proc runtest {arg} {
-    global quiet
-    set quiet 0
-    
-    set b [llength $arg]
-    if {$b == 1} {
-	set test $arg
-    } elseif {$b == 2} {
-	set test [lindex $arg 0]
-	if {[lindex $arg 1] == "QUIET"} {
-	    set quiet 1
-	}
-    } else {
-	usage
-    }
-    set t [new Test/$test]
-}
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-routed.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-routed.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-routed.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-routed.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,895 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-routed.tcl,v 1.10 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-#
-# This test suite reproduces most of the tests from the following note:
-# Floyd, S., Simulator Tests. July 1995.  
-# URL ftp://ftp.ee.lbl.gov/papers/simtests.ps.Z.
-#
-# To run individual tests:
-# ns test-suite.tcl tahoe1
-# ns test-suite.tcl tahoe2
-# ...
-#
-
-set dir [pwd]
-catch "cd tcl/test"
-source misc.tcl
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-source topologies.tcl
-catch "cd $dir"
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-
-Class Test/tahoe1 -superclass TestSuite
-Test/tahoe1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe
-	$self next
-}
-Test/tahoe1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	# Set up TCP connection
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	
-	# Set up FTP source
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	#
-	# Actually, we now trace all activity at the node around the
-	# bottleneck link.  This allows us to track acks, as well
-	# packets taking any alternate paths around the bottleneck
-	# link.
-	#
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/tahoe2 -superclass TestSuite
-Test/tahoe2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe2
-	$self next
-}
-Test/tahoe2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 14
-	
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/tahoe3 -superclass TestSuite
-Test/tahoe3 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe3
-	$self next
-}
-Test/tahoe3 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8   
-	$ns_ queue-limit $node_(k1) $node_(r1) 8   
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 100
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 16
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 0.5 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-	$ns_ run
-}
-
-Class Test/tahoe4 -superclass TestSuite
-Test/tahoe4 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe4
-	$self next
-}
-Test/tahoe4 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 11
-	$ns_ queue-limit $node_(k1) $node_(r1) 11  
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 30
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 30
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 0.0 "$ftp1 start"
-	$ns_ at 0.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/tahoe5 -superclass TestSuite
-Test/tahoe5 instproc init topo {
-    $self instvar net_ defNet_ test_
-    set net_	$topo
-    set defNet_	net1
-    set test_	tahoe5
-    $self next
-}
-Test/tahoe5 instproc run {} {
-    $self instvar ns_ node_ testName_
-
-    $ns_ delay $node_(s1) $node_(r1) 3ms
-    $ns_ delay $node_(r1) $node_(s1) 3ms
-
-    set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-    $tcp1 set window_ 50
-    $tcp1 set bugFix_ false
-
-    set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-    $tcp2 set window_ 50
-    $tcp2 set bugFix_ false
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $ns_ at 1.0 "$ftp1 start"
-    $ns_ at 1.75 "$ftp2 produce 100"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    $self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-    $ns_ run
-}
-
-Class Test/no_bug -superclass TestSuite
-Test/no_bug instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net1
-	set test_	no_bug
-	$self next
-}
-Test/no_bug instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s1) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s1) 3ms
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 50
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.75 "$ftp2 produce 100"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-	$ns_ run
-}
-
-Class Test/bug -superclass TestSuite
-Test/bug instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net1
-	set test_	bug
-	$self next
-}
-Test/bug instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s1) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s1) 3ms
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	$tcp1 set bugFix_ false
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 50
-	$tcp2 set bugFix_ false
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.75 "$ftp2 produce 100"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno1 -superclass TestSuite
-Test/reno1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno1
-	$self next
-}
-Test/reno1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 14
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno -superclass TestSuite
-Test/reno instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno
-	$self next
-}
-Test/reno instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 28
-	$tcp1 set maxcwnd_ 14
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/renoA -superclass TestSuite
-Test/renoA instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	renoA
-	$self next
-}
-Test/renoA instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 28
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 4
-	set tcp3 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 2]
-	$tcp3 set window_ 4
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 1.2 "$ftp2 produce 7"
-	set ftp3 [$tcp3 attach-app FTP]
-	$ns_ at 1.2 "$ftp3 produce 7"
-
-	$self tcpDump $tcp1 1.0
-	$self tcpDump $tcp2 1.0
-	$self tcpDump $tcp3 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno2 -superclass TestSuite
-Test/reno2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno2
-	$self next
-}
-Test/reno2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 9
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 20
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno3 -superclass TestSuite
-Test/reno3 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno3
-	$self next
-}
-Test/reno3 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-	$ns_ queue-limit $node_(k1) $node_(r1) 8
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 100
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 16
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 0.5 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno4 -superclass TestSuite
-Test/reno4 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net2
-	set test_	reno4
-	$self next
-}
-Test/reno4 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(r2) 29
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-	$tcp1 set window_ 80
-	$tcp1 set maxcwnd_ 40
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(s1) [$self openTrace 2.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno4a -superclass TestSuite
-Test/reno4a instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net2
-	set test_	reno4a
-	$self next
-}
-Test/reno4a instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(r2) 29
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-	$tcp1 set window_ 40
-	$tcp1 set maxcwnd_ 40
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(s1) [$self openTrace 2.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno5 -superclass TestSuite
-Test/reno5 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno5
-	$self next
-}
-Test/reno5 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 9
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	$tcp1 set bugFix_ false
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 20
-	$tcp2 set bugFix_ false
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno5a -superclass TestSuite
-Test/reno5a instproc init topo {
-    $self instvar net_ defNet_ test_
-    set net_	$topo
-    set defNet_	net1
-    set test_	reno5a
-    $self next
-}
-Test/reno5a instproc run {} {
-    $self instvar ns_ node_ testName_
-
-    $ns_ delay $node_(s1) $node_(r1) 3ms
-    $ns_ delay $node_(r1) $node_(s1) 3ms
-
-    set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-    $tcp1 set window_ 50
-    $tcp1 set bugFix_ false
-
-    set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-    $tcp2 set window_ 50
-    $tcp2 set bugFix_ false
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $ns_ at 1.0 "$ftp1 start"
-    $ns_ at 1.75 "$ftp2 produce 100"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    $self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-    $ns_ run
-}
-
-Class XTest/telnet -superclass TestSuite
-XTest/telnet instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	telnet
-	$self next
-}
-XTest/telnet instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-	$ns_ queue-limit $node_(k1) $node_(r1) 8
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-	set tcp3 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 2]
-
-	set telnet1 [$tcp1 attach-app TELNET]; $telnet1 set interval_ 1
-	set telnet2 [$tcp2 attach-app TELNET]; $telnet2 set interval_ 0
-	# Interval 0 designates the tcplib telnet interarrival distribution
-	set telnet3 [$tcp3 attach-app TELNET]; $telnet3 set interval_ 0
-
-	$ns_ at 0.0 "$telnet1 start"
-	$ns_ at 0.0 "$telnet2 start"
-	$ns_ at 0.0 "$telnet3 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 50.0 $testName_]
-
-	# use a different seed each time
-	puts seed=[$ns_ random 0]
-
-	$ns_ run
-}
-
-Class Test/delayed -superclass TestSuite
-Test/delayed instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	delayed
-	$self next
-}
-Test/delayed instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink/DelAck $node_(k1) 0]
-	$tcp1 set window_ 50
-
-	# lookup up the sink and set it's delay interval
-	[$node_(k1) agent [$tcp1 dst-port]] set interval 100ms
-
-	set ftp1 [$tcp1 attach-app FTP];
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase -superclass TestSuite
-Test/phase instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase
-	$self next
-}
-Test/phase instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s2) 3ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 32 
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 32 
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase1 -superclass TestSuite
-Test/phase1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase1
-	$self next
-}
-Test/phase1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 9.5ms
-	$ns_ delay $node_(r1) $node_(s2) 9.5ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 32 
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 32 
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase2 -superclass TestSuite
-Test/phase2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase2
-	$self next
-}
-Test/phase2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s2) 3ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 32 
-	$tcp1 set overhead_ 0.01
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 32 
-	$tcp2 set overhead_ 0.01
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/timers -superclass TestSuite
-Test/timers instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	timers
-	$self next
-}
-Test/timers instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 2
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink/DelAck $node_(k1) 0]
-	$tcp1 set window_ 4
-	# look up the sink and set its delay interval
-	[$node_(k1) agent [$tcp1 dst-port]] set interval_ 100ms
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink/DelAck $node_(k1) 1]
-	$tcp2 set window_ 4
-	# look up the sink and set its delay interval
-	[$node_(k1) agent [$tcp2 dst-port]] set interval_ 100ms
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.3225 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/stats -superclass TestSuite
-Test/stats instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	stats
-	$self next
-}
-Test/stats instproc printpkts { label tcp } {
-	puts "tcp $label total_packets_acked [$tcp set ack_]"
-}
-#XXX Still unfinished in ns-2
-Test/stats instproc printdrops { label link } {
-	puts "link $label total_drops [$link stat 0 drops]"
-	puts "link $label total_packets [$link stat 0 packets]"
-	puts "link $label total_bytes [$link stat 0 bytes]"
-}
-Test/stats instproc printstop { stoptime } {
-	puts "stop-time $stoptime"
-}
-Test/stats instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 10
-	$ns_ queue-limit $node_(k1) $node_(r1) 10
-
-	set stoptime 10.1 
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 30
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 30
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDumpAll $tcp1 5.0 tcp1
-	$self tcpDumpAll $tcp2 5.0 tcp2
-
-	$ns_ at $stoptime "$self printstop $stoptime"
-	$ns_ at $stoptime "$self printpkts 1 $tcp1"
-	#XXX Awaiting completion of link stats
-	#$ns_ at $stoptime "$self printdrops 1 [$ns_ link $node_(r1) $node_(k1)]"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/tahoe_long -superclass TestSuite
-Test/tahoe_long instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net3
-	set test_	tahoe_long
-	$self next
-}
-Test/tahoe_long instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s3) 0]
-	$tcp1 set window_ 100
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(s3) 1]
-	$tcp2 set window_ 16
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 0.5 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	set traceFile [$self openTrace 15.0 $testName_]
-	$self traceQueues $node_(r1) $traceFile
-	foreach i [list {r2 r3} {r3 r4}] {
-		set L [$ns_ link $node_([lindex $i 0]) $node_([lindex $i 1])]
-		$L trace-dynamics $ns_ $traceFile
-		$L trace-dynamics $ns_ stdout
-	}
-	$ns_ run
-}
-
-Class Test/reno_long -superclass TestSuite
-Test/reno_long instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net3
-	set test_	reno_long
-	$self next
-}
-Test/reno_long instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(s3) 0]
-	$tcp1 set window_ 100
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(s3) 1]
-	$tcp2 set window_ 16
-#	$tcp1 set bugFix_ false
-#	$tcp2 set bugFix_ false
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 0.5 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	set traceFile [$self openTrace 15.0 $testName_]
-	$self traceQueues $node_(r1) $traceFile
-	foreach i [list {r2 r3} {r3 r4}] {
-		set L [$ns_ link $node_([lindex $i 0]) $node_([lindex $i 1])]
-		$L trace-dynamics $ns_ $traceFile
-		$L trace-dynamics $ns_ stdout
-	}
-	$ns_ run
-}
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sack-full.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sack-full.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sack-full.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sack-full.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,643 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-sack-full.tcl,v 1.22 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-set style raw2xg
-# set style tcpf2xgr
-
-Trace set show_tcphdr_ 1 ;	# needed for plotting ACK numbers
-
-TestSuite instproc finish file {
-        global quiet PERL style
-	set wrap 90
-	set wrap1 [expr $wrap * 512 + 40]
-	set space 512
-	set scale 0.01
-	if { $style == "tcpf2xgr" } {
-		set scale [expr $scale * (1.0 / 576.0)]
-		set space 1
-		set outtype "xgraph"
-		set tfile "xxx.tr"
-		if { $quiet != "true" } {
-			global TCLSH PERL
-			exec rm -f $tfile
-			exec $PERL ../../bin/getrc -b -s 2 -d 3 all.tr > $tfile
-			puts "Wrote file $tfile (output from getrc -b -s 2 -d 3)..."
-			exec ../../bin/tcpf2xgr -n $space -s $scale -m $wrap1 $TCLSH $tfile $outtype $file &
-			puts "copying $tfile to temp.rands"
-			exec cp $tfile temp.rands ; # needed for compare script
-			# tcpf2xgr runs xgraph for us
-		}
- 	} elseif { $style == "raw2xg" } {
-		exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-		   $PERL ../../bin/raw2xg -c -n $space -s 0.01 -m $wrap1 -t $file \
-		   > temp.rands
-	        exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	           $PERL ../../bin/raw2xg -a -c -f -n $space -s 0.01 -m $wrap1 -t $file > temp1.rands
-	
-		if {$quiet == "false"} {
-			# exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-		# to plot acks:
-			exec xgraph -bb -tk -nl -m -x time -y packets temp.rands temp1.rands &
-		}
-        }
-        ## now use default graphing tool to make a data file
-        ## if so desired
-        exit 0
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-# 
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 100ms bottleneck.
-# Queue-limit on bottleneck is 6 packets. 
-# 
-Class Topology/net0 -superclass Topology
-Topology/net0 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-}
-
-# 
-# Links1 uses 10Mb, 5ms feeders, and a 1.5Mb 100ms bottleneck.
-# Queue-limit on bottleneck is 23 packets.
-# 
-
-Class Topology/net1 -superclass Topology
-Topology/net1 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next 
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 1.5Mb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 19
-    $ns queue-limit $node_(k1) $node_(r1) 19
-}
-
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next 
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-TestSuite instproc makeproto { aopen popen win fid apptype appstart } {
-	$self instvar ns_ node_
-
-	set tcp1 [new Agent/TCP/FullTcp/Sack]
-	set sink [new Agent/TCP/FullTcp/Sack]
-	$ns_ attach-agent $node_($aopen) $tcp1
-	$ns_ attach-agent $node_($popen) $sink
-	$tcp1 set window_ $win
-	$sink set window_ $win
-	$tcp1 set fid_ $fid
-	$sink set fid_ $fid
-	$ns_ connect $tcp1 $sink
-	# set up TCP-level connections
-	$sink listen ; # will figure out who its peer is
-
-	if { $apptype != "none" } {
-		set apphandle [$tcp1 attach-app $apptype]
-		$ns_ at $appstart "$apphandle start"
-	}
-	$self tcpDump $tcp1 1.0
-	return $tcp1
-}
-
-
-# single packet drop
-Class Test/sack1 -superclass TestSuite
-Test/sack1 instproc init {} {
-    $self instvar net_ test_
-    set net_	net0
-    set test_	sack1
-    $self next pktTraceFile
-}
-Test/sack1 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    $self makeproto s1 k1 14 0 FTP 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack1z -superclass TestSuite
-Test/sack1z instproc init {} {
-    $self instvar net_ test_
-    set net_	net0
-    set test_	sack1z
-    $self next pktTraceFile
-}
-Test/sack1z instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    Agent/TCP set maxburst_ 4
-    $self makeproto s1 k1 14 0 FTP 0.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# three packet drops
-Class Test/sack1a -superclass TestSuite
-Test/sack1a instproc init {} {
-    $self instvar net_ test_
-    set net_	net0
-    set test_	sack1a
-    $self next pktTraceFile
-}
-Test/sack1a instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    $self makeproto s1 k1 20 0 FTP 0.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# three packet drops
-Class Test/sack1aa -superclass TestSuite
-Test/sack1aa instproc init {} {
-    $self instvar net_ test_
-    set net_	net0
-    set test_	sack1aa
-    $self next pktTraceFile
-}
-Test/sack1aa instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    Agent/TCP set maxburst_ 4
-
-    $self makeproto s1 k1 20 0 FTP 0.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack1b -superclass TestSuite
-Test/sack1b instproc init {} {
-    $self instvar net_ test_
-    set net_	net0
-    set test_	sack1b
-    $self next pktTraceFile
-}
-Test/sack1b instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-    $self makeproto s1 k1 26 0 FTP 0.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack1c -superclass TestSuite
-Test/sack1c instproc init {} {
-    $self instvar net_ test_
-    set net_	net0
-    set test_	sack1c
-    $self next pktTraceFile
-}
-Test/sack1c instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-    $self makeproto s1 k1 27 0 FTP 0.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-Class Test/sack3 -superclass TestSuite
-Test/sack3 instproc init {} {
-    $self instvar net_ test_
-    set net_	net0
-    set test_	sack3
-    $self next pktTraceFile
-}
-Test/sack3 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-    $ns_ queue-limit $node_(r1) $node_(k1) 8
-    $ns_ queue-limit $node_(k1) $node_(r1) 8
-
-    [$self makeproto s1 k1 100 0 FTP 0.95] set bugFix_ false
-    [$self makeproto s2 k1 16 1 FTP 0.5] set bugFix_ false
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-    $ns_ at 4.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack5 -superclass TestSuite
-Test/sack5 instproc init {} {
-    $self instvar net_ test_
-    set net_	net1
-    set test_	sack5
-    $self next pktTraceFile
-}
-Test/sack5 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    Agent/TCP set window_ 50
-    Agent/TCP set bugFix_ false
-    $ns_ delay $node_(s1) $node_(r1) 3ms
-    $ns_ delay $node_(r1) $node_(s1) 3ms
-
-    [$self makeproto s1 k1 50 0 FTP 1.0] set bugFix_ false
-    set tcp2 [$self makeproto s2 k1 50 1 none -1]
-    $tcp2 set bugFix_ false
-
-    set ftp2 [$tcp2 attach-app FTP]
-    $ns_ at 1.75 "$ftp2 produce 100"
-
-    $ns_ at 6.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack5a -superclass TestSuite
-Test/sack5a instproc init {} {
-    $self instvar net_ test_
-    set net_	net1
-    set test_	sack5a
-    $self next pktTraceFile
-}
-Test/sack5a instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    Agent/TCP set maxburst_ 4
-    $ns_ delay $node_(s1) $node_(r1) 3ms
-    $ns_ delay $node_(r1) $node_(s1) 3ms
-
-    [$self makeproto s1 k1 50 0 FTP 1.0] set bugFix_ false
-    set tcp2 [$self makeproto s2 k1 50 1 none -1]
-    $tcp2 set bugFix_ false
-
-    set ftp2 [$tcp2 attach-app FTP]
-    $ns_ at 1.75 "$ftp2 produce 100"
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-    $ns_ at 6.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# shows a long recovery from sack.
-Class Test/sackB2 -superclass TestSuite
-Test/sackB2 instproc init {} {
-    $self instvar net_ test_
-    set net_	net0
-    set test_	sackB2
-    $self next pktTraceFile
-}
-Test/sackB2 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-    $ns_ queue-limit $node_(r1) $node_(k1) 9
-
-    $self makeproto s1 k1 50 0 FTP 1.0
-    $self makeproto s2 k1 20 1 FTP 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-    $ns_ at 8.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# two packets dropped
-Class Test/sackB4 -superclass TestSuite
-Test/sackB4 instproc init {} {
-    $self instvar net_ test_
-    set net_	net2
-    set test_	sackB4
-    $self next pktTraceFile
-}
-Test/sackB4 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-    $ns_ queue-limit $node_(r1) $node_(r2) 29
-
-    $self makeproto s1 r2 40 0 FTP 0.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-    $ns_ at 2.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# two packets dropped
-Class Test/sackB4a -superclass TestSuite
-Test/sackB4a instproc init {} {
-    $self instvar net_ test_
-    set net_	net2
-    set test_	sackB4a
-    $self next pktTraceFile
-}
-Test/sackB4a instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-    $ns_ queue-limit $node_(r1) $node_(r2) 29
-    Agent/TCP set maxburst_ 4
-
-    $self makeproto s1 r2 40 0 FTP 0.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-    $ns_ at 2.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# delayed ack not implemented yet
-#Class Test/delayedSack -superclass TestSuite
-#Test/delayedSack instproc init {} {
-#    $self instvar net_ test_
-#    set net_    net0
-#    set test_	delayedSack
-#    $self next pktTraceFile
-#}
-#Test/delayedSack instproc run {} {
-#     $self instvar ns_ node_ testName_
-#     $self setTopo
-#     set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#     $tcp1 set window_ 50
-# 
-#     # lookup up the sink and set it's delay interval
-#     [$node_(k1) agent [$tcp1 dst-port]] set interval 100ms
-# 
-#     set ftp1 [$tcp1 attach-app FTP]
-#     $ns_ at 1.0 "$ftp1 start"
-# 
-#     $self tcpDump $tcp1 1.0
-# 
-#     # trace only the bottleneck link
-#     #$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-#     $ns_ run
-# }
-
-## segregation
-#Class Test/phaseSack -superclass TestSuite
-#Test/phaseSack instproc init {} {
-#    $self instvar net_ test_
-#    set net_	net0
-#    set test_	phaseSack
-#    $self next pktTraceFile
-#}
-#Test/phaseSack instproc run {} {
-#    $self instvar ns_ node_ testName_
-#    $self setTopo
-#
-#    $ns_ delay $node_(s2) $node_(r1) 3ms
-#    $ns_ delay $node_(r1) $node_(s2) 3ms
-#    $ns_ queue-limit $node_(r1) $node_(k1) 16
-#    $ns_ queue-limit $node_(k1) $node_(r1) 100
-#
-#    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#    $tcp1 set window_ 32
-#
-#    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-#    $tcp2 set window_ 32
-#
-#    set ftp1 [$tcp1 attach-app FTP]
-#    set ftp2 [$tcp2 attach-app FTP]
-#
-#    $ns_ at 5.0 "$ftp1 start"
-#    $ns_ at 1.0 "$ftp2 start"
-#
-#    $self tcpDump $tcp1 5.0
-#
-#    # trace only the bottleneck link
-#    #$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-#    $ns_ run
-#}
-#
-## random overhead, but segregation remains 
-#Class Test/phaseSack2 -superclass TestSuite
-#Test/phaseSack2 instproc init {} {
-#    $self instvar net_ test_
-#    set net_	net0
-#    set test_	phaseSack2
-#    $self next pktTraceFile
-#}
-#Test/phaseSack2 instproc run {} {
-#    $self instvar ns_ node_ testName_
-#    $self setTopo
-#
-#    $ns_ delay $node_(s2) $node_(r1) 3ms
-#    $ns_ delay $node_(r1) $node_(s2) 3ms
-#    $ns_ queue-limit $node_(r1) $node_(k1) 16
-#    $ns_ queue-limit $node_(k1) $node_(r1) 100
-#
-#    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#    $tcp1 set window_ 32
-#    $tcp1 set overhead_ 0.01
-#
-#    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-#    $tcp2 set window_ 32
-#    $tcp2 set overhead_ 0.01
-#    
-#    set ftp1 [$tcp1 attach-app FTP]
-#    set ftp2 [$tcp2 attach-app FTP]
-#    
-#    $ns_ at 5.0 "$ftp1 start"
-#    $ns_ at 1.0 "$ftp2 start"
-#    
-#    $self tcpDump $tcp1 5.0
-#    
-#    # trace only the bottleneck link
-#    #$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-#    $ns_ run
-#}
-#
-## no segregation, because of random overhead
-#Class Test/phaseSack3 -superclass TestSuite
-#Test/phaseSack3 instproc init {} {
-#    $self instvar net_ test_
-#    set net_	net0
-#    set test_	phaseSack3
-#    $self next pktTraceFile
-#}
-#Test/phaseSack3 instproc run {} {
-#    $self instvar ns_ node_ testName_
-#    $self setTopo
-#
-#    $ns_ delay $node_(s2) $node_(r1) 9.5ms
-#    $ns_ delay $node_(r1) $node_(s2) 9.5ms
-#    $ns_ queue-limit $node_(r1) $node_(k1) 16
-#    $ns_ queue-limit $node_(k1) $node_(r1) 100
-#
-#    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#    $tcp1 set window_ 32
-#    $tcp1 set overhead_ 0.01
-#
-#    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-#    $tcp2 set window_ 32
-#    $tcp2 set overhead_ 0.01
-#
-#    set ftp1 [$tcp1 attach-app FTP]
-#    set ftp2 [$tcp2 attach-app FTP]
-#
-#    $ns_ at 5.0 "$ftp1 start"
-#    $ns_ at 1.0 "$ftp2 start"
-#
-#    $self tcpDump $tcp1 5.0
-#
-#    # trace only the bottleneck link
-#    #$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-#    $ns_ run
-#}
-
-#Class Test/timersSack -superclass TestSuite
-#Test/timersSack instproc init {} {
-#    $self instvar net_ test_
-#    set net_	net0
-#    set test_	timersSack
-#    $self next pktTraceFile
-#}
-#Test/timersSack instproc run {} {
-#     $self instvar ns_ node_ testName_
-#     $self setTopo
-#     $ns_ queue-limit $node_(r1) $node_(k1) 2
-#     $ns_ queue-limit $node_(k1) $node_(r1) 100
-# 
-#     set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#     $tcp1 set window_ 4
-#     # lookup up the sink and set it's delay interval
-#     [$node_(k1) agent [$tcp1 dst-port]] set interval 100ms
-# 
-#     set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-#     $tcp2 set window_ 4
-#     # lookup up the sink and set it's delay interval
-#     [$node_(k1) agent [$tcp2 dst-port]] set interval 100ms
-# 
-#     set ftp1 [$tcp1 attach-app FTP]
-#     set ftp2 [$tcp2 attach-app FTP]
-# 
-#     $ns_ at 1.0 "$ftp1 start"
-#     $ns_ at 1.3225 "$ftp2 start"
-# 
-#     $self tcpDump $tcp1 5.0
-# 
-#     # trace only the bottleneck link
-#     #$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-#     $ns_ run
-# }
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sack.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sack.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sack.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sack.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,881 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-sack.tcl,v 1.30 2006/12/24 17:04:44 sallyfloyd Exp $
-#
-
-source misc_simple.tcl
-source support.tcl
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-
-TestSuite instproc finish file {
-        global quiet PERL
-	set wrap 90
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-	if {$file == "FalsePipe"} {
-	  exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	    $PERL ../../bin/raw2xg -a -s 0.01 -m $wrap -t $file > temp1.rands
-        } else {
-	  exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	    $PERL ../../bin/raw2xg -a -c -s 0.01 -m $wrap -t $file > temp1.rands
-	}
-        if {$quiet == "false"} {
-	    if {$file == "FalsePipe"} {
-        	exec  $PERL ../../bin/getrc -e -s 0 -d 2 all.tr | \
-                $PERL ../../bin/raw2xg -c -v -s 0.01 -m $wrap -t $file > temp2.rands
-        	exec  $PERL ../../bin/getrc -e -s 4 -d 3 all.tr | \
-          	$PERL ../../bin/raw2xg -c -a -s 0.01 -m $wrap -t $file > temp3.rands
-                exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-			temp1.rands temp2.rands temp3.rands &
-	    } else {
-                exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-			temp1.rands &
-	    }
-        }
-        ## now use default graphing tool to make a data file
-        ## if so desired
-        # exec csh gnuplotC2.com temp.rands temp1.rands $file
-        ##
-        exit 0
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-# 
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 100ms bottleneck.
-# Queue-limit on bottleneck is 6 packets. 
-# 
-Class Topology/net0 -superclass Topology
-Topology/net0 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-}
-
-# 
-# Links1 uses 10Mb, 5ms feeders, and a 1.5Mb 100ms bottleneck.
-# Queue-limit on bottleneck is 23 packets.
-# 
-
-Class Topology/net1 -superclass Topology
-Topology/net1 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 1.5Mb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 23
-    $ns queue-limit $node_(k1) $node_(r1) 23
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-}
-
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 10Mb 200ms RED
-    $ns duplex-link $node_(s3) $node_(r2) 100Mb 1ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 100Mb 1ms DropTail
-}
-
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 1.5Mb 20ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-}
-
-TestSuite instproc drops4 {delayPkt delay} {
-	$self instvar ns_ node_
-	set list {7 8 9 10}
-	set link [$ns_ link $node_(r1) $node_(r2)]
-	set fid 1
-        $self dropPkts $link $fid $list $delayPkt $delay
-}
-
-# single packet drop
-Class Test/sack1 -superclass TestSuite
-Test/sack1 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net0
-    set test_	sack1
-    set guide_      "Guide: SACK TCP, single packet drop"
-    $self next pktTraceFile
-}
-Test/sack1 instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 14
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 1.0 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack1z -superclass TestSuite
-Test/sack1z instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net0
-    set test_	sack1z
-    set guide_      "Guide: SACK TCP, single packet drop, with maxburst"
-    $self next pktTraceFile
-}
-Test/sack1z instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-
-    Agent/TCP set maxburst_ 4
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 14
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# three packet drops
-Class Test/sack1a -superclass TestSuite
-Test/sack1a instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net0
-    set test_	sack1a
-    set guide_      "Guide: SACK TCP, three packet drops"
-    $self next pktTraceFile
-}
-Test/sack1a instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 20
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# three packet drops
-Class Test/sack1aa -superclass TestSuite
-Test/sack1aa instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net0
-    set test_	sack1aa
-    set guide_      "Guide: SACK TCP, three packet drops, with maxburst"
-    $self next pktTraceFile
-}
-Test/sack1aa instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-
-    Agent/TCP set maxburst_ 4
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 20
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack1b -superclass TestSuite
-Test/sack1b instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net0
-    set test_	sack1b
-    set guide_      "Guide: SACK TCP, many packet drops, window=26"
-    $self next pktTraceFile
-}
-Test/sack1b instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 26
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack1c -superclass TestSuite
-Test/sack1c instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net0
-    set test_	sack1c
-    set guide_      "Guide: SACK TCP, many packet drops, window=27"
-    $self next pktTraceFile
-}
-Test/sack1c instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 27
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-    $ns_ at 5.0 "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-Class Test/sack3 -superclass TestSuite
-Test/sack3 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net0
-    set test_	sack3
-    set guide_      "Guide: SACK TCP, drops from a small window"
-    $self next pktTraceFile
-}
-Test/sack3 instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-    $ns_ queue-limit $node_(r1) $node_(k1) 8
-    $ns_ queue-limit $node_(k1) $node_(r1) 8
-	
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 100
-    $tcp1 set bugFix_ false
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-    $tcp2 set window_ 16
-    $tcp2 set bugFix_ false
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $ns_ at 1.0 "$ftp1 start"
-    $ns_ at 0.5 "$ftp2 start"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-    $ns_ at 4.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack5 -superclass TestSuite
-Test/sack5 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net1
-    set test_	sack5
-    set guide_      "Guide: SACK TCP, many drops, without maxburst"
-    $self next pktTraceFile
-}
-Test/sack5 instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-
-    $ns_ delay $node_(s1) $node_(r1) 3ms
-    $ns_ delay $node_(r1) $node_(s1) 3ms
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 50
-    $tcp1 set bugFix_ false
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-    $tcp2 set window_ 50
-    $tcp2 set bugFix_ false
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $ns_ at 1.0 "$ftp1 start"
-    $ns_ at 1.75 "$ftp2 produce 100"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-    $ns_ at 6.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack5a -superclass TestSuite
-Test/sack5a instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net1
-    set test_	sack5a
-    set guide_      "Guide: SACK TCP, many drops, with maxburst"
-    $self next pktTraceFile
-}
-Test/sack5a instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-
-    Agent/TCP set maxburst_ 4
-    $ns_ delay $node_(s1) $node_(r1) 3ms
-    $ns_ delay $node_(r1) $node_(s1) 3ms
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 50
-    $tcp1 set bugFix_ false
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-    $tcp2 set window_ 50
-    $tcp2 set bugFix_ false
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $ns_ at 1.0 "$ftp1 start"
-    $ns_ at 1.75 "$ftp2 produce 100"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-    $ns_ at 6.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# shows a long recovery from sack.
-Class Test/sackB2 -superclass TestSuite
-Test/sackB2 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net0
-    set test_	sackB2
-    set guide_      "Guide: SACK TCP, a connection with a long recovery"
-    Agent/TCP set windowInit_ 1
-    $self next pktTraceFile
-}
-Test/sackB2 instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-    $ns_ queue-limit $node_(r1) $node_(k1) 9
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 50
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-    $tcp2 set window_ 20
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $ns_ at 1.0 "$ftp1 start"
-    $ns_ at 1.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-    $ns_ at 8.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# two packets dropped
-Class Test/sackB4 -superclass TestSuite
-Test/sackB4 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	sackB4
-    set guide_      "Guide: SACK TCP, two packets dropped"
-    $self next pktTraceFile
-}
-Test/sackB4 instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-    $ns_ queue-limit $node_(r1) $node_(r2) 29
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(r2) 0]
-    $tcp1 set window_ 40
-
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-    $ns_ at 2.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# two packets dropped
-Class Test/sackB4a -superclass TestSuite
-Test/sackB4a instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net2
-    set test_	sackB4a
-    set guide_      "Guide: SACK TCP, two packets dropped, with maxburst"
-    $self next pktTraceFile
-}
-Test/sackB4a instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-    $ns_ queue-limit $node_(r1) $node_(r2) 29
-    Agent/TCP set maxburst_ 4
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(r2) 0]
-    $tcp1 set window_ 40
-
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-    $ns_ at 2.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# Incorrect estimated pipe value
-# Four packets delayed, no packets dropped.
-Class Test/FalsePipe -superclass TestSuite
-Test/FalsePipe instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3
-    set test_ FalsePipe
-    set guide_      "Guide: SACK TCP, four packets delayed"
-    $self next pktTraceFile
-}
-
-Test/FalsePipe instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-    $self June01defaults
-    $ns_ eventtrace-all
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 1]
-    $tcp1 set window_ 8
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-    $self tcpDump $tcp1 3.0
-
-    #delay packet 7, 8, 9, 10
-    $self drops4 true 0.1
-
-    $ns_ at 3.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# Incorrect estimated pipe value
-# One packet dropped, four packets delayed.
-Class Test/FalsePipe1 -superclass TestSuite
-Test/FalsePipe1 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_ net3
-    set test_ FalsePipe1
-    set guide_      "Guide: SACK TCP, one packet dropped and four packets delayed"
-    $self next pktTraceFile
-}
-
-Test/FalsePipe1 instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-    $self June01defaults
-    $ns_ eventtrace-all
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 1]
-    $tcp1 set window_ 20
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.0 "$ftp1 start"
-    $self tcpDump $tcp1 3.0
-
-    #delay packet 7, 8, 9, 10
-    $self drops4 true 0.5
-    $self dropPkts [$ns_ link $node_(r1) $node_(r2)] 1 7
-
-    $ns_ at 3.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-Class Test/sack_dupacks -superclass TestSuite
-Test/sack_dupacks instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net4
-    set test_	sack_dupacks
-    set guide_      "Guide: SACK TCP, Fast Recovery with standard numdupacks"
-    $self next pktTraceFile
-}
-Test/sack_dupacks instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 200
-    set ftp1 [$tcp1 attach-app FTP]
-    $ns_ at 0.1 "$ftp1 start"
-
-    $self tcpDump $tcp1 1.0
-
-    # trace only the bottleneck link
-    $ns_ at 3.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-# finite flow
-# make sure that the last packets are fast retransmitted if lost
-Class Test/sack_finiteflow -superclass TestSuite
-Test/sack_finiteflow instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_    net4
-    set test_   sack_finiteflow
-    set guide_      "Guide: SACK TCP, Fast Recovery with last packets in a finite flow"
-    $self next pktTraceFile
-}
-Test/sack_finiteflow instproc run {} {
-    $self instvar ns_ node_ testName_ guide_
-    $self setTopo
-    puts $guide_
-
-    $ns_ duplex-link $node_(r1) $node_(k1) 100Mb 5ms DropTail
-    $ns_ queue-limit $node_(r1) $node_(k1) 4
-    $ns_ queue-limit $node_(k1) $node_(r1) 4
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(r1) TCPSink/Sack1 $node_(k1) 0]
-    $tcp1 set window_ 200
-    set ftp1 [$tcp1 attach-app FTP]
-
-    # send 21 packets only
-    set bytesToSend [expr 21 * [ $tcp1 set packetSize_ ]  ]
-    $ns_ at 0.01 "$ftp1 send $bytesToSend"
-
-    $self tcpDump $tcp1 0.1
-
-    # trace only the bottleneck link
-    $ns_ at 3.0 "$self cleanupAll $testName_"
-    $ns_ run
-}
-
-#
-# Sack_dupacks1 tests "numdupacksFrac_", for increasing numdupacks
-#   up to a specified fraction of the current congestion window.
-#
-Class Test/sack_dupacks1 -superclass TestSuite
-Test/sack_dupacks1 instproc init {} {
-    $self instvar net_ test_ guide_
-    set net_	net4
-    set test_	sack_dupacks1
-    set guide_      "Guide: SACK TCP, Fast Recovery with modified numdupacks"
-    Agent/TCP set numdupacksFrac_ 4
-    Test/sack_dupacks1 instproc run {} [Test/sack_dupacks info instbody run] 
-    $self next pktTraceFile
-}
-
-# delayed ack not implemented yet
-#Class Test/delayedSack -superclass TestSuite
-#Test/delayedSack instproc init {} {
-#    $self instvar net_ test_ guide_
-#    set net_    net0
-#    set test_	delayedSack
-#    set guide_      "simple"
-#    $self next pktTraceFile
-#}
-#Test/delayedSack instproc run {} {
-#     $self instvar ns_ node_ testName_ guide_
-#     $self setTopo
-#     puts $guide_
-#     set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#     $tcp1 set window_ 50
-# 
-#     # lookup up the sink and set it's delay interval
-#     [$node_(k1) agent [$tcp1 dst-port]] set interval 100ms
-# 
-#     set ftp1 [$tcp1 attach-app FTP]
-#     $ns_ at 1.0 "$ftp1 start"
-# 
-#     $self tcpDump $tcp1 1.0
-# 
-#     # trace only the bottleneck link
-#     #$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-#     $ns_ run
-# }
-
-## segregation
-#Class Test/phaseSack -superclass TestSuite
-#Test/phaseSack instproc init {} {
-#    $self instvar net_ test_ guide_
-#    set net_	net0
-#    set test_	phaseSack
-#    set guide_      "simple"
-#    $self next pktTraceFile
-#}
-#Test/phaseSack instproc run {} {
-#    $self instvar ns_ node_ testName_ guide_
-#    $self setTopo
-#    puts $guide_
-#
-#    $ns_ delay $node_(s2) $node_(r1) 3ms
-#    $ns_ delay $node_(r1) $node_(s2) 3ms
-#    $ns_ queue-limit $node_(r1) $node_(k1) 16
-#    $ns_ queue-limit $node_(k1) $node_(r1) 100
-#
-#    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#    $tcp1 set window_ 32
-#
-#    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-#    $tcp2 set window_ 32
-#
-#    set ftp1 [$tcp1 attach-app FTP]
-#    set ftp2 [$tcp2 attach-app FTP]
-#
-#    $ns_ at 5.0 "$ftp1 start"
-#    $ns_ at 1.0 "$ftp2 start"
-#
-#    $self tcpDump $tcp1 5.0
-#
-#    # trace only the bottleneck link
-#    #$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-#    $ns_ run
-#}
-#
-## random overhead, but segregation remains 
-#Class Test/phaseSack2 -superclass TestSuite
-#Test/phaseSack2 instproc init {} {
-#    $self instvar net_ test_ guide_
-#    set net_	net0
-#    set test_	phaseSack2
-#    set guide_      "simple"
-#    $self next pktTraceFile
-#}
-#Test/phaseSack2 instproc run {} {
-#    $self instvar ns_ node_ testName_ guide_
-#    $self setTopo
-#    puts $guide_
-#
-#    $ns_ delay $node_(s2) $node_(r1) 3ms
-#    $ns_ delay $node_(r1) $node_(s2) 3ms
-#    $ns_ queue-limit $node_(r1) $node_(k1) 16
-#    $ns_ queue-limit $node_(k1) $node_(r1) 100
-#
-#    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#    $tcp1 set window_ 32
-#    $tcp1 set overhead_ 0.01
-#
-#    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-#    $tcp2 set window_ 32
-#    $tcp2 set overhead_ 0.01
-#    
-#    set ftp1 [$tcp1 attach-app FTP]
-#    set ftp2 [$tcp2 attach-app FTP]
-#    
-#    $ns_ at 5.0 "$ftp1 start"
-#    $ns_ at 1.0 "$ftp2 start"
-#    
-#    $self tcpDump $tcp1 5.0
-#    
-#    # trace only the bottleneck link
-#    #$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-#    $ns_ run
-#}
-#
-## no segregation, because of random overhead
-#Class Test/phaseSack3 -superclass TestSuite
-#Test/phaseSack3 instproc init {} {
-#    $self instvar net_ test_ guide_
-#    set net_	net0
-#    set test_	phaseSack3
-#    set guide_      "simple"
-#    $self next pktTraceFile
-#}
-#Test/phaseSack3 instproc run {} {
-#    $self instvar ns_ node_ testName_ guide_
-#    $self setTopo
-#    puts $guide_
-#
-#    $ns_ delay $node_(s2) $node_(r1) 9.5ms
-#    $ns_ delay $node_(r1) $node_(s2) 9.5ms
-#    $ns_ queue-limit $node_(r1) $node_(k1) 16
-#    $ns_ queue-limit $node_(k1) $node_(r1) 100
-#
-#    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#    $tcp1 set window_ 32
-#    $tcp1 set overhead_ 0.01
-#
-#    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-#    $tcp2 set window_ 32
-#    $tcp2 set overhead_ 0.01
-#
-#    set ftp1 [$tcp1 attach-app FTP]
-#    set ftp2 [$tcp2 attach-app FTP]
-#
-#    $ns_ at 5.0 "$ftp1 start"
-#    $ns_ at 1.0 "$ftp2 start"
-#
-#    $self tcpDump $tcp1 5.0
-#
-#    # trace only the bottleneck link
-#    #$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-#    $ns_ run
-#}
-
-#Class Test/timersSack -superclass TestSuite
-#Test/timersSack instproc init {} {
-#    $self instvar net_ test_ guide_
-#    set net_	net0
-#    set test_	timersSack
-#    set guide_      "simple"
-#    $self next pktTraceFile
-#}
-#Test/timersSack instproc run {} {
-#     $self instvar ns_ node_ testName_ guide_
-#     $self setTopo
-#     puts $guide_
-#     $ns_ queue-limit $node_(r1) $node_(k1) 2
-#     $ns_ queue-limit $node_(k1) $node_(r1) 100
-# 
-#     set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-#     $tcp1 set window_ 4
-#     # lookup up the sink and set it's delay interval
-#     [$node_(k1) agent [$tcp1 dst-port]] set interval 100ms
-# 
-#     set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(k1) 1]
-#     $tcp2 set window_ 4
-#     # lookup up the sink and set it's delay interval
-#     [$node_(k1) agent [$tcp2 dst-port]] set interval 100ms
-# 
-#     set ftp1 [$tcp1 attach-app FTP]
-#     set ftp2 [$tcp2 attach-app FTP]
-# 
-#     $ns_ at 1.0 "$ftp1 start"
-#     $ns_ at 1.3225 "$ftp2 start"
-# 
-#     $self tcpDump $tcp1 5.0
-# 
-#     # trace only the bottleneck link
-#     #$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-#     $ns_ run
-# }
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sack.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sack.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sack.txt	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sack.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,63 +0,0 @@
-The note describes the validation tests
-in test-suite-sack.tcl.
-
-SACK1 and SACK1Z:
-The test "sack1" shows Fast Recovery with SACK when a single packet
-is dropped.  Note the burst of packets when the ACK for packet 26
-is received at time 2.6.  Test "sack1z" shows the same test with
-maxburst_ set to 4 packets.
-
-SACK1A and SACK1AA:
-Test "sack1a" shows Fast Recovery with SACK when three packets are
-dropped from a window of data.  Notice the burst of packets at time
-1.65.  Test ""sack1aa" shows the same test with maxburst_ set to
-4 packets.
-
-SACK1B and SACK1C:
-Test "sack1b" shows Fast Recovery with SACK when many packets are
-dropped from a window of data.  Test "sack1c" is a variant of test
-"sack1b" in that is shows correct behavior when the last packet
-sent before a Fast Retransmit is dropped.
-
-SACK3:
-Test "sack3" shows, for the bottom connection, a Fast Recovery with
-SACK when packets are dropped from a connection with a small
-congestion window.
-
-SACK5 and SACK5A: 
-Test "sack5" shows the burst of packets from the bottom connection
-sent at time 3.5.  Explain!!  For the top connection, this test
-shows the behavior when half the packets are dropped from a large
-window of data.  Test ""sack5a" shows the same test with maxburst_
-set to 4 packets.
-
-SACKB2:
-Both connections in this test show show a Fast Retransmit, followed
-by a retransmit timeout for a retransmitted packet that is itself
-dropped.  Because the bottom connection's congestion window is
-relatively large when the initial Fast Retransmit occurs, it begins
-the retransmit timeout with a reasonably large value for ssthresh,
-and recovers fairly quickly.  Because the top connection's congestion
-window is small when the initial Fast Retransmit occurs, it begins
-the retransmit timeout with a smaller value for ssthresh, and
-recovers more slowly.
-
-SACKB4 and SACKB4A:
-Test "sackB4" shows the burstiness when SACK TCP recovers from
-two packets dropped early in a large window of data.
-Test "sackB4a" shows the same test when "maxburst_" is set to
-four packets.
-
-FALSEPIPE:
-Test "FalsePipe" shows that, during fast recovery, the pipe_ value
-used by SACK can be over-estimated if partial ACKs are trigered by 
-packet reordering instead of by packet loss.
-
-DELAYEDSACK:
-The "delayedSack" test from the v1 test suite should be included.
-
-TIMERSSACK:
-The test "timersSack" needs to be checked.
-
-PHASE:
-The phase tests were deleted as unnecessary to the validation test.
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-satellite.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-satellite.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-satellite.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-satellite.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,815 +0,0 @@
-#
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set SetCWRonRetransmit_ true
-# Changing the default value.
-#
-# Copyright (c) 1999 Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#       This product includes software developed by the MASH Research
-#       Group at the University of California Berkeley.
-# 4. Neither the name of the University nor of the Research Group may be
-#    used to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#    
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-satellite.tcl,v 1.12 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-# Contributed by Tom Henderson, UCB Daedalus Research Group, June 1999
-#    
-# This test suite is for validating the satellite extensions
-#
-# To run all tests:  test-all-satellite
-#
-# To run individual tests:
-# ns test-suite-satellite.tcl mixed 
-# ns test-suite-satellite.tcl mixed.legacy 
-# ns test-suite-satellite.tcl repeater
-# ns test-suite-satellite.tcl aloha
-# ns test-suite-satellite.tcl aloha.collisions
-# ns test-suite-satellite.tcl wired 
-#
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-satellite.tcl
-#
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-# Some OTcl bound variables
-HandoffManager/Term set elevation_mask_ 8.2
-HandoffManager/Term set term_handoff_int_ 10
-HandoffManager set handoff_randomization_ "false"
-Mac/Sat/UnslottedAloha set mean_backoff_ 1s 
-Mac/Sat/UnslottedAloha set rtx_limit_ 3
-Mac/Sat/UnslottedAloha set send_timeout_ 270ms
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ test_ topo_ node_ 
-	set ns_ [new Simulator]
-	$ns_ rtproto Dummy
-
-	global f
-	set f [open temp.rands w]
-	$ns_ trace-all $f
-
-}
-
-TestSuite instproc finish args {
-	$self instvar ns_
-	
-	$ns_ flush-trace
-	exit 0
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv
-
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-			set a [lindex $argv 1]
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-# Global configuration parameters
-
-global opt
-set opt(chan)           Channel/Sat
-set opt(bw_up)          2Mb; # Uplink bandwidth
-set opt(bw_down)        2Mb; # Downlink bandwidth
-set opt(phy)            Phy/Sat
-set opt(mac)            Mac/Sat
-set opt(ifq)            Queue/DropTail
-set opt(qlim)           50
-set opt(ll)             LL/Sat
-
-# Definition of test-suite tests
-# Simple bent-pipe (repeater) satellite
-# NOTE:  This test is identical to sat-repeater.tcl in ~ns/tcl/ex
-
-Class Test/repeater -superclass TestSuite
-Test/repeater instproc init {} {
-	$self instvar test_ 
-	set test_	repeater
-	$self next
-}
-
-Test/repeater instproc run {} {
-	$self instvar ns_ node_ 
-
-	global opt f
-
-	set opt(wiredRouting)   OFF
-
-	# GEO satellite at 95 degrees longitude West
-	$ns_ node-config -satNodeType geo-repeater \
-			-llType $opt(ll) \
-			-ifqType $opt(ifq) \
-			-ifqLen $opt(qlim) \
-			-macType $opt(mac) \
-			-phyType $opt(phy) \
-			-channelType $opt(chan) \
-			-downlinkBW $opt(bw_down) \
-			-wiredRouting $opt(wiredRouting)
-
-	set n1 [$ns_ node]
-	$n1 set-position -95
-
-	# Two terminals: one in NY and one in SF 
-	$ns_ node-config -satNodeType terminal
-	set n2 [$ns_ node] 
-	$n2 set-position 40.9 -73.9; # NY
-	set n3 [$ns_ node] 
-	$n3 set-position 37.8 -122.4; # SF
-
-	# Add GSLs to geo satellites
-	$n2 add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) \
-            $opt(phy) [$n1 set downlink_] [$n1 set uplink_]
-	$n3 add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up)  \
-	    $opt(phy) [$n1 set downlink_] [$n1 set uplink_]
-
-	# Add an error model to the receiving terminal node
-	set em_ [new ErrorModel]
-	$em_ unit pkt 
-	$em_ set rate_ 0.02
-	$em_ ranvar [new RandomVariable/Uniform] 
-	$n3 interface-errormodel $em_
-
-	$ns_ trace-all-satlinks $f
-
-	# Attach agents for CBR traffic generator
-	set udp0 [new Agent/UDP] 
-	$ns_ attach-agent $n2 $udp0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$cbr0 set interval_ 6
-
-	set null0 [new Agent/Null]
-	$ns_ attach-agent $n3 $null0
- 
-	$ns_ connect $udp0 $null0
-
-	# Attach agents for FTP
-	set tcp1 [$ns_ create-connection TCP $n2 TCPSink $n3 0]
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 7.0 "$ftp1 produce 100"
-
-	# We use centralized routing
-	set satrouteobject_ [new SatRouteObject]
-	$satrouteobject_ compute_routes
-
-	$ns_ at 1.0 "$cbr0 start"
-
-	$ns_ at 100.0 "$self finish"   
-
-	$ns_ run
-}
-
-# Testing a geo satellite and a plane of polar satellites
-# NOTE:  This test is identical to sat-mixed.tcl in ~ns/tcl/ex
-
-Class Test/mixed -superclass TestSuite
-Test/mixed instproc init {} {
-	$self instvar test_
-	set test_       mixed 
-	$self next
-
-}
-
-Test/mixed instproc run {} {
-	$self instvar ns_  
-
-	global opt f
-	
-	# Change some of the options
-	set opt(bw_down)        1.5Mb
-	set opt(bw_up)          1.5Mb
-	set opt(bw_isl)         25Mb
-
-	set opt(alt)            780
-	set opt(inc)            90
-	set opt(wiredRouting)   OFF
-
-	$ns_ node-config -satNodeType polar \
-			 -llType $opt(ll) \
-			 -ifqType $opt(ifq) \
-			 -ifqLen $opt(qlim) \
-			 -macType $opt(mac) \
-			 -phyType $opt(phy) \
-			 -channelType $opt(chan) \
-			 -downlinkBW $opt(bw_down) \
-			 -wiredRouting $opt(wiredRouting)
-
-	set n0 [$ns_ node]; set n1 [$ns_ node]; set n2 [$ns_ node];
-	set n3 [$ns_ node]; set n4 [$ns_ node]; set n5 [$ns_ node];
-	set n6 [$ns_ node]; set n7 [$ns_ node]; set n8 [$ns_ node];
-	set n9 [$ns_ node]; set n10 [$ns_ node]
-
-	set plane 1
-	$n0 set-position $opt(alt) $opt(inc) 0 0 $plane 
-	$n1 set-position $opt(alt) $opt(inc) 0 32.73 $plane 
-	$n2 set-position $opt(alt) $opt(inc) 0 65.45 $plane 
-	$n3 set-position $opt(alt) $opt(inc) 0 98.18 $plane 
-	$n4 set-position $opt(alt) $opt(inc) 0 130.91 $plane 
-	$n5 set-position $opt(alt) $opt(inc) 0 163.64 $plane 
-	$n6 set-position $opt(alt) $opt(inc) 0 196.36 $plane 
-	$n7 set-position $opt(alt) $opt(inc) 0 229.09 $plane 
-	$n8 set-position $opt(alt) $opt(inc) 0 261.82 $plane 
-	$n9 set-position $opt(alt) $opt(inc) 0 294.55 $plane 
-	$n10 set-position $opt(alt) $opt(inc) 0 327.27 $plane 
-
-	# By setting the next_ variable on polar sats; handoffs can be optimized
-	# This step must follow all polar node creation
-	$n0 set_next $n10; $n1 set_next $n0; $n2 set_next $n1; $n3 set_next $n2
-	$n4 set_next $n3; $n5 set_next $n4; $n6 set_next $n5; $n7 set_next $n6
-	$n8 set_next $n7; $n9 set_next $n8; $n10 set_next $n9
-
-	# GEO satellite:  above North America
-	$ns_ node-config -satNodeType geo
-	set n11 [$ns_ node]
-	$n11 set-position -100
-
-	# Terminals
-	$ns_ node-config -satNodeType terminal
-	set n100 [$ns_ node]; set n101 [$ns_ node]
-	$n100 set-position 37.9 -122.3; # Berkeley
-	$n101 set-position 42.3 -71.1; # Boston
-	set n200 [$ns_ node]; set n201 [$ns_ node]
-	$n200 set-position 0 10
-	$n201 set-position 0 -10
-
-	# Add any necessary ISLs or GSLs
-	# GSLs to the geo satellite:
-	$n100 add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) \
-	  $opt(phy) [$n11 set downlink_] [$n11 set uplink_]
-	$n101 add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) \
-	  $opt(phy) [$n11 set downlink_] [$n11 set uplink_]
-	# Attach n200 and n201 
-	$n200 add-gsl polar $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) $opt(phy) [$n5 set downlink_] [$n5 set uplink_]
-	$n201 add-gsl polar $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) $opt(phy) [$n5 set downlink_] [$n5 set uplink_]
-
-	#ISL
-	$ns_ add-isl intraplane $n0 $n1 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n1 $n2 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n2 $n3 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n3 $n4 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n4 $n5 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n5 $n6 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n6 $n7 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n7 $n8 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n8 $n9 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n9 $n10 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n10 $n0 $opt(bw_isl) $opt(ifq) $opt(qlim)
-
-	# Trace all queues
-	$ns_ trace-all-satlinks $f
-
-	# Attach agents
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $n100 $udp0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$cbr0 set interval_ 60.01
-
-	set udp1 [new Agent/UDP]
-	$ns_ attach-agent $n200 $udp1
-	$udp1 set class_ 1
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-	$cbr1 set interval_ 90.5
-
-	set null0 [new Agent/Null]
-	$ns_ attach-agent $n101 $null0
-	set null1 [new Agent/Null]
-	$ns_ attach-agent $n201 $null1
-
-	$ns_ connect $udp0 $null0
-	$ns_ connect $udp1 $null1
-
-	set satrouteobject_ [new SatRouteObject]
-	$satrouteobject_ compute_routes
-
-	$ns_ at 1.0 "$cbr0 start"
-	$ns_ at 305.0 "$cbr1 start"
-
-	$ns_ at 9000.0 "$self finish"
-
-	$ns_ run
-}
-
-# Same as mixed, but with wired-satellite integration
-# NOTE:  This test is identical to sat-wired.tcl in ~ns/tcl/ex
-
-Class Test/wired -superclass TestSuite
-Test/wired instproc init {} {
-	$self instvar test_
-	set test_       wired 
-	$self next
-
-}
-
-Test/wired instproc run {} {
-	$self instvar ns_  
-
-	global opt f
-	
-	# Change some of the options
-	set opt(bw_down)        1.5Mb
-	set opt(bw_up)          1.5Mb
-	set opt(bw_isl)         25Mb
-
-	set opt(alt)            780
-	set opt(inc)            90
-	set opt(wiredRouting) 	ON
-
-	$ns_ node-config -satNodeType polar \
-			 -llType $opt(ll) \
-			 -ifqType $opt(ifq) \
-			 -ifqLen $opt(qlim) \
-			 -macType $opt(mac) \
-			 -phyType $opt(phy) \
-			 -channelType $opt(chan) \
-			 -downlinkBW $opt(bw_down) \
-			 -wiredRouting $opt(wiredRouting)
-
-	set n0 [$ns_ node]; set n1 [$ns_ node]; set n2 [$ns_ node];
-	set n3 [$ns_ node]; set n4 [$ns_ node]; set n5 [$ns_ node];
-	set n6 [$ns_ node]; set n7 [$ns_ node]; set n8 [$ns_ node];
-	set n9 [$ns_ node]; set n10 [$ns_ node]
-
-	set plane 1
-	$n0 set-position $opt(alt) $opt(inc) 0 0 $plane 
-	$n1 set-position $opt(alt) $opt(inc) 0 32.73 $plane 
-	$n2 set-position $opt(alt) $opt(inc) 0 65.45 $plane 
-	$n3 set-position $opt(alt) $opt(inc) 0 98.18 $plane 
-	$n4 set-position $opt(alt) $opt(inc) 0 130.91 $plane 
-	$n5 set-position $opt(alt) $opt(inc) 0 163.64 $plane 
-	$n6 set-position $opt(alt) $opt(inc) 0 196.36 $plane 
-	$n7 set-position $opt(alt) $opt(inc) 0 229.09 $plane 
-	$n8 set-position $opt(alt) $opt(inc) 0 261.82 $plane 
-	$n9 set-position $opt(alt) $opt(inc) 0 294.55 $plane 
-	$n10 set-position $opt(alt) $opt(inc) 0 327.27 $plane 
-
-	# By setting the next_ variable on polar sats; handoffs can be optimized
-	# This step must follow all polar node creation
-	$n0 set_next $n10; $n1 set_next $n0; $n2 set_next $n1; $n3 set_next $n2
-	$n4 set_next $n3; $n5 set_next $n4; $n6 set_next $n5; $n7 set_next $n6
-	$n8 set_next $n7; $n9 set_next $n8; $n10 set_next $n9
-
-	# GEO satellite:  above North America
-	$ns_ node-config -satNodeType geo
-	set n11 [$ns_ node]
-	$n11 set-position -100
-
-	# Terminals
-	$ns_ node-config -satNodeType terminal
-	set n100 [$ns_ node]; set n101 [$ns_ node]
-	$n100 set-position 37.9 -122.3; # Berkeley
-	$n101 set-position 42.3 -71.1; # Boston
-	set n200 [$ns_ node]; set n201 [$ns_ node]
-	$n200 set-position 0 10
-	$n201 set-position 0 -10
-
-	# Add any necessary ISLs or GSLs
-	# GSLs to the geo satellite:
-	$n100 add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) \
-	  $opt(phy) [$n11 set downlink_] [$n11 set uplink_]
-	$n101 add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) \
-	  $opt(phy) [$n11 set downlink_] [$n11 set uplink_]
-	# Attach n200 and n201 
-	$n200 add-gsl polar $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) $opt(phy) [$n5 set downlink_] [$n5 set uplink_]
-	$n201 add-gsl polar $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) $opt(phy) [$n5 set downlink_] [$n5 set uplink_]
-
-	#ISL
-	$ns_ add-isl intraplane $n0 $n1 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n1 $n2 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n2 $n3 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n3 $n4 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n4 $n5 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n5 $n6 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n6 $n7 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n7 $n8 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n8 $n9 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n9 $n10 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n10 $n0 $opt(bw_isl) $opt(ifq) $opt(qlim)
-
-	# Set up wired nodes
-	# Connect $n300<->$n301<->$n302<->$n100<->$n11<->$n101<->$n303
-	#                    ^               ^
-	#                    |_______________|
-	#
-	# Packets from n303 to n300 should bypass n302 (node #18 in the trace)
-	# (i.e., they should take the following path:  19,13,11,12,17,16)
-	#
-	$ns_ unset satNodeType_
-	set n300 [$ns_ node]; # node 16 in trace
-	set n301 [$ns_ node]; # node 17 in trace
-	set n302 [$ns_ node]; # node 18 in trace
-	set n303 [$ns_ node]; # node 19 in trace
-	$ns_ duplex-link $n300 $n301 5Mb 2ms DropTail; # 16 <-> 17
-	$ns_ duplex-link $n301 $n302 5Mb 2ms DropTail; # 17 <-> 18
-	$ns_ duplex-link $n302 $n100 5Mb 2ms DropTail; # 18 <-> 11
-	$ns_ duplex-link $n303 $n101 5Mb 2ms DropTail; # 19 <-> 13
-	$ns_ duplex-link $n301 $n100 5Mb 2ms DropTail; # 17 <-> 11
-
-
-
-	# Trace all queues
-	$ns_ trace-all-satlinks $f
-
-	# Attach agents
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $n100 $udp0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$cbr0 set interval_ 60.01
-
-	set udp1 [new Agent/UDP]
-	$ns_ attach-agent $n200 $udp1
-	$udp1 set class_ 1
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-	$cbr1 set interval_ 90.5
-
-	set null0 [new Agent/Null]
-	$ns_ attach-agent $n101 $null0
-	set null1 [new Agent/Null]
-	$ns_ attach-agent $n201 $null1
-
-	$ns_ connect $udp0 $null0
-	$ns_ connect $udp1 $null1
-
-	# Set up connection between wired nodes
-	set udp2 [new Agent/UDP]
-	$ns_ attach-agent $n303 $udp2
-	set cbr2 [new Application/Traffic/CBR]
-	$cbr2 attach-agent $udp2
-	$cbr2 set interval_ 300
-	set null2 [new Agent/Null]
-	$ns_ attach-agent $n300 $null2
-
-	$ns_ connect $udp2 $null2
-	$ns_ at 10.0 "$cbr2 start"
- 
-	set satrouteobject_ [new SatRouteObject]
-	$satrouteobject_ compute_routes
-
-	$ns_ at 1.0 "$cbr0 start"
-	$ns_ at 305.0 "$cbr1 start"
-
-	$ns_ at 9000.0 "$self finish"
-
-	$ns_ run
-}
-
-# Testing unslotted aloha
-# bent-pipe gka geo satellite and a plane of polar satellites
-# NOTE:  This test is similar (fewer sources) to sat-aloha.tcl in ~ns/tcl/ex
-
-Class Test/aloha -superclass TestSuite
-Test/aloha instproc init {} {
-	$self instvar test_
-	set test_ 	aloha	
-	$self next
-}
-
-Test/aloha instproc run {} {
-    $self instvar ns_  
-	
-	global opt f 
-
-	Mac/Sat set trace_drops_ false
-	Mac/Sat set trace_collisions_ false
-
-	set opt(bw_up)          2Mb
-	set opt(bw_down)        2Mb
-	set opt(mac)            Mac/Sat/UnslottedAloha 
-	set opt(wiredRouting)   OFF
-
-	$ns_ node-config -satNodeType geo-repeater \
-			-llType $opt(ll) \
-			-ifqType $opt(ifq) \
-			-ifqLen $opt(qlim) \
-			-macType $opt(mac) \
-			-phyType $opt(phy) \
-			-channelType $opt(chan) \
-			-downlinkBW $opt(bw_down) \
-			-wiredRouting $opt(wiredRouting)
-
-	# GEO satellite at prime meridian
-	set n1 [$ns_ node]
-	$n1 set-position 0
-
-	# Place 30 nodes at 30 different locations
-	$ns_ node-config -satNodeType terminal
-	set num_nodes           30
-	for {set a 1} {$a <= $num_nodes} {incr a} {
-		set n($a) [$ns_ node]
-        	$n($a) set-position [expr -15 + $a ] [expr 15 - $a ]
-        	$n($a) add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) \
-		    $opt(bw_up) $opt(phy) [$n1 set downlink_] [$n1 set uplink_]
-	}
-
-	for {set a 1} {$a <= $num_nodes} {incr a} {
-        	set b [expr int($a + (0.5 * $num_nodes))]
-        	if {$b > 30} {
-                	incr b -30 
-        	}
-
-        	set udp($a) [new Agent/UDP]
-        	$ns_ attach-agent $n($a) $udp($a)
-        	set exp($a) [new Application/Traffic/Exponential]
-        	$exp($a) attach-agent $udp($a)
-        	$exp($a) set rate_ 3Kb
-
-        	set null($a) [new Agent/Null]
-        	$ns_ attach-agent $n($b) $null($a)
-
-        	$ns_ connect $udp($a) $null($a)
-        	$ns_ at 1.0 "$exp($a) start"
-	}
-
-	$ns_ trace-all-satlinks $f
-
-	# We use centralized routing
-	set satrouteobject_ [new SatRouteObject]
-	$satrouteobject_ compute_routes
-
-	$ns_ at 50.0 "$self finish"
-
-	$ns_ run
-}
-
-Class Test/aloha.collisions -superclass TestSuite
-Test/aloha.collisions instproc init {} {
-	$self instvar test_
-	set test_ 	aloha	
-	$self next
-}
-
-Test/aloha.collisions instproc run {} {
-    $self instvar ns_  
-	
-	global opt f 
-
-	Mac/Sat set trace_drops_ true
-	Mac/Sat set trace_collisions_ true
-
-	set opt(bw_up)          2Mb
-	set opt(bw_down)        2Mb
-	set opt(mac)            Mac/Sat/UnslottedAloha 
-	set opt(wiredRouting)   OFF
-
-	$ns_ node-config -satNodeType geo-repeater \
-			-llType $opt(ll) \
-			-ifqType $opt(ifq) \
-			-ifqLen $opt(qlim) \
-			-macType $opt(mac) \
-			-phyType $opt(phy) \
-			-channelType $opt(chan) \
-			-downlinkBW $opt(bw_down) \
-			-wiredRouting $opt(wiredRouting)
-
-	# GEO satellite at prime meridian
-	set n1 [$ns_ node]
-	$n1 set-position 0
-
-	# Place 30 nodes at 30 different locations
-	$ns_ node-config -satNodeType terminal
-	set num_nodes           30
-	for {set a 1} {$a <= $num_nodes} {incr a} {
-		set n($a) [$ns_ node]
-        	$n($a) set-position [expr -15 + $a ] [expr 15 - $a ]
-        	$n($a) add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) \
-		    $opt(bw_up) $opt(phy) [$n1 set downlink_] [$n1 set uplink_]
-	}
-
-	for {set a 1} {$a <= $num_nodes} {incr a} {
-        	set b [expr int($a + (0.5 * $num_nodes))]
-        	if {$b > 30} {
-                	incr b -30 
-        	}
-
-        	set udp($a) [new Agent/UDP]
-        	$ns_ attach-agent $n($a) $udp($a)
-        	set exp($a) [new Application/Traffic/Exponential]
-        	$exp($a) attach-agent $udp($a)
-        	$exp($a) set rate_ 3Kb
-
-        	set null($a) [new Agent/Null]
-        	$ns_ attach-agent $n($b) $null($a)
-
-        	$ns_ connect $udp($a) $null($a)
-        	$ns_ at 1.0 "$exp($a) start"
-	}
-
-	$ns_ trace-all-satlinks $f
-
-	# We use centralized routing
-	set satrouteobject_ [new SatRouteObject]
-	$satrouteobject_ compute_routes
-
-	$ns_ at 50.0 "$self finish"
-
-	$ns_ run
-}
-
-# Backward compatibility syntax (legacy code) for "mixed"
-Class Test/mixed.legacy -superclass TestSuite
-Test/mixed.legacy instproc init {} {
-	$self instvar test_
-	set test_       mixed.legacy 
-	$self next
-
-}
-
-Test/mixed.legacy instproc run {} {
-	$self instvar ns_  
-
-	global opt f
-	
-	# Change some of the options
-	set opt(bw_down)        1.5Mb
-	set opt(bw_up)          1.5Mb
-	set opt(bw_isl)         25Mb
-	set opt(mac)            Mac/Sat 
-
-	set opt(alt)            780
-	set opt(inc)            90
-
-	set linkargs "$opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_down) $opt(phy)"
-	set alt $opt(alt)
-	set inc $opt(inc)
-	set chan $opt(chan)
-	set plane 1
-	set n0 [$ns_ satnode-polar $alt $inc 0 0 $plane $linkargs $chan]
-	set n1 [$ns_ satnode-polar $alt $inc 0 32.73 $plane $linkargs $chan]
-	set n2 [$ns_ satnode-polar $alt $inc 0 65.45 $plane $linkargs $chan]
-	set n3 [$ns_ satnode-polar $alt $inc 0 98.18 $plane $linkargs $chan]
-	set n4 [$ns_ satnode-polar $alt $inc 0 130.91 $plane $linkargs $chan]
-	set n5 [$ns_ satnode-polar $alt $inc 0 163.64 $plane $linkargs $chan]
-	set n6 [$ns_ satnode-polar $alt $inc 0 196.36 $plane $linkargs $chan]
-	set n7 [$ns_ satnode-polar $alt $inc 0 229.09 $plane $linkargs $chan]
-	set n8 [$ns_ satnode-polar $alt $inc 0 261.82 $plane $linkargs $chan]
-	set n9 [$ns_ satnode-polar $alt $inc 0 294.55 $plane $linkargs $chan]
-	set n10 [$ns_ satnode-polar $alt $inc 0 327.27 $plane $linkargs $chan]
-
-	# By setting the next_ variable on polar sats; handoffs can be optimized
-	# This step must follow all polar node creation
-	$n0 set_next $n10; $n1 set_next $n0; $n2 set_next $n1; $n3 set_next $n2
-	$n4 set_next $n3; $n5 set_next $n4; $n6 set_next $n5; $n7 set_next $n6
-	$n8 set_next $n7; $n9 set_next $n8; $n10 set_next $n9
-
-	# GEO satellite:  above North America
-	set n11 [$ns_ satnode-geo -100 $linkargs $opt(chan)]
-
-	# Terminals
-	set n100 [$ns_ satnode-terminal 37.9 -122.3]; # Berkeley
-	set n101 [$ns_ satnode-terminal 42.3 -71.1]; # Boston
-	set n200 [$ns_ satnode-terminal 0 10]
-	set n201 [$ns_ satnode-terminal 0 -10]
-
-	# Add any necessary ISLs or GSLs
-	# GSLs to the geo satellite:
-	$n100 add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) \
-	  $opt(phy) [$n11 set downlink_] [$n11 set uplink_]
-	$n101 add-gsl geo $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) \
-	  $opt(phy) [$n11 set downlink_] [$n11 set uplink_]
-	# Attach n200 and n201 
-	$n200 add-gsl polar $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) $opt(phy) [$n5 set downlink_] [$n5 set uplink_]
-	$n201 add-gsl polar $opt(ll) $opt(ifq) $opt(qlim) $opt(mac) $opt(bw_up) $opt(phy) [$n5 set downlink_] [$n5 set uplink_]
-
-	#ISL
-	$ns_ add-isl intraplane $n0 $n1 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n1 $n2 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n2 $n3 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n3 $n4 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n4 $n5 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n5 $n6 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n6 $n7 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n7 $n8 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n8 $n9 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n9 $n10 $opt(bw_isl) $opt(ifq) $opt(qlim)
-	$ns_ add-isl intraplane $n10 $n0 $opt(bw_isl) $opt(ifq) $opt(qlim)
-
-	# Trace all queues
-	$ns_ trace-all-satlinks $f
-
-	# Attach agents
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $n100 $udp0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$cbr0 set interval_ 60.01
-
-	set udp1 [new Agent/UDP]
-	$ns_ attach-agent $n200 $udp1
-	$udp1 set class_ 1
-	set cbr1 [new Application/Traffic/CBR]
-	$cbr1 attach-agent $udp1
-	$cbr1 set interval_ 90.5
-
-	set null0 [new Agent/Null]
-	$ns_ attach-agent $n101 $null0
-	set null1 [new Agent/Null]
-	$ns_ attach-agent $n201 $null1
-
-	$ns_ connect $udp0 $null0
-	$ns_ connect $udp1 $null1
-
-	set satrouteobject_ [new SatRouteObject]
-	$satrouteobject_ compute_routes
-
-	$ns_ at 1.0 "$cbr0 start"
-	$ns_ at 305.0 "$cbr1 start"
-
-	$ns_ at 9000.0 "$self finish"
-
-	$ns_ run
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-schedule.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-schedule.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-schedule.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-schedule.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,263 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-schedule.tcl,v 1.18 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-schedule.tcl
-#
-
-set quiet false
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-Class Topology
-
-Topology instproc node? num {
-	 $self instvar node_
-	 return $node_($num)
-}
-
-Topology instproc makeNet1 { ns scheduler { delay2 20ms } } {
-	$self instvar node_
-    	set node_(s1) [$ns node]
-    	set node_(s2) [$ns node]
-    	set node_(r1) [$ns node]
-    	set node_(k1) [$ns node]
-
-        $ns duplex-link $node_(s1) $node_(r1) 8Mb 2ms DropTail
-        $ns duplex-link $node_(s2) $node_(r1) 8Mb $delay2 DropTail
-        $ns duplex-link $node_(r1) $node_(k1) 800Kb 2ms $scheduler
-        $ns queue-limit $node_(r1) $node_(k1) 25 
-        $ns queue-limit $node_(k1) $node_(r1) 25 
-	if {[$class info instprocs config] != ""} {
-	 $self config $ns
- 	}
-
-}
-
-Class Topology/netSFQ -superclass Topology
-Topology/netSFQ instproc init ns {
-	$self instvar node_
-	$self makeNet1 $ns SFQ 20ms
-}
-
-Class Topology/netFQ -superclass Topology
-Topology/netFQ instproc init ns {
-	$self instvar node_
-	$self makeNet1 $ns FQ 20ms
-}
-
-Class Topology/netDRR -superclass Topology
-Topology/netDRR instproc init ns {
-	$self instvar node_
-	$self makeNet1 $ns DRR 10ms
-}
-
-Class Topology/netRED -superclass Topology
-Topology/netRED instproc init ns {
-	$self instvar node_
-	$self makeNet1 $ns RED 10ms
-}
-
-Class Topology/netDT -superclass Topology
-Topology/netDT instproc init ns {
-	$self instvar node_
-	$self makeNet1 $ns DropTail 10ms
-}
-
-TestSuite instproc finish file {
-	global quiet PERL
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-TestSuite instproc runDetailed {} {
-	global quiet
-	$self instvar ns_ node_ testName_
-
-	# Set up TCP connection
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 20
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.1 "$ftp1 start"
-	
-
-	# Set up TCP connection
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 20
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 0.4 "$ftp2 start"
-
-        $self tcpDump $tcp1 5.0
-        $self tcpDump $tcp2 5.0
-
-        #$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-Class Test/fifo-droptail -superclass TestSuite
-Test/fifo-droptail instproc init {} {
-        $self instvar net_ test_
-        set net_        netDT
-        set test_       fifo-droptail
-        $self next
-}
-Test/fifo-droptail instproc run {} {
-	Agent/TCP set overhead_ 0.01
-	$self setTopo
-	$self runDetailed
-}
-
-Class Test/fifo-red -superclass TestSuite
-Test/fifo-red instproc init {} {
-        $self instvar net_ test_
-        set net_        netRED
-        set test_       fifo-red
-        $self next
-}
-Test/fifo-red instproc run {} {
-	$self setTopo
-	$self runDetailed
-}
-
-Class Test/sfq -superclass TestSuite
-Test/sfq instproc init {} {
-        $self instvar net_ test_
-        set net_        netSFQ
-        set test_       sfq
-        $self next
-}
-Test/sfq instproc run {} {
-	$self setTopo
-	$self runDetailed
-}
-
-Class Test/fq -superclass TestSuite
-Test/fq instproc init {} {
-        $self instvar net_ test_ 
-        set net_        netFQ
-        set test_       fq
-        $self next
-}
-Test/fq instproc run {} {
-	$self setTopo
-	$self runDetailed
-}
-
-Class Test/fq_small_queue -superclass TestSuite
-Test/fq_small_queue instproc init {} {
-        $self instvar net_ test_
-        set net_        netFQ
-        set test_       fq_small_queue
-        $self next
-}
-Test/fq_small_queue instproc run {} {
-	$self instvar node_
-	$self setTopo 
-	Queue set limit_ 12
-	$self runDetailed
-}
-
-Class Test/drr -superclass TestSuite
-Test/drr instproc init {} {
-        $self instvar net_ test_
-        set net_        netDRR
-        set test_       drr
-        $self next
-}
-Test/drr instproc run {} {
-	$self setTopo
-	$self runDetailed
-}
-
-
-TestSuite runTest
-
-#######################################################
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sctp.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sctp.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sctp.tcl	2015-03-04 17:49:02.774750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sctp.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,4730 +0,0 @@
-# Copyright (c) 2006-2007 by the Protocol Engineering Lab, U of Delaware
-# All rights reserved.
-#
-# Protocol Engineering Lab web page : http://pel.cis.udel.edu/
-#
-# Paul D. Amer        <amer@@cis,udel,edu>
-# Armando L. Caro Jr. <acaro@@cis,udel,edu>
-# Janardhan Iyengar   <iyengar@@cis,udel,edu>
-# Preethi Natarajan   <nataraja@@cis,udel,edu>
-# Nasif Ekiz          <nekiz@@cis,udel,edu>
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-#
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-#
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-#
-# 3. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-#
-#
-# To run all of the tests in this file: ./test-all-sctp
-#
-# To run an individual test:
-#  ns test-suite-sctp.tcl sctp-2packetsTimeout
-#  ns test-suite-sctp.tcl sctp-AMR-Exceeded
-#  ns test-suite-sctp.tcl sctp-Rel1-Loss2 
-#  ns test-suite-sctp.tcl sctp-burstAfterFastRtxRecovery 
-#  ns test-suite-sctp.tcl sctp-burstAfterFastRtxRecovery-2 
-#  ns test-suite-sctp.tcl sctp-cwndFreeze 
-#  ns test-suite-sctp.tcl sctp-cwndFreeze-multistream 
-#  ns test-suite-sctp.tcl sctp-hugeRwnd 
-#  ns test-suite-sctp.tcl sctp-initRtx 
-#  ns test-suite-sctp.tcl sctp-multihome1-2 
-#  ns test-suite-sctp.tcl sctp-multihome2-1
-#  ns test-suite-sctp.tcl sctp-multihome2-2AMR-Exceeded
-#  ns test-suite-sctp.tcl sctp-multihome2-2Failover 
-#  ns test-suite-sctp.tcl sctp-multihome2-2Failover0
-#  ns test-suite-sctp.tcl sctp-multihome2-2Failover1
-#  ns test-suite-sctp.tcl sctp-multihome2-2Rtx1  
-#  ns test-suite-sctp.tcl sctp-multihome2-2Rtx3 
-#  ns test-suite-sctp.tcl sctp-multihome2-2Timeout
-#  ns test-suite-sctp.tcl sctp-multihome2-2TimeoutRta0
-#  ns test-suite-sctp.tcl sctp-multihome2-2TimeoutRta2
-#  ns test-suite-sctp.tcl sctp-multihome2-R-2
-#  ns test-suite-sctp.tcl sctp-multihome3-3Timeout
-#  ns test-suite-sctp.tcl sctp-multipleDropsSameWnd-1 
-#  ns test-suite-sctp.tcl sctp-multipleDropsSameWnd-1-delayed 
-#  ns test-suite-sctp.tcl sctp-multipleDropsSameWnd-2 
-#  ns test-suite-sctp.tcl sctp-multipleDropsSameWnd-3 
-#  ns test-suite-sctp.tcl sctp-multipleDropsTwoWnds-1-delayed 
-#  ns test-suite-sctp.tcl sctp-multipleRtx 
-#  ns test-suite-sctp.tcl sctp-multipleRtx-early 
-#  ns test-suite-sctp.tcl sctp-newReno
-#  ns test-suite-sctp.tcl sctp-noEarlyHBs
-#  ns test-suite-sctp.tcl sctp-smallRwnd 
-#  ns test-suite-sctp.tcl sctp-zeroRtx 
-#  ns test-suite-sctp.tcl sctp-zeroRtx-burstLoss 
-#
-#  ns test-suite-sctp.tcl sctp-hbAfterRto-2packetsTimeout
-#  ns test-suite-sctp.tcl sctp-hbAfterRto-multihome2-2Timeout
-#
-#  ns test-suite-sctp.tcl sctp-multipleFastRtx-2packetsTimeout
-#  ns test-suite-sctp.tcl sctp-multipleFastRtx-multihome2-2Timeout
-#
-#  ns test-suite-sctp.tcl sctp-mfrHbAfterRto-Rta2-2FRsTimeout
-#
-#  ns test-suite-sctp.tcl sctp-timestamp-multihome2-2Rtx3
-#  ns test-suite-sctp.tcl sctp-timestamp-multihome2-2Timeout
-#
-#  ns test-suite-sctp.tcl sctp-packet-loss-dest-conf
-#  
-#  ns test-suite-sctp.tcl sctp-cmt-2paths-64K
-#  ns test-suite-sctp.tcl sctp-cmt-2paths-64K-withloss
-#  ns test-suite-sctp.tcl sctp-cmt-3paths-64K
-
-#  ns test-suite-sctp.tcl sctp-cmt-2paths-1path-fails
-#  ns test-suite-sctp.tcl sctp-cmt-3paths-1path-fails
-#  ns test-suite-sctp.tcl sctp-cmt-packet-loss-dest-conf
-#  ns test-suite-sctp.tcl sctp-cmt-Rtx-ssthresh
-#  ns test-suite-sctp.tcl sctp-cmt-Rtx-cwnd
-#  ns test-suite-sctp.tcl sctp-cmt-Timeout-pmr
-#  ns test-suite-sctp.tcl sctp-cmt-multihome2-2Timeout
-
-#  ns test-suite-sctp.tcl sctp-cmt-pf-2paths-1path-fails
-#  ns test-suite-sctp.tcl sctp-cmt-pf-3paths-1path-fails
-#  ns test-suite-sctp.tcl sctp-cmt-pf-packet-loss-dest-conf
-#  ns test-suite-sctp.tcl sctp-cmt-pf-Rtx-ssthresh
-#  ns test-suite-sctp.tcl sctp-cmt-pf-Rtx-cwnd
-#  ns test-suite-sctp.tcl sctp-cmt-pf-Timeout-pmr
-  
-Class TestSuite
-
-# 2 packets get dropped and their fast rtx gets lost too.... forcing them
-# to timeout.
-Class Test/sctp-2packetsTimeout -superclass TestSuite
-
-# This script tests that the appropriate action is taken when the 
-# Association.Max.Retrans exceeded... abruptly close the association!
-Class Test/sctp-AMR-Exceeded -superclass TestSuite
-
-# tests unreliable stream with k-rtx value of 1 with 2 losses of same chunk.
-Class Test/sctp-Rel1-Loss2 -superclass TestSuite
-
-# This tests the Max.Burst feature added in the SCTP implementors
-# guide draft v4.  This script carefully choose a small receiver window
-# and drops a specific packet to generate the scenario where the
-# receiver has a full window and is waiting on the rtx of an earlier
-# lost chunk. Once the sender fast retransmits the chunk and the
-# receiver receives it, the entire receiver window is free'd up and
-# now the sender has plenty of room to send. This WOULD create a
-# burst, but Max.Burst limits the burst in this scenario.
-Class Test/sctp-burstAfterFastRtxRecovery -superclass TestSuite
-
-# This tests the Max.Burst feature added in the SCTP implementors
-# guide draft v4.  This script carefully choose a small receiver window
-# and drops a specific packet to generate the scenario where the
-# receiver has a full window and is waiting on the rtx of an earlier
-# lost chunk. Once the sender fast retransmits the chunk and the
-# receiver receives it, the entire receiver window is free'd up and
-# now the sender has plenty of room to send. This WOULD create a
-# burst, but Max.Burst limits the burst in this scenario.  
-Class Test/sctp-burstAfterFastRtxRecovery-2 -superclass TestSuite
-
-# The SCTP implementor's guide clarifies a point in the congestion
-# control algorithm which allows PTMU-1 bytes over cwnd in
-# flight. This script tests that it is done properly and that cwnd
-# does NOT freeze.
-Class Test/sctp-cwndFreeze -superclass TestSuite
-
-# The SCTP implementor's guide clarifies a point in the congestion control
-# algorithm which allows PTMU-1 bytes over cwnd in flight. This script
-# tests that it is done properly (with multistreams) and that cwnd does
-# NOT freeze.
-Class Test/sctp-cwndFreeze-multistream -superclass TestSuite
-
-# This script tests for proper behavior when using a huge rwnd and mtu
-# size chunks.
-Class Test/sctp-hugeRwnd -superclass TestSuite
-
-# tests that it recovers from losing an INIT chunk
-Class Test/sctp-initRtx -superclass TestSuite
-
-# Demonstrates multihoming. One endpoint is single homed while the
-# other is multihomed. Shows that the 2 can be combined. The sender is
-# multihomed.
-Class Test/sctp-multihome1-2 -superclass TestSuite
-
-# Demonstrates multihoming. One endpoint is single homed while the other is
-# multihomed. Shows that the 2 can be combined. The receiver is multihomed.
-Class Test/sctp-multihome2-1 -superclass TestSuite
-
-# This script tests that the appropriate action is taken when the association
-# is multihomed and Association.Max.Retrans exceeded... abruptly close the 
-# association!
-Class Test/sctp-multihome2-2AMR-Exceeded -superclass TestSuite
-
-# Demonstrates a failover with multihoming (using a heartbeat timer per
-# dest). Two endpoints with 2 interfaces with direct connections between
-# each pair. Eventually in the primary becomes active again and all
-# traffic moves back to the primary.
-Class Test/sctp-multihome2-2Failover -superclass TestSuite
-
-# Demonstrates a failover with multihoming, but this example has
-# heartbeating turned off. Two endpoints with 2 interfaces with direct
-# connections between each pair. Eventually in the primary becomes active
-# again, but since heartbeating is turned off, traffic never moves back to
-# the primary.
-Class Test/sctp-multihome2-2Failover0 -superclass TestSuite
-
-# Demonstrates a failover with multihoming (using one heartbeat timer for
-# all dests). Two endpoints with 2 interfaces with direct connections
-# between each pair. Eventually in the primary becomes active again and
-# all traffic moves back to the primary.
-Class Test/sctp-multihome2-2Failover1 -superclass TestSuite
-
-# Demonstrates retransmissions with multihoming. Two endpoints with 2
-# interfaces with direct connections between each pair. A packet gets
-# dropped and later gets retransmitted on an alternate path.
-Class Test/sctp-multihome2-2Rtx1 -superclass TestSuite
-
-# Demonstrates retransmissions with multihoming. Two endpoints with 2
-# interfaces with direct connections between each pair. 3 packets get
-# dropped and later get retransmitted on an alternate path.
-Class Test/sctp-multihome2-2Rtx3 -superclass TestSuite
-
-# Demonstrates retransmissions with multihoming. Two endpoints with 2
-# interfaces with direct connections between each pair. A packet gets
-# dropped and fast rtx'd on the alternate path. The retransmit gets
-# lost and times out, causing yet another retransmission.
-Class Test/sctp-multihome2-2Timeout -superclass TestSuite
-
-# Demonstrates experimental retransmission policies (Rta0 = retransmit on
-# the same path) with multihoming. Two endpoints with 2 interfaces with
-# direct connections between each pair. A packet gets dropped and fast
-# rtx'd on the same path. The retransmit gets lost and times out, causing
-# yet another retransmission on the same path.
-Class Test/sctp-multihome2-2TimeoutRta0 -superclass TestSuite
-
-# Demonstrates experimental retransmission policies (Rta1 = fast rtx on
-# the same path and timeout rtx on the alternate path) with
-# multihoming. Two endpoints with 2 interfaces with direct connections
-# between each pair. A packet gets dropped and fast rtx'd on the same
-# path. The retransmit gets lost and times out, causing yet another
-# retransmission on the alternate path.
-Class Test/sctp-multihome2-2TimeoutRta2 -superclass TestSuite
-
-# Demonstrates multihoming. Two endpoints with 2 interfaces each all
-# connected via a router. In the middle of the association, a change
-# primary is done.
-Class Test/sctp-multihome2-R-2 -superclass TestSuite
-
-# Demonstrates retransmissions with multihoming. Two endpoints with 3
-# interfaces with direct connections between each pair. A packet gets dropped 
-# and fast rtx'd on the alternate path. The retransmit gets lost and times out,
-# causing a retransmission on the the third althernate path.
-Class Test/sctp-multihome3-3Timeout -superclass TestSuite
-
-# One burst loss and one individual loss in same window (without delayed sacks).
-Class Test/sctp-multipleDropsSameWnd-1 -superclass TestSuite
-
-# One burst loss and one individual loss in same window (with delayed sacks).
-Class Test/sctp-multipleDropsSameWnd-1-delayed -superclass TestSuite
-
-# Burst loss in same window.
-Class Test/sctp-multipleDropsSameWnd-2 -superclass TestSuite
-
-# Two independent burst losses in same window.
-Class Test/sctp-multipleDropsSameWnd-3 -superclass TestSuite
-
-# One continuous burst loss.
-Class Test/sctp-multipleDropsTwoWnds-1-delayed -superclass TestSuite
-
-# This test drops TSN 15 (ns pkt 16) and the Fast Rtx of the same
-# (ns pkt 35).  According to the proposed Section 7.2.4.5, Fast Rtx
-# happens only once for any TSN. This graph illustrates this point -
-# if Fast Rtx is enabled after the timeout rtx of the TSN, it can be
-# clearly seen that there WILL be a false Fast Rtx for the TSN.
-Class Test/sctp-multipleRtx -superclass TestSuite
-
-# This test drops TSN 3 (ns pkt 4) and the Fast Rtx of the same (ns
-# pkt 11).  According to the proposed Section 7.2.4.5, Fast Rtx
-# happens only once for any TSN. This graph illustrates this point -
-# if Fast Rtx is enabled after the timeout rtx of the TSN, it can be
-# clearly seen that there WILL be a false Fast Rtx for the TSN. (Note:
-# this script is basically the same as multipleRtx.tcl, except here we
-# are testing the same condition when it happens early in the
-# connection.)
-Class Test/sctp-multipleRtx-early -superclass TestSuite
-
-# Test NewReno changes (fast recovery & HTNA algorithm) in impguide-08
-Class Test/sctp-newReno -superclass TestSuite
-
-# test that HEARTBEATs don't start until the association is established
-Class Test/sctp-noEarlyHBs -superclass TestSuite
-
-# This script tests for proper behavior when using a small rwnd and
-# medium size chunks.
-Class Test/sctp-smallRwnd -superclass TestSuite
-
-# tests unreliable stream with k-rtx value of 0 with one loss.
-Class Test/sctp-zeroRtx -superclass TestSuite
-
-# test unreliable stream with k-rtx value of 0 with a burst loss.
-Class Test/sctp-zeroRtx-burstLoss -superclass TestSuite
-
-
-# Test HbAfterRto extension. 2 packets get dropped and their fast rtx gets
-# lost too.... forcing them to timeout.
-Class Test/sctp-hbAfterRto-2packetsTimeout -superclass TestSuite
-
-# Test HbAfterRto extension. Demonstrates retransmissions with
-# multihoming. Two endpoints with 2 interfaces with direct connections
-# between each pair. A packet gets dropped and fast rtx'd on the alternate
-# path. The retransmit gets lost and times out, causing a retransmission
-# on the original path (primary).
-Class Test/sctp-hbAfterRto-multihome2-2Timeout -superclass TestSuite
-
-
-# Test MultipleFastRtx extension. 2 packets get dropped and their fast rtx gets
-# lost too.... NORMALLY forcing them to timeout, but with this extension
-# they are fast rtx'd again.
-Class Test/sctp-multipleFastRtx-2packetsTimeout -superclass TestSuite
-
-# Test MultipleFastRtx extension. Demonstrates retransmissions with
-# multihoming. Two endpoints with 2 interfaces with direct connections
-# between each pair. A packet gets dropped and fast rtx'd on the alternate
-# path. The retransmit gets lost and fast rtx'd again (instead of
-# timeout!) on the original path (primary).
-Class Test/sctp-multipleFastRtx-multihome2-2Timeout -superclass TestSuite
-
-
-# Test MfrHbAfterRto extension with RTA=2. Two endpoints with 2 interfaces
-# with direct connections between each pair. A packet gets dropped and
-# fast rtx'd on the same path. The rtx gets lost, and the packet is fast rtx'd
-# again. Then all packets on primary are lost, so a timeout occurs and the same
-# packet gets retransmitted on alternate path.
-Class Test/sctp-mfrHbAfterRto-Rta2-2FRsTimeout -superclass TestSuite
-
-
-# Test Timestamp extension. Demonstrates retransmissions with timestamps
-# and multihoming. Two endpoints with 2 interfaces with direct connections
-# between each pair. 3 packets get dropped and later get retransmitted on
-# an alternate path.
-Class Test/sctp-timestamp-multihome2-2Rtx3 -superclass TestSuite
-
-# Test Timestamp extension. Demonstrates retransmissions with
-# multihoming. Two endpoints with 2 interfaces with direct connections
-# between each pair. A packet gets dropped and fast rtx'd on the alternate
-# path. The retransmit gets lost and times out, causing a retransmission
-# on the original path (primary).
-Class Test/sctp-timestamp-multihome2-2Timeout -superclass TestSuite
-
-# Demonstrates SCTP destination confirmation.
-# There are two endpoints with 3 interfaces each. Two of the heartbeats used 
-# for destination confirmation are lost, which delays the start of data 
-# transfer. Data transfer does not start until all the destinations are 
-# confirmed. 
-Class Test/sctp-packet-loss-dest-conf -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) using multihoming. 
-# Two endpoints with 2 interfaces with direct connections between each pair.
-Class Test/sctp-cmt-2paths-64K -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) using multihoming. 
-# Two endpoints with 2 interfaces with direct connections between each pair.
-# Loss introduced on Path0, and delay of Path0 different from Path1.
-Class Test/sctp-cmt-2paths-64K-withloss -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) using multihoming. 
-# Two endpoints with 3 interfaces with direct connections between each pair.
-Class Test/sctp-cmt-3paths-64K -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) using multihoming. 
-# There are two endpoints with 2 interfaces each. One of the independent paths
-# between end points becomes inactive(goes down) during the transfer. The 
-# transfer is completed using the other path.
-Class Test/sctp-cmt-2paths-1path-fails -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) using multihoming. 
-# There are two endpoints with 3 interfaces each. One of the independent paths
-# between end points becomes inactive(goes down) during the transfer. The 
-# transfer is completed using the other paths.
-Class Test/sctp-cmt-3paths-1path-fails -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) destination confirmation.
-# There are two endpoints with 2 interfaces. Two of the heartbeats used for 
-# destination confirmation are lost, which delays the start of data transfer.
-# Data transfer does not start until all the destinations are confirmed. 
-Class Test/sctp-cmt-packet-loss-dest-conf -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) using multihoming and 
-# RTX_SSTHRESH retransmission policy. There are two endpoints with 2 
-# interfaces each. Four consecutive data packets from the first interface are 
-# dropped to cause a Timeout. Retransmissions are sent to the destination with
-# the highest ssthresh value.
-Class Test/sctp-cmt-Rtx-ssthresh -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) using multihoming and 
-# RTX_CWND retransmission policy. There are two endpoints with 2 interfaces 
-# each. A random packet is lost to force fast rtx. of the packet. The rtx. is 
-# sent to the destination with the highest cwnd value.
-Class Test/sctp-cmt-Rtx-cwnd -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer (CMT) using multihoming.
-# There are two endpoints with 2 interfaces each. A number of packets are lost
-# from one of the destinations to get PMR+1 consecutive timeouts. These 
-# timeouts change the status of the destination to INACTIVE. The data transfer
-# continues to the remaining active destination. When INACTIVE destination 
-# becomes ACTIVE, data packets can be send to the all the destinations again. 
-Class Test/sctp-cmt-Timeout-pmr -superclass TestSuite
-
-# Demonstrates a Timeout with multihoming for Concurrent Multipath 
-# Transfer (CMT). There are two endpoints with 2 interfaces with direct 
-# connections between each pair. A packet gets dropped and fast rtx. 
-# The rtx. gets lost and times out, causing yet another retransmission.
-Class Test/sctp-cmt-multihome2-2Timeout -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer with Potentially Failed (CMT-PF) 
-# using multihoming. There are two endpoints with 2 interfaces each. One of 
-# the independent paths between hosts becomes inactive(goes down) during the 
-# transfer. On the first Timeout on the failed path, data is no longer 
-# transferred along the failed destination. The transfer is completed using 
-# the other path.
-Class Test/sctp-cmt-pf-2paths-1path-fails -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer with Potentially Failed (CMT-PF)
-# using multihoming. There are two endpoints with 3 interfaces each. One of 
-# the independent paths between hosts becomes inactive(goes down) during the 
-# transfer. On the first Timeout on the failed destination, data is no longer 
-# transferred along the failed path. The transfer is completed using the other
-# paths.
-Class Test/sctp-cmt-pf-3paths-1path-fails -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer with Potentially Failed (CMT-PF) 
-# destination confirmation. There are two endpoints with 2 interfaces each. 
-# Two of the heartbeats used for destination confirmation are lost, which 
-# delays the start of data transfer. Data transfer does not start until all 
-# the destinations are confirmed.  
-Class Test/sctp-cmt-pf-packet-loss-dest-conf -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer with Potentially Failed (CMT-PF) 
-# using multihoming and RTX_SSTHRESH retransmission policy.
-# There are two endpoints with 2 interfaces each. A random packet is lost
-# and its fast rtx. is sent to the destination with the highest ssthresh value.
-Class Test/sctp-cmt-pf-Rtx-ssthresh -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer with Potentially Failed (CMT-PF) 
-# using multihoming and RTX_CWND retransmission policy.
-# There are two endpoints with 2 interfaces each. A random packet is lost
-# and its fast rtx. is sent to the destination with the highest cwnd value.
-Class Test/sctp-cmt-pf-Rtx-cwnd -superclass TestSuite
-
-# Demonstrates Concurrent Multipath Transfer with Potentially Failed (CMT-PF) 
-# using multihoming. There are two endpoints with 2 interfaces. A number of 
-# packets are lost from one of the destinations to get PMR+1 consecutive 
-# timeouts. These timeouts change the status of the destination to INACTIVE. 
-# The data transfer continues to the remaining active destination. When 
-# INACTIVE destination becomes ACTIVE, data packets can be send to the all 
-# the destinations again.   
-Class Test/sctp-cmt-pf-Timeout-pmr -superclass TestSuite
-
-proc usage {} {
-    global argv0
-    puts stderr "usage: ns $argv0 <test> "
-    exit 1
-}
-
-TestSuite instproc init {} {
-    Trace set show_sctphdr_ 1
-    $self instvar ns numnodes_
-    set ns [new Simulator]
-    set allchan [open temp.rands w]
-    $ns trace-all $allchan
-}
-
-TestSuite instproc finish {} {
-    $self instvar ns
-    global quiet PERL
- 
-    $ns flush-trace
-    if {$quiet == 0} {
-        puts "Graphing..."
-        set XGRAPH "../../../bin/xgraph"
-        set RAW2XG_SCTP "../../bin/raw2xg-sctp"
-        set WRAP 100
-	exec $PERL $RAW2XG_SCTP -A -f -q -s 0.01 -m $WRAP -n 0 temp.rands \
-		> temp.rands.points
-        exec $XGRAPH -bb -tk -nl -m -x time -y packets temp.rands.points &
-    }
-    exit 0
-}
-
-Test/sctp-2packetsTimeout instproc init {} {
-    $self instvar ns ftp0
-    global quiet 
-    set testName 2packetsTimeout
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-
-    set err [new ErrorModel/List]
-    $err droplist {15 16 32 33}
-    $ns lossmodel $err $n0 $n1
-
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 0
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-2packetsTimeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    
-    $ns run
-}
-
-Test/sctp-AMR-Exceeded instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName AMR-Exceeded
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-
-
-    set err [new ErrorModel/List]
-    $err droplist {15 16 17 18 19 20 21 22 23 24 32 33 34 35 36 37 38 39 40 41 42 43 44}
-    $ns lossmodel $err $n0 $n1
-
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set associationMaxRetrans_ 5
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 0
-
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-AMR-Exceeded instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 90.0 "$self finish"
-    
-    $ns run
-}
-
-Test/sctp-Rel1-Loss2 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName Rel1-Loss2
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    
-    $err droplist {16 29}
-    
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set numUnrelStreams_ 1
-    $sctp0 set reliability_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0   
-}
-
-Test/sctp-Rel1-Loss2 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    
-    $ns run
-}
-
-
-Test/sctp-burstAfterFastRtxRecovery instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName burstAfterFastRtxRecovery
-
-    $self next
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 5Mb 50ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {113}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set useMaxBurst_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 23488 
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-burstAfterFastRtxRecovery instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 5.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-burstAfterFastRtxRecovery-2 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName burstAfterFastRtxRecovery-2
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {32}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set useMaxBurst_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 23488
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-burstAfterFastRtxRecovery-2 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 6.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cwndFreeze instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cwndFreeze
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {16}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-cwndFreeze instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 5.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cwndFreeze-multistream instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cwndFreeze-multistream
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {16}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 5
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0    
-}
-
-Test/sctp-cwndFreeze-multistream instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    
-    $ns run
-}
-
-Test/sctp-hugeRwnd instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName hugeRwnd
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 1500Mb 300ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    $ns queue-limit $n0 $n1 10000
-    
-    set err [new ErrorModel/List]
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 1048576
-    $sctp1 set useDelayedSacks_ 0
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-hugeRwnd instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-initRtx instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName initRtx
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {0}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-    
-}
-
-Test/sctp-initRtx instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome1-2 instproc init {} {
-    $self instvar ns testName host0_if1 sctp0 ftp0
-    global quiet
-    set testName multihome1-2
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    
-    set host1 [$ns node]
-    $host1 color Blue
-    
-    set router [$ns node]
-    
-    $ns duplex-link $host0_if0 $router .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $router .5Mb 200ms DropTail
-    
-    $ns duplex-link $host1 $router .5Mb 200ms DropTail
-    
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $host1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multihome1-2 instproc run {} {
-    $self instvar ns host0_if1 sctp0 ftp0
-    $ns at 6.0 "$sctp0 force-source $host0_if1"
-    $ns at 0.5 "$ftp0 start"
-    $ns at 8.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-1 instproc init {} {
-    $self instvar ns testName host0_if1 sctp1 ftp1
-    global quiet
-    set testName multihome2-1
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1 [$ns node]
-    $host1 color Blue
-
-    set router [$ns node]
-
-    $ns duplex-link $host0_if0 $router .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $router .5Mb 200ms DropTail
-
-    $ns duplex-link $host1 $router .5Mb 200ms DropTail
-
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $host1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set dataChunkSize_ 512
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    $sctp1 set-primary-destination $host0_if0
-
-    set ftp1 [new Application/FTP]
-    $ftp1 attach-agent $sctp1
-}
-
-Test/sctp-multihome2-1 instproc run {} {
-    $self instvar ns host0_if1 sctp1 ftp1
-    $ns at 6.0 "$sctp1 set-primary-destination $host0_if1"
-    $ns at 0.5 "$ftp1 start"
-    $ns at 8.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2AMR-Exceeded instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2AMR-Exceeded
-    $self next
-    
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set err1 [new ErrorModel/List]
-    $err1 droplist {1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16}
-    $ns lossmodel $err1 $host0_if1 $host1_if1
-
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-
-    $sctp0 set-primary-destination $host1_if0
-}
-
-Test/sctp-multihome2-2AMR-Exceeded instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 180.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2Failover instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2Failover
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-    
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16 17 18 19 20 21 22 23 24 25 26 27 29 28 31 32}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-    
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multihome2-2Failover instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 180.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2Failover0 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2Failover0
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32} 
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set heartbeatInterval_ 0
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multihome2-2Failover0 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 195.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2Failover1 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2Failover1
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32} 
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multihome2-2Failover1 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 195.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2Rtx1 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2Rtx1
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-    
-    set err [new ErrorModel/List]
-    $err droplist {16}
-    $ns lossmodel $err $host0_if0 $host1_if0
-    
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-    
-    $sctp0 set-primary-destination $host1_if0
-}
-
-Test/sctp-multihome2-2Rtx1 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2Rtx3 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2Rtx3
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err [new ErrorModel/List]
-    $err droplist {16 17 18}
-    $ns lossmodel $err $host0_if0 $host1_if0
-
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-
-    $sctp0 set-primary-destination $host1_if0       
-}
-
-Test/sctp-multihome2-2Rtx3 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2Timeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2Timeout
-    $self next
-    
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-    
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-    
-    set err1 [new ErrorModel/List]
-    $err1 droplist {1}
-    $ns lossmodel $err1 $host0_if1 $host1_if1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multihome2-2Timeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2TimeoutRta0 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2TimeoutRta0
-    $self next
-    
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-    
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16 29}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-    
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set rtxToAlt_ 0
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multihome2-2TimeoutRta0 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-2TimeoutRta2 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome2-2TimeoutRta2
-    $self next
-    
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-    
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16 29}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-    
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set rtxToAlt_ 2
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multihome2-2TimeoutRta2 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome2-R-2 instproc init {} {
-    $self instvar ns testName host1_if1 sctp0 ftp0
-    global quiet
-    set testName multihome2-R-2
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    set router [$ns node]
-
-    $ns duplex-link $host0_if0 $router .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $router .5Mb 200ms DropTail
-
-    $ns duplex-link $host1_if0 $router .5Mb 200ms DropTail
-    $ns duplex-link $host1_if1 $router .5Mb 200ms DropTail
-
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-
-    $sctp0 set-primary-destination $host1_if0    
-}
-
-Test/sctp-multihome2-R-2 instproc run {} {
-    $self instvar ns host1_if1 sctp0 ftp0
-    $ns at 7.5 "$sctp0 set-primary-destination $host1_if1"
-    $ns at 0.5 "$ftp0 start"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multihome3-3Timeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multihome3-3Timeout
-    $self next
-    
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    set host0_if2 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $host0_if2 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    $ns multihome-add-interface $host0_core $host0_if2
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    set host1_if2 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $host1_if2 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    $ns multihome-add-interface $host1_core $host1_if2
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if2 $host1_if2 .5Mb 200ms DropTail
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set err1 [new ErrorModel/List]
-    $err1 droplist {1}
-    $ns lossmodel $err1 $host0_if1 $host1_if1
-
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multihome3-3Timeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multipleDropsSameWnd-1 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleDropsSameWnd-1
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {13 14 16}
-    $ns lossmodel $err $n0 $n1
-
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-   
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleDropsSameWnd-1 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 7.0 "$self finish"
-    
-    $ns run
-}
-
-Test/sctp-multipleDropsSameWnd-1-delayed instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleDropsSameWnd-1-delayed
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {13 14 16}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-   
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-   
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleDropsSameWnd-1-delayed instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 7.0 "$self finish"
-    
-    $ns run
-}
-
-Test/sctp-multipleDropsSameWnd-2 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleDropsSameWnd-2
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {13 14 15 16}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-   
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-   
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleDropsSameWnd-2 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 7.0 "$self finish"
-    
-    $ns run
-}
-
-Test/sctp-multipleDropsSameWnd-3 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleDropsSameWnd-3
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {12 13 15 16}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-   
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-   
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleDropsSameWnd-3 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 7.0 "$self finish"
-    
-    $ns run
-}
-
-Test/sctp-multipleDropsTwoWnds-1-delayed instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleDropsTwoWnds-1-delayed
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {15 16 17 18}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-   
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-   
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleDropsTwoWnds-1-delayed instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multipleRtx instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleRtx
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 300ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    $ns queue-limit $n0 $n1 10000
-    
-    set err [new ErrorModel/List]
-    $err droplist {17 36}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468 
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-   
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-   
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleRtx instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multipleRtx-early instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleRtx-early
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 300ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    $ns queue-limit $n0 $n1 10000
-    
-    set err [new ErrorModel/List]
-    $err droplist {5 12}
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-   
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleRtx-early instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-newReno instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName newReno
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-
-    set err [new ErrorModel/List]
-    $err droplist {17 29 31}
-    $ns lossmodel $err $n0 $n1
-
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set initialCwnd_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-newReno instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 7.0 "$ftp0 stop"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-noEarlyHBs instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName noEarlyHBs
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-   
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-noEarlyHBs instproc run {} {
-    $self instvar ns ftp0
-    $ns at 50.0 "$ftp0 start"
-    $ns at 55.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-smallRwnd instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName smallRwnd
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 300ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    $ns queue-limit $n0 $n1 10000
-    
-    set err [new ErrorModel/List]
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 724
-    $sctp0 set numOutStreams_ 1
-   
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 4096
-    $sctp1 set useDelayedSacks_ 0
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-smallRwnd instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-zeroRtx instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName zeroRtx 
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {31}
-        
-    $ns lossmodel $err $n0 $n1
-    
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set numUnrelStreams_ 1
-   
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 1
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-zeroRtx instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 6.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-zeroRtx-burstLoss instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName zeroRtx-burstLoss
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-    
-    set err [new ErrorModel/List]
-    $err droplist {17 18 19 20 21}
-    $ns lossmodel $err $n0 $n1
-
-    set sctp0 [new Agent/SCTP]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set numUnrelStreams_ 1
-   
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-zeroRtx-burstLoss instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 5.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-hbAfterRto-2packetsTimeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName hbAfterRto-2packetsTimeout
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-
-    set err [new ErrorModel/List]
-    $err droplist {15 16 32 33}
-    $ns lossmodel $err $n0 $n1
-
-    set sctp0 [new Agent/SCTP/HbAfterRto]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-   
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP/HbAfterRto]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-hbAfterRto-2packetsTimeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 4.5 "$ftp0 stop"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-hbAfterRto-multihome2-2Timeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName hbAfterRto-multihome2-2Timeout
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set err1 [new ErrorModel/List]
-    $err1 droplist {1}
-    $ns lossmodel $err1 $host0_if1 $host1_if1
-
-    set sctp0 [new Agent/SCTP/HbAfterRto]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP/HbAfterRto]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-hbAfterRto-multihome2-2Timeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 9.0 "$ftp0 stop"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multipleFastRtx-2packetsTimeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleFastRtx-2packetsTimeout
-    $self next
-
-    set n0 [$ns node]
-    set n1 [$ns node]
-    $ns duplex-link $n0 $n1 .5Mb 200ms DropTail
-    $ns duplex-link-op $n0 $n1 orient right
-
-    set err [new ErrorModel/List]
-    $err droplist {15 16 32 33}
-    $ns lossmodel $err $n0 $n1
-
-    set sctp0 [new Agent/SCTP/MultipleFastRtx]
-    $ns attach-agent $n0 $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-   
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP/MultipleFastRtx]
-    $ns attach-agent $n1 $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072
-    $sctp1 set useDelayedSacks_ 0
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleFastRtx-2packetsTimeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 4.5 "$ftp0 stop"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-multipleFastRtx-multihome2-2Timeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName multipleFastRtx-multihome2-2Timeout
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set err1 [new ErrorModel/List]
-    $err1 droplist {1}
-    $ns lossmodel $err1 $host0_if1 $host1_if1
-
-    set sctp0 [new Agent/SCTP/MultipleFastRtx]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP/MultipleFastRtx]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-multipleFastRtx-multihome2-2Timeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 9.0 "$ftp0 stop"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-mfrHbAfterRto-Rta2-2FRsTimeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName mfrHbAfterRto-Rta2-2FRsTimeout
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16 29 37 38 39 40 41}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set sctp0 [new Agent/SCTP/MultipleFastRtx]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set rtxToAlt_ 2
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP/MultipleFastRtx]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-mfrHbAfterRto-Rta2-2FRsTimeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 9.0 "$ftp0 stop"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-timestamp-multihome2-2Rtx3 instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName timestamp-multihome2-2Rt3
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err [new ErrorModel/List]
-    $err droplist {16 17 18}
-    $ns lossmodel $err $host0_if0 $host1_if0
-
-    set sctp0 [new Agent/SCTP/Timestamp]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1456  # sctp/ip = 32, timestamp = 12
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP/Timestamp]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set dataChunkSize_ 512
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-timestamp-multihome2-2Rtx3 instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 4.5 "$ftp0 stop"
-    $ns at 10.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-timestamp-multihome2-2Timeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName timestamp-multihome2-2Timeout
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {16}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set err1 [new ErrorModel/List]
-    $err1 droplist {1}
-    $ns lossmodel $err1 $host0_if1 $host1_if1
-
-    set sctp0 [new Agent/SCTP/Timestamp]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1456  # sctp/ip = 32, timestamp = 12
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP/Timestamp]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set dataChunkSize_ 512
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-   
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-timestamp-multihome2-2Timeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 9.0 "$ftp0 stop"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-packet-loss-dest-conf instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName packet-loss-dest-conf
-    $self next
-    
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    set host0_if2 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $host0_if2 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    $ns multihome-add-interface $host0_core $host0_if2
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    set host1_if2 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $host1_if2 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    $ns multihome-add-interface $host1_core $host1_if2
-
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    $ns duplex-link $host0_if2 $host1_if2 10Mb 45ms DropTail
-    [[$ns link $host0_if2 $host1_if2] queue] set limit_ 50
-
-    set err0 [new ErrorModel/List]
-    $err0 droplist {2 3}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-
-    set sctp0 [new Agent/SCTP]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-
-    set sctp1 [new Agent/SCTP]
-    $ns multihome-attach-agent $host1_core $sctp1
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 131072 
-    $sctp1 set useDelayedSacks_ 1
-
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1 
-	$sctp1 set debugFileIndex_ 1
-    }
-
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-packet-loss-dest-conf instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-2paths-64K instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-2paths-64K
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    set host0_if2 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $host0_if2 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-2paths-64K instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-2paths-64K-withloss instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-2paths-64K-withloss
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 30ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set err [new ErrorModel/List]
-    $err droplist {16 17 18}
-    $ns lossmodel $err $host0_if0 $host1_if0
-
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-    
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-2paths-64K-withloss instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-3paths-64K instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-3paths-64K
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    set host0_if2 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $host0_if2 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    $ns multihome-add-interface $host0_core $host0_if2
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    set host1_if2 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $host1_if2 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    $ns multihome-add-interface $host1_core $host1_if2
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    $ns duplex-link $host0_if2 $host1_if2 10Mb 45ms DropTail
-    [[$ns link $host0_if2 $host1_if2] queue] set limit_ 50
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-    
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-3paths-64K instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-2paths-1path-fails instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-2paths-1path-fails
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-
-    $ns rtmodel-at 10.0 down $host0_if1 $host1_if1
-}
-
-Test/sctp-cmt-2paths-1path-fails instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 14520000"
-    $ns at 120.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-3paths-1path-fails instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-3paths-1path-fails
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    set host0_if2 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $host0_if2 color Red
-    
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    $ns multihome-add-interface $host0_core $host0_if2
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    set host1_if2 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $host1_if2 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    $ns multihome-add-interface $host1_core $host1_if2
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    $ns duplex-link $host0_if2 $host1_if2 10Mb 45ms DropTail
-    [[$ns link $host0_if2 $host1_if2] queue] set limit_ 50
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-    $ns rtmodel-at 10.0 down $host0_if1 $host1_if1
-}
-
-Test/sctp-cmt-3paths-1path-fails instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 14520000"
-    $ns at 100.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-packet-loss-dest-conf instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-packet-loss-dest-conf
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set err [new ErrorModel/List]
-    $err droplist {2 3}
-    $ns lossmodel $err $host0_if0 $host1_if0
-
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2  #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-    
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-packet-loss-dest-conf instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-Rtx-ssthresh instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-Rtx-ssthresh
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set err [new ErrorModel/List]
-    $err droplist {5 6 7 8}
-    $ns lossmodel $err $host0_if0 $host1_if0
-
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2  #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-    
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-Rtx-ssthresh instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-Rtx-cwnd instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-Rtx-cwnd
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 35ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set err [new ErrorModel/List]
-    $err droplist {30}
-    $ns lossmodel $err $host0_if0 $host1_if0
-
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 4  #RTX-CWND
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-    
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-Rtx-cwnd instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-Timeout-pmr instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-Timeout-pmr
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set err [new ErrorModel/List]
-    $err droplist {3 4 5 6 7 8 9 10}
-    $ns lossmodel $err $host0_if0 $host1_if0
-
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2  #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-    
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-Timeout-pmr instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 14520000"
-    $ns at 100.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-multihome2-2Timeout instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-multihome2-2Timeout
-    $self next
-    
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 .5Mb 200ms DropTail
-    $ns duplex-link $host0_if1 $host1_if1 .5Mb 200ms DropTail
-    
-    set err0 [new ErrorModel/List]
-    $err0 droplist {4}
-    $ns lossmodel $err0 $host0_if0 $host1_if0
-    
-    set err1 [new ErrorModel/List]
-    $err1 droplist {16}
-    $ns lossmodel $err1 $host0_if1 $host1_if1
-    
-    set sctp0 [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host0_core $sctp0
-    $sctp0 set initialSsthresh_ 16000
-    $sctp0 set mtu_ 1500
-    $sctp0 set dataChunkSize_ 1468
-    $sctp0 set numOutStreams_ 1
-    $sctp0 set useCmtReordering_ 1
-    $sctp0 set useCmtCwnd_ 1
-    $sctp0 set useCmtDelAck_ 1
-    $sctp0 set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-
-    if {$quiet == 0} {
-	$sctp0 set debugMask_ -1 
-	$sctp0 set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$sctp0 set trace_all_ 1
-	$sctp0 trace cwnd_
-	$sctp0 trace rto_
-	$sctp0 trace errorCount_
-	$sctp0 attach $trace_ch
-    }
-    
-    set sctp1 [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $sctp1
-    # MTU of 1500 = 1452 data bytes
-    $sctp1 set mtu_ 1500
-    $sctp1 set initialRwnd_ 65536
-    $sctp1 set useDelayedSacks_ 1
-    $sctp1 set useCmtDelAck_ 1
-    
-    if {$quiet == 0} {
-	$sctp1 set debugMask_ -1
-	$sctp1 set debugFileIndex_ 1
-    }
-    
-    $ns connect $sctp0 $sctp1
-    $sctp0 set-primary-destination $host1_if0
-    
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $sctp0
-}
-
-Test/sctp-cmt-multihome2-2Timeout instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.5 "$ftp0 start"
-    $ns at 12.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-pf-2paths-1path-fails instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-pf-2paths-1path-fails
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-    $cmt_snd set useCmtPF_ 1
-    $cmt_snd set cmtPFCwnd 2
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-
-    $ns rtmodel-at 10.0 down $host0_if1 $host1_if1
-}
-
-Test/sctp-cmt-pf-2paths-1path-fails instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 14520000"
-    $ns at 100.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-pf-3paths-1path-fails instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-pf-3paths-1path-fails
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    set host0_if2 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $host0_if2 color Red
-    
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-    $ns multihome-add-interface $host0_core $host0_if2
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    set host1_if2 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $host1_if2 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    $ns multihome-add-interface $host1_core $host1_if2
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    $ns duplex-link $host0_if2 $host1_if2 10Mb 45ms DropTail
-    [[$ns link $host0_if2 $host1_if2] queue] set limit_ 50
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-    $cmt_snd set useCmtPF_ 1
-    $cmt_snd set cmtPFCwnd 2
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-
-    $ns rtmodel-at 10.0 down $host0_if1 $host1_if1
-}
-
-Test/sctp-cmt-pf-3paths-1path-fails instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 14520000"
-    $ns at 100.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-pf-packet-loss-dest-conf instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-pf-packet-loss-dest-conf
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-
-    set err [new ErrorModel/List]
-    $err droplist {2 3}
-    $ns lossmodel $err $host0_if0 $host1_if0
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-    $cmt_snd set useCmtPF_ 1
-    $cmt_snd set cmtPFCwnd 2
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-pf-packet-loss-dest-conf instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-pf-Rtx-ssthresh instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-pf-Rtx-ssthresh
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-
-    set err [new ErrorModel/List]
-    $err droplist {23}
-    $ns lossmodel $err $host0_if0 $host1_if0
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2 ; #RTX-SSTHRESH
-    $cmt_snd set useCmtPF_ 1
-    $cmt_snd set cmtPFCwnd 2
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-pf-Rtx-ssthresh instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-pf-Rtx-cwnd instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-pf-Rtx-cwnd
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 45ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-
-    set err [new ErrorModel/List]
-    $err droplist {23}
-    $ns lossmodel $err $host0_if0 $host1_if0
-    
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 4 ; #RTX-CWND
-    $cmt_snd set useCmtPF_ 1
-    $cmt_snd set cmtPFCwnd 2
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-pf-Rtx-cwnd instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 1452000"
-    $ns at 20.0 "$self finish"
-    $ns run
-}
-
-Test/sctp-cmt-pf-Timeout-pmr instproc init {} {
-    $self instvar ns testName ftp0
-    global quiet
-    set testName cmt-pf-Timeout-pmr
-    $self next
-
-    set host0_core [$ns node]
-    set host0_if0 [$ns node]
-    set host0_if1 [$ns node]
-    $host0_core color Red
-    $host0_if0 color Red
-    $host0_if1 color Red
-    $ns multihome-add-interface $host0_core $host0_if0
-    $ns multihome-add-interface $host0_core $host0_if1
-
-    set host1_core [$ns node]
-    set host1_if0 [$ns node]
-    set host1_if1 [$ns node]
-    $host1_core color Blue
-    $host1_if0 color Blue
-    $host1_if1 color Blue
-    $ns multihome-add-interface $host1_core $host1_if0
-    $ns multihome-add-interface $host1_core $host1_if1
-    
-    $ns duplex-link $host0_if0 $host1_if0 10Mb 35ms DropTail
-    [[$ns link $host0_if0 $host1_if0] queue] set limit_ 50
-    $ns duplex-link $host0_if1 $host1_if1 10Mb 45ms DropTail
-    [[$ns link $host0_if1 $host1_if1] queue] set limit_ 50
-    
-    set err [new ErrorModel/List]
-    $err droplist {3 4 5 6 7 8 9}
-    $ns lossmodel $err $host0_if0 $host1_if0
-
-    set cmt_snd [new Agent/SCTP/CMT] 
-    $ns multihome-attach-agent $host0_core $cmt_snd
-    $cmt_snd set initialSsthresh_ 16000
-    $cmt_snd set mtu_ 1500
-    $cmt_snd set dataChunkSize_ 1468
-    $cmt_snd set numOutStreams_ 1
-    $cmt_snd set useCmtReordering_ 1
-    $cmt_snd set useCmtCwnd_ 1
-    $cmt_snd set useCmtDelAck_ 1
-    $cmt_snd set eCmtRtxPolicy_ 2  #RTX-SSTHRESH
-    $cmt_snd set useCmtPF_ 1
-    $cmt_snd set cmtPFCwnd 2
-
-    if {$quiet == 0} {
-	$cmt_snd set debugMask_ -1 
-	$cmt_snd set debugFileIndex_ 0
-
-	set trace_ch [open trace.sctp w]
-	$cmt_snd set trace_all_ 1
-	$cmt_snd trace cwnd_
-	$cmt_snd trace rto_
-	$cmt_snd trace errorCount_
-	$cmt_snd attach $trace_ch
-    }
-
-    set cmt_rcv [new Agent/SCTP/CMT]
-    $ns multihome-attach-agent $host1_core $cmt_rcv
-    # MTU of 1500 = 1452 data bytes
-    $cmt_rcv set mtu_ 1500
-    $cmt_rcv set initialRwnd_ 65536
-    $cmt_rcv set useDelayedSacks_ 1
-    $cmt_rcv set useCmtDelAck_ 1
-    
-    if {$quiet == 0} {
-	$cmt_rcv set debugMask_ -1 
-	$cmt_rcv set debugFileIndex_ 1
-    }
-
-    $ns connect $cmt_snd $cmt_rcv
-    set ftp0 [new Application/FTP]
-    $ftp0 attach-agent $cmt_snd
-
-    $cmt_snd set-primary-destination $host1_if0
-}
-
-Test/sctp-cmt-pf-Timeout-pmr instproc run {} {
-    $self instvar ns ftp0
-    $ns at 0.0 "$ftp0 send 58080000"
-    $ns at 100.0 "$self finish"
-    $ns run
-}
-
-proc runtest {arg} {
-    global quiet
-    set quiet 0
-    
-    set b [llength $arg]
-    if {$b == 1} {
-	set test $arg
-    } elseif {$b == 2} {
-	set test [lindex $arg 0]
-	set q [lindex $arg 1]
-	if { $q == "QUIET" } {
-	    set quiet 1
-	} else { usage }
-    } else { usage }
-    
-    switch $test {
-	sctp-2packetsTimeout -
-	sctp-AMR-Exceeded -
-	sctp-Rel1-Loss2  -
-	sctp-burstAfterFastRtxRecovery  -
-	sctp-burstAfterFastRtxRecovery-2  -
-	sctp-cwndFreeze  -
-	sctp-cwndFreeze-multistream  -
-	sctp-hugeRwnd  -
-	sctp-initRtx  -
-	sctp-multihome1-2  -
-	sctp-multihome2-1 -
-	sctp-multihome2-2AMR-Exceeded -
-	sctp-multihome2-2Failover  -
-	sctp-multihome2-2Failover0 -
-	sctp-multihome2-2Failover1 -
-	sctp-multihome2-2Rtx1   -
-	sctp-multihome2-2Rtx3  -
-	sctp-multihome2-2Timeout -
-	sctp-multihome2-2TimeoutRta0 -
-	sctp-multihome2-2TimeoutRta2 -
-	sctp-multihome2-R-2 -
-	sctp-multihome3-3Timeout -
-	sctp-multipleDropsSameWnd-1  -
-	sctp-multipleDropsSameWnd-1-delayed  -
-	sctp-multipleDropsSameWnd-2  -
-	sctp-multipleDropsSameWnd-3  -
-	sctp-multipleDropsTwoWnds-1-delayed  -
-	sctp-multipleRtx  -
-	sctp-multipleRtx-early  -
-	sctp-newReno -
-	sctp-noEarlyHBs -
-	sctp-smallRwnd  -
-	sctp-zeroRtx  -
-	sctp-zeroRtx-burstLoss -
-	sctp-hbAfterRto-2packetsTimeout -
-	sctp-hbAfterRto-multihome2-2Timeout -
-	sctp-multipleFastRtx-2packetsTimeout -
-	sctp-multipleFastRtx-multihome2-2Timeout -
-	sctp-mfrHbAfterRto-Rta2-2FRsTimeout -
-	sctp-timestamp-multihome2-2Rtx3 -
-	sctp-timestamp-multihome2-2Timeout -
-	sctp-packet-loss-dest-conf -
-	sctp-cmt-2paths-64K -
-	sctp-cmt-2paths-64K-withloss -
-	sctp-cmt-3paths-64K -
-	sctp-cmt-2paths-1path-fails - 
-	sctp-cmt-3paths-1path-fails -
-	sctp-cmt-packet-loss-dest-conf -
-	sctp-cmt-Rtx-ssthresh -
-	sctp-cmt-Rtx-cwnd -
-	sctp-cmt-Timeout-pmr -
-	sctp-cmt-multihome2-2Timeout -
-	sctp-cmt-pf-2paths-1path-fails -
-	sctp-cmt-pf-3paths-1path-fails -
-	sctp-cmt-pf-packet-loss-dest-conf -
-	sctp-cmt-pf-Rtx-ssthresh - 
-	sctp-cmt-pf-Rtx-cwnd - 
-	sctp-cmt-pf-Timeout-pmr {
-	    set t [new Test/$test]
-	}
-	default {
-	    puts stderr "Unknown test $test"
-	    exit 1
-	}
-    }
-    $t run
-}
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-session.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-session.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-session.tcl	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-session.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,486 +0,0 @@
-# This test suite is for validating the session level simulation support
-# in ns.
-#
-# To run all tests:  test-all-session
-#
-# To run individual tests:
-# ns test-suite-session.tcl Session1
-# ns test-suite-session.tcl Session2
-# ns test-suite-session.tcl Session3
-# ...
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-session.tcl
-#
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set SetCWRonRetransmit_ false
-# The default is "true".
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_
-	set ns_ [new SessionSim]
-	#$ns_ use-scheduler List
-
-	#$ns_ namtrace-all [open all.tr w]
-	puts "tracing"
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-}
-
-TestSuite instproc finish args {
-	$self instvar ns_
-	
-	$ns_ flush-trace
-	puts "\t#pkt\t#pkt"
-	puts "rcvr\trcvd\tlost"
-	set i 0
-	foreach index $args {
-		puts "$i\t[$index set npkts_]\t[$index set nlost_]"
-		incr i
-	}
-#	exec awk -f ../nam-demo/nstonam.awk all.tr > [append file \.tr]
-#	puts "running nam ..."
-#	exec nam $file &
-	exit 0
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv
-
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			isProc? Topology $topo
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-# Skeleton topology base class
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-   $self instvar node_
-    set n1 [lindex $nodelist 0]
-    foreach n2 [lrange $nodelist 1 end] {
-	if ![info exists node_($n2)] {
-	    set node_($n2) [$ns node]
-	}
-	$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-	foreach opt $args {
-	    set cmd [lindex $opt 0]
-	    set val [lindex $opt 1]
-	    if {[llength $opt] > 2} {
-		set x1 [lindex $opt 2]
-		set x2 [lindex $opt 3]
-	    } else {
-		set x1 $n1
-		set x2 $n2
-	    }
-	    $ns $cmd $node_($x1) $node_($x2) $val
-	    $ns $cmd $node_($x2) $node_($x1) $val
-	}
-	set n1 $n2
-    }
-}
-
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-
-NodeTopology/4nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-    set node_(n3) [$ns node]
-}
-
-
-Class Topology/net4 -superclass NodeTopology/4nodes
-
-# Create a simple four node topology:
-#
-#	              n3
-#	             / 
-#       1.5Mb,10ms  / 1.5Mb,10ms                              
-#    n0 --------- n1
-#                  \  1.5Mb,10ms
-#	            \ 
-#	             n2
-#
-
-Topology/net4 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    Simulator set NumberInterfaces_ 1
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail
-    $ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail
-    $ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-NodeTopology/6nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-    set node_(n3) [$ns node]
-    set node_(n4) [$ns node]
-    set node_(n5) [$ns node]
-}
-
-
-Class Topology/net6 -superclass NodeTopology/6nodes
-
-#
-# Create a simple six node topology:
-#
-#                  n0
-#                 /  \                    
-#               n1    n2
-#              /  \  /  \
-#             n3   n4   n5
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net6 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    Simulator set NumberInterfaces_ 1
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n5) 1.5Mb 10ms DropTail 
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-
-# Definition of test-suite tests
-
-# Testing group join for SessionSim in a simple topology
-Class Test/Session1 -superclass TestSuite
-Test/Session1 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net4
-	set test_	Session1
-	set net_	$net
-	$self next
-}
-
-Test/Session1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set grp0 [Node allocaddr]
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n2) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$ns_ create-session $node_(n2) $udp0	
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-
-	$ns_ at 0.3 "$cbr0 start"
-	$ns_ at 0.3 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.3 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.3 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.3 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 1.1 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3]"
-	$ns_ run
-}
-
-# Testing group join for SessionSim in a 6-node topology
-Class Test/Session2 -superclass TestSuite
-Test/Session2 instproc init net {
-	$self instvar net_ defNet_ test_
-	set defNet_	net6
-	set test_	Session2
-	set net_	$net
-	$self next
-}
-
-Test/Session2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set grp0 [Node allocaddr]
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n0) $udp0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	$ns_ create-session $node_(n0) $udp0
-	
-	set rcvr0 [new Agent/LossMonitor]
-	set rcvr1 [new Agent/LossMonitor]
-	set rcvr2 [new Agent/LossMonitor]
-	set rcvr3 [new Agent/LossMonitor]
-	set rcvr4 [new Agent/LossMonitor]
-	set rcvr5 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	$ns_ attach-agent $node_(n1) $rcvr1
-	$ns_ attach-agent $node_(n2) $rcvr2
-	$ns_ attach-agent $node_(n3) $rcvr3
-	$ns_ attach-agent $node_(n4) $rcvr4
-	$ns_ attach-agent $node_(n5) $rcvr5
-	
-	$ns_ at 0.2 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.2 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.2 "$node_(n2) join-group $rcvr2 $grp0"
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.2 "$node_(n4) join-group $rcvr4 $grp0"
-	$ns_ at 0.2 "$node_(n5) join-group $rcvr5 $grp0"
-	
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 1.6 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3 \
-$rcvr4 $rcvr5]"
-	
-	$ns_ run
-}
-
-# Testing loss dependency for SessionSim in a 6-node topology
-Class Test/Session3 -superclass TestSuite
-Test/Session3 instproc init net {
-	$self instvar net_ defNet_ test_
-	set defNet_	net6
-	set test_	Session3
-	set net_	$net
-	$self next
-}
-
-Test/Session3 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set grp0 [Node allocaddr]
-	set udp0 [new Agent/UDP]
-	$udp0 set ttl_ 3
-	$ns_ attach-agent $node_(n0) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	set sessionhelper [$ns_ create-session $node_(n0) $udp0]
-	
-	set rcvr0 [new Agent/LossMonitor]
-	set rcvr1 [new Agent/LossMonitor]
-	set rcvr2 [new Agent/LossMonitor]
-	set rcvr3 [new Agent/LossMonitor]
-	set rcvr4 [new Agent/LossMonitor]
-	set rcvr5 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	$ns_ attach-agent $node_(n1) $rcvr1
-	$ns_ attach-agent $node_(n2) $rcvr2
-	$ns_ attach-agent $node_(n3) $rcvr3
-	$ns_ attach-agent $node_(n4) $rcvr4
-	$ns_ attach-agent $node_(n5) $rcvr5
-	
-	$ns_ at 0.2 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.2 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.2 "$node_(n2) join-group $rcvr2 $grp0"
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.2 "$node_(n4) join-group $rcvr4 $grp0"
-	$ns_ at 0.2 "$node_(n5) join-group $rcvr5 $grp0"
-	
-	set loss_module1 [new SelectErrorModel]
-	$loss_module1 drop-packet 2 20 1
-	$loss_module1 drop-target [$ns_ set nullAgent_]
-
-	set loss_module2 [new SelectErrorModel]
-	$loss_module2 drop-packet 2 10 1
-	$loss_module2 drop-target [$ns_ set nullAgent_]
-
-	set loss_module3 [new SelectErrorModel]
-	$loss_module3 drop-packet 2 10 1
-	$loss_module3 drop-target [$ns_ set nullAgent_]
-
-	$ns_ insert-loss $loss_module1 $node_(n0) $node_(n1)
-	$ns_ insert-loss $loss_module2 $node_(n1) $node_(n3)
-	$ns_ insert-loss $loss_module3 $node_(n0) $node_(n2)
-
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 1.6 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3 \
-$rcvr4 $rcvr5]"
-	
-	$ns_ run
-}
-
-# Testing algorithmic routing for SessionSim in a 6-node topology
-Class Test/Session4 -superclass TestSuite
-Test/Session4 instproc init net {
-	$self instvar net_ defNet_ test_
-	set defNet_	net6
-	set test_	Session4
-	set net_	$net
-	$self next
-}
-
-Test/Session4 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set grp0 [Node allocaddr]
-        $ns_ rtproto Algorithmic
-	set udp0 [new Agent/UDP]
-	$udp0 set ttl_ 4
-	$ns_ attach-agent $node_(n4) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	set sessionhelper [$ns_ create-session $node_(n4) $udp0]
-	
-	set rcvr0 [new Agent/LossMonitor]
-	set rcvr1 [new Agent/LossMonitor]
-	set rcvr2 [new Agent/LossMonitor]
-	set rcvr3 [new Agent/LossMonitor]
-	set rcvr4 [new Agent/LossMonitor]
-	set rcvr5 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	$ns_ attach-agent $node_(n1) $rcvr1
-	$ns_ attach-agent $node_(n2) $rcvr2
-	$ns_ attach-agent $node_(n3) $rcvr3
-	$ns_ attach-agent $node_(n4) $rcvr4
-	$ns_ attach-agent $node_(n5) $rcvr5
-	
-	$ns_ at 0.2 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.2 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.2 "$node_(n2) join-group $rcvr2 $grp0"
-	$ns_ at 0.2 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.2 "$node_(n4) join-group $rcvr4 $grp0"
-	$ns_ at 0.2 "$node_(n5) join-group $rcvr5 $grp0"
-	
-	set loss_module1 [new SelectErrorModel]
-	$loss_module1 drop-packet 2 20 1
-	$loss_module1 drop-target [$ns_ set nullAgent_]
-
-	set loss_module2 [new SelectErrorModel]
-	$loss_module2 drop-packet 2 10 1
-	$loss_module2 drop-target [$ns_ set nullAgent_]
-
-	set loss_module3 [new SelectErrorModel]
-	$loss_module3 drop-packet 2 10 1
-	$loss_module3 drop-target [$ns_ set nullAgent_]
-
-	$ns_ insert-loss $loss_module1 $node_(n0) $node_(n1)
-	$ns_ insert-loss $loss_module2 $node_(n1) $node_(n3)
-	$ns_ insert-loss $loss_module3 $node_(n0) $node_(n2)
-
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 1.6 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3 \
-$rcvr4 $rcvr5]"
-	
-	$ns_ run
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-session.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-session.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-session.txt	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-session.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,77 +0,0 @@
-This is a brief description of the tests in the file
-test-suite-session.tcl.  These tests can be run with the
-command "./test-all-session".
-
-Session1:
-	Test one session on a simple topology.
-                     n3
-                    /
-       1.5Mb,10ms  / 1.5Mb,10ms
-    n0 --------- n1
-                  \  1.5Mb,10ms
-                   \
-                    n2
-	Events:                         
-	time = 0.3, a CBR source at n2 starts sending to group 0x8001
-	time = 0.3, four LossMonitor receivers, sitting at n0, n1, n2, and 
-		n3 respectively, join the group 0x8001
-	time = 1.1, simulation ends and prints number of packets 
-		received/lost at the receivers
-
-	test-output-Session1.Z:
-	This is the compressed Test/Session1 output trace, generated by 
-	'namtrace-all' command.  This command should capture the details of
-	packets being duplicated/scheduled by sources and received by 
-	receivers. 
-
-
-Session2:
-	Test one session on a six-node topology
-
-                  n0
-                 /  \
-               n1    n2
-              /  \  /  \
-             n3   n4   n5
-
-	All links are of 1.5Mbps bandwidth with 10ms latency
-
-	Events:
-	time = 0.1, CBR source at n0 starts
-	time = 0.2, LossMonitor receivers at n0-n5 join group 0x8002
-	time = 1.6, Simulation ends and prints #pkts received/lost at the 
-		receivers 
-           
-	test-output-Session2.Z:
-	This is the compressed Test/Session2 output trace, generated by 
-	'namtrace-all' command.  This command should capture the details of
-	packets being duplicated/scheduled by sources and received by 
-	receivers. 
-
-Session3:
-	Test one session on a six node topology with inserted errors
-
-                  n0
-                 /  \
-               n1    n2
-              /  \  /  \
-             n3   n4   n5
-
-	All links are of 1.5Mbps bandwidth with 10ms latency
-
-	Events:
-	t=0, Loss module with 1-loss/20-packet rate is inserted in between 
-		n0 and n1
-	t=0, Loss module with 1-loss/10-packet rate is inserted in between 
-		n1 and n3
-	t=0, Loss module with 1-loss/10-packet rate is inserted in between 
-		n0 and n2
-	The rest is the same as Session2
-
-	test-output-Session3.Z:
-	This is the compressed Test/Session3 output trace, generated by 
-	'namtrace-all' command.  This command should capture the details of
-	packets being duplicated/scheduled by sources and received/lost at  
-	receivers.
-	
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-simple-full.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-simple-full.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-simple-full.tcl	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-simple-full.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1325 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-simple-full.tcl,v 1.13 2006/06/30 23:18:01 sallyfloyd Exp $
-#
-#
-# This test suite reproduces most of the tests from the following note:
-# Floyd, S., Simulator Tests. July 1995.  
-# URL ftp://ftp.ee.lbl.gov/papers/simtests.ps.Z.
-#
-# To run all tests:  test-all
-#
-# To run individual tests:
-# ns test-suite.tcl tahoe1
-# ns test-suite.tcl tahoe2
-# ...
-#
-# To view a list of available tests to run with this script:
-# ns test-suite.tcl
-#
-# Much more extensive test scripts are available in tcl/test
-# This script is a simplified version of tcl/test/test-suite-routed.tcl
-
-# ns-random 0
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-# Change wrap from 90 packets to 90040 bytes.
-# Change scale from 0.01 to 0.00001, to change separation between flows. 
-Agent/TCP/FullTcp set segsize_ 960
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_
-	set ns_ [new Simulator]
-	# trace-all is only used in more extensive test suites
-	# $ns_ trace-all [open all.tr w]
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-
-	# XXX
-	if [info exists node_(k1)] {
-		set blink [$ns_ link $node_(r1) $node_(k1)]
-	} else {
-		set blink [$ns_ link $node_(r1) $node_(r2)] 
-	}
-	$blink trace-dynamics $ns_ stdout
-}
-
-TestSuite instproc finish file {
-	global env quiet PERL
-
-	#
-	# we don't bother checking for the link we're interested in
-	# since we know only such events are in our trace file
-	#
-	set perlCode {
-		sub BEGIN { $c = 0; @p = @a = @d = @lu = @ld = (); }
-
-                $plotted = $F[7] + ($F[10] % 90040) * 0.00001;
-                $plotted =~ s/\.e/e/g; 	# needed for Cygwin compatibility
-		
-                /^[\+-] / && do {
- 			if ($F[4] eq 'tcp') {
- 				push(@p, $F[1], ' ', $plotted, "\n");
-			} elsif ($F[4] eq 'ack') {
- 				push(@a, $F[1], ' ', $plotted, "\n");
-			}
-			$c = $F[7] if ($c < $F[7]);
-			next;
-		};
-		/^d / && do {
-			push(@d, $F[1], ' ', $plotted, "\n");
-			next;
-		};
-		/link-down/ && push(@ld, $F[1]);
-		/link-up/ && push(@lu, $F[1]);
-		sub END {
-			print "\"packets\n", @p, "\n";
-			# insert dummy data sets
-			# so we get X's for marks in data-set 4
-			print "\"skip-1\n0 1\n\n\"skip-2\n0 1\n\n";
-			#
-			# Repeat the first line twice in the drops file because
-			# often we have only one drop and xgraph won't print
-			# marks for data sets with only one point.
-			#
-			print "\n", '"drops', "\n", @d[0..3], @d;
-			# To plot acks, uncomment the following line
-			# print "\n", '"acks', "\n", @a;
-			$c++;
-			foreach $i (@ld) {
-				print "\n\"link-down\n$i 0\n$i $c\n";
-			}
-			foreach $i (@lu) {
-				print "\n\"link-up\n$i 0\n$i $c\n";
-			}
-		}
-	}
-	
-	set f [open temp.rands w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"	
-	exec $PERL -ane $perlCode out.tr >@ $f
-	close $f
-	if {$quiet == "false"} {
-		if {[info exists env(DISPLAY)] && ![info exists env(NOXGRAPH)]} {
-			exec xgraph -display $env(DISPLAY) -bb -tk -nl -m -x time -y packet temp.rands &
-		} else {
-			puts stderr "output trace is in temp.rands"
-		}
-	}
-	
-	exit 0
-}
-
-#
-# Arrange for tcp source stats to be dumped for $tcpSrc every
-# $interval seconds of simulation time
-#
-TestSuite instproc tcpDump { tcpSrc interval } {
-	global quiet
-	$self instvar dump_inst_ ns_
-	if ![info exists dump_inst_($tcpSrc)] {
-		set dump_inst_($tcpSrc) 1
-		$ns_ at 0.0 "$self tcpDump $tcpSrc $interval"
-		return
-	}
-	$ns_ at [expr [$ns_ now] + $interval] "$self tcpDump $tcpSrc $interval"
-	set report [$ns_ now]/cwnd=[format "%.4f" [$tcpSrc set cwnd_]]/ssthresh=[$tcpSrc set ssthresh_]/ack=[$tcpSrc set ack_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-	$self instvar dump_inst_ ns_
-	if ![info exists dump_inst_($tcpSrc)] {
-		set dump_inst_($tcpSrc) 1
-		puts $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]/bugFix=[$tcpSrc set bugFix_]	
-		$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-		return
-	}
-	$ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-	puts $label/time=[$ns_ now]/cwnd=[format "%.4f" [$tcpSrc set cwnd_]]/ssthresh=[$tcpSrc set ssthresh_]/ack=[$tcpSrc set ack_]/rtt=[$tcpSrc set rtt_]	
-}
-
-TestSuite instproc openTrace { stopTime testName } {
-	$self instvar ns_
-	exec rm -f out.tr temp.rands
-	set traceFile [open out.tr w]
-	puts $traceFile "v testName $testName"
-	$ns_ at $stopTime \
-		"close $traceFile ; $self finish $testName"
-	return $traceFile
-}
-
-TestSuite instproc traceQueues { node traceFile } {
-	$self instvar ns_
-	foreach nbr [$node neighbors] {
-		$ns_ trace-queue $node $nbr $traceFile
-		[$ns_ link $node $nbr] trace-dynamics $ns_ $traceFile
-	}
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set quiet false
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			if {$topo == "QUIET"} {
-				set quiet true
-				set topo ""
-			} else {
-				isProc? Topology $topo
-			}
-		}
-		3 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			isProc? Topology $topo
-
-			set extra [lindex $argv 2]
-			if {$extra == "QUIET"} {
-				set quiet true
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-# Skeleton topology base class
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-   $self instvar node_
-    set n1 [lindex $nodelist 0]
-    foreach n2 [lrange $nodelist 1 end] {
-	if ![info exists node_($n2)] {
-	    set node_($n2) [$ns node]
-	}
-	$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-	foreach opt $args {
-	    set cmd [lindex $opt 0]
-	    set val [lindex $opt 1]
-	    if {[llength $opt] > 2} {
-		set x1 [lindex $opt 2]
-		set x2 [lindex $opt 3]
-	    } else {
-		set x1 $n1
-		set x2 $n2
-	    }
-	    $ns $cmd $node_($x1) $node_($x2) $val
-	    $ns $cmd $node_($x2) $node_($x1) $val
-	}
-	set n1 $n2
-    }
-}
-
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-# Create a simple four node topology:
-#
-#	   s1
-#	     \ 
-#  8Mb,5ms \   0.8Mb,100ms
-#	        r1 --------- k1
-#  8Mb,5ms /
-#	     /
-#	   s2
-
-NodeTopology/4nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 100ms bottleneck.
-# Queue-limit on bottleneck is 6 packets.
-#
-Class Topology/net0 -superclass NodeTopology/4nodes
-Topology/net0 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-#
-# Links1 uses 10Mb, 5ms feeders, and a 1.5Mb 100ms bottleneck.
-# Queue-limit on bottleneck is 23 packets.
-#
-
-Class Topology/net1 -superclass NodeTopology/4nodes
-Topology/net1 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 1.5Mb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 23
-    $ns queue-limit $node_(k1) $node_(r1) 23
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-#
-# Create a simple six node topology:
-#
-#        s1                 s3
-#         \                 /
-# 10Mb,2ms \  1.5Mb,20ms   / 10Mb,4ms
-#           r1 --------- r2
-# 10Mb,3ms /               \ 10Mb,5ms
-#         /                 \
-#        s2                 s4 
-#
-
-NodeTopology/6nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-}
-
-Class Topology/net2 -superclass NodeTopology/6nodes
-Topology/net2 instproc init ns {
-    $self next $ns
-
-    $self instvar node_
-    Queue/RED set drop_rand_ true
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-# Definition of test-suite tests
-
-Class Test/tahoe1 -superclass TestSuite
-Test/tahoe1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe
-	$self next
-}
-Test/tahoe1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	# Set up TCP connection
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 50
-	
-	# Set up FTP source
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	#
-	# Actually, we now trace all activity at the node around the
-	# bottleneck link.  This allows us to track acks, as well
-	# packets taking any alternate paths around the bottleneck
-	# link.
-	#
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-# NOT ADDED:
-# tahoe1Bytes - "DropTail queue in bytes instead of packets."
-# tahoe1RED -  "RED queue, configured for 5 packets instead of DropTail's 
-#  6 packets."
-# tahoe1REDbytes: "RED queue in bytes."
-
-Class Test/tahoe2 -superclass TestSuite
-Test/tahoe2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe2
-	$self next
-}
-Test/tahoe2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 14
-	
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/tahoe3 -superclass TestSuite
-Test/tahoe3 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe3
-	$self next
-}
-Test/tahoe3 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8   
-	$ns_ queue-limit $node_(k1) $node_(r1) 8   
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 100
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-	$tcp2 set window_ 16
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 0.5 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-	$ns_ run
-}
-
-#NOT ADDED:
-#tahoe3RED: "Tahoe TCP, two packets dropped, RED queue configured for 
-#  5 packets."
-
-Class Test/tahoe4 -superclass TestSuite
-Test/tahoe4 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe4
-	$self next
-}
-Test/tahoe4 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 11
-	$ns_ queue-limit $node_(k1) $node_(r1) 11  
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 30
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-	$tcp2 set window_ 30
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 0.0 "$ftp1 start"
-	$ns_ at 0.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/no_bug -superclass TestSuite
-Test/no_bug instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net1
-        set test_       no_bug
-        # set guide_      "Tahoe TCP with TCP/bugFix_ set to true."
-        $self next
-}
-Test/no_bug instproc run {} {
-        global quiet
-        $self instvar ns_ node_ testName_ guide_
-        # puts "Guide: $guide_"
-
-        $ns_ delay $node_(s1) $node_(r1) 3ms
-        $ns_ delay $node_(r1) $node_(s1) 3ms
- 
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-        $tcp1 set window_ 50
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-        $tcp2 set window_ 50
-
-        set ftp1 [$tcp1 attach-app FTP]
-        set ftp2 [$tcp2 attach-app FTP]
-
-        $ns_ at 1.0 "$ftp1 start"
-        $ns_ at 1.75 "$ftp2 produce 99"
-
-        $self tcpDump $tcp1 1.0
-
-        # Trace only the bottleneck link
-        $self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-        $ns_ run
-}
-
-Class Test/bug -superclass TestSuite
-Test/bug instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net1
-        set test_       bug
-        # set guide_      "Tahoe TCP with TCP/bugFix_ set to false."
-        $self next
-}
-Test/bug instproc run {} {
-        global quiet
-        $self instvar ns_ node_ testName_ guide_
-        # puts "Guide: $guide_"
-
-        $ns_ delay $node_(s1) $node_(r1) 3ms
-        $ns_ delay $node_(r1) $node_(s1) 3ms
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-        $tcp1 set window_ 50
-        $tcp1 set bugFix_ false
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-        $tcp2 set window_ 50
-        $tcp2 set bugFix_ false
-
-        set ftp1 [$tcp1 attach-app FTP]
-        set ftp2 [$tcp2 attach-app FTP]
-
-        $ns_ at 1.0 "$ftp1 start"
-        $ns_ at 1.75 "$ftp2 produce 100"
-
-        $self tcpDump $tcp1 1.0
-
-        # Trace only the bottleneck link
-        $self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-        $ns_ run
-}
-
-
-
-
-Class Test/reno1 -superclass TestSuite
-Test/reno1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno1
-	$self next
-}
-Test/reno1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 0]
-	$tcp1 set window_ 14
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno -superclass TestSuite
-Test/reno instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno
-	$self next
-}
-Test/reno instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 0]
-	$tcp1 set window_ 28
-	$tcp1 set maxcwnd_ 14
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/renoA -superclass TestSuite
-Test/renoA instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	renoA
-	$self next
-}
-Test/renoA instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 0]
-	$tcp1 set window_ 28
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 1]
-	$tcp2 set window_ 4
-	set tcp3 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 2]
-	$tcp3 set window_ 4
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 1.2 "$ftp2 produce 7"
-	set ftp3 [$tcp3 attach-app FTP]
-	$ns_ at 1.2 "$ftp3 produce 7"
-
-	$self tcpDump $tcp1 1.0
-	$self tcpDump $tcp2 1.0
-	$self tcpDump $tcp3 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno2 -superclass TestSuite
-Test/reno2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno2
-	$self next
-}
-Test/reno2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 9
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 0]
-	$tcp1 set window_ 50
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp $node_(s2) TCP/FullTcp $node_(k1) 1]
-	$tcp2 set window_ 20
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno3 -superclass TestSuite
-Test/reno3 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno3
-	$self next
-}
-Test/reno3 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-	$ns_ queue-limit $node_(k1) $node_(r1) 8
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 0]
-	$tcp1 set window_ 100
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp $node_(s2) TCP/FullTcp $node_(k1) 1]
-	$tcp2 set window_ 16
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 0.5 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno4 -superclass TestSuite
-Test/reno4 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net2
-	set test_	reno4
-        Agent/TCP/FullTcp set segsperack_ 2
-	# Agent/TCP/FullTcp set interval_ 0.1 
-	$self next
-}
-Test/reno4 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(r2) 29
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(r2) 0]
-	$tcp1 set window_ 80
-	$tcp1 set maxcwnd_ 40
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(s1) [$self openTrace 1.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno4a -superclass TestSuite
-Test/reno4a instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net2
-	set test_	reno4a
-        Agent/TCP/FullTcp set segsperack_ 2
-	$self next
-}
-Test/reno4a instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(r2) 29
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(r2) 0]
-	$tcp1 set window_ 40
-	$tcp1 set maxcwnd_ 40
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(s1) [$self openTrace 4.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno5 -superclass TestSuite
-Test/reno5 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno5
-	$self next
-}
-Test/reno5 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 9
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 0]
-	$tcp1 set window_ 50
-	$tcp1 set bugFix_ false
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp $node_(s2) TCP/FullTcp $node_(k1) 1]
-	$tcp2 set window_ 20
-	$tcp2 set bugFix_ false
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.1 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno5_nobug -superclass TestSuite
-Test/reno5_nobug instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net0
-        set test_       reno5_nobug
-        # set guide_      "Reno TCP, TCP/bugFix_ set to true."
-        $self next
-}
-Test/reno5_nobug instproc run {} {
-        $self instvar ns_ node_ testName_
-
-        $ns_ queue-limit $node_(r1) $node_(k1) 9
-
-        set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 0]
-        $tcp1 set window_ 50
-        set tcp2 [$ns_ create-connection-listen TCP/FullTcp $node_(s2) TCP/FullTcp $node_(k1) 1]
-        $tcp2 set window_ 20
-
-        set ftp1 [$tcp1 attach-app FTP]
-        set ftp2 [$tcp2 attach-app FTP]
-
-        $ns_ at 1.0 "$ftp1 start"
-        $ns_ at 1.1 "$ftp2 start"
-
-        $self tcpDump $tcp1 1.0
-
-        # Trace only the bottleneck link
-        $self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-        $ns_ run
-}
-
-Class Test/telnet -superclass TestSuite
-Test/telnet instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	telnet
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-	$self next
-}
-Test/telnet instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-	$ns_ queue-limit $node_(k1) $node_(r1) 8
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp $node_(s1) TCP/FullTcp $node_(k1) 0]
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp $node_(s2) TCP/FullTcp $node_(k1) 1]
-	set tcp3 [$ns_ create-connection-listen TCP/FullTcp $node_(s2) TCP/FullTcp $node_(k1) 2]
-
-	set telnet1 [$tcp1 attach-app Telnet]; $telnet1 set interval_ 1
-	set telnet2 [$tcp2 attach-app Telnet]; $telnet2 set interval_ 0
-	# Interval 0 designates the tcplib telnet interarrival distribution
-	set telnet3 [$tcp3 attach-app Telnet]; $telnet3 set interval_ 0
-
-	$ns_ at 0.0 "$telnet1 start"
-	$ns_ at 0.0 "$telnet2 start"
-	$ns_ at 0.0 "$telnet3 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 50.0 $testName_]
-
-	# use a different seed each time
-	#puts seed=[$ns_ random 0]
-
-	$ns_ run
-}
-
-Class Test/delayed -superclass TestSuite
-Test/delayed instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	delayed
-        Agent/TCP/FullTcp set segsperack_ 2
-	$self next
-}
-Test/delayed instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 50
-
-	# lookup up the sink and set it's delay interval
-	[$node_(k1) agent [$tcp1 dst-port]] set interval 100ms
-
-	set ftp1 [$tcp1 attach-app FTP];
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase -superclass TestSuite
-Test/phase instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase
-	$self next
-}
-Test/phase instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s2) 3ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 32 
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-	$tcp2 set window_ 32 
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase1 -superclass TestSuite
-Test/phase1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase1
-	$self next
-}
-Test/phase1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 9.5ms
-	$ns_ delay $node_(r1) $node_(s2) 9.5ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 32 
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-	$tcp2 set window_ 32 
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase2 -superclass TestSuite
-Test/phase2 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase2
-	$self next
-}
-Test/phase2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ delay $node_(s2) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s2) 3ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 32 
-	$tcp1 set overhead_ 0.02
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-	$tcp2 set window_ 32 
-	$tcp2 set overhead_ 0.02
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/timers -superclass TestSuite
-Test/timers instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	timers
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        Agent/TCP/FullTcp set segsperack_ 2
-	$self next
-}
-Test/timers instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 2
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp1 set window_ 4
-	# look up the sink and set its delay interval
-	[$node_(k1) agent [$tcp1 dst-port]] set interval_ 100ms
-	set tcp2 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-	$tcp2 set window_ 4
-	# look up the sink and set its delay interval
-	[$node_(k1) agent [$tcp2 dst-port]] set interval_ 100ms
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.3225 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-# Many small TCP flows.
-Class Test/manyflows -superclass TestSuite
-Test/manyflows instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	manyflows
-	$self next
-}
-Test/manyflows instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	# Set up TCP connections
-
-	set rng_ [new RNG]
-	## $rng_ seed [ns random 0]
-	set stoptime 5
-	set randomflows 10
-	for {set i 0} {$i < $randomflows} {incr i} {
-	    set tcp [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 1]
-	    set ftp [[set tcp] attach-app FTP]    
-	    set numpkts [$rng_ uniform 0 10]
-	    set starttime [$rng_ uniform 0 $stoptime]
-	    $ns_ at $starttime "[set ftp] produce $numpkts" 
-	    $ns_ at $stoptime "[set ftp] stop"  
-	}   
-
-	# Trace only the bottleneck link
-	#
-	# Actually, we now trace all activity at the node around the
-	# bottleneck link.  This allows us to track acks, as well
-	# packets taking any alternate paths around the bottleneck
-	# link.
-	#
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-TestSuite instproc printpkts { label tcp } {
-	puts "tcp $label highest_seqment_acked [$tcp set ack_]"
-}
-TestSuite instproc printdrops { fid fmon } {
-	set fcl [$fmon classifier]; # flow classifier
-	#
-	# look up the flow using the classifier.  Because we are
-	# using a Fid classifier, the src/dst fields are not compared,
-	# and can thus be just zero, as illustrated here.  The "auto"
-	# indicates we don't already know which bucket in the classifier's
-	# hash table to find the flow we're looking for.
-	#
-	set flow [$fcl lookup auto 0 0 $fid]
-	puts "fid: $fid per-link total_drops [$flow set pdrops_]"
-	puts "fid: $fid per-link total_packets [$flow set pdepartures_]"
-	puts "fid: $fid per-link total_bytes [$flow set bdepartures_]"
-	#
-	# note there is much more date available in $flow and $fmon
-	# that isn't being printed here.
-	#
-}
-TestSuite instproc printstop { stoptime } {
-	puts "stop-time $stoptime"
-}
-TestSuite instproc printall { fmon } {
- 	puts "aggregate per-link total_drops [$fmon set pdrops_]"
-	puts "aggregate per-link total_packets [$fmon set pdepartures_]"
-}
-
-Class Test/stats -superclass TestSuite
-Test/stats instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	stats
-	$self next
-}
-Test/stats instproc run {} {
-	$self instvar ns_ node_ testName_ 
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 10
-	$ns_ queue-limit $node_(k1) $node_(r1) 10
-
-	set slink [$ns_ link $node_(r1) $node_(k1)]; # link to collect stats on
-	set fmon [$ns_ makeflowmon Fid]
-	$ns_ attach-fmon $slink $fmon
-
-	set stoptime 10.1 
-
-	set tcp0 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp0 set window_ 30
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-	$tcp1 set window_ 30
-
-	set ftp0 [$tcp0 attach-app FTP]
-	set ftp1 [$tcp1 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp0 start"
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDumpAll $tcp0 5.0 tcp0
-	$self tcpDumpAll $tcp1 5.00001 tcp1
-
-	set almosttime [expr $stoptime - 0.001]
-	$ns_ at $almosttime "$self printpkts 0 $tcp0"
-	$ns_ at $almosttime "$self printpkts 1 $tcp1"
-	$ns_ at $stoptime "$self printdrops 0 $fmon; $self printdrops 1 $fmon"
-	$ns_ at $stoptime "$self printall $fmon"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/stats1 -superclass TestSuite
-Test/stats1 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net0
-	set test_	stats1
-	$self next
-}
-Test/stats1 instproc run {} {
-	$self instvar ns_ node_ testName_ 
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 10
-	$ns_ queue-limit $node_(k1) $node_(r1) 10
-	set packetSize_ 100
-	Agent/TCP set packetSize_ $packetSize_
-	puts "TCP packetSize [Agent/TCP set packetSize_]"
-
-	set slink [$ns_ link $node_(r1) $node_(k1)]; # link to collect stats on
-	set fmon [$ns_ makeflowmon Fid]
-	$ns_ attach-fmon $slink $fmon
-
-	set stoptime 10.1 
-
-	set tcp0 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s1) TCP/FullTcp/Tahoe $node_(k1) 0]
-	$tcp0 set window_ 30
-	set tcp1 [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_(s2) TCP/FullTcp/Tahoe $node_(k1) 1]
-	$tcp1 set window_ 30
-
-	set ftp0 [$tcp0 attach-app FTP]
-	set ftp1 [$tcp1 attach-app FTP]
-
-	set packets_ftp 10
-	set bytes_ftp [expr $packets_ftp * $packetSize_]
-	$ns_ at 1.0 "$ftp0 produce $packets_ftp"
-	puts "ftp 0 segments_produced $packets_ftp (using `FTP produce pktcnt')"
-	$ns_ at 1.0 "$ftp1 send $bytes_ftp"
-	puts "ftp 1 bytes_produced $bytes_ftp (using `FTP send nbytes')"
-
-	set almosttime [expr $stoptime - 0.001]
-	$ns_ at $almosttime "$self printpkts 0 $tcp0"
-	$ns_ at $almosttime "$self printpkts 1 $tcp1"
-	$ns_ at $stoptime "$self printdrops 0 $fmon; $self printdrops 1 $fmon"
-	$ns_ at $stoptime "$self printall $fmon"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-simple.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-simple.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-simple.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-simple.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1830 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-simple.tcl,v 1.44 2006/01/25 22:02:05 sallyfloyd Exp $
-#
-#
-# This test suite reproduces most of the tests from the following note:
-# Floyd, S., Simulator Tests. July 1995.  
-# URL ftp://ftp.ee.lbl.gov/papers/simtests.ps.Z.
-#
-# To run all tests:  test-all
-#
-# To run individual tests:
-# ns test-suite.tcl tahoe1
-# ns test-suite.tcl tahoe2
-# ...
-#
-# To view a list of available tests to run with this script:
-# ns test-suite.tcl
-#
-# Much more extensive test scripts are available in tcl/test
-# This script is a simplified version of tcl/test/test-suite-routed.tcl
-
-# ns-random 0
-
-#source misc_simple.tcl
-#source support.tcl
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP TFRC TFRC_ACK ; # hdrs reqd for TCP
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TFRC set ss_changes_ 1 ; 	# Added on 10/21/2004
-Agent/TFRC set slow_increase_ 1 ; 	# Added on 10/20/2004
-Agent/TFRC set rate_init_ 2 ;          # Added on 10/20/2004
-Agent/TFRC set rate_init_option_ 2 ;    # Added on 10/20/2004
-Agent/TFRC set useHeaders_ false ;     # Added on 6/24/2004, default of true
-Agent/TFRC set headersize_ 40 ;         # Changed on 6/24/2004 to 32.
-
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-set tcpTick_ 0.1
-Agent/TCP set tcpTick_ $tcpTick_ 
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_
-	set ns_ [new Simulator]
-	# trace-all is only used in more extensive test suites
-	# $ns_ trace-all [open all.tr w]
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-
-	# XXX
-	if [info exists node_(k1)] {
-		set blink [$ns_ link $node_(r1) $node_(k1)]
-	} else {
-		set blink [$ns_ link $node_(r1) $node_(r2)] 
-	}
-	$blink trace-dynamics $ns_ stdout
-}
-
-TestSuite instproc finish file {
-	global env quiet PERL
-
-	#
-	# we don't bother checking for the link we're interested in
-	# since we know only such events are in our trace file
-	#
-	set perlCode {
-		sub BEGIN { $c = 0; @p = @a = @d = @lu = @ld = (); }
-		/^[\+-] / && do {
-			if ($F[4] eq 'tcp' || $F[4] eq 'tcpFriend') {
- 				push(@p, $F[1], ' ',		\
-					$F[7] + ($F[10] % 90) * 0.01, "\n");
-			} elsif ($F[4] eq 'ack' || $F[4] eq 'tcpFriendCtl') {
- 				push(@a, $F[1], ' ',		\
-					$F[7] + ($F[10] % 90) * 0.01, "\n");
-			}
-			$c = $F[7] if ($c < $F[7]);
-			next;
-		};
-		/^d / && do {
-			push(@d, $F[1], ' ',		\
-					$F[7] + ($F[10] % 90) * 0.01, "\n");
-			next;
-		};
-		/link-down/ && push(@ld, $F[1]);
-		/link-up/ && push(@lu, $F[1]);
-		sub END {
-			print "\"packets\n", @p, "\n";
-			# insert dummy data sets
-			# so we get X's for marks in data-set 4
-			print "\"skip-1\n0 1\n\n\"skip-2\n0 1\n\n";
-			#
-			# Repeat the first line twice in the drops file because
-			# often we have only one drop and xgraph won't print
-			# marks for data sets with only one point.
-			#
-			print "\n", '"drops', "\n", @d[0..3], @d;
-			# To plot acks, uncomment the following line
-			# print "\n", '"acks', "\n", @a;
-			$c++;
-			foreach $i (@ld) {
-				print "\n\"link-down\n$i 0\n$i $c\n";
-			}
-			foreach $i (@lu) {
-				print "\n\"link-up\n$i 0\n$i $c\n";
-			}
-		}
-	}
-
-	set f [open temp.rands w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"	
-    exec $PERL -ane $perlCode out.tr >@ $f
-	close $f
-	if {$quiet == "false"} {
-	  if {[info exists env(DISPLAY)] && ![info exists env(NOXGRAPH)]} {
-	    exec xgraph -display $env(DISPLAY) -bb -tk -nl -m -x time -y packet temp.rands &
-	  } else {
-	    puts stderr "output trace is in temp.rands"
-	  }
-	}
-	
-	exit 0
-}
-
-#
-# Arrange for tcp source stats to be dumped for $tcpSrc every
-# $interval seconds of simulation time
-#
-TestSuite instproc tcpDump { tcpSrc interval } {
-	global quiet
-	$self instvar dump_inst_ ns_
-	if ![info exists dump_inst_($tcpSrc)] {
-		set dump_inst_($tcpSrc) 1
-		$ns_ at 0.0 "$self tcpDump $tcpSrc $interval"
-		return
-	}
-	$ns_ at [expr [$ns_ now] + $interval] "$self tcpDump $tcpSrc $interval"
-	set report [$ns_ now]/cwnd=[format "%.4f" [$tcpSrc set cwnd_]]/ssthresh=[$tcpSrc set ssthresh_]/ack=[$tcpSrc set ack_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-	$self instvar dump_inst_ ns_
-	if ![info exists dump_inst_($tcpSrc)] {
-		set dump_inst_($tcpSrc) 1
-		puts $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]/bugFix=[$tcpSrc set bugFix_]	
-		$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-		return
-	}
-	$ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-	puts $label/time=[$ns_ now]/cwnd=[format "%.4f" [$tcpSrc set cwnd_]]/ssthresh=[$tcpSrc set ssthresh_]/ack=[$tcpSrc set ack_]/rtt=[$tcpSrc set rtt_]	
-}
-
-TestSuite instproc openTrace { stopTime testName } {
-	$self instvar ns_
-	exec rm -f out.tr temp.rands
-	set traceFile [open out.tr w]
-	puts $traceFile "v testName $testName"
-	$ns_ at $stopTime \
-		"close $traceFile ; $self finish $testName"
-	return $traceFile
-}
-
-TestSuite instproc traceQueues { node traceFile } {
-	$self instvar ns_
-	foreach nbr [$node neighbors] {
-		$ns_ trace-queue $node $nbr $traceFile
-		[$ns_ link $node $nbr] trace-dynamics $ns_ $traceFile
-	}
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set quiet false
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			if {$topo == "QUIET"} {
-				set quiet true
-				set topo ""
-			} else {
-				isProc? Topology $topo
-			}
-		}
-		3 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-
-			set topo [lindex $argv 1]
-			isProc? Topology $topo
-
-			set extra [lindex $argv 2]
-			if {$extra == "QUIET"} {
-				set quiet true
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-# Skeleton topology base class
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-   $self instvar node_
-    set n1 [lindex $nodelist 0]
-    foreach n2 [lrange $nodelist 1 end] {
-	if ![info exists node_($n2)] {
-	    set node_($n2) [$ns node]
-	}
-	$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-	foreach opt $args {
-	    set cmd [lindex $opt 0]
-	    set val [lindex $opt 1]
-	    if {[llength $opt] > 2} {
-		set x1 [lindex $opt 2]
-		set x2 [lindex $opt 3]
-	    } else {
-		set x1 $n1
-		set x2 $n2
-	    }
-	    $ns $cmd $node_($x1) $node_($x2) $val
-	    $ns $cmd $node_($x2) $node_($x1) $val
-	}
-	set n1 $n2
-    }
-}
-
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-# Create a simple four node topology:
-#
-#	   s1
-#	     \ 
-#  8Mb,5ms \   0.8Mb,100ms
-#	        r1 --------- k1
-#  8Mb,5ms /
-#	     /
-#	   s2
-
-NodeTopology/4nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 100ms bottleneck.
-# Queue-limit on bottleneck is 6 packets.
-#
-Class Topology/net0 -superclass NodeTopology/4nodes
-Topology/net0 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-# 
-# The net0a topology with RED at the bottleneck should be functionally
-# equivalent to the net0 topology above.
-# The queue-limit on bottleneck is 5 instead of 6 packets, to account
-#   for a difference in measuring the queue between RED and DT.
-# However, there are stilll performance differences between net0 and net0a.
-# 
-Class Topology/net0a -superclass NodeTopology/4nodes
-Topology/net0a instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 5
-    $ns queue-limit $node_(k1) $node_(r1) 5
-    Queue/RED set thresh_ 1000
-    Queue/RED set maxthresh_ 1000
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-#
-# Links1 uses 10Mb, 5ms feeders, and a 1.5Mb 100ms bottleneck.
-# Queue-limit on bottleneck is 23 packets.
-#
-
-Class Topology/net1 -superclass NodeTopology/4nodes
-Topology/net1 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 1.5Mb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 23
-    $ns queue-limit $node_(k1) $node_(r1) 23
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-#
-# Create a simple six node topology:
-#
-#        s1                 s3
-#         \                 /
-# 10Mb,2ms \  1.5Mb,20ms   / 10Mb,4ms
-#           r1 --------- r2
-# 10Mb,3ms /               \ 10Mb,5ms
-#         /                 \
-#        s2                 s4 
-#
-
-NodeTopology/6nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-}
-
-Class Topology/net2 -superclass NodeTopology/6nodes
-Topology/net2 instproc init ns {
-    $self next $ns
-
-    $self instvar node_
-    Queue/RED set drop_rand_ true
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class Topology/net3 -superclass NodeTopology/6nodes
-Topology/net3 instproc init ns {
-    $self next $ns
-
-    $self instvar node_
-    Queue/RED set drop_rand_ true
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 30ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 10Mb 10ms RED
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 100Mb 1ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 100Mb 5ms DropTail
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-# Definition of test-suite tests
-
-Class Test/tahoe1 -superclass TestSuite
-Test/tahoe1 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe
-	set guide_ 	\
-	"Tahoe TCP with multiple packets dropped from a window of data."
-	Queue/DropTail set summarystats_ true
-	$self next
-}
-Test/tahoe1 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	
-	# Set up FTP source
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	set link1 [$ns_ link $node_(r1) $node_(k1)]
-	set queue1 [$link1 queue]
-	$ns_ at 5.0 "$queue1 printstats"
-
-	# Trace only the bottleneck link
-	#
-	# Actually, we now trace all activity at the node around the
-	# bottleneck link.  This allows us to track acks, as well
-	# packets taking any alternate paths around the bottleneck
-	# link.
-	#
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/tahoe1Bytes -superclass TestSuite
-Test/tahoe1Bytes instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe1Bytes
-	set guide_	"DropTail queue in bytes instead of packets."
-	Queue/DropTail set queue_in_bytes_ true
-	Queue/DropTail set mean_pktsize_ 1000
-	Queue/DropTail set summarystats_ true
-	Test/tahoe1Bytes instproc run {} [Test/tahoe1 info instbody run ]
-	$self next
-}
-
-# Tahoe1 with RED
-Class Test/tahoe1RED -superclass TestSuite
-Test/tahoe1RED instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0a
-	set test_	tahoe1RED
-	set guide_	\
-	"RED queue, configured for 5 packets instead of DropTail's 6 packets."
-	Queue/RED set summarystats_ true
-	Test/tahoe1RED instproc run {} [Test/tahoe1 info instbody run ]
-	$self next
-}
-
-# Tahoe1 with RED
-Class Test/tahoe1REDbytes -superclass TestSuite
-Test/tahoe1REDbytes instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0a
-	set test_	tahoe1REDbytes
-	set guide_      "RED queue in bytes."
-	Queue/RED set queue_in_bytes_ true
-	Queue/RED set mean_pktsize_ 1000
-	Queue/RED set summarystats_ true
-	Test/tahoe1REDbytes instproc run {} [Test/tahoe1 info instbody run ]
-	$self next
-}
-
-Class Test/tahoe2 -superclass TestSuite
-Test/tahoe2 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe2
-	set guide_	"Tahoe TCP with one packet dropped."
-	$self next
-}
-Test/tahoe2 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 14
-	
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/tahoe3 -superclass TestSuite
-Test/tahoe3 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe3
-	set guide_      \
-	"Tahoe TCP, two packets dropped from a congestion window of 5 packets."
-	$self next
-}
-Test/tahoe3 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8   
-	$ns_ queue-limit $node_(k1) $node_(r1) 8   
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 100
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 16
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 0.5 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-	$ns_ run
-}
-
-# Tahoe3 with RED.
-Class Test/tahoe3RED -superclass TestSuite
-Test/tahoe3RED instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0a
-	set test_	tahoe3RED
-	set guide_      \
-	"Tahoe TCP, two packets dropped, RED queue configured for 5 packets."
-	Test/tahoe3RED instproc run {} [Test/tahoe3 info instbody run ]
-	$self next
-}
-
-Class Test/tahoe4 -superclass TestSuite
-Test/tahoe4 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	tahoe4
-	set guide_	\
-	"Tahoe TCP, two connections with different round-trip times."
-	$self next
-}
-Test/tahoe4 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 11
-	$ns_ queue-limit $node_(k1) $node_(r1) 11  
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 30
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 30
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 0.0 "$ftp1 start"
-	$ns_ at 0.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/no_bug -superclass TestSuite
-Test/no_bug instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net1
-	set test_	no_bug
-	set guide_      "Tahoe TCP with TCP/bugFix_ set to true."
-	$self next
-}
-Test/no_bug instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s1) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s1) 3ms
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 50
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.75 "$ftp2 produce 99"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-	$ns_ run
-}
-
-Class Test/bug -superclass TestSuite
-Test/bug instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net1
-	set test_	bug
-	set guide_      "Tahoe TCP with TCP/bugFix_ set to false."
-	$self next
-}
-Test/bug instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s1) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s1) 3ms
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	$tcp1 set bugFix_ false
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 50
-	$tcp2 set bugFix_ false
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.75 "$ftp2 produce 100"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno1 -superclass TestSuite
-Test/reno1 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno1
-	set guide_	\
-	"Reno TCP, one packet dropped, Fast Recovery and Fast Retransmit"
-	$self next
-}
-Test/reno1 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 14
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno -superclass TestSuite
-Test/reno instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno
-	set guide_      \
-	"Reno TCP, limited by maximum congestion window maxcwnd_."
-	$self next
-}
-Test/reno instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 28
-	$tcp1 set maxcwnd_ 14
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/renoA -superclass TestSuite
-Test/renoA instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	renoA
-	set guide_ 	\
-	"Reno TCP, one packet dropped, Fast Recovery and Fast Retransmit"
-	$self next
-}
-Test/renoA instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 28
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 4
-	set tcp3 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 2]
-	$tcp3 set window_ 4
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 1.2 "$ftp2 produce 6"
-	set ftp3 [$tcp3 attach-app FTP]
-	$ns_ at 1.2 "$ftp3 produce 6"
-
-	$self tcpDump $tcp1 1.0
-	$self tcpDump $tcp2 1.0
-	$self tcpDump $tcp3 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 5.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno2 -superclass TestSuite
-Test/reno2 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno2
-	set guide_ 	\
-	"Reno TCP, multiple packets dropped, Retransmit Timeout."
-	$self next
-}
-Test/reno2 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 9
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 20
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno3 -superclass TestSuite
-Test/reno3 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno3
-	set guide_	\
-	"Reno TCP, two packets dropped from a congestion window of 5 packets."
-	$self next
-}
-Test/reno3 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-	$ns_ queue-limit $node_(k1) $node_(r1) 8
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 100
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 16
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 0.5 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 8.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno4 -superclass TestSuite
-Test/reno4 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net2
-	set test_	reno4
-	set guide_	\
-	"Reno TCP, two packets dropped, no Retransmit Timeout"
-	$self next
-}
-Test/reno4 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ queue-limit $node_(r1) $node_(r2) 29
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-	$tcp1 set window_ 80
-	$tcp1 set maxcwnd_ 40
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(s1) [$self openTrace 2.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno4a -superclass TestSuite
-Test/reno4a instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net2
-	set test_	reno4a
-	set guide_	\
-	"Reno TCP, two packets dropped, Retransmit Timeout"
-	$self next
-}
-Test/reno4a instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ queue-limit $node_(r1) $node_(r2) 29
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-	$tcp1 set window_ 40
-	$tcp1 set maxcwnd_ 40
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(s1) [$self openTrace 4.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno5 -superclass TestSuite
-Test/reno5 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno5
-	set guide_	\
-	"Reno TCP, TCP/bugFix_ set to false."
-	Agent/TCP set bugFix_ false
-	$self next
-}
-Test/reno5 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 9
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 50
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 20
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.1 "$ftp2 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reno5_nobug -superclass TestSuite
-Test/reno5_nobug instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	reno5_nobug
-	set guide_	\
-	"Reno TCP, TCP/bugFix_ set to true."
-	Agent/TCP set bugFix_ true
-	Test/reno5_nobug instproc run {} [Test/reno5 info instbody run ]
-
-	$self next
-}
-
-Class Test/telnet -superclass TestSuite
-Test/telnet instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	telnet
-	set guide_	\
-	"Telnet connections with two different packet generation processes."
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-	$self next
-}
-Test/telnet instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 8
-	$ns_ queue-limit $node_(k1) $node_(r1) 8
-
-	set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-	set tcp2 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 1]
-	set tcp3 [$ns_ create-connection TCP/Reno $node_(s2) TCPSink $node_(k1) 2]
-
-	set telnet1 [$tcp1 attach-app Telnet]; $telnet1 set interval_ 1
-	set telnet2 [$tcp2 attach-app Telnet]; $telnet2 set interval_ 0
-	# Interval 0 designates the tcplib telnet interarrival distribution
-	set telnet3 [$tcp3 attach-app Telnet]; $telnet3 set interval_ 0
-
-	$ns_ at 0.0 "$telnet1 start"
-	$ns_ at 0.0 "$telnet2 start"
-	$ns_ at 0.0 "$telnet3 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 50.0 $testName_]
-
-	# use a different seed each time
-	#puts seed=[$ns_ random 0]
-
-	$ns_ run
-}
-
-Class Test/delayed -superclass TestSuite
-Test/delayed instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	delayed
-	set guide_	\
-	"TCP receiver with delayed acknowledgements."
-	$self next
-}
-Test/delayed instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink/DelAck $node_(k1) 0]
-	$tcp1 set window_ 50
-
-	# lookup up the sink and set it's delay interval
-	[$node_(k1) agent [$tcp1 dst-port]] set interval 100ms
-
-	set ftp1 [$tcp1 attach-app FTP];
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 1.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase -superclass TestSuite
-Test/phase instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase
-	set guide_	"Phase effects: connection 0 wins."
-	$self next
-}
-Test/phase instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s2) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s2) 3ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 32 
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 32 
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase1 -superclass TestSuite
-Test/phase1 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase1
-	set guide_	"Phase effects: connection 1 wins."
-	$self next
-}
-Test/phase1 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s2) $node_(r1) 9.5ms
-	$ns_ delay $node_(r1) $node_(s2) 9.5ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 32 
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 32 
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/phase2 -superclass TestSuite
-Test/phase2 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	phase2
-	set guide_	\
-	"Phase effects: TCP/overhead_ is used, and neither connection loses."
-	$self next
-}
-Test/phase2 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s2) $node_(r1) 3ms
-	$ns_ delay $node_(r1) $node_(s2) 3ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 16
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 32 
-	$tcp1 set overhead_ 0.01
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 32 
-	# $tcp2 set overhead_ 0.01
-	# The random overhead_ was increased slightly to illustrate fairness 
-	#   for this scenario.
-	$tcp2 set overhead_ 0.015
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 5.0 "$ftp1 start"
-	$ns_ at 1.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/timers -superclass TestSuite
-Test/timers instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	timers
-	set guide_	"TCP retransmit timers."
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-	$self next
-}
-
-Test/timers instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-
-
-	$ns_ queue-limit $node_(r1) $node_(k1) 2
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink/DelAck $node_(k1) 0]
-	$tcp1 set window_ 4
-	# look up the sink and set its delay interval
-	[$node_(k1) agent [$tcp1 dst-port]] set interval_ 100ms
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink/DelAck $node_(k1) 1]
-	$tcp2 set window_ 4
-	# look up the sink and set its delay interval
-	[$node_(k1) agent [$tcp2 dst-port]] set interval_ 100ms
-
-	set ftp1 [$tcp1 attach-app FTP]
-	set ftp2 [$tcp2 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp1 start"
-	$ns_ at 1.3225 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-
-	# Trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-# Many small TCP flows.
-Class Test/manyflows -superclass TestSuite
-Test/manyflows instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	manyflows
-	set guide_	"Using FTP commands to create many small flows."
-	$self next
-}
-Test/manyflows instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connections
-
-	set rng_ [new RNG]
-	## $rng_ seed [ns random 0]
-	set stoptime 5
-	set randomflows 10
-	for {set i 0} {$i < $randomflows} {incr i} {
-	    set tcp [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 1]
-	    set ftp [[set tcp] attach-app FTP]    
-	    set numpkts [$rng_ uniform 0 10]
-	    set starttime [$rng_ uniform 0 $stoptime]
-	    $ns_ at $starttime "[set ftp] produce $numpkts" 
-	    $ns_ at $stoptime "[set ftp] stop"  
-	}   
-
-	# Trace only the bottleneck link
-	#
-	# Actually, we now trace all activity at the node around the
-	# bottleneck link.  This allows us to track acks, as well
-	# packets taking any alternate paths around the bottleneck
-	# link.
-	#
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-TestSuite instproc printpkts { label tcp } {
-        global tcpTick_ 
-	puts "tcp $label highest_seqment_acked [$tcp set ack_]"
-	puts "tcp $label data_bytes_sent [$tcp set ndatabytes_]"
-        set numRtts [$tcp set rtt_]
-	set tick $tcpTick_
-        set rtt [expr $numRtts * $tcpTick_]
-	puts "tcp $label most_recent_rtt [format "%5.3f" $rtt]"  
-}
-TestSuite instproc printpktsTFRC { label tfrc } {
-        global tcpTick_ 
-	puts "tfrc $label data_pkts_sent [$tfrc set ndatapack_]"
-}
-TestSuite instproc printdrops { fid fmon } {
-	set fcl [$fmon classifier]; # flow classifier
-	#
-	# look up the flow using the classifier.  Because we are
-	# using a Fid classifier, the src/dst fields are not compared,
-	# and can thus be just zero, as illustrated here.  The "auto"
-	# indicates we don't already know which bucket in the classifier's
-	# hash table to find the flow we're looking for.
-	#
-	set flow [$fcl lookup auto 0 0 $fid]
-	puts "fid: $fid per-link total_drops [$flow set pdrops_]"
-	puts "fid: $fid per-link total_marks [$flow set pmarks_]"
-	puts "fid: $fid per-link total_packets [$flow set pdepartures_]"
-	puts "fid: $fid per-link total_bytes [$flow set bdepartures_]"
-	#
-	# note there is much more date available in $flow and $fmon
-	# that isn't being printed here.
-	#
-}
-TestSuite instproc printstop { stoptime } {
-	puts "stop-time $stoptime"
-}
-TestSuite instproc printall { fmon } {
- 	puts "aggregate per-link total_drops [$fmon set pdrops_]"
-	puts "aggregate per-link total_marks [$fmon set pmarks_]"
-	puts "aggregate per-link total_packets [$fmon set pdepartures_]"
-}
-TestSuite instproc printPeakRates { fmon time } {
-        $self instvar pastbytes
-        set allflows [$fmon flows]
-        foreach f $allflows {
-                set fid [$f set flowid_]
-		#set src [$f set src_]
-		#set dst [$f set dst_]
-                set bytes [$f set bdepartures_]
-                if [info exists pastbytes($f)] {
-                        set newbytes [expr $bytes - $pastbytes($f)]
-                }  else {
-                        set newbytes $bytes 
-                }
-                if {$newbytes > 0} {
-			#src: $src d st: $dst
-                        puts "time: [format "%3.2f" $time] fid: $fid new_bytes $newbytes"
-                        set pastbytes($f) $bytes
-                }
-        }
-}
-TestSuite instproc printPeakRate { fmon time interval } {
-        $self instvar ns_
-        set newTime [expr [$ns_ now] + $interval]
-        $ns_ at $time "$self printPeakRates $fmon $time"
-        $ns_ at $newTime "$self printPeakRate $fmon $newTime $interval"
-}
-
-
-Class Test/stats -superclass TestSuite
-Test/stats instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	stats
-	set guide_	\
-	"TCP statistics, and per-flow and aggregate link statistics."
-	$self next
-}
-Test/stats instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_ 
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 10
-	$ns_ queue-limit $node_(k1) $node_(r1) 10
-
-	set slink [$ns_ link $node_(r1) $node_(k1)]; # link to collect stats on
-	set fmon [$ns_ makeflowmon Fid]
-	$ns_ attach-fmon $slink $fmon
-
-	set stoptime 10.1 
-
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp0 set window_ 30
-	set tcp1 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp1 set window_ 30
-
-	set ftp0 [$tcp0 attach-app FTP]
-	set ftp1 [$tcp1 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp0 start"
-	$ns_ at 1.0 "$ftp1 start"
-
-	$self tcpDumpAll $tcp0 5.0 tcp0
-	$self tcpDumpAll $tcp1 5.00001 tcp1
-
-	set almosttime [expr $stoptime - 0.001]
-	$ns_ at $almosttime "$self printpkts 0 $tcp0"
-	$ns_ at $almosttime "$self printpkts 1 $tcp1"
-	$ns_ at $stoptime "$self printdrops 0 $fmon; $self printdrops 1 $fmon"
-	$ns_ at $stoptime "$self printall $fmon"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/statsECN -superclass TestSuite
-Test/statsECN instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0a
-	set test_	statsECN
-	Queue/RED set setbit_ true
-	Queue/RED set thresh_ 1
-	Queue/RED set maxthresh_ 0
-	Agent/TCP set ecn_ 1
-	set guide_	\
-	"Flow monitor statistics with ECN."
-	$self next
-}
-Test/statsECN instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_ 
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 100
-	$ns_ queue-limit $node_(k1) $node_(r1) 100
-
-	set slink [$ns_ link $node_(r1) $node_(k1)]; # link to collect stats on
-	set fmon [$ns_ makeflowmon Fid]
-	$ns_ attach-fmon $slink $fmon
-
-	set stoptime 10.1 
-
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp0 set window_ 30
-	set tcp1 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp1 set window_ 30
-
-	set ftp0 [$tcp0 attach-app FTP]
-	set ftp1 [$tcp1 attach-app FTP]
-
-	$ns_ at 1.0 "$ftp0 start"
-	$ns_ at 1.0 "$ftp1 start"
-
-	set almosttime [expr $stoptime - 0.001]
-	$ns_ at $stoptime "$self printdrops 0 $fmon; $self printdrops 1 $fmon"
-	$ns_ at $stoptime "$self printall $fmon"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/stats1 -superclass TestSuite
-Test/stats1 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	Queue/DropTail set summarystats_ true
-	set test_	stats1
-	set guide_	\
-	"FTP statistics on bytes produced, and queue statistics.
-	Should be:	fid: 0 per-link total_bytes 940."
-	$self next
-}
-Test/stats1 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_ 
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 10
-	$ns_ queue-limit $node_(k1) $node_(r1) 10
-	set packetSize_ 100
-	Agent/TCP set packetSize_ $packetSize_
-	puts "TCP packetSize [Agent/TCP set packetSize_]"
-
-	set slink [$ns_ link $node_(r1) $node_(k1)]; # link to collect stats on
-	set fmon [$ns_ makeflowmon Fid]
-	$ns_ attach-fmon $slink $fmon
-
-	set stoptime 10.1 
-
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp0 set window_ 30
-	set tcp1 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp1 set window_ 30
-
-	set ftp0 [$tcp0 attach-app FTP]
-	set ftp1 [$tcp1 attach-app FTP]
-
-	set packets_ftp 9
-	set bytes_ftp [expr $packets_ftp * $packetSize_]
-	$ns_ at 1.0 "$ftp0 produce $packets_ftp"
-	puts "ftp 0 segments_produced $packets_ftp (using `FTP produce pktcnt')"
-	$ns_ at 1.0 "$ftp1 send $bytes_ftp"
-	puts "ftp 1 bytes_produced $bytes_ftp (using `FTP send nbytes')"
-
-	set link1 [$ns_ link $node_(r1) $node_(k1)]
-	set queue1 [$link1 queue]
-	$ns_ at 10.0 "$queue1 printstats"
-
-	set almosttime [expr $stoptime - 0.001]
-	$ns_ at $almosttime "$self printpkts 0 $tcp0"
-	$ns_ at $almosttime "$self printpkts 1 $tcp1"
-	$ns_ at $stoptime "$self printdrops 0 $fmon; $self printdrops 1 $fmon"
-	$ns_ at $stoptime "$self printall $fmon"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/stats1Bytes -superclass TestSuite
-Test/stats1Bytes instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	Queue/DropTail set summarystats_ true
-	Queue/DropTail set queue_in_bytes_ true
-	set test_	stats1Bytes
-	set guide_	"Queue statistics for a queue in bytes.
-	Should be:      True average queue: 0.439 (in bytes)"
-	Test/stats1Bytes instproc run {} [Test/stats1 info instbody run]
-	$self next
-}
-
-Class Test/stats1a -superclass TestSuite
-Test/stats1a instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0a
-	Queue/RED set summarystats_ true
-	set test_	stats1a
-	set guide_	"Queue statistics for a RED queue.
-	Should be:	True average queue: 0.004"
-	Test/stats1a instproc run {} [Test/stats1 info instbody run]
-	$self next
-}
-
-Class Test/stats1aBytes -superclass TestSuite
-Test/stats1aBytes instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0a
-	Queue/RED set summarystats_ true
-	Queue/RED set queue_in_bytes_ true
-	set test_	stats1aBytes
-	set guide_	"Queue statistics for a RED queue in bytes.
-	Should be:      True average queue: 0.439 (in bytes)"
-	Test/stats1aBytes instproc run {} [Test/stats1 info instbody run]
-	$self next
-}
-
-Class Test/statsHeaders -superclass TestSuite
-Test/statsHeaders instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0a
-	Queue/RED set summarystats_ true
-	Agent/TCP set useHeaders_ true
-	set test_	statsHeaders
-	set guide_	\
-	"FTP and packet statistics for TCP with correct accounting for headers.
-	Should be:	fid: 0 per-link total_bytes 1300"
-	Test/statsHeaders instproc run {} [Test/stats1 info instbody run]
-	$self next
-}
-
-Class Test/stats2 -superclass TestSuite
-Test/stats2 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net2
-	Queue/RED set summarystats_ true
-	set test_	stats2
-	set guide_	\
-	"Queue statistics for the true average queue size.
-	Should be:     True average queue: 8.632"
-	$self next
-}
-
-Test/stats2 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_ 
-	puts "Guide: $guide_"
-	set stoptime 10.1 
-
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s3) 0]
-	$tcp0 set window_ 1000
-	set tcp1 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(s3) 1]
-	$tcp1 set window_ 1000
-
-	set ftp0 [$tcp0 attach-app FTP]
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp0 start"
-	$ns_ at 1.0 "$ftp1 start"
-
-	set link1 [$ns_ link $node_(r1) $node_(r2)]
-	set queue1 [$link1 queue]
-	$ns_ at 10.0 "$queue1 printstats"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/stats3 -superclass TestSuite
-Test/stats3 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net3
-	set test_	stats3
-	QueueMonitor set keepRTTstats_ 1
-	QueueMonitor set maxRTT_ 1
-	QueueMonitor set binsPerSec_ 100
-	QueueMonitor set keepSeqnoStats_ 1
-	QueueMonitor set maxSeqno_ 2000
-	QueueMonitor set SeqnoBinSize_ 100
-	Agent/TCP set tcpTick_ 0.01
-	set guide_	"Printing RTT and Seqno statistics."
-	$self next
-}
-
-Test/stats3 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_ 
-	puts "Guide: $guide_"
-	set stoptime 1.1 
-
-	set slink [$ns_ link $node_(r1) $node_(r2)]; 
-	set fmon [new QueueMonitor]
-	#set outfile [open temp.stats w]
-	set outfile stdout
-	$fmon traceDist $outfile
-	$ns_ attach-fmon $slink $fmon
-
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s3) 0]
-	$tcp0 set window_ 10
-	set tcp1 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(s3) 1]
-	$tcp1 set window_ 10
-
-	set ftp0 [$tcp0 attach-app FTP]
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp0 start"
-	$ns_ at 0.1 "$ftp1 start"
-
-	set link1 [$ns_ link $node_(r1) $node_(r2)]
-	set queue1 [$link1 queue]
-
-	$ns_ at $stoptime "$fmon printRTTs"
-	#
-	## to plot RTTs:  
-	## ./test-all-simple stats3 > out %
-	## awk -f rtts.awk out > data   
-        ## xgraph -bb -tk -x rtt -y frac_of_pkts data &
-	#
-	$ns_ at $stoptime "$fmon printSeqnos"
-	#
-	## to plot seqnos:  
-	## ./test-all-simple stats3 > out &
-	## awk -f seqnos.awk out > data   
-        ## xgraph -bb -tk -x seqno_bin -y frac_of_pkts data &
-	#
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/stats4 -superclass TestSuite
-Test/stats4 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net3
-	set test_	stats4
-	Agent/TCP set tcpTick_ 0.01
-	set guide_	"Printing peak rate statistics."
-	$self next
-}
-
-Test/stats4 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_ 
-	puts "Guide: $guide_"
-	set stoptime 1.1 
-	set PeakRateInterval 0.1
-
-	set slink [$ns_ link $node_(r1) $node_(r2)]; 
-	#set fmon [$ns_ makeflowmon SrcDestFid]
-	set fmon [$ns_ makeflowmon Fid]
-	set outfile stdout
-	$fmon traceDist $outfile
-	$ns_ attach-fmon $slink $fmon
-
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(s3) 0]
-	$tcp0 set window_ 10
-	set tcp1 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(s3) 1]
-	$tcp1 set window_ 10
-
-	set ftp0 [$tcp0 attach-app FTP]
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp0 start"
-	$ns_ at 0.1 "$ftp1 start"
-
-	set link1 [$ns_ link $node_(r1) $node_(r2)]
-	set queue1 [$link1 queue]
-
-	$ns_ at 0.5 "$self printPeakRate $fmon 0.5 $PeakRateInterval"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-
-
-Class Test/statsTFRC -superclass TestSuite
-Test/statsTFRC instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net0
-	set test_	statsTFRC
-	set guide_	\
-	"TFRC statistics, and per-flow and aggregate link statistics."
-	$self next
-}
-Test/statsTFRC instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_ test_
-	puts "Guide: $guide_"
-
-	$ns_ delay $node_(s2) $node_(r1) 200ms
-	$ns_ delay $node_(r1) $node_(s2) 200ms
-	$ns_ queue-limit $node_(r1) $node_(k1) 10
-	$ns_ queue-limit $node_(k1) $node_(r1) 10
-
-	set slink [$ns_ link $node_(r1) $node_(k1)]; # link to collect stats on
-	set fmon [$ns_ makeflowmon Fid]
-	$ns_ attach-fmon $slink $fmon
-
-	set stoptime 5.1 
-
-	set tf0 [$ns_ create-connection TFRC $node_(s1) TFRCSink $node_(k1) 0]
-	#$tf0 set window_ 30
-	set tf1 [$ns_ create-connection TFRC $node_(s2) TFRCSink $node_(k1) 1]
-	#$tf1 set window_ 30
-
-	set ftp0 [new Application/FTP]; $ftp0 attach-agent $tf0
-	set ftp1 [new Application/FTP]; $ftp1 attach-agent $tf1
-
-	$ns_ at 1.0 "$ftp0 start"
-	$ns_ at 1.0 "$ftp1 start"
-
-	#$self tcpDumpAll $tf0 5.0 tf0
-	#$self tcpDumpAll $tf1 5.00001 tf1
-
-	set almosttime [expr $stoptime - 0.001]
-	$ns_ at $almosttime "$self printpktsTFRC 0 $tf0"
-	$ns_ at $almosttime "$self printpktsTFRC 1 $tf1"
-	$ns_ at $stoptime "$self printdrops 0 $fmon; $self printdrops 1 $fmon"
-	$ns_ at $stoptime "$self printall $fmon"
-
-	# trace only the bottleneck link
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-# Add a test to printTimestamps.
-# tcp-sink.cc, p. 337.
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-simultaneous.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-simultaneous.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-simultaneous.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-simultaneous.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,130 +0,0 @@
-# This test suite is for validating scheduler simultaneous event ordering in ns
-#
-# To run all tests:  test-all-scheduler
-#
-# To run individual tests:
-# ns test-suite-scheduler.tcl List
-# ns test-suite-scheduler.tcl Calendar
-# ns test-suite scheduler.tcl Heap
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-scheduler.tcl
-#
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-# What does this simple test do?
-#   - it schedules $TIMES batches of events.  Each batch contains $SIMUL events, 
-#     all of which will occur at the same time.  All events are permuted and
-#     scheduled in a random order.  The output should be a list of integers 
-#     from 1 to ($TIMES*$SIMUL) in increasing order.
-#   - if the output differs it exits with status 1, otherwise it exits with status 0.
-
-proc comp {a b} {
-	set a1 [lindex $a 0]
-	set b1 [lindex $b 0]
-	if {$a1 > $b1} {
-		return 1
-	}
-	return 0
-}
-
-Class TestSuite
-
-TestSuite instproc init { quiet } {
-	$self instvar ns_ rng_ N_ quiet_
-	set ns_ [new Simulator]
-	set rng_ [new RNG]
-	set N_ 0
-	set quiet_ $quiet
-}
-
-TestSuite instproc run { scheduler } {
-	$self instvar ns_ rng_ N_
-	if { [catch "$ns_ use-scheduler $scheduler"] } {
-		puts "*** WARNING: scheduler Scheduler/$scheduler is not supported, test was not run"
-		exit 0
-	}
-	
-	set TIMES 20  ;# $TIMES different times for events
-	set SIMUL 50  ;# each occurs $SIMUL times
-	set TIMEMIN 0 ;# random events are taken from [TIMEMIN, TIMEMAX]
-	set TIMEMAX 5
-
-	# generate random event timings and put them in increasing order by time to occur
-	for {set i 0 } { $i < $TIMES } { incr i } {
-		lappend timings [list [$rng_ uniform $TIMEMIN $TIMEMAX] $i $SIMUL]
-	}
-	set stimings [lsort -command "comp" $timings]
-	for {set i 0 } { $i < $TIMES } { incr i } {
-		set e [lindex $stimings $i]
-		set idx [lsearch $timings $e]
-		set timings [lreplace $timings $idx $idx [lappend e $i]]
-	}
-
-	while 1 {
-		# pull out timings in random order
-		set i [expr int([$rng_ uniform 0 [llength $timings]])]
-		set e [lindex $timings $i]
-		
-		set order [lindex $e 3]
-		set left  [lindex $e 2]
-		set label [expr $SIMUL - $left + 1 + $order*$SIMUL]
-
-		$ns_ at [lindex $e 0] "$self assert $label"
-
-		incr left -1
-		if {$left==0} {
-			set timings [lreplace $timings $i $i]
-			if {$timings == ""} break
-		} else {
-			set e [lreplace $e 2 2 $left]
-			set timings [lreplace $timings $i $i $e]
-		}
-	}
-	$ns_ run
-	exit 0
-}
-
-
-TestSuite instproc assert { n } {
-	$self instvar N_ quiet_
-	if { $quiet_ != "QUIET" } {
-		puts $n
-	}
-	if [expr $n != $N_ + 1 ] {
-		exit 1
-	}
-	set N_ $n
-}
-
-TestSuite proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <scheduler> \[quiet\]"
-	exit 1
-}
-
-
-
-global argc argv
-set quiet ""
-if { $argc == 2 } {
-	set quiet [lindex $argv 1]
-	if { $quiet != "QUIET" && $quiet != "quiet" } {
-		TestSuite usage
-	}
-	set quiet "QUIET"
-	
-}
-
-if { $argc > 0 && $argc < 3 } {
-	set scheduler [lindex $argv 0]
-} else {
-	TestSuite usage
-}
-
-set test [new TestSuite $quiet]
-$test run $scheduler
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sliding-window.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sliding-window.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-sliding-window.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-sliding-window.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,217 +0,0 @@
-#
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-
-# This test suite is for validating sliding window
-# To run all tests: test-all-sliding-window
-# to run individual test:
-# ns test-suite-sliding-window.tcl sliding-normal
-# ns test-suite-sliding-window.tcl sliding-loss
-#
-# To view a list of available test to run with this script:
-# ns test-suite-sliding-window.tcl
-#
-# Each of the tests uses 6 nodes 
-#
-
-Class TestSuite
-
-Class Test/sliding-normal -superclass TestSuite
-# Simple sliding window without any packet loss
-
-Class Test/sliding-loss -superclass TestSuite
-# Simple sliding window with packet loss
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid <tests> : sliding-normal sliding-loss"
-	exit 1
-}
-
-TestSuite instproc init {} {
-
-    $self instvar ns_ n_
-
-    set ns_ [new Simulator]
-    $ns_ trace-all [open temp.rands w]
-    $ns_ namtrace-all [open temp.rands.nam w]
-
-    # setup sliding window topology
-       
-    foreach i " 0 1 2 3 4 5" {
-	set n_($i) [$ns_ node]
-    }
-
-    $ns_ duplex-link $n_(0) $n_(2) 1Mb 20ms DropTail
-    $ns_ duplex-link $n_(1) $n_(2) 1Mb 20ms DropTail
-    $ns_ duplex-link $n_(2) $n_(3) 0.5Mb 20ms DropTail
-    $ns_ duplex-link $n_(3) $n_(4) 1Mb 20ms DropTail
-    $ns_ duplex-link $n_(3) $n_(5) 1Mb 20ms DropTail
-
-    $ns_ duplex-link-op $n_(0) $n_(2) orient right-down
-    $ns_ duplex-link-op $n_(1) $n_(2) orient right-up
-    $ns_ duplex-link-op $n_(2) $n_(3) orient right
-    $ns_ duplex-link-op $n_(3) $n_(4) orient right-up
-    $ns_ duplex-link-op $n_(3) $n_(5) orient right-down
-
-    $ns_ duplex-link-op $n_(2) $n_(3) queuePos 0.5
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        if { !$quiet } {
-                puts "running nam..."
-                exec nam temp.rands.nam &
-        }
-	exit 0
-}
-
-Test/sliding-normal instproc init {flag} {
-	$self instvar ns_ testName_ flag_
-	set testName_ sliding-normal
-	set flag_ $flag
-	$self next
-}
-
-Test/sliding-normal instproc run {} {
-
-	$self instvar ns_ n_ 
-        $ns_ queue-limit $n_(2) $n_(3) 50
-
-        ### TCP between n_(0) & n_(4)
-        Agent/TCP set maxcwnd_ 8
-        set sliding [new Agent/TCP/SlidingWindow]
-        $ns_ attach-agent $n_(0) $sliding
-        set sink [new Agent/TCPSink/SlidingWindowSink]
-        $ns_ attach-agent $n_(4) $sink
-        $ns_ connect $sliding $sink
-        set ftp [new Application/FTP]
-        $ftp attach-agent $sliding
-
-        ### CBR traffic between n_(1) & n_(5)
-        set udp0 [new Agent/UDP]
-        $ns_ attach-agent $n_(1) $udp0
-        set cbr0 [new Application/Traffic/CBR]
-        $cbr0 set packetSize_ 500
-        $cbr0 set interval_ 0.01
-        $cbr0 attach-agent $udp0
-        set null0 [new Agent/Null]
-        $ns_ attach-agent $n_(5) $null0
-        $ns_ connect $udp0 $null0
-
-        ### setup operation
-	$ns_ at 0.1 "$cbr0 start"
-        $ns_ at 1.1 "$cbr0 stop"
-        $ns_ at 0.2 "$ftp start"
-        $ns_ at 1.1 "$ftp stop"
-	$ns_ at 1.2 "$self finish"
-	$ns_ run
-}
-
-Test/sliding-loss instproc init {flag} {
-	$self instvar ns_ testName_ flag_
-	set testName_ sliding-loss
-	set flag_ $flag
-	$self next 
-}
-
-Test/sliding-loss instproc run {} {
-
-	$self instvar ns_ n_
-        $ns_ queue-limit $n_(2) $n_(3) 10
-
-        ### TCP between n_(0) & n_(4)
-        Agent/TCP set maxcwnd_ 8
-        set sliding [new Agent/TCP/SlidingWindow]
-        $ns_ attach-agent $n_(0) $sliding
-        set sink [new Agent/TCPSink/SlidingWindowSink]
-        $ns_ attach-agent $n_(4) $sink
-        $ns_ connect $sliding $sink
-        set ftp [new Application/FTP]
-        $ftp attach-agent $sliding
-
-        ### CBR traffic between n_(1) & n_(5)
-        set udp0 [new Agent/UDP]
-        $ns_ attach-agent $n_(1) $udp0
-        set cbr0 [new Application/Traffic/CBR]
-        $cbr0 attach-agent $udp0
-        set null0 [new Agent/Null]
-        $ns_ attach-agent $n_(5) $null0
-        $ns_ connect $udp0 $null0
-
-        ### setup operation
-	$ns_ at 0.1 "$cbr0 start"
-        $ns_ at 1.1 "$cbr0 stop"
-        $ns_ at 0.2 "$ftp start"
-        $ns_ at 1.1 "$ftp stop"
-	$ns_ at 1.2 "$self finish"
-	$ns_ run
-}
-	
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-	    if {[lindex $arg 1] == "QUIET"} {
-		set quiet 1
-	    }
-	} else {
-		usage
-	}
-	switch $test {
-                sliding-normal -
-                sliding-loss {
-			set t [new Test/$test 1]
-		}
-		default {
-			stderr "Unknown test $test"
-			exit 1
-		}
-	}
-	$t run
-}
-
-global argv arg0
-runtest $argv
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-smac-multihop.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-smac-multihop.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-smac-multihop.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-smac-multihop.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,302 +0,0 @@
-# Copyright (c) 2000 by the University of Southern California
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-# All rights reserved.
-#
-#  This program is free software; you can redistribute it and/or
-#  modify it under the terms of the GNU General Public License,
-#  version 2, as published by the Free Software Foundation.
-#
-#  This program is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#  GNU General Public License for more details.
-#
-#  You should have received a copy of the GNU General Public License along
-#  with this program; if not, write to the Free Software Foundation, Inc.,
-#  59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
-#
-#  The copyright of this module includes the following
-#  linking-with-specific-other-licenses addition:
-#
-#  In addition, as a special exception, the copyright holders of
-#  this module give you permission to combine (via static or
-#  dynamic linking) this module with free software programs or
-#  libraries that are released under the GNU LGPL and with code
-#  included in the standard release of ns-2 under the Apache 2.0
-#  license or under otherwise-compatible licenses with advertising
-#  requirements (or modified versions of such code, with unchanged
-#  license).  You may copy and distribute such a system following the
-#  terms of the GNU GPL for this module and the licenses of the
-#  other code concerned, provided that you include the source code of
-#  that other code when and as the GNU GPL requires distribution of
-#  source code.
-#
-#  Note that people who make modified versions of this module
-#  are not obligated to grant this special exception for their
-#  modified versions; it is their choice whether to do so.  The GNU
-#  General Public License gives permission to release a modified
-#  version without this exception; this exception also makes it
-#  possible to release a modified version which carries forward this
-#  exception.
-#
-# Yuan Li(USC/ISI)
-# 
-#
-#
-# run SMAC in a 10-nodes multihop network with DSR routing
-
-# remove-all-packet-headers       ; # removes all except common
-# add-packet-header Flags IP TCP Diffusion ARP LL Mac SR
-# hdrs reqd for validation test
-
-set opt(chan)           Channel/WirelessChannel
-set opt(prop)           Propagation/TwoRayGround
-set opt(netif)          Phy/WirelessPhy
-set opt(mac)            Mac/SMAC
-set opt(ifq)            Queue/DropTail/PriQueue
-set opt(ll)             LL
-set opt(ant)            Antenna/OmniAntenna
-set opt(x)              2000              ;# X dimension of the topography
-set opt(y)              2000               ;# Y dimension of the topography
-set opt(ifqlen)         50                ;# max packet in ifq
-set opt(seed)           0.0
-set opt(tr)             temp.rands        ;# trace file
-set opt(adhocRouting)   DSR
-set opt(filters)        GradientFilter
-set opt(nn)             10                ;# how many nodes are simulated
-set opt(stop)           1000.0            ;# simulation time
-set opt(syncFlag)       1                 ;# is set to 1 when SMAC uses sleep-wakeup cycle
-set opt(selfConfigFlag) 1                 ;# is set to 0 when SMAC uses user configurable schedule start time
-set val(initialenergy)  100
-set val(radiomodel)     Radio/Simple      ;# generic radio hardware
-set val(receivepower)   .5                ;# Receiving Power
-set val(transmitpower)  .5                ;# Transmitting Power
-set val(idlepower)      .05               ;# Idle Power
-                                                                                                                                                            
-                                                                                                                                                            
-# =====================================================================
-# Other default settings
-                                                                                                                                                            
-LL set mindelay_                50us
-LL set delay_                   25us
-LL set bandwidth_               0         ;
-                                                                                                                                                            
-Agent/Null set sport_           0
-Agent/Null set dport_           0
-                                                                                                                                                            
-Agent/CBR set sport_            0
-Agent/CBR set dport_            0
-                                                                                                                                                            
-Agent/TCPSink set sport_        0
-Agent/TCPSink set dport_        0
-                                                                                                                                                            
-Agent/TCP set sport_            0
-Agent/TCP set dport_            0
-Agent/TCP set packetSize_       512
-                                                                                                                                                            
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-                                                                                                                                                            
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-                                                                                                                                                            
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.2818
-Phy/WirelessPhy set freq_ 914e+6
-Phy/WirelessPhy set L_ 1.0
-                                                                                                                                                            
-# SMAC settings
-Mac/SMAC set syncFlag_ 1        ; # sleep wakeup cycles
-Mac/SMAC set SMAC_DUTY_CYCLE 10
-
-ErrorModel set rate_ 0.1
-                                                                                                                                                            
-proc UniformErrorProc {} {
-    global opt
-                                                                                                                                                            
-    set errObj [new ErrorModel]
-    $errObj unit packet
-    return $errObj
-}
-                                                                                                                                                            
-Class TestSuite
-
-Class Test/smac-multihop -superclass TestSuite
-
-proc usage {} {
-    global argv0
-    puts stderr "usage: ns $argv0 <tests>"
-    puts "Valid tests: smac-multihop"
-}
-
-Test/smac-multihop instproc init {} {
-                       
-    global opt                                                                                                                                      
-# create simulator instance
-    $self instvar ns_ 
-    set ns_ [new Simulator]
-                                                                                                                                                            
-# set wireless topography object
-    $self instvar wtopo
-    set wtopo [new Topography]
-                                                                                                                                                            
-# create trace object for ns
-    $self instvar tracefd
-    set tracefd [open $opt(tr) w]
-                                                                                                                                                            
-    $ns_ trace-all $tracefd
-                                                                                                                                                            
-# define topology
-    $wtopo load_flatgrid $opt(x) $opt(y)
-                                                                                                                                                            
-#
-# Create God
-#
-    $self instvar god_
-    set god_ [create-god $opt(nn)]
-                                                                                                                                                            
-#
-# define how node should be created
-#
-                                                                                                                                                            
-# node setting
-                                                                                                                                                            
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-                 -llType $opt(ll) \
-                 -macType $opt(mac) \
-                 -ifqType $opt(ifq) \
-                 -ifqLen $opt(ifqlen) \
-                 -antType $opt(ant) \
-                 -propType $opt(prop) \
-                 -phyType $opt(netif) \
-                 -channelType $opt(chan) \
-                 -topoInstance $wtopo \
-                 -diffusionFilter $opt(filters) \
-                 -agentTrace ON \
-                 -routerTrace ON \
-                 -macTrace ON
-               #  -energyModel "EnergyModel" \
-               #  -initialEnergy $val(initialenergy) \
-               #  -rxPower $val(receivepower) \
-               #  -txPower $val(transmitpower) \
-               #  -idlePower $val(idlepower)
-                                                                                                                                                            
-#
-#  Create the specified number of nodes [$opt(nn)] and "attach" them
-#  to the channel.
-                                                                                                                                                            
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-        set node_($i) [$ns_ node $i]
-        $node_($i) random-motion 0          ;# disable random motion
-    }
-
-#
-#  Create DSR Agent
-#  rt_rq_max_period indicates maximum time between rt reqs
-#  rt_rq_period indicates length of one backoff period
-#  send_timeout indicates how long a packet can live in sendbuf
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-    set dsr($i) [new Agent/DSRAgent]
-    $dsr($i)  node $node_($i)
-    $dsr($i) rt_rq_max_period 100
-    $dsr($i) rt_rq_period 30
-    $dsr($i) send_timeout 300
-}
-
-#
-#  Create the topology
-#
-                                                                                                                                                            
-$node_(0) set Z_ 0.0
-$node_(0) set Y_ 50.0
-$node_(0) set X_ 100.0
-$node_(1) set Z_ 0.0
-$node_(1) set Y_ 250.0
-$node_(1) set X_ 100.0
-$node_(2) set Z_ 0.0
-$node_(2) set Y_ 450.0
-$node_(2) set X_ 100.0
-$node_(3) set Z_ 0.0
-$node_(3) set Y_ 650.0
-$node_(3) set X_ 100.0
-$node_(4) set Z_ 0.0
-$node_(4) set Y_ 850.0
-$node_(4) set X_ 100.0
-$node_(5) set Z_ 0.0
-$node_(5) set Y_ 1050.0
-$node_(5) set X_ 100.0
-$node_(6) set Z_ 0.0
-$node_(6) set Y_ 1250.0
-$node_(6) set X_ 100.0
-$node_(7) set Z_ 0.0
-$node_(7) set Y_ 1450.0
-$node_(7) set X_ 100.0
-$node_(8) set Z_ 0.0
-$node_(8) set Y_ 1650.0
-$node_(8) set X_ 100.0
-$node_(9) set Z_ 0.0
-$node_(9) set Y_ 1850.0
-$node_(9) set X_ 100.0
-                                                                                                                                                            
-#
-# Define traffic model
-#
-puts "Loading connection pattern..."
-                                                                                                                                                            
-set udp_(0) [new Agent/UDP]
-$ns_ attach-agent $node_(0) $udp_(0)
-set null_(0) [new Agent/Null]
-$ns_ attach-agent $node_(9) $null_(0)
-set cbr_(0) [new Application/Traffic/CBR]
-$cbr_(0) set packetSize_ 50
-# Interval is measured in seconds
-$cbr_(0) set interval_ 200
-$cbr_(0) set random_ 1
-$cbr_(0) set maxpkts_ 10000
-$cbr_(0) set fid_ 0
-$cbr_(0) attach-agent $udp_(0)
-$ns_ connect $udp_(0) $null_(0)
-$ns_ at 100.0 "$cbr_(0) start"
-                                                                                                                                                            
-#
-# Tell nodes when the simulation ends
-#
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-                                                                                                                                                            
-$ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"
-}
-
-Test/smac-multihop instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-proc runtest {arg} {
-                                                                                                                                                            
-    set b [llength $arg]
-    if {$b == 1} {
-        set test $arg
-    } else {
-        usage
-    }
-    set test "smac-multihop"
-    set t [new Test/$test]
-    $t run
-}
-                                                                                                                                                            
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-smac.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-smac.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-smac.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-smac.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1634 +0,0 @@
-# Copyright (c) 2000 by the University of Southern California
-# All rights reserved.
-#
-#  This program is free software; you can redistribute it and/or
-#  modify it under the terms of the GNU General Public License,
-#  version 2, as published by the Free Software Foundation.
-#
-#  This program is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#  GNU General Public License for more details.
-#
-#  You should have received a copy of the GNU General Public License along
-#  with this program; if not, write to the Free Software Foundation, Inc.,
-#  59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
-#
-#  The copyright of this module includes the following
-#  linking-with-specific-other-licenses addition:
-#
-#  In addition, as a special exception, the copyright holders of
-#  this module give you permission to combine (via static or
-#  dynamic linking) this module with free software programs or
-#  libraries that are released under the GNU LGPL and with code
-#  included in the standard release of ns-2 under the Apache 2.0
-#  license or under otherwise-compatible licenses with advertising
-#  requirements (or modified versions of such code, with unchanged
-#  license).  You may copy and distribute such a system following the
-#  terms of the GNU GPL for this module and the licenses of the
-#  other code concerned, provided that you include the source code of
-#  that other code when and as the GNU GPL requires distribution of
-#  source code.
-#
-#  Note that people who make modified versions of this module
-#  are not obligated to grant this special exception for their
-#  modified versions; it is their choice whether to do so.  The GNU
-#  General Public License gives permission to release a modified
-#  version without this exception; this exception also makes it
-#  possible to release a modified version which carries forward this
-#  exception.
-
-# To view a list of available tests to run with this script:
-# ns test-suite-smac.tcl
-
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP TCP Diffusion ARP LL Mac  
-# hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-
-Class TestSuite
-
-Class Test/brdcast1 -superclass TestSuite
-# 2 nodes brdcast ping req/replies to one another
-
-Class Test/brdcast1_sync -superclass TestSuite
-
-Class Test/brdcast2 -superclass TestSuite
-# 3 node topology brdcasting ping req/rep that result in collision
-
-Class Test/brdcast2_sync -superclass TestSuite
-
-Class Test/unicast1 -superclass TestSuite
-# 2 node topology unicasting with RTS/CTS/DATA/ACK exchange
-
-Class Test/unicast1_sync -superclass TestSuite
-
-Class Test/unicast2 -superclass TestSuite
-# 3 node topology where node 0 & 1 unicast and node 2 brdcast.
-
-Class Test/unicast2_sync -superclass TestSuite
-
-Class Test/unicast3 -superclass TestSuite
-#3 node topolofy where node 2 is neighbor to the sender node. can hear RTS/DATA, not CTS
-
-Class Test/unicast3_sync -superclass TestSuite
-
-Class Test/unicast4 -superclass TestSuite
-#3 node topology where node 2 is neighbor to the recvr node. can hear CTS only.
-
-Class Test/unicast4_sync -superclass TestSuite
-
-Class Test/unicast5 -superclass TestSuite
-# 4 node topology. 2 sender-recvr pairs (0->1 & 3->2)
-#3 cannot hear 0 & 1. 2 can hear only sender 0.
- 
-Class Test/unicast5_sync -superclass TestSuite
-
-Class Test/unicast6 -superclass TestSuite
-# 4 node topology. 2 sender-recvr pairs (0->1 & 3->2)
-#3 cannot hear 0 & 1. 2 can hear only recvr 1.
-
-Class Test/unicast6_sync -superclass TestSuite
-
-Class Test/unicast7 -superclass TestSuite
-# 4 node topology. 2 sender-recvr pairs (0->1 & 2->3)
-#3 cannot hear 0 & 1. 2 can hear only sender 0.
- 
-Class Test/unicast7_sync -superclass TestSuite
-
-Class Test/unicast8 -superclass TestSuite
-# 4 node topology. 2 sender-recvr pairs (0->1 & 2->3)
-#3 cannot hear 0. 2 can hear only recvr 1.
-
-Class Test/unicast8_sync -superclass TestSuite
-
-Class Test/unicast9 -superclass TestSuite
-# 4 node topology. 2 sender-recvr pairs (0->1 & 2->3)
-#2 & 3 can hear 0 & 1 but cannot recv pkts correctly. a lot of delay
-
-Class Test/unicast9_sync -superclass TestSuite
-
-Class Test/unicast10 -superclass TestSuite
-# 4 node topology. 2 sender-recvr pairs (0->1 & 2->3)
-#2 & 3 cannot hear and recv from 0 & 1. can send simultaneously.
-
-Class Test/unicast10_sync -superclass TestSuite
-
-Class Test/unicast11 -superclass TestSuite
-# 3 node triangle topology.1->2,2->3,3->1.
-
-Class Test/unicast11_sync -superclass TestSuite
-
-Class Test/unicast12 -superclass TestSuite
-# 3 node triangle topology.1->2,2->3,3->1.with error model on every incoming interface
-# that randomly drops pkts
-
-Class Test/unicast12_sync -superclass TestSuite
-
-proc usage {} {
-    global argv0
-    puts stderr "usage: ns $argv0 <tests>"
-    puts "Valid tests: brdcast1"
-}
-
-proc default_options {} {
-    global opt
-    set opt(chan)           Channel/WirelessChannel    ;# channel type
-    set opt(prop)           Propagation/TwoRayGround   ;# radio-propagation model
-    set opt(netif)          Phy/WirelessPhy            ;# network interface type
-    set opt(mac)            Mac/SMAC                   ;# MAC type
-    #set opt(mac)            Mac/802_11                 ;# MAC type
-    set opt(ifq)            Queue/DropTail/PriQueue    ;# interface queue type
-    set opt(ll)             LL                         ;# link layer type
-    set opt(ant)            Antenna/OmniAntenna        ;# antenna model
-    set opt(ifqlen)         50                         ;# max packet in ifq
-    set opt(x)              800
-    set opt(y)              800
-    set opt(rp)             DumbAgent               ;# routing protocol
-    set opt(tr)             temp.rands
-    set opt(stop)           5.0
-    set opt(stop-sync)      100.0        ;# extended run time for sync simulations
-    set opt(seed)           1
-}
-
-TestSuite instproc init {} {
-    global opt node_
-    $self instvar ns_ topo_ tracefd_ testname_
-
-    set name [split $testname_ _]
-    puts "$name"
-    if { [lindex $name 1] == "sync" } {
-	Mac/SMAC set syncFlag_ 1
-    }
-
-    set ns_         [new Simulator]
-    
-    puts "Seeding Random number generator with $opt(seed)\n"
-    ns-random $opt(seed)
-    
-    set tracefd_	[open $opt(tr) w]
-    $ns_ trace-all $tracefd_
-    
-    set topo_	    [new Topography]
-    $topo_ load_flatgrid $opt(x) $opt(y)
-    
-    create-god $opt(nn)
-
-    $ns_ node-config -adhocRouting $opt(rp) \
-                         -macType $opt(mac) \
-                         -llType $opt(ll) \
-			 -ifqType $opt(ifq) \
-			 -ifqLen $opt(ifqlen) \
-			 -antType $opt(ant) \
-			 -propType $opt(prop) \
-			 -phyType $opt(netif) \
-			 -channelType $opt(chan) \
-			 -topoInstance $topo_ \
-			 -agentTrace ON \
-			 -routerTrace ON \
-			 -macTrace ON
-
-    if {$testname_ == "unicast12" } {
-	$ns_ node-config --IncomingErrProc $opt(err)
-    }
-    
-#    if { [lindex $name 1] == "sync" } {
-	#$ns_ node-config -macTrace OFF
-#    }
-    			 
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	set node_($i) [$ns_ node]	
-	$node_($i) random-motion 0		;# disable random motion
-    }
-}
-
-
-TestSuite instproc run {} {
-    global opt node_
-    $self instvar ns_ testname_
-
-    set n [split $testname_ _]
-    if { [lindex $n 1] == "sync" } {
-	set opt(stop) $opt(stop-sync)
-    }
-    puts "$opt(stop)"  
-    #
-    # Tell nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop) "$node_($i) reset";
-    }
-    
-    $ns_ at $opt(stop) "$self finish"
-    $ns_ at $opt(stop) "puts \"NS EXITING...\" ; $ns_ halt"
-
-    puts "Starting Simulation..."
-    $ns_  run
-}
-
-Test/brdcast1 instproc init {} {
-    global opt node_
-    $self instvar ns_ testname_
-    
-    set testname_ brdcast1
-    set opt(nn) 2
-    $self next
-    
-    
-    $node_(0) set X_ 5.0
-    $node_(0) set Y_ 2.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 50.0
-    $node_(1) set Y_ 45.0
-    $node_(1) set Z_ 0.0
-    
-    # all scheduled to brdcast at same time
-    
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    $ns_ at 1.0 "$ping0 start-WL-brdcast"
-    
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    $ns_ at 1.0 "$ping1 start-WL-brdcast"
-    
-}
-
-Test/brdcast1 instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-    
-
-Test/brdcast1_sync instproc init {} {
-    global opt node_
-    $self instvar testname_ ns_
-    
-    set testname_ brdcast1_sync
-    set opt(nn) 2
-    $self next
-    
-    $node_(0) set X_ 5.0
-    $node_(0) set Y_ 2.0
-    $node_(0) set Z_ 0.0
-    
-    
-    $node_(1) set X_ 50.0
-    $node_(1) set Y_ 45.0
-    $node_(1) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    $ns_ at 40.0 "$ping0 start-WL-brdcast"
-    
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    $ns_ at 40.0 "$ping1 start-WL-brdcast"
-
-}
-
-Test/brdcast1_sync instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-Test/brdcast2 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ brdcast2
-    set opt(nn)  3
-    $self next
-    
-    $node_(0) set X_ 5.0
-    $node_(0) set Y_ 2.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 50.0
-    $node_(1) set Y_ 45.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(2) set X_ 150.0
-    $node_(2) set Y_ 150.0
-    $node_(2) set Z_ 0.0
-    
-    # all scheduled to brdcast at same time
-    
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    $ns_ at 1.0 "$ping0 start-WL-brdcast"
-    
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    $ns_ at 1.0 "$ping1 start-WL-brdcast"
-
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    $ns_ at 1.0 "$ping2 start-WL-brdcast"
-}
-
-Test/brdcast2 instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-Test/brdcast2_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ testname_
-    
-    set testname_ brdcast2_sync
-    set opt(nn)  3
-    $self next
-    
-    $node_(0) set X_ 5.0
-    $node_(0) set Y_ 2.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 50.0
-    $node_(1) set Y_ 45.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(2) set X_ 150.0
-    $node_(2) set Y_ 150.0
-    $node_(2) set Z_ 0.0
-    
-    # all scheduled to brdcast at same time
-    
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    $ns_ at 40.0 "$ping0 start-WL-brdcast"
-    
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    $ns_ at 41.0 "$ping1 start-WL-brdcast"
-
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    $ns_ at 42.0 "$ping2 start-WL-brdcast"
-}
-
-Test/brdcast2_sync instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-
-Test/unicast1 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast1
-    set opt(nn) 2
-    $self next
-
-    $node_(0) set X_ 5.0
-    $node_(0) set Y_ 2.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 50.0
-    $node_(1) set Y_ 45.0
-    $node_(1) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-
-    $ns_ at 1.0 "$ping0 send"
-
-}
-
-
-Test/unicast1 instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-Test/unicast1_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast1_sync
-    set opt(nn) 2
-    $self next
-
-    $node_(0) set X_ 5.0
-    $node_(0) set Y_ 2.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 50.0
-    $node_(1) set Y_ 45.0
-    $node_(1) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-
-    $ns_ at 40.0 "$ping0 send"
-
-}
-
-
-Test/unicast1_sync instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-
-
-Test/unicast2 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast2
-    set opt(nn) 3
-    $self next
-
-    $node_(0) set X_ 300.0
-    $node_(0) set Y_ 350.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 450.0
-    $node_(1) set Y_ 350.0
-    $node_(1) set Z_ 0.0
-    
-    # 2 can hear and recv from nodes 0 & 1 (sender and recvr)
-    $node_(2) set X_ 400.0
-    $node_(2) set Y_ 125.0
-    $node_(2) set Z_ 0.0
-    
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    
-    # start times for connections
-    $ns_ at 0.1 "$ping0 send"
-
-    # ping2 sends brdcast overlapping with ping0
-    $ns_ at 0.2 "$ping2 start-WL-brdcast"
-
-}
-
-Test/unicast2 instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-Test/unicast2_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast2_sync
-    set opt(nn) 3
-    $self next
-
-    $node_(0) set X_ 300.0
-    $node_(0) set Y_ 350.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 450.0
-    $node_(1) set Y_ 350.0
-    $node_(1) set Z_ 0.0
-    
-    # 2 can hear and recv from nodes 0 & 1 (sender and recvr)
-    $node_(2) set X_ 400.0
-    $node_(2) set Y_ 125.0
-    $node_(2) set Z_ 0.0
-    
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    
-    # start times for connections
-    $ns_ at 40.1 "$ping0 send"
-
-    # ping2 sends brdcast overlapping with ping0
-    $ns_ at 40.2 "$ping2 start-WL-brdcast"
-
-}
-
-Test/unicast2_sync instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-
-Test/unicast3 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast3
-    set opt(nn) 3
-    $self next
-    
-    $node_(0) set X_ 300.0
-    $node_(0) set Y_ 300.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 150.0
-    $node_(1) set Y_ 150.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(2) set X_ 470.0
-    $node_(2) set Y_ 470.0
-    $node_(2) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-
-    # start times for connections
-    $ns_ at 0.1 "$ping0 send"
-    $ns_ at 0.2 "$ping2 start-WL-brdcast"
-    
-}
-
-Test/unicast3 instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-
-Test/unicast3_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast3_sync
-    set opt(nn) 3
-    $self next
-    
-    $node_(0) set X_ 300.0
-    $node_(0) set Y_ 300.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 150.0
-    $node_(1) set Y_ 150.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(2) set X_ 470.0
-    $node_(2) set Y_ 470.0
-    $node_(2) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-
-    # start times for connections
-    $ns_ at 40.1 "$ping0 send"
-    $ns_ at 45.2 "$ping2 start-WL-brdcast"
-    
-}
-
-Test/unicast3_sync instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-
-Test/unicast4 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast4
-    set opt(nn) 3
-    $self next
-    
-    # can hear recvr, CTS only.
-    $node_(1) set X_ 300.0
-    $node_(1) set Y_ 300.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(0) set X_ 150.0
-    $node_(0) set Y_ 150.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(2) set X_ 470.0
-    $node_(2) set Y_ 470.0
-    $node_(2) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-
-    # start times for connections
-    $ns_ at 0.1 "$ping0 send"
-    $ns_ at 0.2 "$ping2 start-WL-brdcast"
-    
-}
-
-Test/unicast4 instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-Test/unicast4_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast4_sync
-    set opt(nn) 3
-    $self next
-    
-    # can hear recvr, CTS only.
-    $node_(1) set X_ 300.0
-    $node_(1) set Y_ 300.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(0) set X_ 150.0
-    $node_(0) set Y_ 150.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(2) set X_ 470.0
-    $node_(2) set Y_ 470.0
-    $node_(2) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-
-    # start times for connections
-    $ns_ at 40.1 "$ping0 send"
-    $ns_ at 40.2 "$ping2 start-WL-brdcast"
-    
-}
-
-Test/unicast4_sync instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-
-Test/unicast5 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast5
-    set opt(nn) 4
-    $self next
-
-    $node_(0) set X_ 300.0
-    $node_(0) set Y_ 300.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 150.0
-    $node_(1) set Y_ 150.0
-    $node_(1) set Z_ 0.0
-    
-    # node 2 can hear 0 & 3
-    $node_(2) set X_ 450.0
-    $node_(2) set Y_ 450.0
-    $node_(2) set Z_ 0.0
-
-    # node 3 hears only 2
-    $node_(3) set X_ 600.0
-    $node_(3) set Y_ 600.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 0.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 0.1 "$ping3 send"
-    
-}
-
-Test/unicast5 instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-Test/unicast5_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast5_sync
-    set opt(nn) 4
-    $self next
-
-    $node_(0) set X_ 300.0
-    $node_(0) set Y_ 300.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 150.0
-    $node_(1) set Y_ 150.0
-    $node_(1) set Z_ 0.0
-    
-    # node 2 can hear 0 & 3
-    $node_(2) set X_ 450.0
-    $node_(2) set Y_ 450.0
-    $node_(2) set Z_ 0.0
-
-    # node 3 hears only 2
-    $node_(3) set X_ 600.0
-    $node_(3) set Y_ 600.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 40.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 40.1 "$ping3 send"
-    
-}
-
-Test/unicast5_sync instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-
-Test/unicast6 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast6
-    set opt(nn) 4
-    $self next
-
-    $node_(1) set X_ 300.0
-    $node_(1) set Y_ 300.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(0) set X_ 150.0
-    $node_(0) set Y_ 150.0
-    $node_(0) set Z_ 0.0
-    
-    # node 2 can hear 1 & 3
-    $node_(2) set X_ 450.0
-    $node_(2) set Y_ 450.0
-    $node_(2) set Z_ 0.0
-
-    # node 3 hears only 2
-    $node_(3) set X_ 600.0
-    $node_(3) set Y_ 600.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 0.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 0.1 "$ping3 send"
-    
-}
-
-Test/unicast6 instproc run {} {
-    $self instvar ns_
-    $self next
-}
-
-Test/unicast6_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast6_sync
-    set opt(nn) 4
-    $self next
-
-    $node_(1) set X_ 300.0
-    $node_(1) set Y_ 300.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(0) set X_ 150.0
-    $node_(0) set Y_ 150.0
-    $node_(0) set Z_ 0.0
-    
-    # node 2 can hear 1 & 3
-    $node_(2) set X_ 450.0
-    $node_(2) set Y_ 450.0
-    $node_(2) set Z_ 0.0
-
-    # node 3 hears only 2
-    $node_(3) set X_ 600.0
-    $node_(3) set Y_ 600.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 40.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    # node 2 and 3 have perfectly sync'ed cycles
-    # due to collision discovers each other after about 60s.
-    $ns_ at 60.1 "$ping3 send"
-    
-}
-
-Test/unicast6_sync instproc run {} {
-    $self next
-}
-
-
-Test/unicast7 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast7
-    set opt(nn) 4
-    $self next
-
-    $node_(1) set X_ 300.0
-    $node_(1) set Y_ 300.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(0) set X_ 150.0
-    $node_(0) set Y_ 150.0
-    $node_(0) set Z_ 0.0
-    
-    # node 2 can hear 1 & 3
-    $node_(2) set X_ 450.0
-    $node_(2) set Y_ 450.0
-    $node_(2) set Z_ 0.0
-
-    # node 3 hears only 2
-    $node_(3) set X_ 600.0
-    $node_(3) set Y_ 600.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 0.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 0.1 "$ping2 send"
-    
-}
-
-Test/unicast7 instproc run {} {
-    $self next
-}
-
-Test/unicast7_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast7_sync
-    set opt(nn) 4
-    $self next
-
-    $node_(1) set X_ 300.0
-    $node_(1) set Y_ 300.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(0) set X_ 150.0
-    $node_(0) set Y_ 150.0
-    $node_(0) set Z_ 0.0
-    
-    # node 2 can hear 1 & 3
-    $node_(2) set X_ 450.0
-    $node_(2) set Y_ 450.0
-    $node_(2) set Z_ 0.0
-
-    # node 3 hears only 2
-    $node_(3) set X_ 600.0
-    $node_(3) set Y_ 600.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 40.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 60.1 "$ping2 send"
-    
-}
-
-Test/unicast7_sync instproc run {} {
-    $self next
-}
-
-
-Test/unicast8 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast8
-    set opt(nn) 4
-    $self next
-
-    $node_(1) set X_ 300.0
-    $node_(1) set Y_ 300.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(0) set X_ 150.0
-    $node_(0) set Y_ 150.0
-    $node_(0) set Z_ 0.0
-    
-    # node 2 can hear 1 & 3
-    $node_(2) set X_ 450.0
-    $node_(2) set Y_ 450.0
-    $node_(2) set Z_ 0.0
-
-    # node 3 hears only 2
-    $node_(3) set X_ 600.0
-    $node_(3) set Y_ 600.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 0.1 "$ping1 send"
-
-    #sender cannot hear other tx
-    $ns_ at 0.1 "$ping2 send"
-    
-}
-
-Test/unicast8 instproc run {} {
-    $self next
-}
-
-Test/unicast8_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast8_sync
-    set opt(nn) 4
-    $self next
-
-    $node_(1) set X_ 300.0
-    $node_(1) set Y_ 300.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(0) set X_ 150.0
-    $node_(0) set Y_ 150.0
-    $node_(0) set Z_ 0.0
-    
-    # node 2 can hear 1 & 3
-    $node_(2) set X_ 450.0
-    $node_(2) set Y_ 450.0
-    $node_(2) set Z_ 0.0
-
-    # node 3 hears only 2
-    $node_(3) set X_ 600.0
-    $node_(3) set Y_ 600.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 40.1 "$ping1 send"
-
-    #sender cannot hear other tx
-    $ns_ at 60.1 "$ping2 send"
-    
-}
-
-Test/unicast8_sync instproc run {} {
-    $self next
-}
-
-Test/unicast9 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast9
-    set opt(nn) 4
-    $self next
-
-    $node_(0) set X_ 300.0
-    $node_(0) set Y_ 300.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 150.0
-    $node_(1) set Y_ 150.0
-    $node_(1) set Z_ 0.0
-    
-    # node 2 & 3 cannot  hear 0 & 1
-    $node_(2) set X_ 500.0
-    $node_(2) set Y_ 550.0
-    $node_(2) set Z_ 0.0
-
-    $node_(3) set X_ 650.0
-    $node_(3) set Y_ 680.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 0.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 0.1 "$ping3 send"
-    
-}
-
-Test/unicast9 instproc run {} {
-    $self next
-}
-
-
-Test/unicast9_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast9_sync
-    set opt(nn) 4
-    $self next
-
-    $node_(0) set X_ 300.0
-    $node_(0) set Y_ 300.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 150.0
-    $node_(1) set Y_ 150.0
-    $node_(1) set Z_ 0.0
-    
-    # node 2 & 3 cannot  hear 0 & 1
-    $node_(2) set X_ 500.0
-    $node_(2) set Y_ 550.0
-    $node_(2) set Z_ 0.0
-
-    $node_(3) set X_ 650.0
-    $node_(3) set Y_ 680.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 40.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 60.1 "$ping3 send"
-    
-}
-
-Test/unicast9_sync instproc run {} {
-    $self next
-}
-
-Test/unicast10 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast10
-    set opt(nn) 4
-    $self next
-
-    $node_(0) set X_ 100.0
-    $node_(0) set Y_ 100.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 50.0
-    $node_(1) set Y_ 50.0
-    $node_(1) set Z_ 0.0
-    
-    # node 2 & 3 cannot  hear 0 & 1
-    $node_(2) set X_ 500.0
-    $node_(2) set Y_ 550.0
-    $node_(2) set Z_ 0.0
-
-    $node_(3) set X_ 650.0
-    $node_(3) set Y_ 680.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 0.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 0.1 "$ping3 send"
-    
-}
-
-Test/unicast10 instproc run {} {
-    $self next
-}
-
-Test/unicast10_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast10_sync
-    set opt(nn) 4
-    $self next
-
-    $node_(0) set X_ 100.0
-    $node_(0) set Y_ 100.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 50.0
-    $node_(1) set Y_ 50.0
-    $node_(1) set Z_ 0.0
-    
-    # node 2 & 3 cannot  hear 0 & 1
-    $node_(2) set X_ 500.0
-    $node_(2) set Y_ 550.0
-    $node_(2) set Z_ 0.0
-
-    $node_(3) set X_ 650.0
-    $node_(3) set Y_ 680.0
-    $node_(3) set Z_ 0.0
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(3) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-    
-    # start times for both connections
-    $ns_ at 40.1 "$ping0 send"
-
-    #sender cannot hear other tx
-    $ns_ at 40.1 "$ping3 send"
-    
-}
-
-Test/unicast10_sync instproc run {} {
-    $self next
-}
-
-
-Test/unicast11 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast11
-    set opt(nn) 3
-    $self next
-
-    $node_(0) set X_ 100.0
-    $node_(0) set Y_ 100.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 200.0
-    $node_(1) set Y_ 200.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(2) set X_ 300.0
-    $node_(2) set Y_ 100.0
-    $node_(2) set Z_ 0.0
-
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-
-    set ping4 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping4
-    set ping5 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping5
-    # connect two agents
-    $ns_ connect $ping4 $ping5
-    
-    # start times for connections
-    $ns_ at 0.1 "$ping0 send"
-    $ns_ at 0.1 "$ping2 send"
-    $ns_ at 0.1 "$ping4 send"
-    
-}
-
-Test/unicast11 instproc run {} {
-    $self next
-}
-
-Test/unicast11_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast11_sync
-    set opt(nn) 3
-    $self next
-
-    $node_(0) set X_ 100.0
-    $node_(0) set Y_ 100.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 200.0
-    $node_(1) set Y_ 200.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(2) set X_ 300.0
-    $node_(2) set Y_ 100.0
-    $node_(2) set Z_ 0.0
-
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-
-    set ping4 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping4
-    set ping5 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping5
-    # connect two agents
-    $ns_ connect $ping4 $ping5
-    
-    # start times for connections
-    $ns_ at 40.1 "$ping0 send"
-    $ns_ at 40.1 "$ping2 send"
-    $ns_ at 40.1 "$ping4 send"
-    
-}
-
-Test/unicast11_sync instproc run {} {
-    $self next
-}
-
-
-Test/unicast12 instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast12
-    set opt(nn) 3
-    set opt(err)            UniformErrorProc
-    set opt(FECstrength)    1
-
-    ErrorModel set rate_ 0.1
-    ErrorModel set bandwidth_ 1Kb
-    
-    $self next
-
-    $node_(0) set X_ 100.0
-    $node_(0) set Y_ 100.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 200.0
-    $node_(1) set Y_ 200.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(2) set X_ 300.0
-    $node_(2) set Y_ 100.0
-    $node_(2) set Z_ 0.0
-
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-
-    set ping4 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping4
-    set ping5 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping5
-    # connect two agents
-    $ns_ connect $ping4 $ping5
-    
-    # start times for connections
-    $ns_ at 0.1 "$ping0 send"
-    $ns_ at 0.1 "$ping2 send"
-    $ns_ at 0.1 "$ping4 send"
-    
-}
-
-Test/unicast12 instproc run {} {
-    $self next
-}
-
-Test/unicast12_sync instproc init {} {
-    global opt node_
-    $self instvar ns_ net_ testname_ topo_ tracefd_
-    
-    set testname_ unicast12_sync
-    set opt(nn) 3
-    set opt(err)            UniformErrorProc
-    set opt(FECstrength)    1
-
-    ErrorModel set rate_ 0.1
-    ErrorModel set bandwidth_ 1Kb
-    
-    $self next
-
-    $node_(0) set X_ 100.0
-    $node_(0) set Y_ 100.0
-    $node_(0) set Z_ 0.0
-    
-    $node_(1) set X_ 200.0
-    $node_(1) set Y_ 200.0
-    $node_(1) set Z_ 0.0
-    
-    $node_(2) set X_ 300.0
-    $node_(2) set Y_ 100.0
-    $node_(2) set Z_ 0.0
-
-
-    set ping0 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping0
-    set ping1 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping1
-    # connect two agents
-    $ns_ connect $ping0 $ping1
-    
-    
-    set ping2 [new Agent/Ping]
-    $ns_ attach-agent $node_(1) $ping2
-    set ping3 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping3
-    # connect two agents
-    $ns_ connect $ping2 $ping3
-
-    set ping4 [new Agent/Ping]
-    $ns_ attach-agent $node_(2) $ping4
-    set ping5 [new Agent/Ping]
-    $ns_ attach-agent $node_(0) $ping5
-    # connect two agents
-    $ns_ connect $ping4 $ping5
-    
-    # start times for connections
-    $ns_ at 40.1 "$ping0 send"
-    $ns_ at 40.1 "$ping2 send"
-    $ns_ at 40.1 "$ping4 send"
-    
-}
-
-Test/unicast12_sync instproc run {} {
-    $self next
-}
-
-
-#Define a 'recv' function for the class 'Agent/Ping'
-Agent/Ping instproc recv {from rtt} {
-    $self instvar node_
-    puts "node [$node_ id] received ping answer from \
-              $from with round-trip-time $rtt ms."
-}
-
-
-TestSuite instproc finish {} {
-    $self instvar ns_ tracefd_
-    $ns_ flush-trace 
-    close $tracefd_
-}
-
-
-proc runtest {arg} {
-    global quiet
-    set quiet 0
-    
-    set b [llength $arg]
-    if {$b == 1} {
-	set test $arg
-    } elseif {$b == 2} {
-	set test [lindex $arg 0]
-	if {[lindex $arg 1] == "QUIET"} {
-	    set quiet 1
-	}
-    } else {
-	usage
-    }
-    set t [new Test/$test]
-    $t run
-}
-
-global argv arg0
-default_options
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-smac.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-smac.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-smac.txt	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-smac.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,41 +0,0 @@
-brdcast1
-A simple 2 node topology in which each node broadcasts a ping request and reply to each other.
-2 nodes start sending at the same time. no collision.
-
-brdcast2
-3 node topology. Nodes brdcast ping requests at the same time. packets 6 and 8 have a collision and are dropped. They are not retx'ed as these are brdcast pkts.
-
-unicast1
-simple 2 node topology. node 0 unicasts node 1.
-
-unicast2
-3 nodes all can hear one another.node 2 send brdcast ping requests overlapping with unicast pkts 
-
-unicast3
-3 nodes. node 2 can hear the sender(0) only, not receiver(1). node 0 and 1 exchange unicast pkts. node 2 send brdcasts. node 1 receives a corrupt pkt from 2 and being in CS, goes to sleep, so doesn't recv brdcast reply [2] from 0. Later node 1 wakes up to send unicast reply to node 0.
-
-unicast4
-3 nodes. 0->1 and node 2 sends brdcast. 2 is neighbor to recvr 1. can hear CTS only.
-
-unicast5
-4 nodes. 0->1 and 3->2. 3 can hear 0 but not recv from it.2 can hear and recv from 0.
-node 3 received ping answer from  2 with round-trip-time 619.0 ms.
-node 0 received ping answer from  1 with round-trip-time 1116.8 ms.
-
-unicast6
-4 nodes. 0->1 and 3->2. 3 cannot hear from 0. 2 can recv from only receiver 1. hence the 2 senders start sending at the same time which results in collision at recvr node 1. once the brdcast arp request is lost, it is never sent out again, which results in the ping request never leaving node 0. 2 & 3 exchange usual ping req/reply.
-node 3 received ping answer from 2 with round-trip-time 599.6 ms.
-
-unicast7
-same scenario as 6. 0->1 and 2->3. same collision happens at node 1. arp is not brdcasted again. hence node 0 never gets to send out ping req to 1.
-
-unicast8
-same as 6. 1->0 and 2->3. now the sender can hear one another and so avoids collision.
-
-unicast9
-node 0 and 3 canoot hear each other. 1 and 2 can hear everybody but only recv from 0 &2 and 3 & 1 resp.
-
-unicast10
-0->1 and 3->2 but neither pair can hear oneanothr hence has simultaneous exchanges. least time taken.
-node 0 received ping answer from  1 with round-trip-time 504.6 ms.
-node 3 received ping answer from  2 with round-trip-time 524.6 ms.
\ No newline at end of file
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-snoop.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-snoop.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-snoop.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-snoop.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,171 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-#
-# Copyright (c) 2001 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-snoop.tcl,v 1.8 2006/01/24 23:00:07 sallyfloyd Exp $
-
-# This test suite is for validating the snoop protocol
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP Snoop Arp LL Mac ; # hdrs reqd for validation
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-
-# global options
-set opt(tr)	temp.rands
-set opt(seed)	0
-set opt(qsize)	100
-set opt(ll)	LL
-set opt(ifq)	Queue/DropTail
-set opt(mac)	Mac/802_3
-set opt(loss)	20
-
-Class TestSuite
-proc usage {} {
-        global argv0
-        puts stderr "usage: ns $argv0 <test> "
-        puts "Valid Tests: simple"
-        exit 1
-}
-
-proc runtest {arg} {
-        global quiet
-        set quiet 0
- 
-        set b [llength $arg]
-        if {$b == 1} {
-                set test $arg
-        } elseif {$b == 2} {
-                set test [lindex $arg 0]
-                if {[lindex $arg 1] == "QUIET"} {
-                        set quiet 1
-                }
-        } else {
-                usage
-        }
-        set t [new Test/$test]
-        $t run
-}
-
-
-TestSuite instproc init {} {
-  global opt tracefd
-  $self instvar ns_
-  set ns_ [new Simulator]
-  set tracefd [open $opt(tr) w]
-  $ns_ trace-all $tracefd
-}
-
-TestSuite instproc finish {} {
-  $self instvar ns_ testName_
-  global quiet
-
-  $ns_ flush-trace
-
-  puts "finishing.."
-  exit 0
- }
-
-
-# simple test
-#
-# Network topology:
-#
-#  A----B
-#      _|_(lan)  
-#       |
-#       C----D
-#
-# A sends data to destination D
-#
-# B is snoop agent.  The link between C and D is lossy.
-#
-# Why the extra node C between B and D?  Because it's easier to model
-# error on a point-to-point link than on a LAN in the current implementation.
-
-
-Class Test/simple -superclass TestSuite
-
-Test/simple instproc init {} {
-  global opt
-  $self instvar ns_ testName_
-  set testName_ simple
-
-  $self next
-
-  
-  set A [$ns_ node]
-  set B [$ns_ node]
-  set C [$ns_ node]
-  set D [$ns_ node]
-
-  $ns_ duplex-link $A $B 10Mb 5ms DropTail
-  $ns_ duplex-link $C $D 10Mb 5ms DropTail
-
-  set lan [$ns_ make-lan [list $C] 11Mb 2ms LL $opt(ifq) $opt(mac)]
-  $lan addNode [list $B] 11Mb 2ms LL/LLSnoop $opt(ifq) $opt(mac)
-
-
-  # make the link between C and D drop $opt(loss) percent of the packets
-  set err [new ErrorModel]
-  $err drop-target [new Agent/Null] 
-  set rand [new RandomVariable/Uniform]
-  $rand set min_ 0
-  $rand set max_ 100
-  $err ranvar $rand
-  $err set rate_ $opt(loss)
-  [$ns_ link $C $D] errormodule $err
-
-  # set up TCP flow from A to D
-  set tcp [new Agent/TCP]
-  set sink [new Agent/TCPSink]
-  $ns_ attach-agent $A $tcp
-  $ns_ attach-agent $D $sink
-  $ns_ connect $tcp $sink
-  set ftp [new Application/FTP]
-  $ftp attach-agent $tcp
-
-
-  # set times to start/stop actions
-
-  $ns_ at 0.1 "$ftp start"
-  $ns_ at 1.9 "$ftp stop"
-  $ns_ at 2.0 "$self finish"
-}
-
-Test/simple instproc run {} {
-  $self instvar ns_
-  puts "Starting Simulation..."
-  $ns_ run
-}
-
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-source-routing.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-source-routing.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-source-routing.tcl	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-source-routing.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,146 +0,0 @@
-#
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-# Contributed by Rishi Bhargava <rishi_bhargava@yahoo.com> May, 2001.
-# 
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-source-routing.tcl,v 1.7 2006/01/24 23:00:07 sallyfloyd Exp $
-#
-
-#
-# invoked as ns $file $t [QUIET]
-# expected to pop up xgraph output (unless QUIET)
-# and to leave the plot in temp.rands
-#
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP SR Src_rt ; # hdrs reqd for validation
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-
-Class TestSuite
-
-Class Test/source_rtg -superclass TestSuite
-
-Test/source_rtg instproc usage {} {
-	puts stderr {usage: ns test-suite-source-routing.tcl test [QUIET] Test suites for source routing.
-}
-	exit 1
-}
-
-Test/source_rtg instproc init {} {
-$self instvar ns_
-set ns_ [new Simulator]
-$ns_ src_rting 1
-$self setup_topo
-
-}
-
-Test/source_rtg instproc setup_topo {} {
-
-
-global node_
-$self instvar ns_
-
-set f [open "temp.rands" "w"]
-$ns_ trace-all $f
-
-# Create nodes
-set node_(0) [$ns_ node]
-set node_(1) [$ns_ node]
-set node_(2) [$ns_ node]
-set node_(3) [$ns_ node]
-set node_(4) [$ns_ node]
-
-#Create links between the nodes
-$ns_ duplex-link $node_(0) $node_(2) 1Mb 10ms DropTail
-$ns_ duplex-link $node_(1) $node_(2) 1Mb 10ms DropTail
-$ns_ duplex-link $node_(3) $node_(2) 1Mb 10ms DropTail
-$ns_ duplex-link $node_(2) $node_(4) 1Mb 10ms DropTail
-$ns_ duplex-link $node_(4) $node_(3) 1Mb 10ms DropTail
-$ns_ duplex-link $node_(1) $node_(3) 1Mb 10ms DropTail
-
-#Create a TCP agent and attach it to node n0
-set cbr0 [new Agent/TCP]
-$ns_ attach-agent $node_(0) $cbr0
-$cbr0 set fid_ 0
-
-#Create a TCP agent and attach it to node n1
-set cbr1 [new Agent/TCP]
-$ns_ attach-agent $node_(1) $cbr1
-$cbr1 set fid_ 1
-
-$cbr0 target [$node_(0) set src_agent_]
-$cbr1 target [$node_(1) set src_agent_]
-
-# install two connections
-
-set temp [$node_(0) set src_agent_]
-$temp install_connection [$cbr0 set fid_] 0 1 0 2 4 3 1
-set temp [$node_(1) set src_agent_]
-$temp install_connection [$cbr1 set fid_] 1 3 1 2 3 
-
-#Create a Null agent (a traffic sink) and attach it to node n3
-set null0 [new Agent/TCPSink]
-set null1 [new Agent/TCPSink]
-
-$ns_ attach-agent $node_(1) $null0
-$ns_ attach-agent $node_(3) $null1
-
-#Connect the traffic sources with the traffic sink
-
-$ns_ connect $cbr0 $null0  
-$ns_ connect $cbr1 $null1
-
-set ftp1 [$cbr0 attach-source FTP]
-set ftp2 [$cbr1 attach-source FTP]
-
-
-#Schedule events for the TCP agents
- $ns_ at 0.5 "$ftp1 start"
- $ns_ at 0.5 "$ftp2 start"
- $ns_ at 10.0 "$ftp1 stop"
- $ns_ at 10.5 "$ftp2 stop"
-
- $ns_ at 11.0 "exit 0"
-
-}
-
-Test/source_rtg instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-
-proc runtest {arg} {
-	set test "source_rtg"
-	set t [new Test/$test]
-	$t run
-}
-
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-srm.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-srm.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-srm.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-srm.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,350 +0,0 @@
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-
-# This test suite is for validating SRM
-# To run all tests: test-all-srm
-# to run individual test:
-# ns test-suite-srm.tcl srm-chain
-# ns test-suite-srm.tcl srm-star
-# ....
-#
-# To view a list of available test to run with this script:
-# ns test-suite-srm.tcl
-#
-
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP TCP SRM aSRM SRMEXT; 
-# hdrs reqd for validation test
-
-Class TestSuite
-
-Class Test/srm-chain -superclass TestSuite
-# Simple chain topology
-
-Class Test/srm-star -superclass TestSuite
-# Simple star topology
-
-Class Test/srm-adapt-rep -superclass TestSuite
-# simple 8 node star topology, runs for 10s, tests Adaptive repair timers.
-
-Class Test/srm-adapt-req -superclass TestSuite
-# simple 8 node star topology, runs for 10s, tests Adaptive request timers.
-
-#Class Test/srm-chain-session -superclass TestSuite
-# session simulations using srm in chain topo
-
-
-
-proc usage {} {
-    global argv0
-    puts stderr "usage: ns $argv0 <tests> "
-    puts "Valid Tests: srm-chain srm-star adapt-rep-timer adapt-req-timer\
-	    srm-chain-session"
-    exit 1
-}
-
-Class Topology
-
-Topology instproc init {} {
-    $self instvar nmax_ n_
-}
-
-Topology instproc totalnodes? {} {
-    $self instvar nmax_ 
-    return $nmax_
-}
-
-Topology instproc node? num {
-    $self instvar n_
-    return $n_($num)
-}
-
-Topology instproc src? {} {
-    $self instvar src_
-    return $src_
-}
-
-Class Topology/chain5 -superclass Topology
-
-Topology/chain5 instproc init ns {
-    $self instvar nmax_ n_ src_
-    set nmax_ 5
-    for {set i 0} {$i <= $nmax_} {incr i} {
-	set n_($i) [$ns node]
-    }
-    $self next
-    set chainMax [expr $nmax_ - 1]
-    set j 0
-    for {set i 1} {$i <= $chainMax} {incr i} {
-	$ns duplex-link $n_($i) $n_($j) 1.5Mb 10ms DropTail
-	$ns duplex-link-op $n_($j) $n_($i) orient right
-	set j $i
-    }
-    set src_ 0
-    $ns duplex-link $n_([expr $nmax_ - 2]) $n_($nmax_) 1.5Mb 10ms DropTail
-    $ns duplex-link-op $n_([expr $nmax_ - 2]) $n_($nmax_) orient right-up
-    $ns duplex-link-op $n_([expr $nmax_ - 2]) $n_([expr $nmax_-1]) orient right-down
-
-    #$ns queue-limit $n_(0) $n_(1) 2	;# q-limit is 1 more than max #packets in q.
-    #$ns queue-limit $n_(1) $n_(0) 2 
-    
-}
-
-Class Topology/star8 -superclass Topology
-
-Topology/star8 instproc init ns {
-    $self instvar nmax_ n_ src_
-    set nmax_ 8
-    for {set i 0} {$i <= $nmax_} {incr i} {
-	set n_($i) [$ns node]
-    }
-    $self next
-    for {set i 1} {$i <= $nmax_} {incr i} {
-	$ns duplex-link $n_($i) $n_(0) 1.5Mb 10ms DropTail
-    }
-    set src_ 1
-}
-
-TestSuite instproc finish {src} {
-    global opts
-    $self instvar ns_ n_
-    $src stop
-    $ns_ flush-trace
-    if {$opts(quiet) == "false"} {
-    	puts "finishing.."
-    }
-    exit 0
-}
-
-TestSuite instproc set-mcast {src num time} {
-    global opts
-    $self instvar ns_ n_ g_
-    if {$opts(quiet) == "false"} {
-    	puts "seting mcast.."
-    }
-    set mh [$ns_ mrtproto CtrMcast {}]
-    $ns_ at 0.3 "$mh switch-treetype $g_"
-    
-    # now the multicast, and the agents
-    #set srmSimType Deterministic
-    set fid 0
-    for {set i 0} {$i <= $num} {incr i} {
-	set srm($i) [new Agent/SRM/Deterministic]
-	$srm($i) set dst_addr_ $g_
-	$srm($i) set dst_port_ 0
-	$srm($i) set fid_ [incr fid]
-	$ns_ at 1.0 "$srm($i) start"
-	$ns_ attach-agent $n_($i) $srm($i)
-    }
-    # Attach a data source to srm(1)
-    set packetSize 800
-    set s [new Agent/CBR]
-    $s set interval_ 0.04
-    # Agent/CBR is an old form, used in backward compatibility mode only.
-    # set s [new Application/Traffic/CBR]
-    # 6400 bits/packet, 25 packets per second, 160Kbps
-    $s set packetSize_ $packetSize
-    # $s set rate_ 160Kb
-    # $s attach-agent $srm($src)
-    $srm($src) traffic-source $s
-    $srm($src) set packetSize_ $packetSize
-    $s set fid_ 0
-    $ns_ at 3.0 "$srm($src) start-source"
-
-    $ns_ at $time "$self finish $s"
-}
-
-TestSuite instproc set-session {src num time } {
-    $self instvar ns_ n_ g_
-    puts "running session-mcast"
-    set fid 0
-    for {set i 0} {$i <= $num} {incr i} {
-	set srm($i) [new Agent/SRM/Deterministic]
-	$srm($i) set dst_addr_ $g_
-	$srm($i) set fid_ [incr fid]
-	$ns_ at 1.0 "$srm($i) start"
-	$ns_ attach-agent $n_($i) $srm($i)
-	set sessionhelper($i) [$ns_ create-session $n_($i) $srm($i)]
-    }
-    # Attach a data source to srm(0)
-    set packetSize 800
-    set s [new Agent/CBR]
-    $s set interval_ 0.04
-    $s set packetSize_ $packetSize
-    $srm(0) traffic-source $s
-    $srm(0) set packetSize_ $packetSize
-    $s set fid_ 0
-    $ns_ at 3.5 "$srm(0) start-source"
-    
-    set loss_module [new SRMErrorModel]
-    $loss_module drop-packet 2 10 1
-    $loss_module drop-target [$ns_ set nullAgent_]
-    $ns_ at 1.25 "$sessionhelper(0) insert-depended-loss $loss_module $srm(1) $srm(0) $g_"
-    $ns_ at $time "$self finish $s"
-}
-
-TestSuite instproc init {} {
-    $self instvar ns_ n_ g_ testName_ topo_ net_ time_ num_
-    if {$testName_ == "srm-chain-session"} {
-	set ns_ [new SessionSim]
-	$ns_ namtrace-all [open temp.rands w]
-    } else {
-	set ns_ [new Simulator -multicast on]
-	$ns_ trace-all [open temp.rands w]
-	#$ns_ namtrace-all [open out.nam w]
-    }
-    set g_ [Node allocaddr]
-    set topo_ [new Topology/$net_ $ns_]
-    set nmax [$topo_ totalnodes?]
-    for {set i 0} {$i <= $nmax} {incr i} { 
-	set n_($i) [$topo_ node? $i]
-    }
-    set src [$topo_ src?]
-    if {$testName_ == "srm-chain-session"} {
-	$self set-session $src $num_ $time_
-    } else {
-	$self set-mcast $src $num_ $time_
-    }
-}
-
-
-Test/srm-chain instproc init {} {
-    $self instvar ns_ testName_ net_ time_ num_
-    set testName_ srm-chain
-    set net_ chain5
-    set time_ 4.0
-    set num_ 5
-    $self next
-}
-
-Test/srm-chain instproc run {} {
-    $self instvar ns_ n_
-    set loss_module [new SRMErrorModel]
-    $loss_module drop-packet 2 10 1
-    $loss_module drop-target [$ns_ set nullAgent_]
-    $ns_ at 1.25 "$ns_ lossmodel $loss_module $n_(0) $n_(1)"
-    $ns_ run
-
-}
-
-Test/srm-star instproc init {} {
-    $self instvar ns_ testName_ net_ time_ num_
-    set testName_ srm-star
-    set net_ star8
-    set time_ 4.0
-    set num_ 8
-    $self next
-}
-
-Test/srm-star instproc run {} {
-    $self instvar ns_ n_
-    set loss_module [new SRMErrorModel]
-    $loss_module drop-packet 2 10 1
-    $loss_module drop-target [$ns_ set nullAgent_]
-    $ns_ at 1.25 "$ns_ lossmodel $loss_module $n_(1) $n_(0)"
-    $ns_ run
-}
-
-
-
-Test/srm-adapt-rep instproc init {} {
-    $self instvar ns_ testName_ net_ time_ num_
-    set testName_ srm-adapt-rep
-    set net_ star8
-    set time_ 10.0
-    set num_ 8
-    $self next
-}
-
-Test/srm-adapt-rep instproc run {} {
-    $self instvar ns_ n_
-    $n_(0) shape "other"
-    $n_(1) shape "box"
-    $ns_ duplex-link-op $n_(0) $n_(1) queuePos 0
-    set loss_module [new SRMErrorModel]
-    $loss_module drop-packet 2 200 1
-    $loss_module drop-target [$ns_ set nullAgent_]
-    $ns_ lossmodel $loss_module $n_(0) $n_(2)
-    $ns_ run
-}
-
-Test/srm-adapt-req instproc init {} {
-    $self instvar ns_ testName_ net_ time_ num_
-    set testName_ srm-adapt-req
-    set net_ star8
-    set time_ 10.0
-    set num_ 8
-    $self next
-}
-
-Test/srm-adapt-req instproc run {} {
-    $self instvar ns_ n_
-    $n_(0) shape "other"
-    $n_(1) shape "box"
-    $ns_ duplex-link-op $n_(0) $n_(1) queuePos 0
-    set loss_module [new SRMErrorModel]
-    $loss_module drop-packet 2 200 1
-    $loss_module drop-target [$ns_ set nullAgent_]
-    $ns_ lossmodel $loss_module $n_(1) $n_(0)
-    $ns_ run
-}
-
-#Test/srm-chain-session instproc init {} {
-#    $self instvar ns_ testName_ net_ time_ num_
-#    set testName_ srm-chain-session
-#    set net_ chain5
-#    set time_ 4.0
-#    set num_ 5
-#    $self next
-#}
-
-#Test/srm-chain-session instproc run {} {
-#    $self instvar ns_
-#    $ns_ run
-#}
-
-proc runtest {arg} {
-    global opts
-    set opts(quiet) false
-    set b [llength $arg]
-    if {$b == 1} {
-	set test $arg
-    } elseif {$b == 2} {
-	set test [lindex $arg 0]
-	set second [lindex $arg 1]
-	if {$second == "QUIET" || $second == "quiet"} {
-		set opts(quiet) true
-	}
-    } else {
-	usage
-    }
-    if [catch {set t [new Test/$test]} result] {
-	puts stderr $result
-	puts "Error: Unknown test:$test"
-	usage
-	exit 1
-    }
-    $t run
-}
-
-global argv argv0
-runtest $argv
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-srr.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-srr.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-srr.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-srr.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,176 +0,0 @@
-
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-
-Simulator instproc get-link { node1 node2 } {
-    $self instvar link_
-    set id1 [$node1 id]
-    set id2 [$node2 id]
-    return $link_($id1:$id2)
-}
-
-#Simple SRR Test-suite 
-proc set_queue {} {
-	global q 
-	$q maxqueuenumber 256
-	$q mtu 250
-	$q granularity  10000
-#	$q qlimit	30
-#	$q maxqueuelen  20
-
-	$q setqueue 1 0 
-	$q setqueue 2 1 
-	$q setqueue 3 2 
-	$q setqueue 4 3 
-
-	$q setrate 0 80000
-	$q setrate 1 40000
-	$q setrate 2 20000
-	$q setrate 3 10000
-}
-
-# create 4 cbr sources 
-proc create_traffic {} {
-
-	global ns lm0 n0 n1
-	for {set i 0} {$i < 4} { incr i} {
-		global udp$i cbr$i
-	}
-
-	
-	for {set i 0} {$i < 4} { incr i} {
-		set agt [new Agent/UDP]
-		set app [new Application/Traffic/CBR]
-	
-		$agt set fid_ [expr $i + 1 ] 
-		$ns attach-agent $n0 $agt
-		$app attach-agent $agt
-
-		$app set packetSize_ 250
-		$app set rate_ 100kb
-		$app set random_ 0 
-
-		set udp$i $agt
-		set cbr$i $app
-	}
-
-
-	# receiver 0 :
-	set lm0 [new Agent/Null]
-	$ns attach-agent $n1 $lm0
-
-	for {set i 0} {$i < 4} { incr i} {
-		global udp$i
-		set agent [set udp$i]
-		$ns connect $agent $lm0
-	}
-}
-
-
-proc start_sim {} {
-	global ns cbr0 cbr1 cbr2 cbr3
-	
-	$ns at 0.0 "$cbr0 start"
-	$ns at 0.0 "$cbr1 start"
-	$ns at 0.0 "$cbr2 start"
-	$ns at 0.0 "$cbr3 start"
-
-}
-
-proc stop_sim {} {
-	global ns f cbr0 cbr1 cbr2 cbr3
-	$ns at 5.0 "$cbr0 stop"
-	$ns at 5.0 "$cbr1 stop"
-	$ns at 5.0 "$cbr2 stop"
-	$ns at 5.0 "$cbr3 stop"
-
-	$ns at 5.0 "close $f;finish"
-}
-
-
-proc finish {} {
-    puts "processing output ..."
-    exec awk  { 
-	{
-	    n[$8]=$8; \
-	    if ($1=="-") r[$8]++; \
-	    if ($1=="+") s[$8]++; \
-	    if ($1=="d") d[$8]++ \
-	    }
-	END \
-	    { 
-		printf ("Flow#\t#sent\t#recvd\t#drop\t%%recvd\n"); \
-		    for (i in r) \
-		    printf ("%d\t%d\t%d\t%d\t%f\n",n[i],s[i],r[i],d[i],r[i]*1.0/s[i])\
-		}
-    } temp.rands > srr_out.txt
-#    exec cat srr_out.txt &
-    exit 0
-}
-proc test_srr {} {
-	global  ns n0 n1 f l q argv
-
-	set ns [new Simulator]
-	set xx0 [$ns node]
-	set xy0 [$ns node]
-	set n0 [$ns node]
-	set n1 [$ns node]
-	set f [open temp.rands w]
-
-
-	$ns duplex-link $n0 $n1 150kb 1ms SRR
-
-	# trace the bottleneck queue 
-	$ns trace-queue $n0 $n1 $f
-
-
-	#Alternate way for setting parameters for the SRR queue
-	set l [$ns get-link $n0 $n1]
-	set q [$l queue]
-
-	create_traffic
-	set_queue
-	start_sim 
-	stop_sim
-	$ns run
-}
-
-global argv arg0
-
-test_srr 
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tagged-trace.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tagged-trace.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tagged-trace.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tagged-trace.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,310 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-#
-# Copyright (c) 2002 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tagged-trace.tcl,v 1.8 2006/01/30 21:27:52 mweigle Exp $
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-
-# This test suite is for validating the tagged trace format
-
-
-set opt(tr) "temp.rands"
-set opt(chan)         Channel/WirelessChannel  ;# channel type
-set opt(prop)         Propagation/TwoRayGround ;# radio-propagation model
-set opt(ant)          Antenna/OmniAntenna      ;# Antenna type
-set opt(ll)           LL                       ;# Link layer type
-set opt(ifq)          Queue/DropTail/PriQueue  ;# Interface queue type
-set opt(ifqlen)       50                       ;# max packet in ifq
-set opt(netif)        Phy/WirelessPhy          ;# network interface type
-set opt(mac)          Mac/802_11               ;# MAC type
-set opt(rp)           DSDV                     ;# ad-hoc routing protocol 
-
-Class TestSuite
-proc usage {} {
-        global argv0
-        puts stderr "usage: ns $argv0 <test> "
-        puts "Valid Tests: simple wireless Format-simple"
-        exit 1
-}
-
-proc runtest {arg} {
-        global quiet
-        set quiet 0
- 
-        set b [llength $arg]
-        if {$b == 1} {
-                set test $arg
-        } elseif {$b == 2} {
-                set test [lindex $arg 0]
-                if {[lindex $arg 1] == "QUIET"} {
-                        set quiet 1
-                }
-        } else {
-                usage
-        }
-        set t [new Test/$test]
-        $t run
-}
-
-
-TestSuite instproc init {} {
-  global opt tracefd
-  $self instvar ns_
-  set ns_ [new Simulator]
-  $ns_ use-taggedtrace
-  set tracefd [open $opt(tr) w]
-  $ns_ trace-all $tracefd
-}
-
-TestSuite instproc finish {} {
-  $self instvar ns_ testName_
-  global quiet
-
-  $ns_ flush-trace
-  $ns_ halt
- }
-
-
-# simple test
-#
-# Network topology:
-#
-#  A            E
-#   \          /
-#    ---C--D---
-#   /          \
-#  B            F
-#
-# A->E ftp
-# B->F cbr
-#
-# C<->D link is lossy
-
-
-Class Test/simple -superclass TestSuite
-
-Test/simple instproc init {} {
-  $self instvar ns_ testName_
-  set testName_ simple
-
-  $self next
-
-  
-  set A [$ns_ node]
-  set B [$ns_ node]
-  set C [$ns_ node]
-  set D [$ns_ node]
-  set E [$ns_ node]
-  set F [$ns_ node]
-
-  $ns_ duplex-link $A $C 10Mb 5ms DropTail
-  $ns_ duplex-link $B $C 10Mb 5ms DropTail
-
-  $ns_ duplex-link $C $D 2Mb 20ms DropTail
-
-  $ns_ duplex-link $D $E 10Mb 5ms DropTail
-  $ns_ duplex-link $D $F 10Mb 5ms DropTail
-
-
-
-  # make the link between C and D drop 1% percent of the packets
-  set err [new ErrorModel]
-  $err drop-target [new Agent/Null] 
-  set rand [new RandomVariable/Uniform]
-  $rand set min_ 0
-  $rand set max_ 100
-  $err ranvar $rand
-  $err set rate_ 0.01
-  [$ns_ link $C $D] errormodule $err
-
-  # set up TCP flow from A to E
-  set tcp [new Agent/TCP]
-  set sink [new Agent/TCPSink]
-  $ns_ attach-agent $A $tcp
-  $ns_ attach-agent $E $sink
-  $ns_ connect $tcp $sink
-  set ftp [new Application/FTP]
-  $ftp attach-agent $tcp
-
-  # set up CBR flow from B to F
-  set udp [new Agent/UDP]
-  set null [new Agent/Null]
-  $ns_ attach-agent $B $udp
-  $ns_ attach-agent $F $null
-  $ns_ connect $udp $null
-  set cbr [new Application/Traffic/CBR]
-  $cbr set packetSize_ 500
-  $cbr set interval_ 0.005
-  $cbr attach-agent $udp
-
-  # set times to start/stop actions
-
-  $ns_ at 0.1 "$ftp start"
-  $ns_ at 0.2 "$cbr start"
-  $ns_ at 0.8 "$cbr stop"
-  $ns_ at 1.2 "$cbr start"
-  $ns_ at 1.8 "$cbr stop"
-  $ns_ at 1.9 "$ftp stop"
-  $ns_ at 2.0 "$self finish"
-}
-
-Test/simple instproc run {} {
-  $self instvar ns_
-  puts "Starting Simulation..."
-  $ns_ run
-}
-
-
-
-
-# wireless test
-#
-# A->B ftp
-# C->D cbr
-
-
-Class Test/wireless -superclass TestSuite
-
-Test/wireless instproc init {} {
-  global opt
-  $self instvar ns_ testName_
-  set testName_ simple
-
-  $self next
-
-  set topo [new Topography]
-  $topo load_flatgrid 100 100
-  create-god 4
-  $ns_ node-config -adhocRouting $opt(rp) \
-                   -llType $opt(ll) \
-                   -macType $opt(mac) \
-                   -ifqType $opt(ifq) \
-                   -ifqLen $opt(ifqlen) \
-                   -antType $opt(ant) \
-                   -propType $opt(prop) \
-                   -phyType $opt(netif) \
-                   -topoInstance $topo \
-                   -channel [new $opt(chan)] \
-                    -agentTrace ON \
-                    -routerTrace ON \
-                    -macTrace ON \
-                    -movementTrace OFF
-
-  set A [$ns_ node]
-  $A random-motion 0
-  $A set X_ 5.0
-  $A set Y_ 2.0
-  $A set Z_ 0.0
-  set B [$ns_ node]
-  $B random-motion 0
-  $B set X_ 15.0
-  $B set Y_ 15.0
-  $B set Z_ 0.0
-  set C [$ns_ node]
-  $C random-motion 0
-  $C set X_ 2.0
-  $C set Y_ 8.0
-  $C set Z_ 0.0
-  set D [$ns_ node]
-  $D random-motion 0
-  $D set X_ 10.0
-  $D set Y_ 1.0
-  $D set Z_ 0.0
-
-
-  # set up TCP flow from A to B
-  set tcp [new Agent/TCP]
-  set sink [new Agent/TCPSink]
-  $ns_ attach-agent $A $tcp
-  $ns_ attach-agent $B $sink
-  $ns_ connect $tcp $sink
-  set ftp [new Application/FTP]
-  $ftp attach-agent $tcp
-
-  # set up CBR flow from C to D
-  set udp [new Agent/UDP]
-  set null [new Agent/Null]
-  $ns_ attach-agent $C $udp
-  $ns_ attach-agent $D $null
-  $ns_ connect $udp $null
-  set cbr [new Application/Traffic/CBR]
-  $cbr set packetSize_ 500
-  $cbr set interval_ 0.005
-  $cbr attach-agent $udp
-
-  # set times to start/stop actions
-
-  $ns_ at 0.1 "$ftp start"
-  $ns_ at 0.2 "$cbr start"
-  $ns_ at 0.8 "$cbr stop"
-  $ns_ at 1.2 "$cbr start"
-  $ns_ at 1.8 "$cbr stop"
-  $ns_ at 1.9 "$ftp stop"
-  $ns_ at 2.0 "$self finish"
-}
-
-Test/wireless instproc run {} {
-  $self instvar ns_
-  puts "Starting Simulation..."
-  $ns_ run
-}
-
-
-
-# The following tests are for testing the file conversion utilities
-
-Class Test/Format-simple -superclass Test/simple
-
-Test/Format-simple instproc init {} {
-  global PERL
-
-  # check to make sure prereqs for file conversion are met
-
-  set foo [catch {exec $PERL -I../../bin -MNS::TraceFileEvent -MNS::TraceFileReader -MNS::TraceFileWriter -e exit 2>/dev/null}]
-
-  if [expr $foo != 0] then {
-    puts "Required Perl module not found, Format-simple test skipped."
-    exit 2
-  }
-
-  $self next
-}
-
-Test/Format-simple instproc run {} {
-  global opt PERL
-
-  # let parent class run ns
-  $self next
-
-  # now that ns is done, convert the output file
-  exec $PERL -I../../bin ../../bin/ns2oldns.pl < $opt(tr) > $opt(tr).tmp
-  exec cp $opt(tr).tmp $opt(tr)	
-}
-
-
-
-
-
-# main program .. runs the test specified by the command line arguments
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpHighspeed.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpHighspeed.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpHighspeed.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpHighspeed.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,302 +0,0 @@
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tcpHighspeed.tcl,v 1.21 2006/10/22 15:20:46 sallyfloyd Exp $
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-Agent/TCP set numdupacksFrac_ 100 ;	# Default changed on 2006/09/27.
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-
-# Uncomment the line below to use a random seed for the
-#  random number generator.
-# ns-random 0
-
-TestSuite instproc finish file {
-        global quiet PERL
-	$self instvar cwnd_chan_ testName_
-
-        if { [info exists cwnd_chan_] } {
-                $self plot_cwnd 1 $testName_ all.cwnd1
-    		exec cp temp.cwnd temp.rands
-        }
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-
-Class Topology/net2a -superclass Topology
-Topology/net2a instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 30Mb 30ms RED
-    # The delay-bandwidth product of this link is 225 1000-byte packets.
-    $ns queue-limit $node_(r1) $node_(r2) 50
-    $ns queue-limit $node_(r2) $node_(r1) 50
-    $ns duplex-link $node_(s3) $node_(r2) 100Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 100Mb 5ms DropTail
-}
-
-Class Topology/net2b -superclass Topology
-Topology/net2b instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    #Queue/RED set bottom_ 0.001
-    Queue/RED set bottom_ 0
-    Queue/RED set thresh_ 0
-    Queue/RED set maxthresh_ 0
-    Queue/RED set q_weight_ 0
-    Queue/RED set adaptive_ 1
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 30Mb 30ms RED
-    # The delay-bandwidth product of this link is 225 1000-byte packets.
-    $ns queue-limit $node_(r1) $node_(r2) 200
-    $ns queue-limit $node_(r2) $node_(r1) 200
-    $ns duplex-link $node_(s3) $node_(r2) 100Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 100Mb 5ms DropTail
-}
-
-############################################################
-
-# To use windows larger than 1024 pkts, it is necessary to set
-# MWS in tcp-sink.h. 
-
-Class Test/tcp -superclass TestSuite
-Test/tcp instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2a
-    set test_	tcp
-    set guide_	"Sack TCP, bad queue."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    $self next noTraceFiles
-}
-Test/tcp instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ dumpfile_ sender_ receiver_ guide_
-    puts "Guide: $guide_"
-    $self setTopo
-    Agent/TCP set window_ 512
-    set stopTime  150.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set tcp1 \
-     [$ns_ create-connection $sender_ $node_(s1) $receiver_ $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp1
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at $stopTime0 "$ftp1 stop"
-
-    set tcp2 \
-     [$ns_ create-connection $sender_ $node_(s2) $receiver_ $node_(s4) 1]
-    set ftp2 [$tcp2 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp2 all.cwnd1
-    $ns_ at 30.0 "$ftp2 start"
-    $ns_ at 80.0 "$ftp2 stop"
-
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    $ns_ at $stopTime2 "exit 0"
-    $ns_ run
-}
-
-Class Test/tcpHighspeed -superclass TestSuite
-Test/tcpHighspeed instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2a
-    set test_	tcpHighspeed
-    set guide_	"TCP with experimental modification for highspeed TCP, bad queue."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set windowOption_ 8
-    Test/tcpHighspeed instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcp1 -superclass TestSuite
-Test/tcp1 instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2b
-    set test_	tcp
-    set guide_	"Sack TCP, good queue."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Test/tcp1 instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-Class Test/tcp1A -superclass TestSuite
-Test/tcp1A instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2b
-    set test_	tcp
-    set guide_	"Sack TCP, good queue, max_ssthresh=100."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set max_ssthresh_ 100
-    Test/tcp1A instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-
-## tcpHighspeed1 uses max_ssthresh_.
-Class Test/tcpHighspeed1 -superclass TestSuite
-Test/tcpHighspeed1 instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2b
-    set test_	tcpHighspeed1
-    set guide_	"Highspeed TCP, good queue, max_ssthresh=100."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set windowOption_ 8
-    Agent/TCP set max_ssthresh_ 100
-    Test/tcpHighspeed1 instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-
-## tcpHighspeed1A uses cwnd_range_
-Class Test/tcpHighspeed1A -superclass TestSuite
-Test/tcpHighspeed1A instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2b
-    set test_	tcpHighspeed1A
-    set guide_	"Highspeed TCP, good queue, max_ssthresh=100, efficient version."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set windowOption_ 8
-    Agent/TCP set max_ssthresh_ 100
-    Agent/TCP set cwnd_range_ 50
-    Test/tcpHighspeed1A instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-
-## tcpHighspeed2 uses a different value for low_window_.
-Class Test/tcpHighspeed2 -superclass TestSuite
-Test/tcpHighspeed2 instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2b
-    set test_	tcpHighspeed2
-    set guide_	"Highspeed TCP, low_window_ set to 25."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set windowOption_ 8
-    Agent/TCP set low_window_ 25
-    Test/tcpHighspeed2 instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-
-## tcpHighspeed3 uses different values for high_p_ and high_decrease_,
-##   to give essentially the same response function as TCP.
-Class Test/tcpHighspeed3 -superclass TestSuite
-Test/tcpHighspeed3 instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2b
-    set test_	tcpHighspeed3
-    set guide_	"Highspeed TCP, parameters set similar to TCP."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set windowOption_ 8
-    #Agent/TCP set high_p_ 0.0000000096 # the TCP formula would say this.
-    Agent/TCP set high_p_ 0.00000001
-    Agent/TCP set high_decrease_ 0.5
-    Test/tcpHighspeed3 instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-
-## tcpHighspeed4 uses different values for the response function.
-Class Test/tcpHighspeed4 -superclass TestSuite
-Test/tcpHighspeed4 instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2b
-    set test_	tcpHighspeed4
-    set guide_	"Highspeed TCP, parameters set conservatively."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set windowOption_ 8
-    Agent/TCP set low_window_ 50
-    Agent/TCP set high_p_ 0.0000001
-    Agent/TCP set high_decrease_ 0.25
-    Test/tcpHighspeed4 instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-
-## tcpHighspeed5 uses different values for the response function.
-Class Test/tcpHighspeed5 -superclass TestSuite
-Test/tcpHighspeed5 instproc init {} {
-    $self instvar net_ test_ sender_ receiver_ guide_
-    set net_	net2b
-    set test_	tcpHighspeed5
-    set guide_	"Highspeed TCP, parameters set aggressively."
-    set sender_ TCP/Sack1
-    set receiver_ TCPSink/Sack1 
-    Agent/TCP set windowOption_ 8
-    Agent/TCP set low_window_ 13
-    Agent/TCP set high_window_ 12500
-    Agent/TCP set high_p_ 0.000001
-    Agent/TCP set high_decrease_ 0.1
-    Test/tcpHighspeed5 instproc run {} [Test/tcp info instbody run ]
-    $self next noTraceFiles
-}
-
-TestSuite runTest 
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp-init-win-full.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp-init-win-full.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp-init-win-full.tcl	2015-03-04 17:49:02.782750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp-init-win-full.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,785 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tcp-init-win-full.tcl,v 1.15 2006/01/24 23:00:08 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcp.tcl
-#
-
-source misc_simple.tcl
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-set wrap [expr 90 * 1000 + 40]
-set scale 0.00001
-Agent/TCP/FullTcp set segsize_ 0 ;	# segsize_ will come from packetSize_
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Agent/TCP/Newreno set newreno_changes1_ 0
-# The default is being changed to 1 on 5/5/03, to reflect RFC 2582.
-Agent/TCP/Newreno set partial_window_deflation_ 0  
-# The default is being changed to 1 on 5/5/03, to reflect RFC 2582.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-set plotacks false
-
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net6 -superclass Topology
-Topology/net6 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 10Mb 100ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-}   
-    
-Class Topology/net7 -superclass Topology
-Topology/net7 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-}   
-    
-Class Topology/net8 -superclass Topology
-Topology/net8 instproc init ns {
-    $self instvar node_
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(s2) 1000Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 9.6Kb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 10ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-}   
-    
-# The ack sequence number is not printed out.
-
-TestSuite instproc finish file {
-	global quiet PERL plotacks wrap scale
-	set plotacks false
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -s $scale -m $wrap -t $file > temp.rands
-        if {$plotacks == "true"} {
-          exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-             $PERL ../../bin/raw2xg -a -e -s 0.00001 -m $wrap -t $file > temp1.rands
-	}
-	if {$quiet == "false"} {
-		if {$plotacks == "false"} {
-		   exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-                } else {
-		   exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-			       temp1.rands &
-		}
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-# Definition of test-suite tests
-
-TestSuite instproc run_test {tcp1 tcp2 tcp3 dumptime runtime window} {
-	$self instvar ns_ node_ testName_
-
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 0.0 "$ftp2 start"
-	set ftp3 [$tcp3 attach-app FTP]
-	$ns_ at 0.0 "$ftp3 start"
-	$self runall_test $tcp1 $dumptime $runtime
-}
-
-TestSuite instproc runall_test {tcp1 dumptime runtime} {
-	$self instvar ns_ node_ testName_
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 $dumptime
-	#$self traceQueues $node_(r1) [$self openTrace $runtime $testName_]
-	$ns_ at $runtime "$self cleanupAll $testName_"
-	$ns_ run
-}
-
-TestSuite instproc second_test {tcp1 tcp2} {
-	$self instvar ns_ node_ testName_
-	$tcp1 set window_ 40
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$tcp2 set window_ 40
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 0.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-	#$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-	$ns_ run
-}
-
-TestSuite instproc make_tcp {nodeA nodeB ID type} {
-	$self instvar ns_ node_ 
-        if {$type == "Tahoe"} {
-		set tcp [$ns_ create-connection-listen TCP/FullTcp/Tahoe $node_($nodeA) TCP/FullTcp/Tahoe $node_($nodeB) $ID]
-	}
-        if {$type == "Reno"} {
-		set tcp [$ns_ create-connection-listen TCP/FullTcp $node_($nodeA) TCP/FullTcp $node_($nodeB) $ID]
-	}
-        if {$type == "Newreno"} {
-		set tcp [$ns_ create-connection-listen TCP/FullTcp/Newreno $node_($nodeA) TCP/FullTcp/Newreno $node_($nodeB) $ID]
-	}
-        if {$type == "Sack"} {
-		set tcp [$ns_ create-connection-listen TCP/FullTcp/Sack $node_($nodeA) TCP/FullTcp/Sack $node_($nodeB) $ID]
-	}
-	return $tcp
-}
-
-# generate segment size from packet size.
-Class Test/tahoe1 -superclass TestSuite
-Test/tahoe1 instproc init {} {
-	$self instvar net_ test_ 
-	set net_	net6
-	set test_	tahoe1(variable_packet_sizes)
-        $self next pktTraceFile
-}
-Test/tahoe1 instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Tahoe]
-	$tcp1 set packetSize_ 1000
-	set tcp2 [$self make_tcp s2 k1 1 Tahoe]
-	$tcp2 set packetSize_ 1500
-	set tcp3 [$self make_tcp s2 k1 2 Tahoe]
-	$tcp3 set packetSize_ 2500
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-# generate packetsize from segment size.
-Class Test/tahoe1A -superclass TestSuite
-Test/tahoe1A instproc init {} {
-	$self instvar net_ test_ 
-	set net_	net6
-	set test_	tahoe1A(variable_packet_sizes)
-        $self next pktTraceFile
-}
-Test/tahoe1A instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Tahoe]
-	$tcp1 set segsize_ 960
-	set tcp2 [$self make_tcp s2 k1 1 Tahoe]
-	$tcp2 set segsize_ 1460
-	set tcp3 [$self make_tcp s2 k1 2 Tahoe]
-	$tcp3 set segsize_ 2460
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/tahoe2 -superclass TestSuite
-Test/tahoe2 instproc init {} {
-	$self instvar net_ test_
-	set net_	net6
-	set test_	tahoe2(static_initial_windows)
-	$self next pktTraceFile
-}
-Test/tahoe2 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	set tcp1 [$self make_tcp s1 k1 0 Tahoe] 
-	$tcp1 set windowInit_ 6
-	set tcp2 [$self make_tcp s2 k1 1 Tahoe]
-	$tcp2 set syn_ true
-	$tcp2 set delay_growth_ true
-	set tcp3 [$self make_tcp s2 k1 2 Tahoe]
-	$tcp3 set windowInit_ 6
-	$tcp3 set syn_ true
-	$tcp3 set delay_growth_ true
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/tahoe3 -superclass TestSuite
-Test/tahoe3 instproc init {} {
-	$self instvar net_ test_ 
-	set net_	net6
-	set test_	tahoe3(dropped_syn)
-        $self next pktTraceFile
-}
-
-## Drop the n-th packet for flow on link.
-TestSuite instproc drop_pkt { link flow n } {
-	set em [new ErrorModule Fid]
-	set errmodel [new ErrorModel/Periodic]
-	$errmodel unit pkt
-	$errmodel set offset_ n
-	$errmodel set period_ 1000.0
-	$link errormodule $em
-	$em insert $errmodel
-	$em bind $errmodel $flow
-}
-
-Test/tahoe3 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Tahoe]
-	$tcp1 set packetSize_ 1000
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-	$self runall_test $tcp1 10.0 10.0 
-}
-
-Class Test/tahoe4 -superclass TestSuite
-Test/tahoe4 instproc init {} {
-	$self instvar net_ test_
-	set net_	net7
-	set test_	tahoe4(fast_retransmit)
-	Queue/RED set ns1_compat_ true
-	$self next pktTraceFile
-}
-Test/tahoe4 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set packetSize_ 1000
-	Agent/TCP set windowInitOption_ 2
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-
-        set tcp1 [$self make_tcp s1 k1 0 Tahoe] 
-        set tcp2 [$self make_tcp s2 k1 1 Tahoe]
-	$self second_test $tcp1 $tcp2
-}
-
-Class Test/reno1 -superclass TestSuite
-Test/reno1 instproc init {} {
-	$self instvar net_ test_ 
-	set net_	net6
-	set test_	reno1(variable_packet_sizes)
-        $self next pktTraceFile
-}
-Test/reno1 instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Reno]
-	$tcp1 set packetSize_ 1000
-	set tcp2 [$self make_tcp s2 k1 1 Reno]
-	$tcp2 set packetSize_ 1500
-	set tcp3 [$self make_tcp s2 k1 2 Reno]
-	$tcp3 set packetSize_ 2500
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/reno2 -superclass TestSuite
-Test/reno2 instproc init {} {
-	$self instvar net_ test_
-	set net_	net6
-	set test_	reno2(static_initial_windows)
-	$self next pktTraceFile
-}
-Test/reno2 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	set tcp1 [$self make_tcp s1 k1 0 Reno] 
-	$tcp1 set windowInit_ 6
-	set tcp2 [$self make_tcp s2 k1 1 Reno]
-	$tcp2 set syn_ true
-	$tcp2 set delay_growth_ true
-	set tcp3 [$self make_tcp s2 k1 2 Reno]
-	$tcp3 set windowInit_ 6
-	$tcp3 set syn_ true
-	$tcp3 set delay_growth_ true
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/reno3 -superclass TestSuite
-Test/reno3 instproc init {} {
-	$self instvar net_ test_ 
-	set net_	net6
-	set test_	reno3(dropped_syn)
-        $self next pktTraceFile
-}
-
-## Drop the n-th packet for flow on link.
-TestSuite instproc drop_pkt { link flow n } {
-	set em [new ErrorModule Fid]
-	set errmodel [new ErrorModel/Periodic]
-	$errmodel unit pkt
-	$errmodel set offset_ n
-	$errmodel set period_ 1000.0
-	$link errormodule $em
-	$em insert $errmodel
-	$em bind $errmodel $flow
-}
-
-Test/reno3 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Reno]
-	$tcp1 set packetSize_ 1000
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-	$self runall_test $tcp1 10.0 10.0 
-}
-
-Class Test/reno4 -superclass TestSuite
-Test/reno4 instproc init {} {
-	$self instvar net_ test_
-	set net_	net7
-	set test_	reno4(fast_retransmit)
-	Queue/RED set ns1_compat_ true
-	$self next pktTraceFile
-}
-Test/reno4 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set packetSize_ 1000
-	Agent/TCP set windowInitOption_ 2
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-
-        set tcp1 [$self make_tcp s1 k1 0 Reno] 
-        set tcp2 [$self make_tcp s2 k1 1 Reno]
-	$self second_test $tcp1 $tcp2
-}
-
-
-Class Test/newreno1 -superclass TestSuite
-Test/newreno1 instproc init {} {
-	$self instvar net_ test_ 
-	set net_	net6
-	set test_	newreno1(variable_packet_sizes)
-        $self next pktTraceFile
-}
-Test/newreno1 instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Newreno]
-	$tcp1 set packetSize_ 1000
-	set tcp2 [$self make_tcp s2 k1 1 Newreno]
-	$tcp2 set packetSize_ 1500
-	set tcp3 [$self make_tcp s2 k1 2 Newreno]
-	$tcp3 set packetSize_ 2500
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/newreno2 -superclass TestSuite
-Test/newreno2 instproc init {} {
-	$self instvar net_ test_
-	set net_	net6
-	set test_	newreno2(static_initial_windows)
-	$self next pktTraceFile
-}
-Test/newreno2 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	set tcp1 [$self make_tcp s1 k1 0 Newreno] 
-	$tcp1 set windowInit_ 6
-	set tcp2 [$self make_tcp s2 k1 1 Newreno]
-	$tcp2 set syn_ true
-	$tcp2 set delay_growth_ true
-	set tcp3 [$self make_tcp s2 k1 2 Newreno]
-	$tcp3 set windowInit_ 6
-	$tcp3 set syn_ true
-	$tcp3 set delay_growth_ true
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/newreno3 -superclass TestSuite
-Test/newreno3 instproc init {} {
-	$self instvar net_ test_ 
-	set net_	net6
-	set test_	newreno3(dropped_syn)
-        $self next pktTraceFile
-}
-
-## Drop the n-th packet for flow on link.
-TestSuite instproc drop_pkt { link flow n } {
-	set em [new ErrorModule Fid]
-	set errmodel [new ErrorModel/Periodic]
-	$errmodel unit pkt
-	$errmodel set offset_ n
-	$errmodel set period_ 1000.0
-	$link errormodule $em
-	$em insert $errmodel
-	$em bind $errmodel $flow
-}
-
-Test/newreno3 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Newreno]
-	$tcp1 set packetSize_ 1000
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-	$self runall_test $tcp1 10.0 10.0 
-}
-
-Class Test/newreno4 -superclass TestSuite
-Test/newreno4 instproc init {} {
-	$self instvar net_ test_
-	set net_	net7
-	set test_	newreno4(fast_retransmit)
-	Queue/RED set ns1_compat_ true
-	$self next pktTraceFile
-}
-Test/newreno4 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set packetSize_ 1000
-	Agent/TCP set windowInitOption_ 2
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-
-        set tcp1 [$self make_tcp s1 k1 0 Newreno] 
-        set tcp2 [$self make_tcp s2 k1 1 Newreno]
-	$self second_test $tcp1 $tcp2
-}
-
-
-#
-#Class Test/sack1 -superclass TestSuite
-#Test/sack1 instproc init {} {
-#	$self instvar net_ test_ 
-#	set net_	net6
-#	set test_	sack1(variable_packet_sizes)
-#        $self next pktTraceFile
-#}
-#Test/sack1 instproc run {} {
-#        $self instvar ns_ node_ testName_
-#	$self setTopo
-#	Agent/TCP set syn_ true
-#	Agent/TCP set delay_growth_ true
-#	Agent/TCP set windowInitOption_ 2
-#	set tcp1 [$self make_tcp s1 k1 0 Sack]
-#	$tcp1 set packetSize_ 1000
-#	set tcp2 [$self make_tcp s2 k1 1 Sack]
-#	$tcp2 set packetSize_ 1500
-#	set tcp3 [$self make_tcp s2 k1 2 Sack]
-#	$tcp3 set packetSize_ 2500
-#	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-#}
-#
-#Class Test/sack2 -superclass TestSuite
-#Test/sack2 instproc init {} {
-#	$self instvar net_ test_
-#	set net_	net6
-#	set test_	sack2(static_initial_windows)
-#	$self next pktTraceFile
-#}
-#Test/sack2 instproc run {} {
-#	$self instvar ns_ node_ testName_
-#	$self setTopo
-#	set tcp1 [$self make_tcp s1 k1 0 Sack] 
-#	$tcp1 set windowInit_ 6
-#	set tcp2 [$self make_tcp s2 k1 1 Sack]
-#	$tcp2 set syn_ true
-#	$tcp2 set delay_growth_ true
-#	set tcp3 [$self make_tcp s2 k1 2 Sack]
-#	$tcp3 set windowInit_ 6
-#	$tcp3 set syn_ true
-#	$tcp3 set delay_growth_ true
-#	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-#}
-#
-#Class Test/sack3 -superclass TestSuite
-#Test/sack3 instproc init {} {
-#	$self instvar net_ test_ 
-#	set net_	net6
-#	set test_	sack3(dropped_syn)
-#        $self next pktTraceFile
-#}
-#
-## Drop the n-th packet for flow on link.
-TestSuite instproc drop_pkt { link flow n } {
-	set em [new ErrorModule Fid]
-	set errmodel [new ErrorModel/Periodic]
-	$errmodel unit pkt
-	$errmodel set offset_ n
-	$errmodel set period_ 1000.0
-	$link errormodule $em
-	$em insert $errmodel
-	$em bind $errmodel $flow
-}
-#
-#Test/sack3 instproc run {} {
-#        $self instvar ns_ node_ testName_ 
-#	$self setTopo
-#	Agent/TCP set syn_ true
-#	Agent/TCP set delay_growth_ true
-#	Agent/TCP set windowInitOption_ 2
-#	set tcp1 [$self make_tcp s1 k1 0 Sack]
-#	$tcp1 set packetSize_ 1000
-#	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-#	$self runall_test $tcp1 10.0 10.0 
-#}
-#
-# This does not work correctly!
-
-# Class Test/sack4 -superclass TestSuite
-# Test/sack4 instproc init {} {
-# 	$self instvar net_ test_
-# 	set net_	net7
-# 	set test_	sack4(fast_retransmit)
-# 	Queue/RED set ns1_compat_ true
-# 	$self next pktTraceFile
-# }
-# Test/sack4 instproc run {} {
-# 	$self instvar ns_ node_ testName_
-# 	$self setTopo
-# 	Agent/TCP set packetSize_ 1000
-# 	Agent/TCP set windowInitOption_ 2
-# 	Agent/TCP set syn_ true
-# 	Agent/TCP set delay_growth_ true
-#       set tcp1 [$self make_tcp s1 k1 0 Sack] 
-#       set tcp2 [$self make_tcp s2 k1 1 Sack]
-# 	$self second_test $tcp1 $tcp2
-# }
-
-TestSuite instproc printtimers { tcp time} {
-        global quiet
-        if {$quiet == "false"} {
-		set srtt [expr [$tcp set srtt_]/8 ]
-		set rttvar [expr [$tcp set rttvar_]/4 ]
-		set rto [expr $srtt + 2 * $rttvar ]
-                puts "time: $time sRTT(in ticks): $srtt RTTvar(in ticks): $rttvar sRTT+2*RTTvar: $rto backoff: [$tcp set backoff_]" 
-        }
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_   
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-        set newTime [expr [$ns_ now] + $interval]
-        $ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-# This test shows the packets and acknowledgements at the source,
-# for a path with a 9.6Kbps link, and 1000-byte packets.
-Class Test/slowLink -superclass TestSuite
-Test/slowLink instproc init {} {
-	global plotacks
-	$self instvar net_ test_ 
-	set net_	net8
-	set test_	slowLink(9.6K-link,1000-byte-pkt)
-        set plotacks true
-        $self next pktTraceFile
-}
-
-Test/slowLink instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 2
-	Agent/TCP set minrto_ 1
-	set tcp1 [$self make_tcp s1 k1 0 Sack]
-	$tcp1 set packetSize_ 1000
-	$ns_ at 0.0 "$self printtimersAll $tcp1 0 1"
-	$self runall_test $tcp1 30.0 30.0 
-}
-
-# # This test shows the packets and acknowledgements at the source,
-# # for a path with a 9.6Kbps link, and 1000-byte packets.
-# Class Test/slowLinkDelayAck -superclass TestSuite
-# Test/slowLinkDelayAck instproc init {} {
-# 	global plotacks
-# 	$self instvar net_ test_ 
-# 	set net_	net8
-# 	set test_	slowLinkDelayAck(9.6K-link,1000-byte-pkt)
-#         set plotacks true
-#         $self next pktTraceFile
-# }
-# 
-# Test/slowLinkDelayAck instproc run {} {
-#         $self instvar ns_ node_ testName_ 
-# 	$self setTopo
-# 	Agent/TCP set syn_ true
-# 	Agent/TCP set delay_growth_ true
-# 	Agent/TCP set windowInitOption_ 2
-# 	Agent/TCP set minrto_ 1
-# 	set tcp1 [$self make_tcp s1 k1 0 SackDelAck]
-# 	$tcp1 set packetSize_ 1000
-# 	$ns_ at 0.0 "$self printtimersAll $tcp1 0 1"
-# 	$self runall_test $tcp1 30.0 30.0 
-# }
-
-# This test shows the packets and acknowledgements at the source,
-# for a path with a 9.6Kbps link, and 1500-byte packets.
-#Class Test/slowLink1 -superclass TestSuite
-#Test/slowLink1 instproc init {} {
-#	global plotacks
-#	$self instvar net_ test_ 
-#	set net_	net8
-#	set test_	slowLink1(9.6K-link,1500-byte-pkt)
-#        set plotacks true
-#        $self next pktTraceFile
-#}
-#
-#Test/slowLink1 instproc run {} {
-#        $self instvar ns_ node_ testName_ 
-#	$self setTopo
-#	Agent/TCP set syn_ true
-#	Agent/TCP set delay_growth_ true
-#	Agent/TCP set windowInitOption_ 2
-#	Agent/TCP set minrto_ 1
-#	set tcp1 [$self make_tcp s1 k1 0 Sack]
-#	$tcp1 set packetSize_ 1500
-#	$self runall_test $tcp1 30.0 30.0 
-#}
-
-# This test shows the packets and acknowledgements at the source,
-# for a path with a 9.6Kbps link, and 1500-byte packets.
-# Initial window of one packet.
-Class Test/slowLink2 -superclass TestSuite
-Test/slowLink2 instproc init {} {
-	global plotacks
-	$self instvar net_ test_ 
-	set net_	net8
-	set test_	slowLink2(9.6K-link,1500-byte-pkt)
-        set plotacks true
-        $self next pktTraceFile
-}
-
-Test/slowLink2 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set syn_ true
-	Agent/TCP set delay_growth_ true
-	Agent/TCP set windowInitOption_ 1
-	Agent/TCP set minrto_ 1
-	set tcp1 [$self make_tcp s1 k1 0 Sack]
-	$tcp1 set packetSize_ 1500
-	$self runall_test $tcp1 30.0 30.0 
-}
-# time 1.1: RTO, pkt 1 retransmitted, slow-start entered.
-# time 1.4: ACK arrives for (first) pkt 1, pkts 2 and 3 transmitted.
-# time 2.4: RTO, pkt 2 retransmitted, slow-start entered.
-# time 2.6: ACK arrives for (second) pkt 1. 
-# time 3.7: RTO, pkt 2 retransmitted, slow-start entered.
-# time 3.9: ACK arrives for (first) pkt 2, pkt 3 retransmitted, pkt 4
-#           transmitted
-# time 5.2: ACK arrives for (first) pkt 3, pkt 5 transmitted.
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp-init-win.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp-init-win.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp-init-win.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp-init-win.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,797 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tcp-init-win.tcl,v 1.35 2006/08/12 23:34:24 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcp.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Queue/RED set bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5
-Queue/RED set maxthresh_ 15
-
-set plotacks false
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net6 -superclass Topology
-Topology/net6 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 10Mb 100ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-}   
-    
-Class Topology/net7 -superclass Topology
-Topology/net7 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-}   
-    
-Class Topology/net8 -superclass Topology
-Topology/net8 instproc init ns {
-    $self instvar node_
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(s2) 1000Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 9.6Kb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 10ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-}   
-    
-TestSuite instproc finish file {
-	global quiet PERL plotacks
-        exec $PERL ../../bin/getrc -e -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -v -s 0.01 -m 90 -t $file > temp.rands
-        if {$plotacks == "true"} {
-	  exec $PERL ../../bin/getrc -e -s 3 -d 2 all.tr | \
-	    $PERL ../../bin/raw2xg -v -a -e -s 0.01 -m 90 -t $file > temp1.rands
-	}
-	if {$quiet == "false"} {
-		if {$plotacks == "false"} {
-		   exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-                } else {
-		   exec xgraph -bb -tk -nl -m -x time -y packets temp.rands \
-			       temp1.rands &
-		}
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-# Definition of test-suite tests
-
-TestSuite instproc run_test {tcp1 tcp2 tcp3 dumptime runtime window} {
-	$self instvar ns_ node_ testName_ 
-
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 0.0 "$ftp2 start"
-	set ftp3 [$tcp3 attach-app FTP]
-	$ns_ at 0.0 "$ftp3 start"
-	$self runall_test $tcp1 $dumptime $runtime
-}
-
-TestSuite instproc runall_test {tcp1 dumptime runtime} {
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	$self tcpDump $tcp1 $dumptime
-	$ns_ at $runtime "$self cleanupAll $testName_"
-	$ns_ run
-}
-
-TestSuite instproc second_test {tcp1 tcp2} {
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-	$tcp1 set window_ 40
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 1.0 "$ftp1 start"
-
-	$tcp2 set window_ 40
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 0.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-	$ns_ at 10.0 "$self cleanupAll $testName_"
-	$ns_ run
-}
-
-TestSuite instproc make_tcp {nodeA nodeB ID type} {
-	$self instvar ns_ node_ 
-        if {$type == "Tahoe"} {
-		set tcp [$ns_ create-connection TCP $node_($nodeA) TCPSink $node_($nodeB) $ID]
-	}
-        if {$type == "Reno"} {
-		set tcp [$ns_ create-connection TCP/Reno $node_($nodeA) TCPSink $node_($nodeB) $ID]
-	}
-        if {$type == "Newreno"} {
-		set tcp [$ns_ create-connection TCP/Newreno $node_($nodeA) TCPSink $node_($nodeB) $ID]
-	}
-        if {$type == "Sack"} {
-		set tcp [$ns_ create-connection TCP/Sack1 $node_($nodeA) TCPSink/Sack1 $node_($nodeB) $ID]
-	}
-        if {$type == "SackDelAck"} {
-		set tcp [$ns_ create-connection TCP/Sack1 $node_($nodeA) TCPSink/Sack1/DelAck $node_($nodeB) $ID]
-	}
-	return $tcp
-}
-
-Class Test/tahoe1 -superclass TestSuite
-Test/tahoe1 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	tahoe1(variable_packet_sizes)
-	set guide_	"Tahoe TCP, initial windows with different packet sizes."
-        $self next pktTraceFile
-}
-Test/tahoe1 instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
- 	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Tahoe]
-	$tcp1 set packetSize_ 1000
-	set tcp2 [$self make_tcp s2 k1 1 Tahoe]
-	$tcp2 set packetSize_ 1500
-	set tcp3 [$self make_tcp s2 k1 2 Tahoe]
-	$tcp3 set packetSize_ 2500
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/tahoe2 -superclass TestSuite
-Test/tahoe2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net6
-	set test_	tahoe2(static_initial_windows)
-	set guide_	"Tahoe TCP, static initial windows."
-	$self next pktTraceFile
-}
-Test/tahoe2 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	set tcp1 [$self make_tcp s1 k1 0 Tahoe] 
-	$tcp1 set windowInit_ 6
-	$tcp1 set syn_ false
-	$tcp1 set delay_growth_ false
-	set tcp2 [$self make_tcp s2 k1 1 Tahoe]
-	$tcp2 set syn_ true
-	$tcp2 set delay_growth_ true
-	set tcp3 [$self make_tcp s2 k1 2 Tahoe]
-	$tcp3 set windowInit_ 6
-	$tcp3 set syn_ true
-	$tcp3 set delay_growth_ true
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/tahoe3 -superclass TestSuite
-Test/tahoe3 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	tahoe3(dropped_syn)
-	set guide_	"Tahoe TCP, initial window after a dropped SYN packet."
-        $self next pktTraceFile
-}
-
-## Drop the n-th packet for flow on link.
-TestSuite instproc drop_pkt { link flow num } {
-	set em [new ErrorModule Fid]
-	set errmodel [new ErrorModel/Periodic]
-	$errmodel unit pkt
-	$errmodel set offset_ $num
-	$errmodel set period_ 1000.0
-	$link errormodule $em
-	$em insert $errmodel
-	$em bind $errmodel $flow
-}
-
-Test/tahoe3 instproc run {} {
-        $self instvar ns_ node_ testName_ guide_
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Tahoe]
-	$tcp1 set packetSize_ 1000
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-	$self runall_test $tcp1 10.0 10.0 
-}
-
-Class Test/tahoe4 -superclass TestSuite
-Test/tahoe4 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net7
-	set test_	tahoe4(fast_retransmit)
-	set guide_	"Tahoe TCP, window after a Fast Retransmit."
-	Queue/RED set ns1_compat_ true
-	$self next pktTraceFile
-}
-Test/tahoe4 instproc run {} {
-	$self instvar ns_ node_ testName_ guide_
-	$self setTopo
-	Agent/TCP set packetSize_ 1000
-	Agent/TCP set windowInitOption_ 2
-
-        set tcp1 [$self make_tcp s1 k1 0 Tahoe] 
-        set tcp2 [$self make_tcp s2 k1 1 Tahoe]
-	$self second_test $tcp1 $tcp2
-}
-
-Class Test/reno1 -superclass TestSuite
-Test/reno1 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	reno1(variable_packet_sizes)
-	set guide_	"Reno TCP, initial windows with different packet sizes."
-        $self next pktTraceFile
-}
-Test/reno1 instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Reno]
-	$tcp1 set packetSize_ 1000
-	set tcp2 [$self make_tcp s2 k1 1 Reno]
-	$tcp2 set packetSize_ 1500
-	set tcp3 [$self make_tcp s2 k1 2 Reno]
-	$tcp3 set packetSize_ 2500
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/reno2 -superclass TestSuite
-Test/reno2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net6
-	set test_	reno2(static_initial_windows)
-	set guide_	"Reno TCP, static initial windows."
-	$self next pktTraceFile
-}
-Test/reno2 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	set tcp1 [$self make_tcp s1 k1 0 Reno] 
-	$tcp1 set windowInit_ 6
-	$tcp1 set syn_ false
-	$tcp1 set delay_growth_ false
-	set tcp2 [$self make_tcp s2 k1 1 Reno]
-	$tcp2 set syn_ true
-	$tcp2 set delay_growth_ true
-	set tcp3 [$self make_tcp s2 k1 2 Reno]
-	$tcp3 set windowInit_ 6
-	$tcp3 set syn_ true
-	$tcp3 set delay_growth_ true
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/reno3 -superclass TestSuite
-Test/reno3 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	reno3(dropped_syn)
-	set guide_	"Reno TCP, initial window after a dropped SYN packet."
-        $self next pktTraceFile
-}
-
-Test/reno3 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Reno]
-	$tcp1 set packetSize_ 1000
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-	$self runall_test $tcp1 10.0 10.0 
-}
-
-Class Test/reno4 -superclass TestSuite
-Test/reno4 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net7
-	set test_	reno4(fast_retransmit)
-	set guide_	"Reno TCP, window after a Fast Retransmit."
-	Queue/RED set ns1_compat_ true
-	$self next pktTraceFile
-}
-Test/reno4 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set packetSize_ 1000
-	Agent/TCP set windowInitOption_ 2
-
-        set tcp1 [$self make_tcp s1 k1 0 Reno] 
-        set tcp2 [$self make_tcp s2 k1 1 Reno]
-	$self second_test $tcp1 $tcp2
-}
-
-
-Class Test/newreno1 -superclass TestSuite
-Test/newreno1 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	newreno1(variable_packet_sizes)
-	set guide_	"NewReno TCP, initial windows with different packet sizes."
-        $self next pktTraceFile
-}
-Test/newreno1 instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Newreno]
-	$tcp1 set packetSize_ 1000
-	set tcp2 [$self make_tcp s2 k1 1 Newreno]
-	$tcp2 set packetSize_ 1500
-	set tcp3 [$self make_tcp s2 k1 2 Newreno]
-	$tcp3 set packetSize_ 2500
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/newreno2 -superclass TestSuite
-Test/newreno2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net6
-	set test_	newreno2(static_initial_windows)
-	set guide_	"NewReno TCP, static initial windows."
-	$self next pktTraceFile
-}
-Test/newreno2 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	set tcp1 [$self make_tcp s1 k1 0 Newreno] 
-	$tcp1 set windowInit_ 6
-	$tcp1 set syn_ false
-	$tcp1 set delay_growth_ false
-	set tcp2 [$self make_tcp s2 k1 1 Newreno]
-	$tcp2 set syn_ true
-	$tcp2 set delay_growth_ true
-	set tcp3 [$self make_tcp s2 k1 2 Newreno]
-	$tcp3 set windowInit_ 6
-	$tcp3 set syn_ true
-	$tcp3 set delay_growth_ true
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/newreno3 -superclass TestSuite
-Test/newreno3 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	newreno3(dropped_syn)
-	set guide_	"NewReno TCP, initial window after a dropped SYN packet."
-        $self next pktTraceFile
-}
-
-Test/newreno3 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Newreno]
-	$tcp1 set packetSize_ 1000
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-	$self runall_test $tcp1 10.0 10.0 
-}
-
-Class Test/newreno4 -superclass TestSuite
-Test/newreno4 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net7
-	set test_	newreno4(fast_retransmit)
-	set guide_	"NewReno TCP, window after a Fast Retransmit."
-	Queue/RED set ns1_compat_ true
-	$self next pktTraceFile
-}
-Test/newreno4 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set packetSize_ 1000
-	Agent/TCP set windowInitOption_ 2
-
-        set tcp1 [$self make_tcp s1 k1 0 Newreno] 
-        set tcp2 [$self make_tcp s2 k1 1 Newreno]
-	$self second_test $tcp1 $tcp2
-}
-
-
-
-Class Test/sack1 -superclass TestSuite
-Test/sack1 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	sack1(variable_packet_sizes)
-	set guide_	"Sack TCP, initial windows with different packet sizes."
-        $self next pktTraceFile
-}
-Test/sack1 instproc run {} {
-        $self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Sack]
-	$tcp1 set packetSize_ 1000
-	set tcp2 [$self make_tcp s2 k1 1 Sack]
-	$tcp2 set packetSize_ 1500
-	set tcp3 [$self make_tcp s2 k1 2 Sack]
-	$tcp3 set packetSize_ 2500
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/sack2 -superclass TestSuite
-Test/sack2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net6
-	set test_	sack2(static_initial_windows)
-	set guide_	"Sack TCP, static initial windows."
-	$self next pktTraceFile
-}
-Test/sack2 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	set tcp1 [$self make_tcp s1 k1 0 Sack] 
-	$tcp1 set windowInit_ 6
-	$tcp1 set syn_ false
-	$tcp1 set delay_growth_ false
-	set tcp2 [$self make_tcp s2 k1 1 Sack]
-	$tcp2 set syn_ true
-	$tcp2 set delay_growth_ true
-	set tcp3 [$self make_tcp s2 k1 2 Sack]
-	$tcp3 set windowInit_ 6
-	$tcp3 set syn_ true
-	$tcp3 set delay_growth_ true
-	$self run_test $tcp1 $tcp2 $tcp3 1.0 1.0 16
-}
-
-Class Test/sack3 -superclass TestSuite
-Test/sack3 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	sack3(dropped_syn)
-	set guide_	"Sack TCP, initial window after a dropped SYN packet."
-        $self next pktTraceFile
-}
-
-Test/sack3 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	set tcp1 [$self make_tcp s1 k1 0 Sack]
-	$tcp1 set packetSize_ 1000
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-	$self runall_test $tcp1 10.0 10.0 
-}
-
-Class Test/sack4 -superclass TestSuite
-Test/sack4 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net7
-	set test_	sack4(fast_retransmit)
-	set guide_	"Sack TCP, window after a Fast Retransmit."
-	Queue/RED set ns1_compat_ true
-	$self next pktTraceFile
-}
-Test/sack4 instproc run {} {
-	$self instvar ns_ node_ testName_
-	$self setTopo
-	Agent/TCP set packetSize_ 1000
-	Agent/TCP set windowInitOption_ 2
-
-        set tcp1 [$self make_tcp s1 k1 0 Sack] 
-        set tcp2 [$self make_tcp s2 k1 1 Sack]
-	$self second_test $tcp1 $tcp2
-}
-
-TestSuite instproc printtimers { tcp time} {
-        global quiet
-        if {$quiet == "false"} {
-		set srtt [expr [$tcp set srtt_]/8 ]
-		set rttvar [expr [$tcp set rttvar_]/4 ]
-		set rto [expr $srtt + 2 * $rttvar ]
-                puts "time: $time sRTT(in ticks): $srtt RTTvar(in ticks): $rttvar sRTT+2*RTTvar: $rto backoff: [$tcp set backoff_]" 
-        }
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_   
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-        set newTime [expr [$ns_ now] + $interval]
-        $ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-# This test shows the packets and acknowledgements at the source,
-# for a path with a 9.6Kbps link, and 1000-byte packets.
-Class Test/slowLink -superclass TestSuite
-Test/slowLink instproc init {} {
-	global plotacks
-	$self instvar net_ test_ guide_ 
-	set net_	net8
-	set test_	slowLink(9.6K-link,1000-byte-pkt)
-	set guide_	"Slow link, with statistics for sRTT, RTTvar, backoff"
-        set plotacks true
-        $self next pktTraceFile
-}
-
-Test/slowLink instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	Agent/TCP set minrto_ 1
-	set tcp1 [$self make_tcp s1 k1 0 Sack]
-	$tcp1 set packetSize_ 1000
-	$ns_ at 0.0 "$self printtimersAll $tcp1 0 1"
-	$self runall_test $tcp1 30.0 30.0 
-}
-
-# # This test shows the packets and acknowledgements at the source,
-# # for a path with a 9.6Kbps link, and 1000-byte packets.
-# Class Test/slowLinkDelayAck -superclass TestSuite
-# Test/slowLinkDelayAck instproc init {} {
-# 	global plotacks
-# 	$self instvar net_ test_ guide_ 
-# 	set net_	net8
-# 	set test_	slowLinkDelayAck(9.6K-link,1000-byte-pkt)
-#         set plotacks true
-#         $self next pktTraceFile
-# }
-# 
-# Test/slowLinkDelayAck instproc run {} {
-#         $self instvar ns_ node_ testName_ 
-# 	$self setTopo
-# 	Agent/TCP set windowInitOption_ 2
-# 	Agent/TCP set minrto_ 1
-# 	set tcp1 [$self make_tcp s1 k1 0 SackDelAck]
-# 	$tcp1 set packetSize_ 1000
-# 	$ns_ at 0.0 "$self printtimersAll $tcp1 0 1"
-# 	$self runall_test $tcp1 30.0 30.0 
-# }
-
-# This test shows the packets and acknowledgements at the source,
-# for a path with a 9.6Kbps link, and 1500-byte packets.
-Class Test/slowLink1 -superclass TestSuite
-Test/slowLink1 instproc init {} {
-	global plotacks
-	$self instvar net_ test_ guide_ 
-	set net_	net8
-	set test_	slowLink1(9.6K-link,1500-byte-pkt)
-	set guide_	"Slow link, with larger packets and a smaller initial window."
-        set plotacks true
-        $self next pktTraceFile
-}
-
-Test/slowLink1 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 2
-	Agent/TCP set minrto_ 1
-	set tcp1 [$self make_tcp s1 k1 0 Sack]
-	$tcp1 set packetSize_ 1500
-	$self runall_test $tcp1 30.0 30.0 
-}
-
-# This test shows the packets and acknowledgements at the source,
-# for a path with a 9.6Kbps link, and 1500-byte packets.
-# Initial window of one packet.
-Class Test/slowLink2 -superclass TestSuite
-Test/slowLink2 instproc init {} {
-	global plotacks
-	$self instvar net_ test_ guide_ 
-	set net_	net8
-	set test_	slowLink2(9.6K-link,1500-byte-pkt)
-	set guide_	"Slow link, with an initial window of two packets."
-        set plotacks true
-        $self next pktTraceFile
-}
-
-Test/slowLink2 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 1
-	Agent/TCP set minrto_ 1
-	set tcp1 [$self make_tcp s1 k1 0 Sack]
-	$tcp1 set packetSize_ 1500
-	$self runall_test $tcp1 30.0 30.0 
-}
-# time 1.1: RTO, pkt 1 retransmitted, slow-start entered.
-# time 1.4: ACK arrives for (first) pkt 1, pkts 2 and 3 transmitted.
-# time 2.4: RTO, pkt 2 retransmitted, slow-start entered.
-# time 2.6: ACK arrives for (second) pkt 1.
-# time 3.7: RTO, pkt 2 retransmitted, slow-start entered.
-# time 3.9: ACK arrives for (first) pkt 2, pkt 3 retransmitted, pkt 4
-#           transmitted
-# time 5.2: ACK arrives for (first) pkt 3, pkt 5 transmitted.
-
-Class Test/droppedSYN -superclass TestSuite
-Test/droppedSYN instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	droppedSYN
-	set guide_	"NewReno TCP before bugfix_ss_, dropped SYN packet." 
-	## static initial window of four packets
-   	Agent/TCP set bugfix_ss_ 0
-        Agent/TCP set windowInit_ 4
-        $self next pktTraceFile
-}
-
-Test/droppedSYN instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 1
-	set tcp1 [$self make_tcp s1 k1 0 Newreno]
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 1
-	$self runall_test $tcp1 5.0 5.0 
-}
-
-Class Test/droppedSYN1 -superclass TestSuite
-Test/droppedSYN1 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	droppedSYN(bugfix_ss_)
-	set guide_	"NewReno TCP, dropped SYN packet." 
-	## static initial window of four packets
-   	Agent/TCP set bugfix_ss_ 1
-        Agent/TCP set windowInit_ 4
-        Test/droppedSYN1 instproc run {} [Test/droppedSYN info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/droppedPKT -superclass TestSuite
-Test/droppedPKT instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	droppedPKT(Newreno)
-	set guide_	"NewReno TCP without bugfix_ss_, dropped initial data packet."
-	## static initial window of four packets
-   	Agent/TCP set bugfix_ss_ 0
-        Agent/TCP set windowInit_ 4
-        $self next pktTraceFile
-}
-
-Test/droppedPKT instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 1
-	set tcp1 [$self make_tcp s1 k1 0 Newreno]
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 2
-	$self runall_test $tcp1 5.0 5.0 
-}
-
-Class Test/droppedPKT1 -superclass TestSuite
-Test/droppedPKT1 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	droppedPKT(NewReno,bugfix_ss_)
-	set guide_	"NewReno TCP, dropped initial data packet."
-	## static initial window of four packets
-   	Agent/TCP set bugfix_ss_ 1
-        Agent/TCP set windowInit_ 4
-        Test/droppedPKT1 instproc run {} [Test/droppedPKT info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/droppedPKT2 -superclass TestSuite
-Test/droppedPKT2 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	droppedPKT2(Sack)
-	set guide_	"Sack TCP without bugfix_ss_, dropped initial data packet."
-	## static initial window of four packets
-   	Agent/TCP set bugfix_ss_ 0
-        Agent/TCP set windowInit_ 4
-        $self next pktTraceFile
-}
-
-Test/droppedPKT2 instproc run {} {
-        $self instvar ns_ node_ testName_ 
-	$self setTopo
-	Agent/TCP set windowInitOption_ 1
-	set tcp1 [$self make_tcp s1 k1 0 Sack]
-	$self drop_pkt [$ns_ link $node_(r1) $node_(k1)] 0 2
-	$self runall_test $tcp1 5.0 5.0 
-}
-
-Class Test/droppedPKT3 -superclass TestSuite
-Test/droppedPKT3 instproc init {} {
-	$self instvar net_ test_ guide_ 
-	set net_	net6
-	set test_	droppedPKT3(Sack,bugfix_ss_)
-	set guide_	"Sack TCP, dropped initial data packet."
-	## static initial window of four packets
-   	Agent/TCP set bugfix_ss_ 1
-        Agent/TCP set windowInit_ 4
-        Test/droppedPKT3 instproc run {} [Test/droppedPKT2 info instbody run ]
-        $self next pktTraceFile
-}
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp-init-win.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp-init-win.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp-init-win.txt	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp-init-win.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,69 +0,0 @@
-The tests of options for TCP's initial window can be tested
-with the command "./test-all-tcp-init-win" in the directory
-tcl/test.
-
-These tests verify the following options added to the
-implementations of one-way TCP.  The proposal in the
-internet draft "Increasing TCP's Initial Window" can be
-modeled by setting syn_ and delay_growth_ to true, and
-setting windowInitOption_ to 2.
-
-For these parameters, the model implemented in the simulator for
-one-way TCP is as follows:  the sender sends a 40-byte data packet
-(modeling the SYN), the receiver sends an ACK, and the sender then
-sets its initial window to either two, three, or four segments,
-depending on the segment size.  If the first packet (i.e., the SYN)
-is dropped, then the initial window is started at one segment.
-
-Agent/TCP, syn_:
-
-For the default, with "syn_" set to false, TCP does not model the
-initial SYN/ACK exchange.  With "syn_" set to true, TCP does model
-the initial SYN/ACK exchange, in that for "syn_" set to true, the
-initial packet is of size tcpip_base_hdr_size_ (40 bytes).
-
-Agent/TCP, delay_growth_:
-
-For the default, with delay_growth_ set to false, the initial window
-applies to the first packet.  With delay_growth_ set to true,
-the initial congestion window only applies after a single packet
-has been sent and acknowledged.
-
-Agent/TCP, windowInitOption_:
-
-For the default, with "windowInitOption_" set to 1, the TCP initial
-window is set to the number of packets specified in "windowInit_",
-which itself is set by default to one packet.  For "windowInitOption_"
-set to 2, the TCP initial window is set to the number of packets
-specified in internet draft draft-floyd-incr-init-win-01.txt on
-"Increasing TCP's Initial Window".  That is, for a packet size of
-at most 1095 bytes, the initial window is set to four packets.
-For a packet size between 1095 and 2190 bytes, the initial window
-is set to three packets, and for a packet size of 2190 bytes or
-more, the initial window is set to two packets.
-
---------------------------------------
-
-The first tests, tahoe1 to tahoe4, test the initial window options
-with Tahoe TCP.  
-
-The three connections in the tahoe1 test all use "syn_" and
-"delay_growth_" set to true, and "windowInitOption_" set to 2,
-for the initial window specified in the internet draft.
-The packet sizes for these three connections are 1000 bytes, 1500 bytes,
-and 4000 bytes, respectively.
-
-The three connections in the tahoe2 test use various combinations
-of fixed initial windows, with "windowInitOption_" set to 1.
-Two of the connections use an initial window of six packets, and
-one uses an initial window of one packet.
-
-The connection in the tahoe3 test shows that with "windowInitOption_"
-set to 2, when the initial (SYN) packet is dropped, the larger initial
-window is not used.
-
-"Init4" shows two connections with 1000-byte packets using the initial
-window specified in the internet draft.  The test shows that after a
-Fast Retransmit, TCP slow-starts from an initial window of one packet.
-
-These four tests are then repeated for Reno, NewReno, and SACK TCP.
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpLinux.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpLinux.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpLinux.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpLinux.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,489 +0,0 @@
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tcpLinux.tcl,v 1.2 2008/02/06 09:45:17 seashadow Exp $
-#
-
-
-# This is mostly copied from test-suite-tcpHighspeed
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-
-# Uncomment the line below to use a random seed for the
-#  random number generator.
-# ns-random 0
-
-TestSuite instproc finish file {
-        global quiet PERL
-	$self instvar cwnd_chan_ testName_
-
-        if { [info exists cwnd_chan_] } {
-                $self plot_cwnd 1 $testName_ all.cwnd1
-    		exec cp temp.cwnd temp.rands
-        }
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-
-#net 2a:
-# s1 =(2ms)=              =(4ms)= s3
-#           r1 -(30ms)- r2 
-# s2 =(3ms)=              =(5ms)= s4
-#
-# =: 100Mbps (DropTail)
-# -: 30Mbps (RED)
-Class Topology/net2red -superclass Topology
-Topology/net2red instproc init ns {
-    $self instvar node_ 
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 30Mb 30ms RED
-    # The delay-bandwidth product of this link is 225 1000-byte packets.
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 100Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 100Mb 5ms DropTail
-    set bottleneck [[$ns link $node_(r1) $node_(r2)] queue]
-    $bottleneck set thresh_ 1
-    $bottleneck set maxthresh_ 100
-    $bottleneck set q_weight_ 0.01
-    $bottleneck set mean_pktsize_ 1500
-    $bottleneck set linterm_ 10
-    $bottleneck set setbit_ false
-    $bottleneck set queue_in_bytes_ false
-}
-
-Class Topology/net2droptail -superclass Topology
-Topology/net2droptail instproc init ns {
-    $self instvar node_ 
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 30Mb 30ms DropTail
-    # The delay-bandwidth product of this link is 225 1000-byte packets.
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 100Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 100Mb 5ms DropTail
-}
-############################################################
-
-# To use windows larger than 1024 pkts, it is necessary to set
-# MWS in tcp-sink.h. 
-
-Class Test/tcpLinuxBase -superclass TestSuite
-Test/tcpLinuxBase instproc init {} {
-    $self instvar net_ test_ guide_ cc_
-    set net_ net2red
-    set test_	tcpLinuxBase
-    set cc_ "naive_reno"
-    set guide_	"TCP Linux, base ($cc_ with $net_)"
-    $self next noTraceFiles
-}
-Test/tcpLinuxBase instproc run {} {
-    global quiet
-    $self instvar ns_ node_ testName_ dumpfile_  guide_ cc_
-    if {$quiet == "false"} {puts $guide_}
-    $self setTopo
-    Agent/TCP set window_ 30000
-    set stopTime  240.0
-    set stopTime0 [expr $stopTime - 0.001]
-    set stopTime2 [expr $stopTime + 0.001]
-
-    set tcp1 \
-     [$ns_ create-connection TCP/Linux $node_(s1) TCPSink/Sack1/DelAck $node_(s3) 0]
-    set ftp1 [$tcp1 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp1
-    $ns_ at 0.0 "$tcp1 select_ca $cc_"
-    $ns_ at 0.0 "$tcp1 set_ca_default_param linux debug_level 2"
-    $ns_ at 0.1 "$ftp1 start"
-    $ns_ at $stopTime0 "$ftp1 stop"
-
-    set tcp2 \
-     [$ns_ create-connection TCP/Linux $node_(s2) TCPSink/Sack1/DelAck $node_(s4) 1]
-    set ftp2 [$tcp2 attach-app FTP]
-    $self enable_tracecwnd $ns_ $tcp2 all.cwnd1
-    $ns_ at 0.0 "$tcp2 select_ca $cc_"
-    $ns_ at 60.0 "$ftp2 start"
-    $ns_ at 160.0 "$ftp2 stop"
-
-    $ns_ at $stopTime "$tcp1 set cwnd_ 1"
-    $ns_ at $stopTime "$tcp2 set cwnd_ 1"
-    $ns_ at $stopTime "$self cleanupAll $testName_" 
-    $ns_ at $stopTime2 "exit 0"
-    $ns_ run
-}
-
-Class Test/tcpLinuxDropTail_reno -superclass TestSuite
-Test/tcpLinuxDropTail_reno instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ reno
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_reno
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_reno instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_reno -superclass TestSuite
-Test/tcpLinuxRED_reno instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ reno
-    set net_	net2red
-    set test_	tcpLinuxRED_reno
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_reno instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_vegas -superclass TestSuite
-Test/tcpLinuxDropTail_vegas instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ vegas 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_vegas
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_vegas instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_vegas -superclass TestSuite
-Test/tcpLinuxRED_vegas instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ vegas 
-    set net_	net2red
-    set test_	tcpLinuxRED_vegas
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_vegas instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_htcp -superclass TestSuite
-Test/tcpLinuxDropTail_htcp instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ htcp 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_htcp
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_htcp instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_htcp -superclass TestSuite
-Test/tcpLinuxRED_htcp instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ htcp 
-    set net_	net2red
-    set test_	tcpLinuxRED_htcp
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_htcp instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_bic -superclass TestSuite
-Test/tcpLinuxDropTail_bic instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ bic 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_bic
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_bic instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_bic -superclass TestSuite
-Test/tcpLinuxRED_bic instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ bic 
-    set net_	net2red
-    set test_	tcpLinuxRED_bic
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_bic instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_cubic -superclass TestSuite
-Test/tcpLinuxDropTail_cubic instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ cubic 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_cubic
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_cubic instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_cubic -superclass TestSuite
-Test/tcpLinuxRED_cubic instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ cubic 
-    set net_	net2red
-    set test_	tcpLinuxRED_cubic
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_cubic instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_hybla -superclass TestSuite
-Test/tcpLinuxDropTail_hybla instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ hybla 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_hybla
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_hybla instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_hybla -superclass TestSuite
-Test/tcpLinuxRED_hybla instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ hybla 
-    set net_	net2red
-    set test_	tcpLinuxRED_hybla
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_hybla instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_lp -superclass TestSuite
-Test/tcpLinuxDropTail_lp instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ lp 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_lp
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_lp instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_lp -superclass TestSuite
-Test/tcpLinuxRED_lp instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ lp 
-    set net_	net2red
-    set test_	tcpLinuxRED_lp
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_lp instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_compound -superclass TestSuite
-Test/tcpLinuxDropTail_compound instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ compound 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_compound
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_compound instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_compound -superclass TestSuite
-Test/tcpLinuxRED_compound instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ compound 
-    set net_	net2red
-    set test_	tcpLinuxRED_compound
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_compound instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_veno -superclass TestSuite
-Test/tcpLinuxDropTail_veno instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ veno 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_veno
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_veno instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_veno -superclass TestSuite
-Test/tcpLinuxRED_veno instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ veno 
-    set net_	net2red
-    set test_	tcpLinuxRED_veno
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_veno instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_yeah -superclass TestSuite
-Test/tcpLinuxDropTail_yeah instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ yeah 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_yeah
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_yeah instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_yeah -superclass TestSuite
-Test/tcpLinuxRED_yeah instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ yeah 
-    set net_	net2red
-    set test_	tcpLinuxRED_yeah
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_yeah instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_illinois -superclass TestSuite
-Test/tcpLinuxDropTail_illinois instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ illinois 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_illinois
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_illinois instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_illinois -superclass TestSuite
-Test/tcpLinuxRED_illinois instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ illinois 
-    set net_	net2red
-    set test_	tcpLinuxRED_illinois
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_illinois instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxDropTail_westwood -superclass TestSuite
-Test/tcpLinuxDropTail_westwood instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ westwood 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_westwood
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_westwood instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_westwood -superclass TestSuite
-Test/tcpLinuxRED_westwood instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ westwood 
-    set net_	net2red
-    set test_	tcpLinuxRED_westwood
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_westwood instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-
-Class Test/tcpLinuxDropTail_highspeed -superclass TestSuite
-Test/tcpLinuxDropTail_highspeed instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ highspeed 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_highspeed
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_highspeed instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_highspeed -superclass TestSuite
-Test/tcpLinuxRED_highspeed instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ highspeed 
-    set net_	net2red
-    set test_	tcpLinuxRED_highspeed
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_highspeed instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-
-Class Test/tcpLinuxDropTail_scalable -superclass TestSuite
-Test/tcpLinuxDropTail_scalable instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ scalable 
-    set net_	net2droptail
-    set test_	tcpLinuxDropTail_scalable
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxDropTail_scalable instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-Class Test/tcpLinuxRED_scalable -superclass TestSuite
-Test/tcpLinuxRED_scalable instproc init {} {
-    $self instvar test_ guide_ cc_ net_
-    set cc_ scalable 
-    set net_	net2red
-    set test_	tcpLinuxRED_scalable
-    set guide_	"TCP Linux congestion control: $cc_ with $net_"
-    Test/tcpLinuxRED_scalable instproc run {} [Test/tcpLinuxBase info instbody run ]
-    $self next noTraceFiles
-}
-
-
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpOptions.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpOptions.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpOptions.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpOptions.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,968 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tcpOptions.tcl,v 1.22 2006/01/25 22:02:05 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-source support.tcl
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr $wrap * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-Class Topology/net4a -superclass Topology
-Topology/net4a instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-}
-
-
-TestSuite instproc finish file {
-	global quiet wrap wrap1 PERL
-	set space 512
-        #exec $PERL ../../bin/set_flow_id -s all.tr | \
-        #  $PERL ../../bin/getrc -s 2 -d 3 | \
-        #  $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-	if [string match {*full*} $file] {
-                exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-                   $PERL ../../bin/raw2xg -c -n $space -s 0.01 -m $wrap1 -t $file > temp.rands
-                exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-                   $PERL ../../bin/raw2xg -a -c -f -p -y -n $space -s 0.01 -m $wrap1 -t $file >> temp.rands
-	} else {
-	        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-	          $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-	        exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-	          $PERL ../../bin/raw2xg -a -c -p -y -s 0.01 -m $wrap -t $file \
-		  >> temp.rands
-	}
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype list} {
-	global wrap wrap1 quiet
-        $self instvar ns_ node_ testName_ guide_
-	$self setTopo 
-	puts "Guide: $guide_"
-
-        Agent/TCP set bugFix_ false
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "Fack"} {
-      		set tcp1 [$ns_ create-connection TCP/Fack $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "SackRH"} {
-      		set tcp1 [$ns_ create-connection TCP/SackRH $node_(s1) \
-          	TCPSink/Sack1 $node_(k1) $fid]
-    	} elseif {$tcptype == "FullTcp"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp]
-	        set sink [new Agent/TCP/FullTcp]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpTahoe"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Tahoe]
-	        set sink [new Agent/TCP/FullTcp/Tahoe]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpNewreno"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Newreno]
-	        set sink [new Agent/TCP/FullTcp/Newreno]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpSack1"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Sack]
-	        set sink [new Agent/TCP/FullTcp/Sack]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 50
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 2.0
-        $self drop_pkts $list
-
-        #$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-	$ns_ at 2.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-TestSuite instproc setup1 {tcptype list delay list1 delay1} {
-	global wrap wrap1 quiet
-        $self instvar ns_ node_ testName_ guide_
-	$self setTopo 
-	puts "Guide: $guide_"
-
-        Agent/TCP set bugFix_ false
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "Fack"} {
-      		set tcp1 [$ns_ create-connection TCP/Fack $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "SackRH"} {
-      		set tcp1 [$ns_ create-connection TCP/SackRH $node_(s1) \
-          	TCPSink/Sack1 $node_(k1) $fid]
-    	} elseif {$tcptype == "FullTcp"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp]
-	        set sink [new Agent/TCP/FullTcp]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpTahoe"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Tahoe]
-	        set sink [new Agent/TCP/FullTcp/Tahoe]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpNewreno"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Newreno]
-	        set sink [new Agent/TCP/FullTcp/Newreno]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpSack1"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Sack]
-	        set sink [new Agent/TCP/FullTcp/Sack]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 50
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 produce 22"
-
-        $self tcpDump $tcp1 2.0
-        $self dropPkts [$ns_ link $node_(k1) $node_(r1)] $fid $list true $delay
-        $self dropPkts [$ns_ link $node_(k1) $node_(r1)] $fid $list1 true $delay1
-
-        #$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-	$ns_ at 2.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-###################################################
-## One drop, numdupacks
-###################################################
-
-Class Test/onedrop_tahoe -superclass TestSuite
-Test/onedrop_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_tahoe
-	set guide_	"Tahoe TCP, numdupacks set to 3."
-	$self next pktTraceFile
-}
-Test/onedrop_tahoe instproc run {} {
-        $self setup Tahoe {3}
-}
-
-Class Test/onedrop_numdup4_tahoe -superclass TestSuite
-Test/onedrop_numdup4_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_numdup4_tahoe
-	set guide_	"Tahoe TCP, numdupacks set to 4."
-	Agent/TCP set numdupacks_ 4
-	Test/onedrop_numdup4_tahoe instproc run {} [Test/onedrop_tahoe info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/onedrop_tahoe_full -superclass TestSuite
-Test/onedrop_tahoe_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_tahoe_full
-	set guide_	"Tahoe Full TCP, numdupacks set to 3."
-	$self next pktTraceFile
-}
-Test/onedrop_tahoe_full instproc run {} {
-        $self setup FullTcpTahoe {4}
-}
-
-Class Test/onedrop_numdup4_tahoe_full -superclass TestSuite
-Test/onedrop_numdup4_tahoe_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_numdup4_tahoe_full
-	set guide_	"Tahoe Full TCP, numdupacks set to 4."
-	Agent/TCP/FullTcp set tcprexmtthresh_ 4
-	$self next pktTraceFile
-}
-Test/onedrop_numdup4_tahoe_full instproc run {} {
-        $self setup FullTcpTahoe {4}
-}
-
-Class Test/onedrop_reno -superclass TestSuite
-Test/onedrop_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_reno
-	set guide_      "Reno TCP, numdupacks set to 3."
-	$self next pktTraceFile
-}
-Test/onedrop_reno instproc run {} {
-        $self setup Reno {3}
-}
-
-Class Test/onedrop_numdup4_reno -superclass TestSuite
-Test/onedrop_numdup4_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_numdup4_reno
-	set guide_	"Reno TCP, numdupacks set to 4."
-	Agent/TCP set numdupacks_ 4
-	Test/onedrop_numdup4_reno instproc run {} [Test/onedrop_reno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/onedrop_reno_full -superclass TestSuite
-Test/onedrop_reno_full instproc init {} {
-
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_reno_full
-	set guide_	"Reno Full TCP, numdupacks set to 3."
-	$self next pktTraceFile
-}
-Test/onedrop_reno_full instproc run {} {
-        $self setup FullTcp {4}
-}
-
-Class Test/onedrop_numdup4_reno_full -superclass TestSuite
-Test/onedrop_numdup4_reno_full instproc init {} {
-
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_numdup4_reno_full
-	set guide_	"Reno Full TCP, numdupacks set to 4."
-	Agent/TCP/FullTcp set tcprexmtthresh_ 4
-	$self next pktTraceFile
-}
-Test/onedrop_numdup4_reno_full instproc run {} {
-        $self setup FullTcp {4}
-}
-
-Class Test/onedrop_newreno -superclass TestSuite
-Test/onedrop_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_newreno
-	set guide_      "NewReno TCP, numdupacks set to 3."
-	$self next pktTraceFile
-}
-Test/onedrop_newreno instproc run {} {
-        $self setup Newreno {3}
-}
-
-Class Test/onedrop_numdup4_newreno -superclass TestSuite
-Test/onedrop_numdup4_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_numdup4_newreno
-	set guide_      "NewReno TCP, numdupacks set to 4."
-	Agent/TCP set numdupacks_ 4
-	Test/onedrop_numdup4_newreno instproc run {} [Test/onedrop_newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/onedrop_newreno_full -superclass TestSuite
-Test/onedrop_newreno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_newreno_full
-	set guide_      "NewReno Full TCP, numdupacks set to 3."
-	$self next pktTraceFile
-}
-Test/onedrop_newreno_full instproc run {} {
-        $self setup FullTcpNewreno {4}
-}
-
-Class Test/onedrop_numdup4_newreno_full -superclass TestSuite
-Test/onedrop_numdup4_newreno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_numdup4_newreno_full
-	set guide_      "NewReno Full TCP, numdupacks set to 4."
-	Agent/TCP/FullTcp set tcprexmtthresh_ 4
-	$self next pktTraceFile
-}
-Test/onedrop_numdup4_newreno_full instproc run {} {
-        $self setup FullTcpNewreno {4}
-}
-
-Class Test/onedrop_sack -superclass TestSuite
-Test/onedrop_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_sack
-	set guide_      "Sack TCP, numdupacks set to 3."
-	$self next pktTraceFile
-}
-Test/onedrop_sack instproc run {} {
-        $self setup Sack1 {3}
-}
-
-Class Test/onedrop_numdup4_sack -superclass TestSuite
-Test/onedrop_numdup4_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_numdup4_sack
-	set guide_      "Sack TCP, numdupacks set to 4."
-	Agent/TCP set numdupacks_ 4
-	Test/onedrop_numdup4_sack instproc run {} [Test/onedrop_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-# Why does the sender sent two packets for the Fast Restransmit?
-Class Test/onedrop_sack_full -superclass TestSuite
-Test/onedrop_sack_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_sack_full
-	set guide_      "Sack Full TCP, numdupacks set to 3."
-	$self next pktTraceFile
-}
-Test/onedrop_sack_full instproc run {} {
-       $self setup FullTcpSack1 {4}
-}
-
-Class Test/onedrop_numdup4_sack_full -superclass TestSuite
-Test/onedrop_numdup4_sack_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_numdup4_sack_full
-	set guide_      "Sack Full TCP, numdupacks set to 4."
-	Agent/TCP/FullTcp set tcprexmtthresh_ 4
-	$self next pktTraceFile
-}
-Test/onedrop_numdup4_sack_full instproc run {} {
-        $self setup FullTcpSack1 {4}
-}
-
-#############################################################
-##  Tests for aggressive_maxburst_, for sending packets after
-##     invalid ACKs.
-#############################################################
-
-Class Test/maxburst_tahoe -superclass TestSuite
-Test/maxburst_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	maxburst_tahoe
-	set guide_	"Tahoe TCP, maxburst set to 3."
-	Agent/TCP set aggressive_maxburst_ 0
-	$self next pktTraceFile
-}
-Test/maxburst_tahoe instproc run {} {
-	Agent/TCP set maxburst_ 3
-        $self setup1 Tahoe {8 9 10 11 12 } {100} {13} {0.02}
-}
-
-Class Test/maxburst_tahoe1 -superclass TestSuite
-Test/maxburst_tahoe1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	maxburst_tahoe1
-	set guide_	"Tahoe TCP, maxburst set to 3, aggressive_maxburst_."
-	Agent/TCP set aggressive_maxburst_ 1
-	Test/maxburst_tahoe1 instproc run {} [Test/maxburst_tahoe info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/maxburst_reno -superclass TestSuite
-Test/maxburst_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	maxburst_reno
-	set guide_	"Tahoe TCP, maxburst set to 3."
-	Agent/TCP set aggressive_maxburst_ 0
-	$self next pktTraceFile
-}
-Test/maxburst_reno instproc run {} {
-	Agent/TCP set maxburst_ 3
-        $self setup1 Reno {8 9 10 11 12 } {100} {13} {0.02}
-}
-
-Class Test/maxburst_reno1 -superclass TestSuite
-Test/maxburst_reno1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	maxburst_reno1
-	set guide_	"Reno TCP, maxburst set to 3, aggressive_maxburst_."
-	Agent/TCP set aggressive_maxburst_ 1
-	Test/maxburst_reno1 instproc run {} [Test/maxburst_reno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/maxburst_newreno -superclass TestSuite
-Test/maxburst_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	maxburst_newreno
-	set guide_	"NewReno TCP, maxburst set to 3."
-	Agent/TCP set aggressive_maxburst_ 0
-	$self next pktTraceFile
-}
-Test/maxburst_newreno instproc run {} {
-	Agent/TCP set maxburst_ 3
-        $self setup1 Newreno {8 9 10 11 12 } {100} {13} {0.02}
-}
-
-Class Test/maxburst_newreno1 -superclass TestSuite
-Test/maxburst_newreno1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	maxburst_newreno1
-	set guide_	"NewReno TCP, maxburst set to 3, aggressive_maxburst_."
-	Agent/TCP set aggressive_maxburst_ 1
-	Test/maxburst_newreno1 instproc run {} [Test/maxburst_newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/maxburst_sack -superclass TestSuite
-Test/maxburst_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	maxburst_sack
-	set guide_	"Sack TCP, maxburst set to 3."
-	Agent/TCP set aggressive_maxburst_ 0
-	$self next pktTraceFile
-}
-Test/maxburst_sack instproc run {} {
-	Agent/TCP set maxburst_ 3
-        $self setup1 Sack1 {8 9 10 11 12 } {100} {13} {0.02}
-}
-
-Class Test/maxburst_sack1 -superclass TestSuite
-Test/maxburst_sack1 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4a
-	set test_	maxburst_sack1
-	set guide_	"Sack TCP, maxburst set to 3, aggressive_maxburst_."
-	Agent/TCP set aggressive_maxburst_ 1
-	Test/maxburst_sack1 instproc run {} [Test/maxburst_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-###################################################
-## Timeout, from a list of packets dropped.
-###################################################
-
-TestSuite instproc setup2 {tcptype list endtime} {
-	global wrap wrap1 quiet
-        $self instvar ns_ node_ testName_ guide_
-	$self setTopo 
-	puts "Guide: $guide_"
-
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "Fack"} {
-      		set tcp1 [$ns_ create-connection TCP/Fack $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "SackRH"} {
-      		set tcp1 [$ns_ create-connection TCP/SackRH $node_(s1) \
-          	TCPSink/Sack1 $node_(k1) $fid]
-    	} elseif {$tcptype == "FullTcp"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp]
-	        set sink [new Agent/TCP/FullTcp]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpTahoe"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Tahoe]
-	        set sink [new Agent/TCP/FullTcp/Tahoe]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpNewreno"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Newreno]
-	        set sink [new Agent/TCP/FullTcp/Newreno]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpSack1"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Sack]
-	        set sink [new Agent/TCP/FullTcp/Sack]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 50
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 2.0
-        $self drop_pkts $list
-
-        #$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-	$ns_ at $endtime "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-###################################################
-## Timeouts, scenarios that are better without bugfix.
-##   This also includes tests for timestamps with ts_resetRTO_,
-##   to reset the RTO backoff after a valid RTT measurement.
-###################################################
-
-Class Test/timeouts_tahoe -superclass TestSuite
-Test/timeouts_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_tahoe
-	set guide_      "Tahoe, timeouts, bugfix"
-        $self next pktTraceFile
-}
-Test/timeouts_tahoe instproc run {} {
-        $self setup2 Tahoe {7 8 9 10 11 12 13 14 21} 8
-}
-
-Class Test/timeouts_tahoe1 -superclass TestSuite
-Test/timeouts_tahoe1 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_tahoe1
-	set guide_      "Tahoe, timeouts, better without bugfix"
-        Agent/TCP set bugFix_ false
-	Test/timeouts_tahoe1 instproc run {} [Test/timeouts_tahoe info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_tahoe2 -superclass TestSuite
-Test/timeouts_tahoe2 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_tahoe2
-	set guide_      "Tahoe, timeouts, bugfix, with timestamps, new version"
-	Agent/TCP set timestamps_ true
-	Agent/TCP set ts_resetRTO_ true
-	Test/timeouts_tahoe2 instproc run {} [Test/timeouts_tahoe info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_tahoe3 -superclass TestSuite
-Test/timeouts_tahoe3 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_tahoe3
-	set guide_      "Tahoe, timeouts, bugfix, with timestamps, old version"
-	Agent/TCP set timestamps_ true
-	#Agent/TCP set ts_resetRTO_ true
-	Test/timeouts_tahoe3 instproc run {} [Test/timeouts_tahoe info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_reno -superclass TestSuite
-Test/timeouts_reno instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_reno
-	set guide_      "Reno, timeouts, bugfix"
-        $self next pktTraceFile
-}
-Test/timeouts_reno instproc run {} {
-        $self setup2 Reno {7 8 9 10 11 12 13 14 21} 8
-}
-
-Class Test/timeouts_reno_noexitFR -superclass TestSuite
-Test/timeouts_reno_noexitFR instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_reno_noexitFR
-	set guide_      "Reno, timeouts, bugfix, without exitFastRetrans_"
-	Agent/TCP set exitFastRetrans_ false
-	Test/timeouts_reno_noexitFR instproc run {} [Test/timeouts_reno info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_reno1 -superclass TestSuite
-Test/timeouts_reno1 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_reno1
-	set guide_      "Reno, timeouts, better without bugfix"
-        Agent/TCP set bugFix_ false
-	Test/timeouts_reno1 instproc run {} [Test/timeouts_reno info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_reno2 -superclass TestSuite
-Test/timeouts_reno2 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_reno2
-	set guide_      "Reno, timeouts, bugfix, with timestamps, old version"
-	Agent/TCP set timestamps_ true
-	Agent/TCP set ts_resetRTO_ true
-	Test/timeouts_reno2 instproc run {} [Test/timeouts_reno info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_reno3 -superclass TestSuite
-Test/timeouts_reno3 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_reno3
-	set guide_      "Reno, timeouts, bugfix, with timestamps, new version"
-	Agent/TCP set timestamps_ true
-	#Agent/TCP set ts_resetRTO_ true
-	Test/timeouts_reno3 instproc run {} [Test/timeouts_reno info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_newreno -superclass TestSuite
-Test/timeouts_newreno instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_newreno
-	set guide_      "NewReno, timeouts, bugfix"
-        $self next pktTraceFile
-}
-Test/timeouts_newreno instproc run {} {
-        $self setup2 Newreno {7 8 9 10 11 12 13 14 21} 8
-}
-
-Class Test/timeouts_newreno_noexitFR -superclass TestSuite
-Test/timeouts_newreno_noexitFR instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_newreno_noexitFR
-	set guide_      "NewReno, timeouts, bugfix, without exitFastRetrans_"
-	Agent/TCP set exitFastRetrans_ false
-	Test/timeouts_newreno_noexitFR instproc run {} [Test/timeouts_newreno info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_newreno1 -superclass TestSuite
-Test/timeouts_newreno1 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_newreno1
-	set guide_      "NewReno, timeouts, better without bugfix"
-        Agent/TCP set bugFix_ false
-	Test/timeouts_newreno1 instproc run {} [Test/timeouts_newreno info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_newreno2 -superclass TestSuite
-Test/timeouts_newreno2 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_newreno2
-	set guide_      "NewReno, timeouts, bugfix, with timestamps, old version"
-	Agent/TCP set timestamps_ true
-	Agent/TCP set ts_resetRTO_ true
-	Test/timeouts_newreno2 instproc run {} [Test/timeouts_newreno info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_newreno3 -superclass TestSuite
-Test/timeouts_newreno3 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_newreno3
-	set guide_      "NewReno, timeouts, bugfix, with timestamps, new version"
-	Agent/TCP set timestamps_ true
-	#Agent/TCP set ts_resetRTO_ true
-	Test/timeouts_newreno3 instproc run {} [Test/timeouts_newreno info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_sack -superclass TestSuite
-Test/timeouts_sack instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_sack
-	set guide_      "Sack, timeouts, bugfix"
-        $self next pktTraceFile
-}
-Test/timeouts_sack instproc run {} {
-        $self setup2 Sack1 {7 8 9 10 11 12 13 14 21} 8
-}
-
-Class Test/timeouts_sack1 -superclass TestSuite
-Test/timeouts_sack1 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_sack1
-	set guide_      "Sack, timeouts, better without bugfix"
-        Agent/TCP set bugFix_ false
-	Test/timeouts_sack1 instproc run {} [Test/timeouts_sack info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_sack2 -superclass TestSuite
-Test/timeouts_sack2 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_sack2
-	set guide_      "Sack, timeouts, bugfix, with timestamps, old version"
-	Agent/TCP set timestamps_ true
-	Agent/TCP set ts_resetRTO_ true
-	Test/timeouts_sack2 instproc run {} [Test/timeouts_sack info instbody run ]
-        $self next pktTraceFile
-}
-
-Class Test/timeouts_sack3 -superclass TestSuite
-Test/timeouts_sack3 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeouts_sack3
-	set guide_      "Sack, timeouts, bugfix, with timestamps, new version"
-	Agent/TCP set timestamps_ true
-	#Agent/TCP set ts_resetRTO_ true
-	Test/timeouts_sack3 instproc run {} [Test/timeouts_sack info instbody run ]
-        $self next pktTraceFile
-}
-
-###################################################
-## Timeouts, scenarios that are better with bugfix.
-###################################################
-
-Class Test/timeoutsA_tahoe -superclass TestSuite
-Test/timeoutsA_tahoe instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeoutsA_tahoe
-	set guide_      "Tahoe, timeoutsA, bugfix"
-        #Agent/TCP set bugFix_ false
-        $self next pktTraceFile
-}
-Test/timeoutsA_tahoe instproc run {} {
-        $self setup2 Tahoe {20 21 22 23 24 25 26 31 41} 5
-}
-
-Class Test/timeoutsA_tahoe1 -superclass TestSuite
-Test/timeoutsA_tahoe1 instproc init {} {
-        $self instvar net_ test_ guide_
-        set net_        net4
-        set test_       timeoutsA_tahoe1
-	set guide_      "Tahoe, timeoutsA, worse without bugfix"
-        Agent/TCP set bugFix_ false
-	Test/timeoutsA_tahoe1 instproc run {} [Test/timeoutsA_tahoe info instbody run ]
-        $self next pktTraceFile
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpReset.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpReset.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpReset.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpReset.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,408 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tcpReset.tcl,v 1.14 2006/01/25 22:02:05 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcp.tcl
-#
-
-source misc.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-source topologies.tcl
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-TestSuite instproc finish file {
-	global quiet PERL
-        exec $PERL ../../bin/set_flow_id -s all.tr | \
-          $PERL ../../bin/getrc -s 2 -d 3 | \
-          $PERL ../../bin/raw2xg -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-	## regsub \\(.+\\) $file {} filename
-	## exec csh gnuplotA.com temp.rands $filename
-        exit 0
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 20ms bottleneck.
-# Queue-limit on bottleneck is 25 packets.
-#
-Class Topology/net6 -superclass NodeTopology/4nodes
-Topology/net6 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 20ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-# 
-# Arrange for tcp source stats to be dumped for $tcpSrc every
-# $interval seconds of simulation time
-# 
-TestSuite instproc tcpDump { tcpSrc interval } {
-        global quiet
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcpSrc)] {
-                set dump_inst_($tcpSrc) 1
-                $ns_ at 0.0 "$self tcpDump $tcpSrc $interval"
-                return
-        }
-        $ns_ at [expr [$ns_ now] + $interval] "$self tcpDump $tcpSrc $interval"
-        set report [$ns_ now]/cwnd=[format "%.4f" [$tcpSrc set cwnd_]]/ssthresh=[$tcpSrc set ssthresh_]/ack=[$tcpSrc set ack_]
-        if {$quiet == "false"} {
-                puts $report
-        }
-}
-
-
-# Definition of test-suite tests
-
-Class Test/reset -superclass TestSuite
-Test/reset instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	reset
-	set guide_	"Resetting a TCP connection."
-	$self next
-}
-Test/reset instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP $node_(s1) TCPSink $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 1.1 "$tcp1 reset"
-	$ns_ at 1.1 "$sink reset"
-	$ns_ at 1.5 "$ftp1 producemore 20"
-        $self tcpDump $tcp1 1.0
-
-	$self traceQueues $node_(r1) [$self openTrace 3.0 $testName_]
-	$ns_ run
-}
-
-Class Test/resetDelAck -superclass TestSuite
-Test/resetDelAck instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	resetDelAck
-	set guide_	"Resetting a DelAck TCP connection."
-	$self next
-}
-Test/resetDelAck instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP $node_(s1) TCPSink/DelAck $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 1.1 "$tcp1 reset"
-	$ns_ at 1.1 "$sink reset"
-	$ns_ at 1.5 "$ftp1 producemore 20"
-
-	$self traceQueues $node_(r1) [$self openTrace 3.0 $testName_]
-	$ns_ run
-}
-
-Class Test/resetDelAck1 -superclass TestSuite
-Test/resetDelAck1 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	resetDelAck1
-	set guide_	\
-	"Resetting a DelAck TCP connection, different timing between connections."
-	$self next
-}
-Test/resetDelAck1 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP $node_(s1) TCPSink/DelAck $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 0.41 "$tcp1 reset"
-	$ns_ at 0.41 "$sink reset"
-	$ns_ at 5.00 "$ftp1 producemore 20"
-
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/reset1 -superclass TestSuite
-Test/reset1 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	reset1
-	set guide_	\
-	"Resetting a TCP connection."
-	$self next
-}
-Test/reset1 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP $node_(s1) TCPSink $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 0.2 "$tcp1 reset"
-	$ns_ at 0.2 "$sink reset"
-	$ns_ at 0.201 "$ftp1 producemore 20"
-        $self tcpDump $tcp1 1.0
-
-	$self traceQueues $node_(r1) [$self openTrace 3.0 $testName_]
-	$ns_ run
-}
-
-Class Test/resetDelAck2 -superclass TestSuite
-Test/resetDelAck2 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	resetDelAck2
-	set guide_	\
-	"Resetting a TCP connection when there is unsent data."
-	$self next
-}
-Test/resetDelAck2 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP $node_(s1) TCPSink/DelAck $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 0.32 "$tcp1 reset"
-	$ns_ at 0.32 "$sink reset"
-	$ns_ at 0.321 "$ftp1 producemore 20"
-
-	$self traceQueues $node_(r1) [$self openTrace 3.0 $testName_]
-	$ns_ run
-}
-
-Class Test/resetDelAck3 -superclass TestSuite
-Test/resetDelAck3 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	resetDelAck3
-	set guide_	\
-	"Resetting a TCP connection when there is unsent data."
-	$self next
-}
-Test/resetDelAck3 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP $node_(s1) TCPSink/DelAck $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 0.32 "$tcp1 reset"
-	$ns_ at 0.32 "$sink reset"
-	$ns_ at 0.321 "$ftp1 producemore 20"
-
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-Class Test/resetNewreno -superclass TestSuite
-Test/resetNewreno instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	resetNewreno
-	set guide_	\
-	"NewReno TCP, resetting a TCP connection."
-	$self next
-}
-Test/resetNewreno instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP/Newreno $node_(s1) TCPSink $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 0.2 "$tcp1 reset"
-	$ns_ at 0.2 "$sink reset"
-	$ns_ at 0.201 "$ftp1 producemore 20"
-        $self tcpDump $tcp1 1.0
-
-	$self traceQueues $node_(r1) [$self openTrace 3.0 $testName_]
-	$ns_ run
-}
-
-Class Test/resetSack1 -superclass TestSuite
-Test/resetSack1 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	resetSack1
-	set guide_	\
-	"Sack TCP, resetting a TCP connection."
-	$self next
-}
-Test/resetSack1 instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 0.2 "$tcp1 reset"
-	$ns_ at 0.2 "$sink reset"
-	$ns_ at 0.201 "$ftp1 producemore 20"
-        $self tcpDump $tcp1 1.0
-
-	$self traceQueues $node_(r1) [$self openTrace 3.0 $testName_]
-	$ns_ run
-}
-
-Class Test/resetReno -superclass TestSuite
-Test/resetReno instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	resetReno
-	set guide_	\
-	"Reno TCP, resetting a TCP connection."
-	$self next
-}
-Test/resetReno instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp [$ns_ create-connection-list TCP/Reno $node_(s1) TCPSink $node_(k1) 1]
-	set tcp1 [lindex $tcp 0]
-        set sink [lindex $tcp 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 10"
-	$ns_ at 0.2 "$tcp1 reset"
-	$ns_ at 0.2 "$sink reset"
-	$ns_ at 0.201 "$ftp1 producemore 20"
-        $self tcpDump $tcp1 1.0
-
-	$self traceQueues $node_(r1) [$self openTrace 3.0 $testName_]
-	$ns_ run
-}
-
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,944 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tcp.tcl,v 1.41 2007/10/24 22:40:24 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcp.tcl
-#
-
-source misc.tcl
-source topologies.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Queue/RED set bytes_ false              
-# default changed on 10/11/2004.
-Queue/RED set queue_in_bytes_ false
-# default changed on 10/11/2004.
-Queue/RED set q_weight_ 0.002
-Queue/RED set thresh_ 5 
-Queue/RED set maxthresh_ 15
-# The RED parameter defaults are being changed for automatic configuration.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Agent/TCP set rfc2988_ true
-
-TestSuite instproc finish file {
-	global quiet PERL
-        exec $PERL ../../bin/set_flow_id -s all.tr | \
-          $PERL ../../bin/getrc -s 2 -d 3 | \
-          $PERL ../../bin/raw2xg -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-	## regsub \\(.+\\) $file {} filename
-	## exec csh gnuplotA.com temp.rands $filename
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: [format %.3f $time] sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass NodeTopology/4nodes
-Topology/net4 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 10ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 2
-    $ns queue-limit $node_(k1) $node_(r1) 2
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-TestSuite instproc set_lossylink {} {
-        $self instvar lossylink_ ns_ node_
-        set lossylink_ [$ns_ link $node_(r1) $node_(k1)]
-        set em [new ErrorModule Fid]
-        set errmodel [new ErrorModel/Periodic]
-        $errmodel unit pkt
-        $lossylink_ errormodule $em
-}
-
-TestSuite instproc emod {} {
-        $self instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-}
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 20ms bottleneck.
-# Queue-limit on bottleneck is 25 packets.
-#
-Class Topology/net6 -superclass NodeTopology/4nodes
-Topology/net6 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 20ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class Topology/net8 -superclass NodeTopology/4nodes
-Topology/net8 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    Queue/RED set setbit_ true
-    $ns duplex-link $node_(s1) $node_(s2) 1000Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 9.6Kb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 10ms RED
-    $ns queue-limit $node_(r1) $node_(k1) 25
-    $ns queue-limit $node_(k1) $node_(r1) 25
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-# Definition of test-suite tests
-
-# This test shows two TCPs when one is ECN-capable and the other
-# is not.
-
-Class Test/ecn -superclass TestSuite
-Test/ecn instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	ecn_(one_with_ecn,_one_without)
-	set guide_	"One connection with ECN, and one without ECN."
-	Agent/TCP set old_ecn_ 1
-	$self next
-}
-Test/ecn instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	# Set up TCP connection
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$tcp1 set window_ 30
-	$tcp1 set ecn_ 1
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 start"
-
-	# Set up TCP connection
-	set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp2 set window_ 20
-	$tcp2 set ecn_ 0
-	set ftp2 [$tcp2 attach-app FTP]
-	$ns_ at 3.0 "$ftp2 start"
-
-	$self tcpDump $tcp1 5.0
-	$self tcpDump $tcp2 5.0
-
-	$self traceQueues $node_(r1) [$self openTrace 10.0 $testName_]
-	$ns_ run
-}
-
-# This test shows the retransmit timeout value when the first packet
-# of a connection is dropped, and the backoff of the retransmit timer
-# as subsequent packets are dropped.
-#
-# This test also shows that once the retransmit timer is backed off,
-# it is later un-backed.
-
-Class Test/timers -superclass TestSuite
-Test/timers instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	timers_(first_packet_dropped)
-	set guide_	"TCP's retransmit timers when first and second packets are dropped."
-	$self next
-}
-Test/timers instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_ 
-	puts "Guide: $guide_"
-        $self set_lossylink
-
-	if {$quiet == "false"} {puts "tcpTICK: [Agent/TCP set tcpTick_]"}
-
-	# Set up TCP connection
-	set tcp1 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-	$tcp1 set window_ 3
-	set ftp2 [$tcp1 attach-app FTP]
-	$ns_ at 0.09 "$ftp2 start"
-	$ns_ at 1.0 "$self printtimersAll $tcp1 1.0 1.0" 
-
-	$self drop_pkts {0 1}
-
-	$self traceQueues $node_(r1) [$self openTrace 25.0 $testName_]
-	$ns_ run
-}
-
-Class Test/timersA -superclass TestSuite
-Test/timersA instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	timersA_(early_packet_dropped)
-	set guide_	"TCP's retransmit timers when the third packet is droopped."
-	Agent/TCP set timerfix_ false
-	$self next
-}
-#  This one is funny.  
-#  No fast retransmit.
-#  First retransmit timer expires, packet 2 is retransmitted.  Backoff 1.
-#  Ack for 2 comes in.  Karns.  Backoff is still 2.  Send packet 5, set timer.
-#  Send packet 6.
-#  Ack for 5 comes in.  Reset timer, the reset backoff is 1. Send packet 7.
-#  Retransmit timer expires.  Set backoff to 2, reset timer.
-#  
-Test/timersA instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-        $self set_lossylink
-
-	if {$quiet == "false"} {puts "tcpTICK: [Agent/TCP set tcpTick_]"}
-
-	# Set up TCP connection
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 1]
-	$tcp1 set window_ 5
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 1600"
-	$ns_ at 25.3 "$ftp1 producemore 5"
-	$ns_ at 25.7 "$ftp1 producemore 5" 
-	$ns_ at 26.1 "$ftp1 producemore 5" 
-	$ns_ at 26.5 "$ftp1 producemore 5" 
-	$ns_ at 26.9 "$ftp1 producemore 5" 
-	$ns_ at 28.8 "$ftp1 producemore 5" 
-
-	$self drop_pkts {2 7 9 10 11}
-
-	$self traceQueues $node_(r1) [$self openTrace 3.5 $testName_]
-	$ns_ run
-}
-
-Class Test/timersAfix -superclass TestSuite
-Test/timersAfix instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	timersAfix_(early_packet_dropped)
-	set guide_	"Agent/TCP, timerfix_ set, for updating timer *after* updating the RTT." 
-	Agent/TCP set timerfix_ true
-        Test/timersAfix instproc run {} [Test/timersA info instbody run]
-	$self next
-}
-
-# Multiply the mean deviation by 8 instead of by 4.
-#
-Class Test/timersA1 -superclass TestSuite
-Test/timersA1 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	timersA1_(multiple_of_8_instead_of_4)
-	set guide_	"Agent/TCP, rttvar_exp_ set to 3 instead of 2."
-	Agent/TCP set rttvar_exp_ 3
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        Test/timersA1 instproc run {} [Test/timersA info instbody run ]
-	$self next
-}
-
-# timestamps, and tcpTick more fine-grained.
-#
-Class Test/timersA2 -superclass TestSuite
-Test/timersA2 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	timersA2_(timestamps,_fine-grained_clock)
-	set guide_	"Agent/TCP, tcpTick_ set to 0.001"
-        Agent/TCP set timestamps_ true
-	Agent/TCP set tcpTick_ 0.001
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        Test/timersA2 instproc run {} [Test/timersA info instbody run ]
-	$self next
-}
-
-# Update the smoothed round-trip with weight 1/16 instead of 1/8.
-#
-Class Test/timersA3 -superclass TestSuite
-Test/timersA3 instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net4
-	set test_	timersA3_(weight_1/32_instead_of_1/8)
-	set guide_	"Agent/TCP, T_SRTT_BITS set to 5 instead of 3"
-	Agent/TCP set timestamps_ true
-	Agent/TCP set tcpTick_ 0.001
-	Agent/TCP set T_SRTT_BITS 5
-	Agent/TCP set T_RTTVAR_BITS 4
-	Agent/TCP set timerfix_ false
-	# The default is being changed to true.
-        Test/timersA3 instproc run {} [Test/timersA info instbody run ]
-	$self next
-}
-
-Class Test/timers1 -superclass TestSuite
-Test/timers1 instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo  
-        set defNet_     net2
-        set test_       timers1_(tcpTick_=default,0.1)
-	set guide_	"tcpTick_ set to default of 0.1"
-        $self next
-}
-Test/timers1 instproc run {} {
-	global quiet
-        $self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	if {$quiet == "false"} {puts "tcpTICK: [Agent/TCP set tcpTick_]"}
-        $ns_ queue-limit $node_(r1) $node_(r2) 29
-
-        set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-#        set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink/DelAck $node_(r2) 1]
-        $tcp1 set window_ 40
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 produce 180"
-	$ns_ at 1.0 "$self printtimersAll $tcp1 1.0 1.0" 
-	$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-        $ns_ run
-}
-
-Class Test/timers2 -superclass TestSuite
-Test/timers2 instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo  
-        set defNet_     net2
-        set test_       timers2_(tcpTick_=0.5)
-	set guide_	"tcpTick_ set to 0.5"
-        $self next
-}
-
-Test/timers2 instproc run {} {
-	global quiet
-        $self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set tick 0.5
-	if {$quiet == "false"} {puts "tcpTICK: $tick"}
-	Agent/TCP set tcpTick_ $tick 
-        $ns_ queue-limit $node_(r1) $node_(r2) 29
-
-        set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-        $tcp1 set window_ 40
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 produce 180"
-	$ns_ at 1.0 "$self printtimersAll $tcp1 1.0 1.0" 
-	$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-        $ns_ run
-}
-
-Class Test/timers3 -superclass TestSuite
-Test/timers3 instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo  
-        set defNet_     net2
-        set test_       timers3_(tcpTick_=0.001)
-	set guide_	"tcpTick_ set to 0.001"
-        $self next
-}
-
-Test/timers3 instproc run {} {
-	global quiet
-        $self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set tick 0.001
-	if {$quiet == "false"} {puts "tcpTICK: $tick"}
-	Agent/TCP set tcpTick_ $tick 
-        $ns_ queue-limit $node_(r1) $node_(r2) 29
-
-        set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-        $tcp1 set window_ 40
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 produce 180"
-	$ns_ at 1.0 "$self printtimersAll $tcp1 1.0 1.0" 
-	$self traceQueues $node_(r1) [$self openTrace 4.0 $testName_]
-        $ns_ run
-}
-
-Class Test/timers4 -superclass TestSuite
-Test/timers4 instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo  
-        set defNet_     net2
-        set test_       timers4_(tcpTick_=0.001)
-	set guide_	"With timers5, shows that estimated RTT updated only once per RTT."
-        $self next
-}
-
-Test/timers4 instproc run {} {
-	global quiet
-        $self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set tick 0.001
-	if {$quiet == "false"} {puts "tcpTICK: $tick"}
-	Agent/TCP set tcpTick_ $tick 
-        $ns_ queue-limit $node_(r1) $node_(r2) 29
-
-        set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-        $tcp1 set window_ 10
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-	$ns_ at 0.1 "$self printtimersAll $tcp1 0.1 0.1" 
-	$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-        $ns_ run
-}
-
-Class Test/timers5 -superclass TestSuite
-Test/timers5 instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo  
-        set defNet_     net2
-        set test_       timers5_(tcpTick_=0.001)
-	set guide_	"With timers4, shows that estimated RTT updated only once per RTT."
-        $self next
-}
-
-Test/timers5 instproc run {} {
-	global quiet
-        $self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-	set tick 0.001
-	if {$quiet == "false"} {puts "tcpTICK: $tick"}
-	Agent/TCP set tcpTick_ $tick 
-        $ns_ queue-limit $node_(r1) $node_(r2) 29
-
-        set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink/DelAck $node_(r2) 0]
-        $tcp1 set window_ 2
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 0.0 "$ftp1 start"
-	$ns_ at 0.1 "$self printtimersAll $tcp1 0.1 0.1" 
-	$self traceQueues $node_(r1) [$self openTrace 2.0 $testName_]
-        $ns_ run
-}
-
-TestSuite instproc printtcp { label tcp time } {
-	puts ""
-	puts "tcp: $label time: [format %.3f $time]" 
-	puts "total_data_packets_sent: [$tcp set ndatapack_] data_bytes_sent: [$tcp set ndatabytes_]" 
-	puts "packets_resent: [$tcp set nrexmitpack_] bytes_resent: [$tcp set nrexmitbytes_]" 
-	puts "ack_packets_received: [$tcp set nackpack_]"
-	puts "retransmit_timeouts: [$tcp set nrexmit_]" 
-
-}
-
-Class Test/timers_backoffs -superclass TestSuite
-Test/timers_backoffs instproc init topo {
-	$self instvar net_ defNet_ test_ guide_
-	set net_	$topo
-	set defNet_	net6
-	set test_	timers_backoffs
-	set guide_	"TCP's retransmit timer, max RTO of 60 seconds."
-	$self next
-}
-Test/timers_backoffs instproc run {} {
-	global quiet
-	$self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-	$self set_lossylink
-
-	if {$quiet == "false"} {puts "tcpTICK: [Agent/TCP set tcpTick_]"}
-
-	# Set up TCP connection
-	set tcp1 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 1]
-	$tcp1 set window_ 1
-	set ftp1 [$tcp1 attach-app FTP]
-	$ns_ at 0.0 "$ftp1 produce 30"
-	$self drop_pkts {10 11 12 13 14 15 16 17 18 19}
-
-	$self traceQueues $node_(r1) [$self openTrace 400.0 $testName_]
-	$ns_ run
-}
-
-Class Test/stats1 -superclass TestSuite
-Test/stats1 instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net0
-        set test_       stats1
-	set guide_	"TCP statistics on the number of retransmit timeouts."
-        $self next
-} 
-
-Test/stats1 instproc run {} {
-	global quiet
-        $self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-
-        $ns_ delay $node_(s2) $node_(r1) 200ms
-        $ns_ delay $node_(r1) $node_(s2) 200ms
-        $ns_ queue-limit $node_(r1) $node_(k1) 10
-        $ns_ queue-limit $node_(k1) $node_(r1) 10
-
-        set stoptime 10.1
-
-        set tcp1 [$ns_ create-connection TCP/Reno $node_(s1) TCPSink $node_(k1) 0]
-        $tcp1 set window_ 30
-        set tcp2 [$ns_ create-connection TCP $node_(s2) TCPSink $node_(k1) 1]
-        $tcp2 set window_ 3
-        set ftp1 [$tcp1 attach-app FTP]
-        set ftp2 [$tcp2 attach-app FTP]
- 
-        $ns_ at 1.0 "$ftp1 start" 
-        $ns_ at 1.0 "$ftp2 start"
-
-        $self tcpDumpAll $tcp1 10.0 tcp1
- 	$self tcpDumpAll $tcp2 10.0 tcp2
-
-	$ns_ at 10.0 "$self printtcp 1 $tcp1 10.0" 
-	$ns_ at 10.0 "$self printtcp 2 $tcp2 10.0" 
-	$ns_ at 10.0 "puts \"\""
- 
-        # trace only the bottleneck link 
-        $self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-        $ns_ run
-}
-
-TestSuite instproc run1 { tcp0 {stoptime 30.1}} {
-        $self instvar ns_ node_ testName_ guide_
-
-	set count 100 
-	set count1 3
-
-    	set ftp0 [$tcp0 attach-app FTP]
-    	$ns_ at 0.0  "$ftp0 produce $count" 
-	$ns_ at 2.4  "$ftp0 producemore $count"  
-	$ns_ at 2.5  "$ftp0 producemore $count"
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/quiescent_100ms -superclass TestSuite
-Test/quiescent_100ms instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescent_100ms
-	set guide_	"Tahoe TCP after a quiescent period."
-	Agent/TCP set QOption_ 0
-        $self next
-} 
-Test/quiescent_100ms instproc run {} {
-	global quiet
-        $self instvar ns_ node_ guide_ 
-	puts "Guide: $guide_"
-	Agent/TCP set packetSize_ 100 
-	Agent/TCP set window_ 25
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 0]
-	$self run1 $tcp0
-}
-
-Class Test/quiescentB -superclass TestSuite
-Test/quiescentB instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescentB
-	set guide_	"Tahoe TCP entering a quiescent period with a smaller cwnd."
-	Agent/TCP set QOption_ 0
-        $self next
-} 
-Test/quiescentB instproc run {} {
-	global quiet
-        $self instvar ns_ node_ guide_
-	puts "Guide: $guide_"
-	$self set_lossylink
-	Agent/TCP set packetSize_ 100 
-	Agent/TCP set window_ 25
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 1]
-	$self drop_pkts {2}
-	$self run1 $tcp0 3.0
-}
-
-Class Test/quiescentB_qoption -superclass TestSuite
-Test/quiescentB_qoption instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescentB_qoption
-	set guide_      "Tahoe TCP entering a quiescent period, TCP quiescence option set."
-	Agent/TCP set QOption_ 1
-        $self next
-} 
-Test/quiescentB_qoption instproc run {} {
-	global quiet
-        $self instvar ns_ node_ guide_
-	puts "Guide: $guide_"
-	$self set_lossylink
-	Agent/TCP set packetSize_ 100 
-	Agent/TCP set window_ 25
-	set tcp0 [$ns_ create-connection TCP $node_(s1) TCPSink $node_(k1) 1]
-	$self drop_pkts {2}
-	$self run1 $tcp0 3.0
-}
-
-
-TestSuite instproc run2 { tcp0 {stoptime 3.0}} { 
-        $self instvar ns_ node_ testName_ 
-	set count 25
-	set count1 10
-	set count2 3
-	set count3 100
-
-    	set data0 [$tcp0 attach-app Telnet]
-	$data0 set interval_ 0.0005
-	$ns_ at 0 "$data0 start"
-	$ns_ at 0.045 "$data0 set interval_ 0.01"
-	$ns_ at 2.2 "$data0 set interval_ 0.0005" 
-	$ns_ at 2.5 "$data0 stop"
-	$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-	$ns_ run
-}
-
-Class Test/underutilized_100ms -superclass TestSuite
-Test/underutilized_100ms instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       underutilized_100ms
-	set guide_      "Tahoe TCP, underutilized, TCP quiescence option not set."
-	Agent/TCP set QOption_ 0
-        $self next
-} 
-Test/underutilized_100ms instproc run {{sender TCP} {receiver TCPSink}} {
-	global quiet
-        $self instvar ns_ node_ guide_
-	puts "Guide: $guide_"
-	Agent/TCP set packetSize_ 100 
-	Agent/TCP set window_ 100
-	set tcp0 [$ns_ create-connection $sender $node_(s1) $receiver $node_(k1) 0]
-	$self run2 $tcp0
-}
-
-Class Test/underutilized_100ms_control -superclass TestSuite
-Test/underutilized_100ms_control instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       underutilized_100ms_control
-	set guide_      "Tahoe TCP, underutilized, TCP quiescence option not set,
-	control_increase set."
-        Agent/TCP set QOption_ 0
-        Agent/TCP set control_increase_ 1
-        Test/underutilized_100ms_control instproc run {{sender TCP} {receiver TCPSink}} [Test/underutilized_100ms info instbody run ]
-        $self next
-}
-
-Class Test/underutilized_100ms_control_Q -superclass TestSuite
-Test/underutilized_100ms_control_Q instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       underutilized_100ms_control_Q
-	set guide_      "Tahoe TCP, underutilized, TCP quiescence option set,
-	control_increase set."
-        Agent/TCP set QOption_ 1
-        Agent/TCP set control_increase_ 1
-        Test/underutilized_100ms_control_Q instproc run {{sender TCP} {receiver TCPSink}} [Test/underutilized_100ms info instbody run ]
-        $self next
-}
-
-Class Test/underutilized_100ms_Q -superclass TestSuite
-Test/underutilized_100ms_Q instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       underutilized_100ms_Q
-	set guide_      "Tahoe TCP, underutilized, TCP quiescence option set,
-	control_increase not set."
-        Agent/TCP set QOption_ 1
-        Agent/TCP set control_increase_ 0
-        Test/underutilized_100ms_Q instproc run {{sender TCP} {receiver TCPSink}} [Test/underutilized_100ms info instbody run ]
-        $self next
-}
-
-Class Test/underutilized_100ms_control_Reno -superclass TestSuite
-Test/underutilized_100ms_control_Reno instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       underutilized_100ms_control_Reno
-        set guide_      "Reno TCP, underutilized, TCP quiescence option not set,
-        control_increase set."
-        Agent/TCP set QOption_ 0
-        Agent/TCP set control_increase_ 1
-        Test/underutilized_100ms_control_Reno instproc run {{sender TCP/Reno} {receiver TCPSink}} [Test/underutilized_100ms info instbody run ]
-        $self next
-}
-
-Class Test/underutilized_100ms_control_Newreno -superclass TestSuite
-Test/underutilized_100ms_control_Newreno instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       underutilized_100ms_control_Newreno
-        set guide_      "NewReno TCP, underutilized, TCP quiescence option not set,
-        control_increase set."
-        Agent/TCP set QOption_ 0
-        Agent/TCP set control_increase_ 1
-        Test/underutilized_100ms_control_Newreno instproc run {{sender TCP/Reno} {receiver TCPSink}} [Test/underutilized_100ms info instbody run ]
-        $self next
-}
-
-Class Test/underutilized_100ms_control_Sack -superclass TestSuite
-Test/underutilized_100ms_control_Sack instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       underutilized_100ms_control_Sack
-        set guide_      "Sack TCP, underutilized, TCP quiescence option not set,
-        control_increase set."
-        Agent/TCP set QOption_ 0
-        Agent/TCP set control_increase_ 1
-        Test/underutilized_100ms_control_Sack instproc run {{sender TCP/Sack1} {receiver TCPSink/Sack1}} [Test/underutilized_100ms info instbody run ]
-        $self next
-}
-
-Class Test/quiescent_100ms_fine -superclass TestSuite
-Test/quiescent_100ms_fine instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescent_100ms_fine(EnblRTTCtr__0)
-	set guide_      "Tahoe TCP after a quiescent period, fine-grained timer."
-	Agent/TCP set QOption_ 1
-	Agent/TCP set control_increase_ 1
-	Agent/TCP set EnblRTTCtr_ 0
-	Test/quiescent_100ms_fine instproc run {} [Test/quiescent_100ms info instbody run ]
-        $self next
-} 
-
-Class Test/quiescent_100ms_coarse -superclass TestSuite
-Test/quiescent_100ms_coarse instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescent_100ms_coarse(EnblRTTCtr__1)
-	set guide_      "Tahoe TCP after a quiescent period, coarse-grained timer."
-	Agent/TCP set QOption_ 1
-	Agent/TCP set control_increase_ 1
-	Agent/TCP set EnblRTTCtr_ 1
-	Test/quiescent_100ms_coarse instproc run {} [Test/quiescent_100ms info instbody run ]
-        $self next
-} 
-
-Class Test/quiescent_1ms_fine -superclass TestSuite
-Test/quiescent_1ms_fine instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescent_1ms_fine(EnblRTTCtr__0)
-	set guide_      "Tahoe TCP after a quiescent period, fine-grained timer, tcpTick_ 0.001."
-	Agent/TCP set QOption_ 1
-	Agent/TCP set tcpTick_ 0.001 
-	Agent/TCP set control_increase_ 1
-	Agent/TCP set EnblRTTCtr_ 0 
-	Test/quiescent_1ms_fine instproc run {} [Test/quiescent_100ms info instbody run ]
-        $self next
-} 
-
-Class Test/quiescent_1ms_coarse -superclass TestSuite
-Test/quiescent_1ms_coarse instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescent_1ms_coarse(EnblRTTCtr__1)
-	set guide_      "Tahoe TCP after a quiescent period, coarse-grained timer, tcpTick_ 0.001."
-	Agent/TCP set QOption_ 1
-	Agent/TCP set tcpTick_ 0.001 
-	Agent/TCP set control_increase_ 1
-	Agent/TCP set EnblRTTCtr_ 1 
-	Test/quiescent_1ms_coarse instproc run {} [Test/quiescent_100ms info instbody run ]
-        $self next
-} 
-
-Class Test/quiescent_500ms_fine -superclass TestSuite
-Test/quiescent_500ms_fine instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescent_500ms_fine(EnblRTTCtr__0)
-	set guide_      "Tahoe TCP after a quiescent period, fine-grained timer, tcpTick_ 0.5."
-	Agent/TCP set QOption_ 1
-	Agent/TCP set tcpTick_ 0.500
-	Agent/TCP set control_increase_ 1
-	Agent/TCP set EnblRTTCtr_ 0 
-	Test/quiescent_500ms_fine instproc run {} [Test/quiescent_100ms info instbody run ]
-        $self next
-} 
-
-Class Test/quiescent_500ms_coarse -superclass TestSuite
-Test/quiescent_500ms_coarse instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-        set net_        $topo
-        set defNet_     net6
-        set test_       quiescent_500ms_coarse(EnblRTTCtr__1)
-	set guide_      "Tahoe TCP after a quiescent period, coarse-grained timer, tcpTick_ 0.5."
-	Agent/TCP set QOption_ 1
-	Agent/TCP set tcpTick_ 0.500 
-	Agent/TCP set control_increase_ 1
-	Agent/TCP set EnblRTTCtr_ 1 
-	Test/quiescent_500ms_coarse instproc run {} [Test/quiescent_100ms info instbody run ]
-        $self next
-} 
-
-####################################################################
-
-TestSuite instproc printtimeouts { label tcp time } {
-	global quiet
-	if {$quiet == "false"} {
-	  puts "tcp: $label time: [format %.3f $time] retransmit_timeouts: [$tcp set nrexmit_]" 
-	}
-}
-
-# This test shows the packets and acknowledgements at the source,
-# for a path with a 9.6Kbps link, and 1500-byte packets.
-Class Test/dialup -superclass TestSuite
-Test/dialup instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-	set net_        $topo
-	set defNet_    	net8
-        set guide_	"1500-byte packets on a 9.6 Kbps link"
-        set test_       dialup(9.6K-link,1500-byte-pkt)
-        $self next
-}
-Test/dialup instproc run {} {
-	global quiet
-        $self instvar ns_ node_ testName_ guide_
-	puts "Guide: $guide_"
-        Agent/TCP set syn_ true
-        Agent/TCP set delay_growth_ true
-        Agent/TCP set windowInitOption_ 2
-        Agent/TCP set minrto_ 1
- 	set runtime 30.01
-	set dumptime 30.0
-	set testName_ dialup
-	set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(k1) 0]
-        $tcp1 set packetSize_ 1500
-        set ftp1 [$tcp1 attach-app FTP] 
-        $ns_ at 0.0 "$ftp1 start"
-	$ns_ at $dumptime "$self printtimeouts 1 $tcp1 $dumptime" 
-
-        # $self tcpDump $tcp1 $dumptime
-	$self traceQueues $node_(r1) [$self openTrace $runtime $testName_]
-        $ns_ run
-}
-
-# This test shows the packets and acknowledgements at the source,
-# for a path with a 9.6Kbps link, and 1500-byte packets.
-# But this one has rfc2988_ set to false.
-Class Test/dialup1 -superclass TestSuite
-Test/dialup1 instproc init topo {
-        $self instvar net_ defNet_ test_ guide_
-	set net_        $topo
-	set defNet_    	net8
-        set guide_	"1500-byte packets on a 9.6 Kbps link, rfc2988_ false"
-        set test_       dialup1(9.6K-link,1500-byte-pkt)
-	Agent/TCP set rfc2988_ false
-	Test/dialup1 instproc run {} [Test/dialup info instbody run ]
-        $self next
-}
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcp.txt	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcp.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,82 +0,0 @@
-This is a brief description of the tests in the file
-test-suite-tcp.tcl.  These tests can be run with the
-command "./test-all-tcp".
-
-ECN:
-The "ecn" test shows two TCPs, where one is ECN-capable and the
-other is not.
-
-TIMERS:
-The "timers" test is the first of a series of tests that test the
-behavior of TCP's retransmit timers.  This test shows the retransmit
-timeout value when the first packet of a connection is dropped,
-and the backoff of the retransmit timer as a subsequent packet is
-dropped.  This test also shows that once the retransmit timer is
-backed off, it is later un-backed.
-
-For the connection in the top row, the first packet sent by the
-connection is dropped, and the retransmitted packet is itself
-dropped.  The connection has a maximum window of three packets, so
-the TCP sender has to wait for a retransmit timer to recover from
-any packet drop.  When another packet from the top connection is
-dropped at time 21, the test shows that the retransmit timer is no
-longer backed off.  Further, by this time the estimated average
-roundtrip time is close to its true value, and the retransmit timer
-expires relatively quickly.
-
-The bottom connection has an intermittent demand, constructed to
-give the desired behavior for the top connection.  The bottom
-connection has a maximum window of five packets, and generally
-recovers from a packet drop with a Fast Retransmit.
-
-The reported statistics show the values of the
-retransmit timer variables "srtt_", "rttvar_", and "backoff_" 
-for the top connection. 
-
-TIMERSA:
-The "timersA" test shows the retransmit timer when the third packet
-of the top connection is dropped.  Because the top connection has
-a maximum window of three packets, the TCP sender always has to
-wait for a retransmit timer to recover from a packet drop.
-
-The behavior of the "backoff_" variable in this test requires some
-explanation.  After packet 2 of the top connection is dropped, the
-first retransmit timer expires, packet 2 is retransmitted, and
-the value for "backoff_" is increased to 2.  When the ACK for the
-retransmitted packet 2 is received, Karn's algorithm is invoked,
-and that ACK is not used in updating the retransmit timer variables.
-When packet 5 is sent, "backoff_" is increased to 2, and a large
-value is used in setting the retransmit timer.  When the ACK for
-packet 5 is received, "backoff_" is reset to 1, so the retransmit
-timer is no longer backed off.  When the outstanding retransmit
-timer expires (because packet 6 is outstanding), packet 6 is
-transmitted, "backoff_" is again increased to 2, and a backed-off
-retransmit timer is again set.
-
-TIMERS1, TIMERS2, and TIMERS3:
-The test "timers1" uses the default value in the simulator of 0.1
-seconds for "tcpTick_", the TCP clock granularity.  "Timers2" uses
-"tcpTick_" set to 0.5 seconds, and "timers3" uses "tcpTick_" set
-to 0.001 seconds.  These tests use Reno TCP, and in each test the
-second packet dropped has to wait for a retransmit timer to expire
-before it is retransmitted.
-
-TIMERS4 and TIMERS5:
-This test shows that the estimated round-trip time for the retransmit
-timers is updated once a roundtrip time, and not once for every
-arriving ACK packet.
-
-There are no packets dropped in either of these two tests.  The
-two connection differ only in their maximum window.  The reported
-values for "srtt_" show that the value for "srtt_" converges at a
-similar fashion for the two connections, even though the rate of
-arriving ACK packets is very different in the two connections.
-
-STATS1:
-This test shows some of the available statistics.
-At time 10.0, for each connection the statistics show 
-the number of packets sent by the sender (in packets and in 
-bytes), the number of ACK packets received by the sender,
-the number of retransmitted packets (in packets and in 
-bytes), and the number of retransmit timeouts.
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpVariants.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpVariants.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tcpVariants.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tcpVariants.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,1239 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-tcpVariants.tcl,v 1.32 2007/09/25 04:29:56 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-tcpVariants.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP/Newreno set newreno_changes1_ 0
-# The default is being changed to 1 on 5/5/03, to reflect RFC 2582.
-Agent/TCP/Newreno set partial_window_deflation_ 0  
-# The default is being changed to 1 on 5/5/03, to reflect RFC 2582.
-Agent/TCP set singledup_ 0
-# The default has been changed to 1
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr $wrap * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc finish file {
-	global quiet wrap wrap1 PERL
-        set space 512
-        if [string match {*full*} $file] {
-                exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-                   $PERL ../../bin/raw2xg -c -n $space -s 0.01 -m $wrap1 -t $file > temp.rands
-                exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-                   $PERL ../../bin/raw2xg -a -c -f -p -y -n $space -s 0.01 -m $wrap1 -t $file >> temp.rands
-        } else {
-                exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-                  $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-                exec $PERL ../../bin/getrc -s 3 -d 2 all.tr | \
-                  $PERL ../../bin/raw2xg -a -c -p -y -s 0.01 -m $wrap -t $file \
-                  >> temp.rands
-        }  
-        #exec $PERL ../../bin/set_flow_id -s all.tr | \
-        #  $PERL ../../bin/getrc -s 2 -d 3 | \
-        #  $PERL ../../bin/raw2xg -s 0.01 -m $wrap -t $file > temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-	## if so desired
-        # exec csh gnuplotC2.com temp.rands temp.rands $file
-        ##
-        exit 0
-}
-
-TestSuite instproc printtimers { tcp time} {
-	global quiet
-	if {$quiet == "false"} {
-        	puts "time: $time sRTT(in ticks): [$tcp set srtt_]/8 RTTvar(in ticks): [$tcp set rttvar_]/4 backoff: [$tcp set backoff_]"
-	}
-}
-
-TestSuite instproc printtimersAll { tcp time interval } {
-        $self instvar dump_inst_ ns_
-        if ![info exists dump_inst_($tcp)] {
-                set dump_inst_($tcp) 1
-                $ns_ at $time "$self printtimersAll $tcp $time $interval"
-                return
-        }
-	set newTime [expr [$ns_ now] + $interval]
-	$ns_ at $time "$self printtimers $tcp $time"
-        $ns_ at $newTime "$self printtimersAll $tcp $newTime $interval"
-}
-
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
- 
-TestSuite instproc setup {tcptype list} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-        ###Agent/TCP set bugFix_ false
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "Fack"} {
-      		set tcp1 [$ns_ create-connection TCP/Fack $node_(s1) \
-          	TCPSink/Sack1  $node_(k1) $fid]
-    	} elseif {$tcptype == "SackRH"} {
-      		set tcp1 [$ns_ create-connection TCP/SackRH $node_(s1) \
-          	TCPSink/Sack1 $node_(k1) $fid]
-    	} elseif {$tcptype == "FullTcp"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp]
-	        set sink [new Agent/TCP/FullTcp]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpTahoe"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Tahoe]
-	        set sink [new Agent/TCP/FullTcp/Tahoe]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpNewreno"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Newreno]
-	        set sink [new Agent/TCP/FullTcp/Newreno]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} elseif {$tcptype == "FullTcpSack1"} {
-		set wrap $wrap1
-	        set tcp1 [new Agent/TCP/FullTcp/Sack]
-	        set sink [new Agent/TCP/FullTcp/Sack]
-	        $ns_ attach-agent $node_(s1) $tcp1
-	        $ns_ attach-agent $node_(k1) $sink
-	        $tcp1 set fid_ $fid
-	        $sink set fid_ $fid
-	        $ns_ connect $tcp1 $sink
-	        # set up TCP-level connections
-	        $sink listen ; # will figure out who its peer is
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink $node_(k1) $fid]
-    	}
-        $tcp1 set window_ 28
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 1.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 5.0
-        $self drop_pkts $list
-
-        #$self traceQueues $node_(r1) [$self openTrace 6.0 $testName_]
-	$ns_ at 6.0 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-# Definition of test-suite tests
-
-###################################################
-## One drop
-###################################################
-
-Class Test/onedrop_tahoe -superclass TestSuite
-Test/onedrop_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_tahoe
-	set guide_	"Tahoe TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_tahoe instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Tahoe {14}
-}
-
-Class Test/onedrop_SA_tahoe -superclass TestSuite
-Test/onedrop_SA_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_SA_tahoe
-	set guide_	"Tahoe TCP with Limited Transmit, one drop."
-	Agent/TCP set singledup_ 1
-	Test/onedrop_SA_tahoe instproc run {} [Test/onedrop_tahoe info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/onedrop_tahoe_full -superclass TestSuite
-Test/onedrop_tahoe_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_tahoe_full
-	set guide_	"Tahoe, Full TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_tahoe_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpTahoe {16}
-}
-
-Class Test/onedrop_reno -superclass TestSuite
-Test/onedrop_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_reno
-	set guide_	"Reno TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_reno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Reno {14}
-}
-
-Class Test/onedrop_SA_reno -superclass TestSuite
-Test/onedrop_SA_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_SA_reno
-	set guide_	"Reno TCP with Limited Transmit, one drop."
-	Agent/TCP set singledup_ 1
-	Test/onedrop_SA_reno instproc run {} [Test/onedrop_reno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/onedrop_reno_full -superclass TestSuite
-Test/onedrop_reno_full instproc init {} {
-
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_reno_full
-	set guide_	"Reno, Full TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_reno_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcp {16}
-}
-
-Class Test/onedrop_newreno -superclass TestSuite
-Test/onedrop_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_newreno
-	set guide_	"NewReno TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_newreno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Newreno {14}
-}
-
-Class Test/onedrop_SA_newreno -superclass TestSuite
-Test/onedrop_SA_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_SA_newreno
-	set guide_	"NewReno TCP with Limited Transmit, one drop."
-	Agent/TCP set singledup_ 1
-	Test/onedrop_SA_newreno instproc run {} [Test/onedrop_newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/onedrop_newreno_full -superclass TestSuite
-Test/onedrop_newreno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_newreno_full
-	set guide_	"NewReno TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_newreno_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpNewreno {16}
-}
-
-Class Test/onedrop_sack -superclass TestSuite
-Test/onedrop_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_sack
-	set guide_	"Sack TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_sack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Sack1 {14}
-}
-
-Class Test/onedrop_SA_sack -superclass TestSuite
-Test/onedrop_SA_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_SA_sack
-	set guide_	"Sack TCP with Limited Transmit, one drop."
-	Agent/TCP set singledup_ 1
-	Test/onedrop_SA_sack instproc run {} [Test/onedrop_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/onedrop_sack_full -superclass TestSuite
-Test/onedrop_sack_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_sack_full
-	set guide_	"Sack, Full TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_sack_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpSack1 {16}
-}
-
-Class Test/onedrop_fack -superclass TestSuite
-Test/onedrop_fack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_fack
-	set guide_	"Fack TCP, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_fack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Fack {14}
-}
-
-Class Test/onedrop_sackRH -superclass TestSuite
-Test/onedrop_sackRH instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	onedrop_sackRH
-	set guide_	"Sack TCP with Rate Halving, one drop."
-	$self next pktTraceFile
-}
-Test/onedrop_sackRH instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup SackRH {14}
-}
-
-###################################################
-## Two drops
-###################################################
-
-Class Test/twodrops_tahoe -superclass TestSuite
-Test/twodrops_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_tahoe
-	set guide_	"Tahoe TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_tahoe instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Tahoe {14 28}
-}
-
-Class Test/twodrops_SA_tahoe -superclass TestSuite
-Test/twodrops_SA_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_SA_tahoe
-	set guide_	"Tahoe TCP with Fast Retransmit, two drops."
-	Agent/TCP set singledup_ 1
-	Test/twodrops_SA_tahoe instproc run {} [Test/twodrops_tahoe info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/twodrops_tahoe_full -superclass TestSuite
-Test/twodrops_tahoe_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_tahoe_full
-	set guide_	"Tahoe Full TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_tahoe_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpTahoe {16 30}
-}
-
-Class Test/twodrops_reno -superclass TestSuite
-Test/twodrops_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_reno
-	set guide_	"Reno TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_reno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Reno {14 28}
-}
-
-Class Test/twodrops_SA_reno -superclass TestSuite
-Test/twodrops_SA_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_SA_reno
-	set guide_	"Reno TCP with Limited Transmit, two drops."
-	Agent/TCP set singledup_ 1
-	Test/twodrops_SA_reno instproc run {} [Test/twodrops_reno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/twodrops_reno_full -superclass TestSuite
-Test/twodrops_reno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_reno_full
-	set guide_	"Reno, Full TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_reno_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcp {16 30}
-}
-
-Class Test/twodrops_newreno -superclass TestSuite
-Test/twodrops_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_newreno
-	set guide_	"NewReno TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_newreno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Newreno {14 28}
-}
-
-Class Test/twodrops_SA_newreno -superclass TestSuite
-Test/twodrops_SA_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_SA_newreno
-	set guide_	"NewReno TCP with Limited Transmit, two drops."
-	Agent/TCP set singledup_ 1
-	Test/twodrops_SA_newreno instproc run {} [Test/twodrops_newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/twodrops_newreno_full -superclass TestSuite
-Test/twodrops_newreno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_newreno_full
-	set guide_	"NewReno, Full TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_newreno_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpNewreno {16 30}
-}
-
-Class Test/twodrops_sack -superclass TestSuite
-Test/twodrops_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_sack
-	set guide_	"Sack TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_sack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Sack1 {14 28}
-}
-
-Class Test/twodrops_SA_sack -superclass TestSuite
-Test/twodrops_SA_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_SA_sack
-	set guide_	"Sack TCP with Limited Transmit, two drops."
-	Agent/TCP set singledup_ 1
-	Test/twodrops_SA_sack instproc run {} [Test/twodrops_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/twodrops_sack_full -superclass TestSuite
-Test/twodrops_sack_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_sack_full
-	set guide_	"Sack, Full TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_sack_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpSack1 {16 30}
-}
-
-Class Test/twodrops_fack -superclass TestSuite
-Test/twodrops_fack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_fack
-	set guide_	"Fack TCP, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_fack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Fack {14 28}
-}
-
-Class Test/twodrops_sackRH -superclass TestSuite
-Test/twodrops_sackRH instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	twodrops_sackRH
-	set guide_	"Sack TCP with Rate Halving, two drops."
-	$self next pktTraceFile
-}
-Test/twodrops_sackRH instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup SackRH {14 28}
-}
-
-###################################################
-## Three drops
-###################################################
-
-Class Test/threedrops_tahoe -superclass TestSuite
-Test/threedrops_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_tahoe
-	set guide_	"Tahoe TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_tahoe instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Tahoe {14 26 28}
-}
-
-Class Test/threedrops_SA_tahoe -superclass TestSuite
-Test/threedrops_SA_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_SA_tahoe
-	set guide_	"Tahoe TCP with Limited Transmit, three drops."
-	Agent/TCP set singledup_ 1
-	Test/threedrops_SA_tahoe instproc run {} [Test/threedrops_tahoe info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/threedrops_tahoe_full -superclass TestSuite
-Test/threedrops_tahoe_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_tahoe_full
-	set guide_	"Tahoe, Full TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_tahoe_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpTahoe {16 28 30}
-}
-
-Class Test/threedrops_reno -superclass TestSuite
-Test/threedrops_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_reno
-	set guide_	"Reno TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_reno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Reno {14 26 28}
-}
-
-Class Test/threedrops_SA_reno -superclass TestSuite
-Test/threedrops_SA_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_SA_reno
-	set guide_	"Reno TCP with Limited Transmit, three drops."
-	Agent/TCP set singledup_ 1
-	Test/threedrops_SA_reno instproc run {} [Test/threedrops_reno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/threedrops_reno_full -superclass TestSuite
-Test/threedrops_reno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_reno_full
-	set guide_	"Reno, Full TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_reno_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcp {16 28 30}
-}
-
-Class Test/threedrops_newreno -superclass TestSuite
-Test/threedrops_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_newreno
-	set guide_	"NewReno TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_newreno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Newreno {14 26 28}
-}
-
-Class Test/threedrops_SA_newreno -superclass TestSuite
-Test/threedrops_SA_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_SA_newreno
-	set guide_	"NewReno TCP with Limited Transmit, three drops."
-	Agent/TCP set singledup_ 1
-	Test/threedrops_SA_newreno instproc run {} [Test/threedrops_newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/threedrops_newreno_full -superclass TestSuite
-Test/threedrops_newreno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_newreno_full
-	set guide_	"NewReno, Full TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_newreno_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpNewreno {16 28 30}
-}
-
-Class Test/threedrops_sack -superclass TestSuite
-Test/threedrops_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_sack
-	set guide_	"Sack TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_sack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Sack1 {14 26 28}
-}
-
-Class Test/threedrops_SA_sack -superclass TestSuite
-Test/threedrops_SA_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_SA_sack
-	set guide_	"Sack TCP with Limited Transmit, three drops."
-	Agent/TCP set singledup_ 1
-	Test/threedrops_SA_sack instproc run {} [Test/threedrops_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/threedrops_sack_full -superclass TestSuite
-Test/threedrops_sack_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_sack_full
-	set guide_	"Sack, Full TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_sack_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpSack1 {16 28 30}
-}
-
-Class Test/threedrops_fack -superclass TestSuite
-Test/threedrops_fack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_fack
-	set guide_	"Fack TCP, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_fack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Fack {14 26 28}
-}
-
-Class Test/threedrops_sackRH -superclass TestSuite
-Test/threedrops_sackRH instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	threedrops_sackRH
-	set guide_	"Sack TCP with Rate Halving, three drops."
-	$self next pktTraceFile
-}
-Test/threedrops_sackRH instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup SackRH {14 26 28}
-}
-
-
-###################################################
-## Four drops
-###################################################
-
-Class Test/fourdrops_tahoe -superclass TestSuite
-Test/fourdrops_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_tahoe
-	set guide_	"Tahoe TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_tahoe instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Tahoe {14 24 26 28}
-}
-
-Class Test/fourdrops_SA_tahoe -superclass TestSuite
-Test/fourdrops_SA_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_SA_tahoe
-	set guide_	"Tahoe TCP with Limited Transmit, four drops."
-	Agent/TCP set singledup_ 1
-	Test/fourdrops_SA_tahoe instproc run {} [Test/fourdrops_tahoe info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/fourdrops_tahoe_full -superclass TestSuite
-Test/fourdrops_tahoe_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_tahoe_full
-	set guide_	"Tahoe, Full TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_tahoe_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpTahoe {16 26 28 30}
-}
-
-Class Test/fourdrops_reno -superclass TestSuite
-Test/fourdrops_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_reno
-	set guide_	"Reno TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_reno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Reno {14 24 26 28}
-}
-
-Class Test/fourdrops_SA_reno -superclass TestSuite
-Test/fourdrops_SA_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_SA_reno
-	set guide_	"Reno TCP with Limited Transmit, four drops."
-	Agent/TCP set singledup_ 1
-	Test/fourdrops_SA_reno instproc run {} [Test/fourdrops_reno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/fourdrops_reno_full -superclass TestSuite
-Test/fourdrops_reno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_reno_full
-	set guide_	"Reno, Full TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_reno_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcp {16 26 28 30}
-}
-
-Class Test/fourdrops_newreno -superclass TestSuite
-Test/fourdrops_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_newreno
-	set guide_	"NewReno TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_newreno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Newreno {14 24 26 28}
-}
-
-Class Test/fourdrops_SA_newreno -superclass TestSuite
-Test/fourdrops_SA_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_SA_newreno
-	set guide_	"NewReno TCP with Limited Transmit, four drops."
-	Agent/TCP set singledup_ 1
-	Test/fourdrops_SA_newreno instproc run {} [Test/fourdrops_newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/fourdrops_newreno_full -superclass TestSuite
-Test/fourdrops_newreno_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_newreno_full
-	set guide_	"NewReno, Full TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_newreno_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpNewreno {16 26 28 30}
-}
-
-Class Test/fourdrops_sack -superclass TestSuite
-Test/fourdrops_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_sack
-	set guide_	"Sack TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_sack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Sack1 {14 24 26 28}
-}
-
-Class Test/fourdrops_SA_sack -superclass TestSuite
-Test/fourdrops_SA_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_SA_sack
-	set guide_	"Sack TCP with Limited Transmit, four drops."
-	Agent/TCP set singledup_ 1
-	Test/fourdrops_SA_sack instproc run {} [Test/fourdrops_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/fourdrops_sack_full -superclass TestSuite
-Test/fourdrops_sack_full instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_sack_full
-	set guide_	"Sack, Full TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_sack_full instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup FullTcpSack1 {16 26 28 30}
-}
-
-Class Test/fourdrops_fack -superclass TestSuite
-Test/fourdrops_fack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_fack
-	set guide_	"Fack TCP, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_fack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Fack {14 24 26 28}
-}
-Class Test/fourdrops_sackRH -superclass TestSuite
-Test/fourdrops_sackRH instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	fourdrops_sackRH
-	set guide_	"Sack TCP with Rate Halving, four drops."
-	$self next pktTraceFile
-}
-Test/fourdrops_sackRH instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup SackRH {14 24 26 28}
-}
-
-###################################################
-## Multiple drops
-###################################################
-
-Class Test/multiple_tahoe -superclass TestSuite
-Test/multiple_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_tahoe
-	set guide_	"Tahoe TCP, eight drops."
-	$self next pktTraceFile
-}
-Test/multiple_tahoe instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Tahoe {11 12 13 14 16 17 18 19 }
-}
-
-## This can result in an unnecessary packet transmission, unless the
-## Limited Transmit option checks not to send packets less than maxseq_,
-## the highest sequence number sent to far.
-Class Test/multiple_SA_tahoe -superclass TestSuite
-Test/multiple_SA_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_SA_tahoe
-	set guide_	"Tahoe TCP with Limited Transmit, eight drops."
-	Agent/TCP set singledup_ 1
-	Test/multiple_SA_tahoe instproc run {} [Test/multiple_tahoe info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/multiple_reno -superclass TestSuite
-Test/multiple_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_reno
-	set guide_	"Reno TCP, eight drops."
-	$self next pktTraceFile
-}
-Test/multiple_reno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-	$self setup Reno {11 12 13 14 16 17 18 19 }
-}
-
-Class Test/multiple_SA_reno -superclass TestSuite
-Test/multiple_SA_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_SA_reno
-	set guide_	"Reno TCP with Limited Transmit, eight drops."
-	Agent/TCP set singledup_ 1
-	Test/multiple_SA_reno instproc run {} [Test/multiple_reno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/multiple_newreno -superclass TestSuite
-Test/multiple_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_newreno
-	set guide_	"NewReno TCP, eight drops."
-	$self next pktTraceFile
-}
-Test/multiple_newreno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-	$self setup Newreno {11 12 13 14 16 17 18 19 }
-}
-
-Class Test/multiple_SA_newreno -superclass TestSuite
-Test/multiple_SA_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_SA_newreno
-	set guide_	"NewReno TCP with Limited Transmit, eight drops."
-	Agent/TCP set singledup_ 1
-	Test/multiple_SA_newreno instproc run {} [Test/multiple_newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/multiple_sack -superclass TestSuite
-Test/multiple_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_sack
-	set guide_	"Sack TCP, eight drops."
-	$self next pktTraceFile
-}
-Test/multiple_sack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-	$self setup Sack1 {11 12 13 14 16 17 18 19 } 
-}
-
-# Limited Transmit
-Class Test/multiple_SA_sack -superclass TestSuite
-Test/multiple_SA_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_SA_sack
-	set guide_	"Sack TCP with Limited Transmit, eight drops."
-	Agent/TCP set singledup_ 1
-	Test/multiple_SA_sack instproc run {} [Test/multiple_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-# Partial_ack 
-Class Test/multiple_partial_ack_sack -superclass TestSuite
-Test/multiple_partial_ack_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple_partial_ack_sack
-	set guide_	"Sack TCP with an ensured response to a partial ack, eight drops."
-	Agent/TCP set partial_ack_ 1
-	Test/multiple_partial_ack_sack instproc run {} [Test/multiple_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-###################################################
-## Multiple drops, scenario #2
-###################################################
-
-Class Test/multiple2_tahoe -superclass TestSuite
-Test/multiple2_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_tahoe
-	set guide_	"Tahoe TCP, five drops."
-	$self next pktTraceFile
-}
-Test/multiple2_tahoe instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-        $self setup Tahoe {11 12 13 14 16 }
-	# $self setup Tahoe {11 12 13 14 16 17 18 19 }
-}
-
-## This can result in an unnecessary packet transmission, unless the
-## Limited Transmit option checks not to send packets less than maxseq_,
-## the highest sequence number sent to far.
-Class Test/multiple2_SA_tahoe -superclass TestSuite
-Test/multiple2_SA_tahoe instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_SA_tahoe
-	set guide_	"Tahoe TCP with Limited Transmit, five drops."
-	Agent/TCP set singledup_ 1
-	Test/multiple2_SA_tahoe instproc run {} [Test/multiple2_tahoe info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/multiple2_reno -superclass TestSuite
-Test/multiple2_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_reno
-	set guide_	"Reno TCP, five drops."
-	$self next pktTraceFile
-}
-Test/multiple2_reno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-	$self setup Reno {11 12 13 14 16 }
-}
-
-Class Test/multiple2_SA_reno -superclass TestSuite
-Test/multiple2_SA_reno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_SA_reno
-	set guide_	"Reno TCP with Limited Transmit, five drops."
-	Agent/TCP set singledup_ 1
-	Test/multiple2_SA_reno instproc run {} [Test/multiple2_reno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/multiple2_newreno -superclass TestSuite
-Test/multiple2_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_newreno
-	set guide_	"NewReno TCP, five drops."
-	$self next pktTraceFile
-}
-Test/multiple2_newreno instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-	$self setup Newreno {11 12 13 14 16 }
-}
-
-Class Test/multiple2_SA_newreno -superclass TestSuite
-Test/multiple2_SA_newreno instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_SA_newreno
-	set guide_	"NewReno TCP with Limited Transmit, five drops."
-	Agent/TCP set singledup_ 1
-	Test/multiple2_SA_newreno instproc run {} [Test/multiple2_newreno info instbody run ]
-	$self next pktTraceFile
-}
-
-Class Test/multiple2_sack -superclass TestSuite
-Test/multiple2_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_sack
-	set guide_	"Sack TCP, five drops."
-	$self next pktTraceFile
-}
-Test/multiple2_sack instproc run {} {
-	$self instvar guide_
-	puts "Guide: $guide_"
-	$self setup Sack1 {11 12 13 14 16 } 
-}
-
-# Limited Transmit
-Class Test/multiple2_SA_sack -superclass TestSuite
-Test/multiple2_SA_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_SA_sack
-	set guide_	"Sack TCP with Limited Transmit, five drops."
-	Agent/TCP set singledup_ 1
-	Test/multiple2_SA_sack instproc run {} [Test/multiple2_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-# Partial_ack 
-# Because partial_ack is used, there is an unnecessary packet retransmission.
-#  Partial_ack needs to be made smarter, not to retransmit a packet that
-#  has just been sent?
-Class Test/multiple2_partial_ack_sack -superclass TestSuite
-Test/multiple2_partial_ack_sack instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	multiple2_partial_ack_sack
-	set guide_	"Sack TCP with an ensured response to a partial ack, five drops."
-	Agent/TCP set partial_ack_ 1
-	Test/multiple2_partial_ack_sack instproc run {} [Test/multiple2_sack info instbody run ]
-	$self next pktTraceFile
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-testReno-bayfull.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-testReno-bayfull.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-testReno-bayfull.tcl	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-testReno-bayfull.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,223 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-testReno-bayfull.tcl,v 1.9 2006/01/24 23:00:08 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-testReno-bayfull.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-#Agent/TCP set syn_ false
-#Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-set psize 1500
-set segsize [expr $psize-40]
-set segperack 2
-set delack 0.4
-
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc finish file {
-    global quiet wrap PERL
-    set wrap [expr 90 * 1000 + 40]
-    exec $PERL ../../bin/set_flow_id -s all.tr | \
-	    $PERL ../../bin/getrc -e -s 3 -d 2 | \
-	    $PERL ../../bin/raw2xg -v -s 0.01 -m $wrap -t $file > temp.rands
-    #exec $PERL ../../bin/set_flow_id -s all.tr > temp1.tr
-    #exec $PERL ../../bin/getrc -e -s 2 -d 3 all.tr > temp2.tr
-    #exec $PERL ../../bin/raw2xg -v -s 0.00001 -m $wrap -t $file temp2.tr > temp.rands
-    if {$quiet == "false"} {
-	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-    }
-    ## now use default graphing tool to make a data file
-    ## if so desired
-    # exec csh gnuplotC.com temp.rands $file
-    exit 0
-}
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype window list} {
-    global wrap wrap1
-    global segperack segsize delack
-    $self instvar ns_ node_ testName_
-    $self setTopo
-    
-    Agent/TCP set bugFix_ false
-    set fid 1
-    # Set up TCP connection
-    if {$tcptype == "FullTcp"} {
-	set tcp1 [new Agent/TCP/BayFullTcp]
-	set sink [new Agent/TCP/BayFullTcp]
-    } else {
-	puts "Error: Type of FullTcp not supported\n"
-	exit 1
-    }
-	    
-    #$tcp1 set window_ 5
-    $tcp1 set window_ $window
-    set cli [new Agent/BayTcpApp/FtpClient]
-    $tcp1 attach-application $cli
-    $cli tcp $tcp1
-    
-    set sftp [new Agent/BayTcpApp/FtpServer]
-    $sftp file_size 10000000
-    $sink attach-application $sftp
-
-    $ns_ attach-agent $node_(s1) $tcp1
-    $ns_ attach-agent $node_(k1) $sink
-    $tcp1 set fid_ $fid
-    $sink set fid_ $fid
-    $ns_ connect $tcp1 $sink
-    # set up TCP-level connections
-    $sink listen ; # will figure out who its peer is
-    
-    $ns_ at 1.0 "$cli start"
-    #$ns_ at 120.0 "$cli stop"
-
-    $self tcpDump $tcp1 4.0
-    $self drop_pkts $list
-    
-    #$self traceQueues $node_(r1) [$self openTrace 4.01 $testName_]
-    $ns_ at 4.01 "$self cleanupAll $testName_"
-    $ns_ run
-}
-    
-# Definition of test-suite tests
-
-###################################################
-## Two drops
-###################################################
-Class Test/Reno_FullTCP -superclass TestSuite
-Test/Reno_FullTCP instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	Reno_FullTCP
-	$self next pktTraceFile
-}
-Test/Reno_FullTCP instproc run {} {
-        $self setup FullTcp {5} {15 18}
-}
-
-
-
-###################################################
-## One drop
-###################################################
-
-Class Test/Reno_FullTCP2 -superclass TestSuite
-Test/Reno_FullTCP2 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	Reno_FullTCP2
-	$self next pktTraceFile
-}
-Test/Reno_FullTCP2 instproc run {} {
-        $self setup FullTcp {8} {17}
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-testReno-full.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-testReno-full.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-testReno-full.tcl	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-testReno-full.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,376 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-testReno-full.tcl,v 1.13 2006/01/24 23:00:08 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-testReno-full.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc finish file {
-    global quiet wrap PERL
-    set wrap [expr 90 * 1000 + 40]
-    exec $PERL ../../bin/set_flow_id -s all.tr | \
-	    $PERL ../../bin/getrc -e -s 2 -d 3 | \
-	    $PERL ../../bin/raw2xg -v -s 0.00001 -m $wrap -t $file > temp.rands
-    
-    if {$quiet == "false"} {
-	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-    }
-    ## now use default graphing tool to make a data file
-    ## if so desired
-    # exec csh gnuplotC.com temp.rands $file
-    exit 0
-}
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype window list} {
-    global wrap wrap1
-    $self instvar ns_ node_ testName_
-    $self setTopo
-    
-    Agent/TCP set bugFix_ false
-    set fid 1
-    # Set up TCP connection
-    if {$tcptype == "FullTcp"} {
-	set tcp1 [new Agent/TCP/FullTcp]
-	set sink [new Agent/TCP/FullTcp]
-	$ns_ attach-agent $node_(s1) $tcp1
-	$ns_ attach-agent $node_(k1) $sink
-	$tcp1 set fid_ $fid
-	$sink set fid_ $fid
-	$ns_ connect $tcp1 $sink
-	# set up TCP-level connections
-	$sink listen ; # will figure out who its peer is
-    } elseif {$tcptype == "BayFullTcp"} {
-	set sink [new Agent/TCP/BayFullTcp]
-	set tcp1 [new Agent/TCP/BayFullTcp]
-	$ns_ attach-agent $node_(k1) $sink
-	$ns_ attach-agent $node_(s1) $tcp1
-	$sink set fid_ $fid
-	$tcp1 set fid_ $fid
-	$ns_ connect $sink $tcp1
-	# set up TCP-level connections
-	$tcp1 listen ; # will figure out who its peer is
-    } elseif {$tcptype == "FullTcpTahoe"} {
-	set tcp1 [new Agent/TCP/FullTcp/Tahoe]
-	set sink [new Agent/TCP/FullTcp/Tahoe]
-	$ns_ attach-agent $node_(s1) $tcp1
-	$ns_ attach-agent $node_(k1) $sink
-	$tcp1 set fid_ $fid
-	$sink set fid_ $fid
-	$ns_ connect $tcp1 $sink
-	# set up TCP-level connections
-	$sink listen ; # will figure out who its peer is
-    } elseif {$tcptype == "FullTcpNewreno"} {
-	set tcp1 [new Agent/TCP/FullTcp/Newreno]
-	set sink [new Agent/TCP/FullTcp/Newreno]
-	$ns_ attach-agent $node_(s1) $tcp1
-	$ns_ attach-agent $node_(k1) $sink
-	$tcp1 set fid_ $fid
-	$sink set fid_ $fid
-	$ns_ connect $tcp1 $sink
-	# set up TCP-level connections
-	$sink listen ; # will figure out who its peer is
-    } elseif {$tcptype == "FullTcpSack1"} {
-	set tcp1 [new Agent/TCP/FullTcp/Sack]
-	set sink [new Agent/TCP/FullTcp/Sack]
-	$ns_ attach-agent $node_(s1) $tcp1
-	$ns_ attach-agent $node_(k1) $sink
-	$tcp1 set fid_ $fid
-	$sink set fid_ $fid
-	$ns_ connect $tcp1 $sink
-	# set up TCP-level connections
-	$sink listen ; # will figure out who its peer is
-    } else {
-	puts "Error: Type of FullTcp not supported\n"
-	exit 1
-    }
-
-    #$tcp1 set window_ 5
-    $tcp1 set window_ $window
-    if {$tcptype == "BayFullTcp"} {
-	$tcp1 set window_ $window 
-	set cli [new Agent/BayTcpApp/FtpClient]
-	$sink attach-application $cli
-	$cli tcp $sink
-	set sftp [new Agent/BayTcpApp/FtpServer]
-	$sftp file_size 10000000
-	$tcp1 attach-application $sftp
-        $ns_ at 1.0 "$cli start"
-    } else {
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 1.0 "$ftp1 start"
-    }
-    
-    $self tcpDump $tcp1 4.0
-    $self drop_pkts $list
-    
-    #$self traceQueues $node_(r1) [$self openTrace 4.01 $testName_]
-    $ns_ at 4.01 "$self cleanupAll $testName_"
-    $ns_ run
-}
-    
-
-# Definition of test-suite tests
-
-###################################################
-## Two drops
-###################################################
-
-Class Test/Tahoe_FullTCP -superclass TestSuite
-Test/Tahoe_FullTCP instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	Tahoe_FullTCP
-	$self next
-}
-Test/Tahoe_FullTCP instproc run {} {
-    $self setup FullTcpTahoe {5} {15 18}
-}
-
-#Class Test/Tahoe_FullTCP_without_Fast_Retransmit -superclass TestSuite
-#Test/Tahoe_FullTCP_without_Fast_Retransmit instproc init {} {
-#	$self instvar net_ test_
-#	set net_	net4
-#	set test_	Tahoe_FullTCP_without_Fast_Retransmit
-#	Agent/TCP set noFastRetrans_ true
-#	$self next
-#}
-#Test/Tahoe_FullTCP_without_Fast_Retransmit instproc run {} {
-#        $self setup FullTcpTahoe {5} {15 18}
-#}
-
-Class Test/Reno_FullTCP -superclass TestSuite
-Test/Reno_FullTCP instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	Reno_FullTCP
-	$self next
-}
-Test/Reno_FullTCP instproc run {} {
-        $self setup FullTcp {5} {15 18}
-}
-
-# What is this test doing?
-# After the partial ACK, it seems that BayFullTCP keeps the inflated
-#  congestion window, but advances the left edge of the congestion window? 
-Class Test/Reno_BayFullTCP -superclass TestSuite
-Test/Reno_BayFullTCP instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	Reno_BayFullTCP
-	$self next
-}
-Test/Reno_BayFullTCP instproc run {} {
-        $self setup BayFullTcp {5} {14 17}
-}
-
-Class Test/NewReno_FullTCP -superclass TestSuite
-Test/NewReno_FullTCP instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	NewReno_FullTCP
-	Agent/TCP set noFastRetrans_ false
-	$self next
-}
-Test/NewReno_FullTCP instproc run {} {
-        $self setup FullTcpNewreno {5} {15 18}
-}
-
-#Class Test/Sack_FullTCP -superclass TestSuite
-#Test/Sack_FullTCP instproc init {} {
-#	$self instvar net_ test_
-#	set net_	net4
-#	set test_	Sack_FullTCP
-#	Agent/TCP set noFastRetrans_ false
-#	$self next
-#}
-#Test/Sack_FullTCP instproc run {} {
-#        $self setup FullTcpSack1 {5} {15 18}
-#}
-
-###################################################
-## One drop
-###################################################
-
-Class Test/Tahoe_FullTCP2 -superclass TestSuite
-Test/Tahoe_FullTCP2 instproc init {} {
-    $self instvar net_ test_
-    set net_	net4
-    set test_	Tahoe_FullTCP2
-    $self next
-}
-Test/Tahoe_FullTCP2 instproc run {} {
-        $self setup FullTcpTahoe {8} {17}
-}
-
-#Class Test/Tahoe_FullTCP2_without_Fast_Retransmit -superclass TestSuite
-#Test/Tahoe_FullTCP2_without_Fast_Retransmit instproc init {} {
-    #$self instvar net_ test_
-    #set net_	net4
-    #set test_	Tahoe_FullTCP2_without_Fast_Retransmit
-    #Agent/TCP/FullTcp/Tahoe set noFastRetrans_ true
-    #$self next
-    #}
-#Test/Tahoe_FullTCP2_without_Fast_Retransmit instproc run {} {
-    #$self setup FullTcpTahoe {8} {17}
-    #}
-
-Class Test/Reno_FullTCP2 -superclass TestSuite
-Test/Reno_FullTCP2 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	Reno_FullTCP2
-	$self next
-}
-Test/Reno_FullTCP2 instproc run {} {
-        $self setup FullTcp {8} {17}
-}
-
-Class Test/Reno_BayFullTCP2 -superclass TestSuite
-Test/Reno_BayFullTCP2 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	Reno_BayFullTCP2
-	$self next
-}
-Test/Reno_BayFullTCP2 instproc run {} {
-        $self setup BayFullTcp {8} {16}
-}
-
-Class Test/NewReno_FullTCP2 -superclass TestSuite
-Test/NewReno_FullTCP2 instproc init {} {
-	$self instvar net_ test_
-	set net_	net4
-	set test_	NewReno_FullTCP2
-	Agent/TCP set noFastRetrans_ false
-	$self next
-}
-Test/NewReno_FullTCP2 instproc run {} {
-        $self setup FullTcpNewreno {8} {17}
-}
-
-#Class Test/Sack_FullTCP2 -superclass TestSuite
-#Test/Sack_FullTCP2 instproc init {} {
-#	$self instvar net_ test_
-#	set net_	net4
-#	set test_	Sack_FullTCP2
-#	Agent/TCP set noFastRetrans_ false
-#	$self next
-#}
-#Test/Sack_FullTCP2 instproc run {} {
-#        $self setup FullTcpSack1 {8} {17}
-#}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-testReno.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-testReno.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-testReno.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-testReno.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,326 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-testReno.tcl,v 1.19 2007/09/25 03:42:58 sallyfloyd Exp $
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-testReno.tcl
-#
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for TCP
-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Trace set show_tcphdr_ 1
-
-set wrap 90
-set wrap1 [expr 90 * 512 + 40]
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 10ms bottleneck.
-# Queue-limit on bottleneck is 2 packets.
-#
-Class Topology/net4 -superclass Topology
-Topology/net4 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 0ms DropTail
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 8
-    $ns queue-limit $node_(k1) $node_(r1) 8
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-}
-
-
-TestSuite instproc finish file {
-    global quiet wrap PERL
-    exec $PERL ../../bin/set_flow_id -s all.tr | \
-	    $PERL ../../bin/getrc -e -s 2 -d 3 | \
-	    $PERL ../../bin/raw2xg -v -s 0.01 -m $wrap -t $file > temp.rands
-
-    if {$quiet == "false"} {
-	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-    }
-    ## now use default graphing tool to make a data file
-    ## if so desired
-    # exec csh gnuplotC.com temp.rands $file
-    exit 0
-}
-
-TestSuite instproc emod {} {
-        $self instvar topo_
-        $topo_ instvar lossylink_
-        set errmodule [$lossylink_ errormodule]
-        return $errmodule
-} 
-
-TestSuite instproc drop_pkts pkts {
-    $self instvar ns_
-    set emod [$self emod]
-    set errmodel1 [new ErrorModel/List]
-    $errmodel1 droplist $pkts
-    $emod insert $errmodel1
-    $emod bind $errmodel1 1
-}
-
-TestSuite instproc setup {tcptype window list} {
-	global wrap wrap1
-        $self instvar ns_ node_ testName_
-	$self setTopo
-
-	set fid 1
-        # Set up TCP connection
-    	if {$tcptype == "Tahoe"} {
-      		set tcp1 [$ns_ create-connection TCP $node_(s1) \
-          	TCPSink/DelAck $node_(k1) $fid]
-    	} elseif {$tcptype == "Sack1"} {
-      		set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) \
-          	TCPSink/Sack1/DelAck  $node_(k1) $fid]
-    	} else {
-      		set tcp1 [$ns_ create-connection TCP/$tcptype $node_(s1) \
-          	TCPSink/DelAck $node_(k1) $fid]
-    	}
-
-        #$tcp1 set window_ 5
-	$tcp1 set window_ $window
-        set ftp1 [$tcp1 attach-app FTP]
-        $ns_ at 1.0 "$ftp1 start"
-
-        $self tcpDump $tcp1 4.0
-        $self drop_pkts $list
-
-        #$self traceQueues $node_(r1) [$self openTrace 4.01 $testName_]
-	$ns_ at 4.01 "$self cleanupAll $testName_"
-        $ns_ run
-}
-
-
-# Definition of test-suite tests
-
-###################################################
-## Two drops
-###################################################
-
-Class Test/Tahoe_TCP -superclass TestSuite
-Test/Tahoe_TCP instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	Tahoe_TCP
- 	set guide_	"Tahoe TCP, two dropped packets."
-	$self next
-}
-Test/Tahoe_TCP instproc run {} {
-    $self instvar guide_
-    puts "Guide: $guide_"
-    $self setup Tahoe {5} {15 18}
-}
-
-Class Test/Tahoe_TCP_without_Fast_Retransmit -superclass TestSuite
-Test/Tahoe_TCP_without_Fast_Retransmit instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	Tahoe_TCP_without_Fast_Retransmit
- 	set guide_	"Tahoe TCP without Fast Retransmit, two dropped packets."
-	Agent/TCP set noFastRetrans_ true
-	$self next
-}
-Test/Tahoe_TCP_without_Fast_Retransmit instproc run {} {
-    $self instvar guide_
-    puts "Guide: $guide_"
-    $self setup Tahoe {5} {15 18}
-}
-
-Class Test/Reno_TCP -superclass TestSuite
-Test/Reno_TCP instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	Reno_TCP
- 	set guide_	"Reno TCP, two dropped packets."
-	$self next
-}
-Test/Reno_TCP instproc run {} {
-    $self instvar guide_
-    puts "Guide: $guide_"
-    $self setup Reno {5} {15 18}
-}
-
-Class Test/NewReno_TCP -superclass TestSuite
-Test/NewReno_TCP instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	NewReno_TCP
- 	set guide_	"NewReno TCP, two dropped packets."
-	Agent/TCP set noFastRetrans_ false
-	$self next
-}
-Test/NewReno_TCP instproc run {} {
-    $self instvar guide_
-    puts "Guide: $guide_"
-    $self setup Newreno {5} {15 18}
-}
-
-Class Test/Sack_TCP -superclass TestSuite
-Test/Sack_TCP instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	Sack_TCP
- 	set guide_	"Sack TCP, two dropped packets."
-	Agent/TCP set noFastRetrans_ false
-	$self next
-}
-Test/Sack_TCP instproc run {} {
-    $self instvar guide_
-    puts "Guide: $guide_"
-    $self setup Sack1 {5} {15 18}
-}
-
-###################################################
-## One drop
-###################################################
-
-Class Test/Tahoe_TCP2 -superclass TestSuite
-Test/Tahoe_TCP2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	Tahoe_TCP2
- 	set guide_	"Tahoe TCP, one dropped packet."
-	$self next
-}
-Test/Tahoe_TCP2 instproc run {} {
-        $self instvar guide_
-        puts "Guide: $guide_"
-        #$self setup1 Tahoe {17}
-	$self setup Tahoe {8} {17}
-}
-
-Class Test/Tahoe_TCP2_without_Fast_Retransmit -superclass TestSuite
-Test/Tahoe_TCP2_without_Fast_Retransmit instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	Tahoe_TCP2_without_Fast_Retransmit
- 	set guide_	"Tahoe TCP without Fast Retransmit, one dropped packet."
-	Agent/TCP set noFastRetrans_ true
-	$self next
-}
-Test/Tahoe_TCP2_without_Fast_Retransmit instproc run {} {
-        $self instvar guide_
-        puts "Guide: $guide_"
-        #$self setup1 Tahoe {17}
-	$self setup Tahoe {8} {17}
-}
-
-Class Test/Reno_TCP2 -superclass TestSuite
-Test/Reno_TCP2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	Reno_TCP2
- 	set guide_	"Reno TCP, one dropped packet."
-	$self next
-}
-Test/Reno_TCP2 instproc run {} {
-        $self instvar guide_
-        puts "Guide: $guide_"
-        $self setup Reno {8} {17}
-}
-
-Class Test/NewReno_TCP2 -superclass TestSuite
-Test/NewReno_TCP2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	NewReno_TCP2
- 	set guide_	"NewReno TCP, one dropped packet."
-	Agent/TCP set noFastRetrans_ false
-	$self next
-}
-Test/NewReno_TCP2 instproc run {} {
-        $self instvar guide_
-        puts "Guide: $guide_"
-        $self setup Newreno {8} {17}
-}
-
-Class Test/Sack_TCP2 -superclass TestSuite
-Test/Sack_TCP2 instproc init {} {
-	$self instvar net_ test_ guide_
-	set net_	net4
-	set test_	Sack_TCP2
- 	set guide_	"Sack TCP, one dropped packet."
-	Agent/TCP set noFastRetrans_ false
-	$self next
-}
-Test/Sack_TCP2 instproc run {} {
-        $self instvar guide_
-        puts "Guide: $guide_"
-        $self setup Sack1 {8} {17}
-}
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tmix.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tmix.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-tmix.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-tmix.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,298 +0,0 @@
-# test-suite-tmix.tcl
-#
-# Based on ns/tcl/test/test-suite-packmime.tcl
-# Modified by Matt Crinklaw-Vogt and Michele Weigle, 
-# Old Dominion Univ, Mar 2008
-#
-
-#*************************************************************************
-# Tests to validate Tmix
-#
-#  Lossy-orig - enforce losses, use original cvec format
-#  Lossy-alt - enforce losses, use alternate cvec format
-#  Lossless-orig - don't enforce losses, use original cvec format
-#  Lossless-alt - don't enforce losses, use alternate cvec format
-#
-#*************************************************************************
-
-source misc.tcl
-
-# this will generate the same traffic in each direction
-set INBOUND_ORIG "../ex/tmix/sample-orig.cvec"
-set OUTBOUND_ORIG "../ex/tmix/sample-orig.cvec"
-set INBOUND_ALT "../ex/tmix/sample-alt.cvec"
-set OUTBOUND_ALT "../ex/tmix/sample-alt.cvec"
-
-set WARMUP 4;   # time to start tracing
-set END 5;      # simulation end time
-
-TestSuite instproc finish testname {
-	$self instvar ns_
-	$ns_ halt
-}
-
-Class SkelTopology
-
-Class Topology -superclass SkelTopology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/DB -superclass Topology
-
-#
-# Tmix test topology
-#
-#           s1                      k1
-#             \                    /
-#  100Mb, 1ms  \    100Mb, 1ms    / 100Mb, 1ms
-#               r1 ----------- r2 
-#  100Mb, 1ms  /                 \ 100Mb, 1ms
-#             /                   \
-#          s2                       k2
-#
-Topology/DB instproc init ns {
-    $self instvar node_
-		
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns Tmix_DelayBox]
-    set node_(r2) [$ns Tmix_DelayBox]
-
-    set node_(k1) [$ns node]
-    set node_(k2) [$ns node]
-
-    $self next
-    $ns duplex-link $node_(s1) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 100Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 100Mb 1ms DropTail
-    $ns duplex-link $node_(k1) $node_(r2) 100Mb 1ms DropTail
-    $ns duplex-link $node_(k2) $node_(r2) 100Mb 1ms DropTail
-}
-
-TestSuite instproc setup_topo {} {
-    $self instvar ns_ 
-
-    remove-all-packet-headers
-    add-packet-header IP TCP
-    $ns_ use-scheduler Heap
-
-    Trace set show_tcphdr_ 1 
-    Agent/TCP set minrto_ 1;     # ns-2.27 value
-    Agent/TCP/FullTcp set segsize_ 1460;
-    Agent/TCP/FullTcp set nodelay_ true;
-    Agent/TCP/FullTcp set segsperack_ 2;
-    Agent/TCP/FullTcp set interval_ 0.1;
-}
-
-TestSuite instproc start_tracing {} {
-    $self instvar ns_ node_
-
-    # clear output files
-    exec rm -f temp.rands
-
-   # setup tracing
-    set trace_file [open temp.rands w]
-    $ns_ trace-queue $node_(s1) $node_(r1) $trace_file
-    $ns_ trace-queue $node_(r1) $node_(s1) $trace_file
-    $ns_ trace-queue $node_(s2) $node_(r1) $trace_file
-    $ns_ trace-queue $node_(r1) $node_(s2) $trace_file
-    $ns_ trace-queue $node_(r1) $node_(r2) $trace_file
-    $ns_ trace-queue $node_(r2) $node_(r1) $trace_file
-    $ns_ trace-queue $node_(k1) $node_(r2) $trace_file
-    $ns_ trace-queue $node_(r2) $node_(k1) $trace_file
-    $ns_ trace-queue $node_(k2) $node_(r2) $trace_file
-    $ns_ trace-queue $node_(r2) $node_(k2) $trace_file
-}
-
-#
-# Lossy-orig
-#
-Class Test/Lossy-orig -superclass TestSuite
-Test/Lossy-orig instproc init topo {
-    global defaultRNG
-    $self instvar net_ defNet_ test_
-    $defaultRNG seed 9999
-    set net_ $topo
-    set defNet_ DB
-    set test_ Lossy-orig
-    $self next 0
-}
-
-Test/Lossy-orig instproc run {} {
-    global INBOUND_ORIG OUTBOUND_ORIG END WARMUP
-    $self instvar ns_ node_
-    $self setup_topo
-
-    # setup Tmix-DB nodes
-    $node_(r1) set-cvfile $INBOUND_ORIG [$node_(s1) id] [$node_(k1) id]
-    $node_(r2) set-cvfile $OUTBOUND_ORIG [$node_(k2) id] [$node_(s2) id]
-    
-    # setup Tmix nodes
-    set tmix(0) [new Tmix]
-    $tmix(0) set-init $node_(s1);
-    $tmix(0) set-acc $node_(k1);
-    $tmix(0) set-ID 7
-    $tmix(0) set-cvfile $INBOUND_ORIG
-    
-    set tmix(1) [new Tmix]
-    $tmix(1) set-init $node_(k2);
-    $tmix(1) set-acc $node_(s2);
-    $tmix(1) set-ID 8
-    $tmix(1) set-cvfile $OUTBOUND_ORIG
-    
-    $ns_ at 0.0 "$tmix(0) start"
-    $ns_ at 0.0 "$tmix(1) start"
-    $ns_ at $WARMUP "$self start_tracing"
-    $ns_ at $END "$tmix(0) stop"
-    $ns_ at $END "$tmix(1) stop"
-    $ns_ at [expr $END + 1] "$ns_ halt"
-    
-    $ns_ run
-}
-
-#
-# Lossy-alt
-#
-Class Test/Lossy-alt -superclass TestSuite
-Test/Lossy-alt instproc init topo {
-    global defaultRNG
-    $self instvar net_ defNet_ test_
-    $defaultRNG seed 9999
-    set net_ $topo
-    set defNet_ DB
-    set test_ Lossy-alt
-    $self next 0
-}
-
-Test/Lossy-alt instproc run {} {
-    global INBOUND_ALT OUTBOUND_ALT END WARMUP
-    $self instvar ns_ node_
-    $self setup_topo
-
-    # setup Tmix-DB nodes
-    $node_(r1) set-cvfile $INBOUND_ALT [$node_(s1) id] [$node_(k1) id]
-    $node_(r2) set-cvfile $OUTBOUND_ALT [$node_(k2) id] [$node_(s2) id]
-    
-    # setup Tmix nodes
-    set tmix(0) [new Tmix]
-    $tmix(0) set-init $node_(s1);
-    $tmix(0) set-acc $node_(k1);
-    $tmix(0) set-ID 7
-    $tmix(0) set-cvfile $INBOUND_ALT
-    
-    set tmix(1) [new Tmix]
-    $tmix(1) set-init $node_(k2);
-    $tmix(1) set-acc $node_(s2);
-    $tmix(1) set-ID 8
-    $tmix(1) set-cvfile $OUTBOUND_ALT
-    
-    $ns_ at 0.0 "$tmix(0) start"
-    $ns_ at 0.0 "$tmix(1) start"
-    $ns_ at $WARMUP "$self start_tracing"
-    $ns_ at $END "$tmix(0) stop"
-    $ns_ at $END "$tmix(1) stop"
-    $ns_ at [expr $END + 1] "$ns_ halt"
-    
-    $ns_ run
-}
-
-#
-# Lossless-orig
-#
-Class Test/Lossless-orig -superclass TestSuite
-Test/Lossless-orig instproc init topo {
-    global defaultRNG
-    $self instvar net_ defNet_ test_
-    $defaultRNG seed 9999
-    set net_ $topo
-    set defNet_ DB
-    set test_ Lossless-orig
-    $self next 0
-}
-
-Test/Lossless-orig instproc run {} {
-    global INBOUND_ORIG OUTBOUND_ORIG END WARMUP
-    $self instvar ns_ node_
-    $self setup_topo
-
-    # setup Tmix-DB nodes
-    $node_(r1) set-cvfile $INBOUND_ORIG [$node_(s1) id] [$node_(k1) id]
-    $node_(r2) set-cvfile $OUTBOUND_ORIG [$node_(k2) id] [$node_(s2) id]
-    $node_(r1) set-lossless
-    $node_(r2) set-lossless
-
-    # setup Tmix nodes
-    set tmix(0) [new Tmix]
-    $tmix(0) set-init $node_(s1);
-    $tmix(0) set-acc $node_(k1);
-    $tmix(0) set-ID 7
-    $tmix(0) set-cvfile $INBOUND_ORIG
-
-    set tmix(1) [new Tmix]
-    $tmix(1) set-init $node_(k2);
-    $tmix(1) set-acc $node_(s2);
-    $tmix(1) set-ID 8
-    $tmix(1) set-cvfile $OUTBOUND_ORIG
-
-    $ns_ at 0.0 "$tmix(0) start"
-    $ns_ at 0.0 "$tmix(1) start"
-    $ns_ at $WARMUP "$self start_tracing"
-    $ns_ at $END "$tmix(0) stop"
-    $ns_ at $END "$tmix(1) stop"
-    $ns_ at [expr $END + 1] "$ns_ halt"
-    
-    $ns_ run
-}
-
-#
-# Lossless-alt
-#
-Class Test/Lossless-alt -superclass TestSuite
-Test/Lossless-alt instproc init topo {
-    global defaultRNG
-    $self instvar net_ defNet_ test_
-    $defaultRNG seed 9999
-    set net_ $topo
-    set defNet_ DB
-    set test_ Lossless-alt
-    $self next 0
-}
-
-Test/Lossless-alt instproc run {} {
-    global INBOUND_ALT OUTBOUND_ALT END WARMUP
-    $self instvar ns_ node_
-    $self setup_topo
-
-    # setup Tmix-DB nodes
-    $node_(r1) set-cvfile $INBOUND_ALT [$node_(s1) id] [$node_(k1) id]
-    $node_(r2) set-cvfile $OUTBOUND_ALT [$node_(k2) id] [$node_(s2) id]
-    $node_(r1) set-lossless
-    $node_(r2) set-lossless
-
-    # setup Tmix nodes
-    set tmix(0) [new Tmix]
-    $tmix(0) set-init $node_(s1);
-    $tmix(0) set-acc $node_(k1);
-    $tmix(0) set-ID 7
-    $tmix(0) set-cvfile $INBOUND_ALT
-
-    set tmix(1) [new Tmix]
-    $tmix(1) set-init $node_(k2);
-    $tmix(1) set-acc $node_(s2);
-    $tmix(1) set-ID 8
-    $tmix(1) set-cvfile $OUTBOUND_ALT
-
-    $ns_ at 0.0 "$tmix(0) start"
-    $ns_ at 0.0 "$tmix(1) start"
-    $ns_ at $WARMUP "$self start_tracing"
-    $ns_ at $END "$tmix(0) stop"
-    $ns_ at $END "$tmix(1) stop"
-    $ns_ at [expr $END + 1] "$ns_ halt"
-    
-    $ns_ run
-}
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-vc.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-vc.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-vc.tcl	2015-03-04 17:49:02.802750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-vc.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,466 +0,0 @@
-#
-# To run all tests:  test-all-algo-routing
-#
-# To run individual tests:
-# ns test-suite-algo-routing.tcl Algo1
-# ns test-suite-algo-routing.tcl Algo2
-# ...
-#
-# To view a list of available tests to run with this script:
-# ns test-suite-mixmode.tcl
-#
-#remove-all-packet-headers       ; # removes all except common
-#add-packet-header Flags IP RTP TCP rtProtoDV ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-# This test suite is for validating the algorithmic routing support
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1 in ns.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Class TestSuite
-
-TestSuite instproc init {} {
-	$self instvar ns_ net_ defNet_ test_ topo_ node_ testName_
-	set ns_ [new Simulator]
-	$ns_ use-scheduler List
-	Node enable-module VC
-        $ns_ multicast
-
-	$ns_ trace-all [open temp.rands w]
-	$ns_ namtrace-all [open temp.rands.nam w]
-	$ns_ color 1 red
-	$ns_ color 0 blue
-	$ns_ color 2 yellow
-	if {$net_ == ""} {
-		set net_ $defNet_
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-}
-
-TestSuite instproc finish args {
-	$self instvar ns_
-	
-	$ns_ flush-trace
-	exit 0
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<topologies>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	puts stderr "Valid Topologies are:\t[get-subclasses SkelTopology Topology/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv
-
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-			set a [lindex $argv 1]
-			if {$a == "QUIET"} {
-				set topo ""
-			} else {
-				set topo $a
-				isProc? Topology $topo
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $topo]
-	$t run
-}
-
-# Skeleton topology base class
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-   $self instvar node_
-    set n1 [lindex $nodelist 0]
-    foreach n2 [lrange $nodelist 1 end] {
-	if ![info exists node_($n2)] {
-	    set node_($n2) [$ns node]
-	}
-	$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-	foreach opt $args {
-	    set cmd [lindex $opt 0]
-	    set val [lindex $opt 1]
-	    if {[llength $opt] > 2} {
-		set x1 [lindex $opt 2]
-		set x2 [lindex $opt 3]
-	    } else {
-		set x1 $n1
-		set x2 $n2
-	    }
-	    $ns $cmd $node_($x1) $node_($x2) $val
-	    $ns $cmd $node_($x2) $node_($x1) $val
-	}
-	set n1 $n2
-    }
-}
-
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-NodeTopology/6nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-    set node_(n3) [$ns node]
-    set node_(n4) [$ns node]
-    set node_(n5) [$ns node]
-}
-
-
-Class Topology/net6 -superclass NodeTopology/6nodes
-
-#
-# Create a simple six node topology:
-#
-#                  n0
-#                 /  \                    
-#               n1    n2
-#              /  \  /  \
-#             n3   n4   n5
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net6 instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n4) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n2) $node_(n5) 1.5Mb 10ms DropTail 
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class NodeTopology/3nodes -superclass SkelTopology
-NodeTopology/3nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(n0) [$ns node]
-    set node_(n1) [$ns node]
-    set node_(n2) [$ns node]
-}
-
-Class Topology/net3 -superclass NodeTopology/3nodes
-#
-# Create a simple six node topology:
-#
-#                  n0
-#                 /  \                    
-#               n1 -- n2
-#
-# All links are of 1.5Mbps bandwidth with 10ms latency
-#
-
-Topology/net3 instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n0) $node_(n2) 1.5Mb 10ms DropTail 
-    $ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail 
-    if {[$class info instprocs config] != ""} {
-	$self config $ns
-    }
-}
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-
-NodeTopology/4nodes instproc init ns {
-	$self next
-	
-	$self instvar node_
-	set node_(n0) [$ns node]
-	set node_(n1) [$ns node]
-	set node_(n2) [$ns node]
-	set node_(n3) [$ns node]
-}
-
-
-Class Topology/net4 -superclass NodeTopology/4nodes
-
-# Create a simple four node topology:
-#
-#	              n3
-#	             / 
-#       1.5Mb,10ms  / 1.5Mb,10ms                              
-#    n0 --------- n1
-#                  \  1.5Mb,10ms
-#	            \ 
-#	             n2
-#
-
-Topology/net4 instproc init ns {
-	$self next $ns
-	$self instvar node_
-	$ns duplex-link $node_(n0) $node_(n1) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n1) $node_(n2) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(n1) $node_(n3) 1.5Mb 10ms DropTail
-	if {[$class info instprocs config] != ""} {
-		$self config $ns
-	}
-}
-
-
-# Definition of test-suite tests
-# Testing algorithmic routing in a simple topology
-Class Test/VC1 -superclass TestSuite
-Test/VC1 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net3
-	set test_	VC1
-	set net_	$net
-	$self next
-}
-
-Test/VC1 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set grp0 [Node allocaddr]
-        $ns_ rtproto Algorithmic
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $mrthandle set_c_rp $node_(n2)
-	}
-
-        if {$mrthandle != ""} {
-	    $ns_ at 0.3 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n1) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	$udp0 set class_ 1
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 0.1 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.1 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.1 "$node_(n2) join-group $rcvr2 $grp0"
-	
-	$ns_ at 0.5 "$self finish [list $rcvr0 $rcvr1 $rcvr2]"
-	$ns_ run
-}
-
-# Testing algorithmic routing with multicast in a simple topology
-Class Test/VC2 -superclass TestSuite
-Test/VC2 instproc init net {
-	$self instvar defNet_ test_ net_
-	set defNet_	net6
-	set test_	VC2
-	set net_	$net
-	$self next
-}
-
-Test/VC2 instproc run {} {
-	$self instvar ns_ node_ testName_
-
-	set grp0 [Node allocaddr]
-        $ns_ rtproto Algorithmic
-        set mproto CtrMcast
-        set mrthandle [$ns_ mrtproto $mproto {}]
-        if {$mrthandle != ""} {
-	    $mrthandle set_c_rp $node_(n2)
-	}
-
-        if {$mrthandle != ""} {
-	    $ns_ at 0.3 "$mrthandle switch-treetype $grp0"
-        }
-
-	set udp0 [new Agent/UDP]
-	$ns_ attach-agent $node_(n4) $udp0
-	$udp0 set dst_addr_ $grp0
-	$udp0 set dst_port_ 0
-	$udp0 set class_ 1
-	set cbr0 [new Application/Traffic/CBR]
-	$cbr0 attach-agent $udp0
-	
-	set rcvr0 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n0) $rcvr0
-	set rcvr1 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n1) $rcvr1
-	set rcvr2 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n2) $rcvr2
-	set rcvr3 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n3) $rcvr3
-	set rcvr4 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n4) $rcvr4
-	set rcvr5 [new Agent/LossMonitor]
-	$ns_ attach-agent $node_(n5) $rcvr5
-
-	$ns_ at 0.1 "$cbr0 start"
-	$ns_ at 0.1 "$node_(n1) join-group $rcvr1 $grp0"
-	$ns_ at 0.1 "$node_(n0) join-group $rcvr0 $grp0"
-	$ns_ at 0.1 "$node_(n3) join-group $rcvr3 $grp0"
-	$ns_ at 0.1 "$node_(n2) join-group $rcvr2 $grp0"
-	$ns_ at 0.1 "$node_(n4) join-group $rcvr4 $grp0"
-	$ns_ at 0.1 "$node_(n5) join-group $rcvr5 $grp0"
-	
-	$ns_ at 0.5 "$self finish [list $rcvr0 $rcvr1 $rcvr2 $rcvr3 $rcvr4 $rcvr5]"
-	$ns_ run
-}
-
-Class Test/VC3 -superclass TestSuite
-Test/VC3 instproc init topo {
-	$self instvar net_ defNet_ test_
-	set net_	$topo
-	set defNet_	net4
-	set test_	VC3
-	$self next
-}
-
-Test/VC3 instproc run {} {
-    $self instvar ns_ node_ testName_
-	
-    set udp0 [new Agent/UDP]
-    $ns_ attach-agent $node_(n3) $udp0
-    set cbr0 [new Application/Traffic/CBR]
-    $cbr0 attach-agent $udp0
-    
-    set udp1 [new Agent/UDP]
-    $ns_ attach-agent $node_(n0) $udp1
-    $udp1 set class_ 1
-    set cbr1 [new Application/Traffic/CBR]
-    $cbr1 attach-agent $udp1
-
-    set null0 [new Agent/Null]
-    $ns_ attach-agent $node_(n0) $null0
-
-    set null1 [new Agent/Null]
-    $ns_ attach-agent $node_(n2) $null1
-
-    $ns_ connect $udp0 $null0
-    $ns_ connect $udp1 $null1
-
-    $ns_ at 1.0 "$cbr0 start"
-    $ns_ at 1.1 "$cbr1 start"
-
-    set tcp [new Agent/TCP]
-    $tcp set class_ 2
-    set sink [new Agent/TCPSink]
-    $ns_ attach-agent $node_(n0) $tcp
-    $ns_ attach-agent $node_(n3) $sink
-    $ns_ connect $tcp $sink
-    set ftp [new Application/FTP]
-    $ftp attach-agent $tcp
-    $ns_ at 1.2 "$ftp start"
-
-    $ns_ at 1.35 "$ns_ detach-agent $node_(n0) $tcp ; $ns_ detach-agent $node_(n3) $sink"
-
-    $ns_ at 1.5 "$self finish"
-	
-    $ns_ run
-}
-
-
-TestSuite runTest
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-vq.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-vq.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-vq.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-vq.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,668 +0,0 @@
-#
-# Copyright (c) 1995-1997 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# To run all tests: test-all-vq
-
-source misc_simple.tcl
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  ; # hdrs reqd for validation test
- 
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set singledup_ 0
-Agent/TCP set overhead_ 0.001
-Queue/Vq set buflim_ 0.25
-# The default is being changed to 1
-
-Queue/Vq set queue_in_bytes_ false
-Queue/Vq set gamma_ 0.895
-# The defaults for queue_in_bytes_ and gamma_ are being changed.
-
-set flowfile fairflow.tr; # file where flow data is written
-set flowgraphfile fairflow.xgr; # file given to graph tool 
-
-TestSuite instproc finish file {
-	global quiet PERL
-	$self instvar ns_ tchan_ testName_
-        exec $PERL ../../bin/getrc -s 2 -d 3 all.tr | \
-          $PERL ../../bin/raw2xg -a -s 0.01 -m 90 -t $file > temp.rands
-	if {$quiet == "false"} {
-        	exec xgraph -bb -tk -nl -m -x time -y packets temp.rands &
-	}
-        ## now use default graphing tool to make a data file
-        ## if so desired
-
-	if { [info exists tchan_] && $quiet == "false" } {
-		$self plotQueue $testName_
-	}
-	$ns_ halt
-}
-
-TestSuite instproc enable_tracequeue ns {
-	$self instvar tchan_ node_
-	set vqq [[$ns link $node_(r1) $node_(r2)] queue]
-	set tchan_ [open all.q w]
-	$vqq trace curq_
-	$vqq attach $tchan_
-}
-
-Class Topology
-
-Topology instproc node? num {
-    $self instvar node_
-    return $node_($num)
-}
-
-Class Topology/net2 -superclass Topology
-Topology/net2 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms Vq
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-Class Topology/net3 -superclass Topology
-Topology/net3 instproc init ns {
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]    
-    set node_(r1) [$ns node]    
-    set node_(r2) [$ns node]    
-    set node_(s3) [$ns node]    
-    set node_(s4) [$ns node]    
-
-    $self next 
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 0ms DropTail
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 1ms DropTail
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 10ms Vq
-    $ns duplex-link $node_(r2) $node_(r1) 1.5Mb 10ms Vq
-    $ns queue-limit $node_(r1) $node_(r2) 100
-    $ns queue-limit $node_(r2) $node_(r1) 100
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 2ms DropTail
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 3ms DropTail
- 
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-}   
-
-TestSuite instproc plotQueue file {
-	global quiet
-	$self instvar tchan_
-	#
-	# Plot the queue size and average queue size, for Vq gateways.
-	#
-	set awkCode {
-		{
-			if ($1 == "Q" && NF>2) {
-				print $2, $3 >> "temp.q";
-				set end $2
-			}
-		}
-	}
-	set f [open temp.queue w]
-	puts $f "TitleText: $file"
-	puts $f "Device: Postscript"
-
-	if { [info exists tchan_] } {
-		close $tchan_
-	}
-	exec rm -f temp.q
-	exec touch temp.q
-
-	exec awk $awkCode all.q
-
-	puts $f \"queue
-	exec cat temp.q >@ $f  
-	close $f
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -x time -y queue temp.queue &
-	}
-}
-
-TestSuite instproc tcpDumpAll { tcpSrc interval label } {
-    global quiet
-    $self instvar dump_inst_ ns_
-    if ![info exists dump_inst_($tcpSrc)] {
-	set dump_inst_($tcpSrc) 1
-	set report $label/window=[$tcpSrc set window_]/packetSize=[$tcpSrc set packetSize_]
-	if {$quiet == "false"} {
-		puts $report
-	}
-	$ns_ at 0.0 "$self tcpDumpAll $tcpSrc $interval $label"
-	return
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self tcpDumpAll $tcpSrc $interval $label"
-    set report time=[$ns_ now]/class=$label/ack=[$tcpSrc set ack_]/packets_resent=[$tcpSrc set nrexmitpack_]
-    if {$quiet == "false"} {
-    	puts $report
-    }
-}       
-
-Class Test/vq1 -superclass TestSuite
-Test/vq1 instproc init {} {
-    $self instvar net_ test_
-    set net_ net2 
-    set test_ vq1
-    Queue/Vq set buflim_ 0.25
-    $self next pktTraceFile
-}
-Test/vq1 instproc run {} {
-    $self instvar ns_ node_ testName_ net_
-    $self setTopo
-
-    set vqq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$vqq set markpkts_ false 
-   	$vqq set queue_in_bytes_ false 
-
-    set stoptime 10.0
-
-   	$vqq set markpkts_ false 
-   	$vqq set queue_in_bytes_ false 
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 15
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 15
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-Class Test/ecn -superclass TestSuite
-Test/ecn instproc init {} {
-    $self instvar net_ test_
-    Queue/Vq set setbit_ true
-    Agent/TCP set old_ecn_ 1
-    set net_	net2
-    set test_	ecn
-    $self next pktTraceFile
-}
-Test/ecn instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo 
-
-    set stoptime 10.0
-    set vqq [[$ns_ link $node_(r1) $node_(r2)] queue]
-		
-   	$vqq set markpkts_ true 
-   	$vqq set queue_in_bytes_ false 
-
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 15
-    $tcp1 set ecn_ 1
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 15
-    $tcp2 set ecn_ 1
-        
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-        
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-        
-    $self tcpDump $tcp1 5.0
-        
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-        
-    $ns_ run
-}
-
-Class Test/vq2 -superclass TestSuite
-Test/vq2 instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	vq2
-    $self next pktTraceFile
-}
-Test/vq2 instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set vqq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$vqq set markpkts_ false 
-   	$vqq set queue_in_bytes_ false 
-	
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 100 
-
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s3) 1]
-    $tcp2 set window_ 100
-
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 3.0 "$ftp2 start"
-
-    $self tcpDump $tcp1 5.0
-    
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-# The queue is measured in "packets".
-Class Test/vq_twoway -superclass TestSuite
-Test/vq_twoway instproc init {} {
-    $self instvar net_ test_
-    set net_	net3
-    set test_	vq_twoway
-    $self next pktTraceFile
-}
-Test/vq_twoway instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set vqq [[$ns_ link $node_(r1) $node_(r2)] queue]
-
-   	$vqq set markpkts_ false 
-   	$vqq set queue_in_bytes_ false 
-	
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 100 
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 1]
-    $tcp2 set window_ 100 
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s3) TCPSink/Sack1 $node_(s1) 2]
-    $tcp3 set window_ 100 
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s4) TCPSink/Sack1 $node_(s2) 3]
-    $tcp4 set window_ 100 
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-# The queue is measured in "bytes".
-Class Test/vq_twowaybytes -superclass TestSuite
-Test/vq_twowaybytes instproc init {} {
-    $self instvar net_ test_
-    set net_	net2
-    set test_	vq_twowaybytes
-    $self next pktTraceFile
-}
-Test/vq_twowaybytes instproc run {} {
-    $self instvar ns_ node_ testName_
-    $self setTopo
-
-    set stoptime 10.0
-    set vqq [[$ns_ link $node_(r1) $node_(r2)] queue]
-   	$vqq set markpkts_ false 
-   	$vqq set queue_in_bytes_ false 
-		
-    set tcp1 [$ns_ create-connection TCP/Sack1 $node_(s1) TCPSink/Sack1 $node_(s3) 0]
-    $tcp1 set window_ 15
-    set tcp2 [$ns_ create-connection TCP/Sack1 $node_(s2) TCPSink/Sack1 $node_(s4) 1]
-    $tcp2 set window_ 15
-    set ftp1 [$tcp1 attach-app FTP]
-    set ftp2 [$tcp2 attach-app FTP]
-
-    set tcp3 [$ns_ create-connection TCP/Sack1 $node_(s3) TCPSink/Sack1 $node_(s1) 2]
-    $tcp3 set window_ 15
-    set tcp4 [$ns_ create-connection TCP/Sack1 $node_(s4) TCPSink/Sack1 $node_(s2) 3]
-    $tcp4 set window_ 15
-    set ftp3 [$tcp3 attach-app FTP]
-    set telnet1 [$tcp4 attach-app Telnet] ; $telnet1 set interval_ 0
-
-    $self enable_tracequeue $ns_
-    $ns_ at 0.0 "$ftp1 start"
-    $ns_ at 2.0 "$ftp2 start"
-    $ns_ at 3.5 "$ftp3 start"
-    $ns_ at 1.0 "$telnet1 start"
-
-    $self tcpDump $tcp1 5.0
-
-    # trace only the bottleneck link
-    #$self traceQueues $node_(r1) [$self openTrace $stoptime $testName_]
-    $ns_ at $stoptime "$self cleanupAll $testName_"
-
-    $ns_ run
-}
-
-#
-#######################################################################
-
-TestSuite instproc create_flowstats {} {
-
-	global flowfile flowchan
-	$self instvar ns_ node_ r1fm_
-
-	set r1fm_ [$ns_ makeflowmon Fid]
-	set flowchan [open $flowfile w]
-	$r1fm_ attach $flowchan
-	$ns_ attach-fmon [$ns_ link $node_(r1) $node_(r2)] $r1fm_ 1
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [pkts]
-#	(verified compatible for ns2 - kfall, 10/30/97)
-TestSuite instproc unforcedmakeawk { } {
-        set awkCode {
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && $14 > 0) {
-			    print 100.0 * $9/$13, 100.0 * $10 / $14
-			}
-			prev = $2;
-                } else if ($13 > 0 && $14 > 0) {
-                        print 100.0 * $9 / $13, 100.0 * $10 / $14
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#       x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#       y axis: # drops for this flow+category / # drops this category [bytes]
-#	(modified for compatibility with ns2 flowmon - kfall, 10/30/97)
-TestSuite instproc forcedmakeawk { } {
-        set awkCode {
-            BEGIN { print "\"flow 0" }
-            {
-                if ($2 != prev) {
-                        print " "; print "\"flow " $2;
-			if ($13 > 0 && ($17 - $15) > 0) {
-				print 100.0 * $9/$13, 100.0 * ($19 - $11) / ($17 - $15);
-			}
-			prev = $2;
-                } else if ($13 > 0 && ($17 - $15) > 0) {
-                        print 100.0 * $9 / $13, 100.0 * ($19 - $11) / ($17 - $15)
-		}
-            }
-        }
-        return $awkCode
-}
-
-#
-# awk code used to produce:
-#      x axis: # arrivals for this flow+category / # total arrivals [bytes]
-#      y axis: # drops for this flow / # drops [pkts and bytes combined]
-TestSuite instproc allmakeawk { } {
-    set awkCode {
-        BEGIN {prev=-1; tot_bytes=0; tot_packets=0; forced_total=0; unforced_total=0}
-        {
-            if ($5 != prev) {
-                print " "; print "\"flow ",$5;
-                prev = $5
-            }
-            tot_bytes = $19-$11;
-            forced_total= $16-$14;
-            tot_packets = $10;
-            tot_arrivals = $9;
-            unforced_total = $14;
-            if (unforced_total + forced_total > 0) {
-                if ($14 > 0) {
-                    frac_packets = tot_packets/$14;
-                }
-                else { frac_packets = 0;}
-                if ($17-$15 > 0) {
-                    frac_bytes = tot_bytes/($17-$15);
-                }
-                else {frac_bytes = 0;} 
-                if ($13 > 0) {
-                    frac_arrivals = tot_arrivals/$13;
-                }
-                else {frac_arrivals = 0;}
-                if (frac_packets + frac_bytes > 0) {
-                    unforced_total_part = frac_packets * unforced_total / ( unforced_total + forced_total)
-                    forced_total_part = frac_bytes * forced_total / ( unforced_total + forced_total)
-                    print 100.0 * frac_arrivals, 100.0 * ( unforced_total_part +forced_total_part)
-                }
-            }
-        }
-    }
-    return $awkCode
-}
-
-TestSuite instproc create_flow_graph { graphtitle graphfile } {
-        global flowfile quiet
-	$self instvar awkprocedure_
-
-        if {$quiet == "false"} {
-		puts "awkprocedure: $awkprocedure_"
-	}
-
-        set tmpfile1 /tmp/fg1[pid]
-        set tmpfile2 /tmp/fg2[pid]
-
-        exec rm -f $graphfile
-        set outdesc [open $graphfile w]
-        #
-        # this next part is xgraph specific
-        #
-        puts $outdesc "TitleText: $graphtitle"
-        puts $outdesc "Device: Postscript"
-
-        exec rm -f $tmpfile1 $tmpfile2
-	if {$quiet == "false"} {
-        	puts "writing flow xgraph data to $graphfile..."
-	}
-
-        exec sort -n -k2 -o $flowfile $flowfile
-        exec awk [$self $awkprocedure_] $flowfile >@ $outdesc
-        close $outdesc
-}
-
-TestSuite instproc finish_flows testname {
-	global flowgraphfile flowfile flowchan quiet
-	$self instvar r1fm_
-	$r1fm_ dump
-	close $flowchan
-	$self create_flow_graph $testname $flowgraphfile
-	if {$quiet == "false"} {
-		puts "running xgraph..."
-	}
-	exec cp $flowgraphfile temp.rands
-	if {$quiet == "false"} {
-		exec xgraph -bb -tk -nl -m -lx 0,100 -ly 0,100 -x "% of data bytes" -y "% of discards" $flowgraphfile &
-	}
-	exit 0
-}
-
-
-TestSuite instproc new_tcp { startTime source dest window fid verbose size } {
-	$self instvar ns_
-	set tcp [$ns_ create-connection TCP/Sack1 $source TCPSink/Sack1 $dest $fid]
-	$tcp set window_ $window
-	if {$size > 0}  {$tcp set packetSize_ $size }
-	set ftp [$tcp attach-app FTP]
-	$ns_ at $startTime "$ftp start"
-	if {$verbose == "1"} {
-
-	  $self tcpDumpAll $tcp 20.0 $fid 
-	}
-}
-
-TestSuite instproc new_cbr { startTime source dest pktSize interval fid } {
-
-	$self instvar ns_
-    set s_agent [new Agent/UDP]	
-    set d_agent [new Agent/LossMonitor]
-    $s_agent set fid_ $fid 
-    $d_agent set fid_ $fid 
-    set cbr [new Application/Traffic/CBR]
-    $cbr attach-agent $s_agent
-    $ns_ attach-agent $source $s_agent
-    $ns_ attach-agent $dest $d_agent
-    $ns_ connect $s_agent $d_agent
-
-    if {$pktSize > 0} {
-	$cbr set packetSize_ $pktSize
-    }
-    $cbr set rate_ [expr 8 * $pktSize / $interval]
-    $ns_ at $startTime "$cbr start"
-}
-
-TestSuite instproc dumpflows interval {
-    $self instvar dumpflows_inst_ ns_ r1fm_
-    $self instvar awkprocedure_ dump_pthresh_
-    global flowchan
-
-    if ![info exists dumpflows_inst_] {
-        set dumpflows_inst_ 1
-        $ns_ at 0.0 "$self dumpflows $interval"
-        return  
-    }
-    if { $awkprocedure_ == "unforcedmakeawk" } {
-	set pcnt [$r1fm_ set epdrops_]
-    } elseif { $awkprocedure_ == "forcedmakeawk" } {
-	set pcnt [expr [$r1fm_ set pdrops_] - [$r1fm_ set epdrops_]]
-    } elseif { $awkprocedure_ == "allmakeawk" } {
-	set pcnt [$r1fm_ set pdrops_]
-    } else {
-	puts stderr "unknown handling of flow dumps!"
-	exit 1
-    }
-    if { $pcnt >= $dump_pthresh_ } {
-	    $r1fm_ dump
-	    flush $flowchan
-	    foreach f [$r1fm_ flows] {
-		$f reset
-	    }
-	    $r1fm_ reset
-	    set interval 2.0
-    } else {
-	    set interval 1.0
-    }
-    $ns_ at [expr [$ns_ now] + $interval] "$self dumpflows $interval"
-}   
-
-TestSuite instproc droptest { stoptime } {
-	$self instvar ns_ node_ testName_ r1fm_ awkprocedure_
-
-	set forwq [[$ns_ link $node_(r1) $node_(r2)] queue]
-	set revq [[$ns_ link $node_(r2) $node_(r1)] queue]
-
-	$forwq set mean_pktsize_ 1000
-	$revq set mean_pktsize_ 1000
-	$forwq set linterm_ 10
-	$revq set linterm_ 10
-	$forwq set limit_ 100
-	$revq set limit_ 100
-
-	$self create_flowstats 
-	$self dumpflows 10.0
-
-	$forwq set bytes_ true
-	$forwq set queue_in_bytes_ true
-	$forwq set wait_ false
-
-        $self new_tcp 1.0 $node_(s1) $node_(s3) 100 1 1 1000
-	$self new_tcp 1.2 $node_(s2) $node_(s4) 100 2 1 50
-	$self new_cbr 1.4 $node_(s1) $node_(s4) 190 0.003 3
-
-	$ns_ at $stoptime "$self finish_flows $testName_"
-
-	$ns_ run
-}
-
-
-
-TestSuite runTest
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-webcache.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-webcache.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-webcache.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-webcache.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,2264 +0,0 @@
-# Test suite for HTTP server, client, proxy cache.
-#
-# Also tests TcpApp, which is an Application used to transmit 
-# application-level data. Because current TCP isn't capable of this,
-# we build this functionality based on byte-stream model of underlying 
-# TCP connection.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-webcache.tcl,v 1.25 2006/01/24 23:00:08 sallyfloyd Exp $
-
-#----------------------------------------------------------------------
-# Related Files
-#----------------------------------------------------------------------
-source misc.tcl
-source topologies.tcl
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP HttpInval ; # hdrs reqd for validation test
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set exitFastRetrans_ false
-#
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set timerfix_ false
-# The default is being changed to true.
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-#----------------------------------------------------------------------
-# Misc setup
-#----------------------------------------------------------------------
-set tcl_precision 10
-
-
-
-#----------------------------------------------------------------------
-# Topologies for cache testing
-#----------------------------------------------------------------------
-
-# Simplest topology: 1 client + 1 cache + 1 server
-Class Topology/cache0 -superclass SkelTopology
-
-Topology/cache0 instproc init ns {
-	$self next
-	$self instvar node_
-
-	set node_(c) [$ns node]
-	set node_(e) [$ns node]
-	set node_(s) [$ns node]
-
-	$ns duplex-link $node_(s) $node_(e) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e) $node_(c) 10Mb 2ms DropTail
-	$ns duplex-link-op $node_(c) $node_(e) orient right
-	$ns duplex-link-op $node_(e) $node_(s) orient right
-}
-
-# Hierarchical cache, 1 server + 7 cache + 4 clients, server linked to 
-# a top-level cache
-Class Topology/cache2 -superclass SkelTopology
-
-Topology/cache2 instproc init ns {
-	$self next
-	$self instvar node_
-
-	set node_(c0) [$ns node]
-	set node_(c1) [$ns node]
-	set node_(c2) [$ns node]
-	set node_(c3) [$ns node]
-	set node_(e0) [$ns node]
-	set node_(e1) [$ns node]
-	set node_(e2) [$ns node]
-	set node_(e3) [$ns node]
-	set node_(e4) [$ns node]
-	set node_(e5) [$ns node]
-	set node_(e6) [$ns node]
-	set node_(s0) [$ns node]
-
-	# between top-level cache: OC3
-	$ns duplex-link $node_(e0) $node_(e1) 155Mb 100ms DropTail
-	# server to top-level cache and inside a cache hierarchy: T1
-	$ns duplex-link $node_(s0) $node_(e0) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e0) $node_(e2) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e0) $node_(e3) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e1) $node_(e4) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e1) $node_(e5) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e2) $node_(e6) 10Mb 2ms DropTail
-	# client to caches: 10Mb ethernet
-	$ns duplex-link $node_(e2) $node_(c0) 10Mb 2ms DropTail
-	$ns duplex-link $node_(e6) $node_(c1) 10Mb 2ms DropTail
-	$ns duplex-link $node_(e4) $node_(c2) 10Mb 2ms DropTail
-	$ns duplex-link $node_(e1) $node_(c3) 10Mb 2ms DropTail
-
-	$ns duplex-link-op $node_(s0) $node_(e0) orient right
-	$ns duplex-link-op $node_(e0) $node_(e1) orient right
-	$ns duplex-link-op $node_(e0) $node_(e2) orient left-down
-	$ns duplex-link-op $node_(e0) $node_(e3) orient right-down
-	$ns duplex-link-op $node_(e2) $node_(e6) orient down
-	$ns duplex-link-op $node_(c0) $node_(e2) orient right
-	$ns duplex-link-op $node_(c1) $node_(e6) orient right
-	$ns duplex-link-op $node_(e1) $node_(e4) orient left-down
-	$ns duplex-link-op $node_(e1) $node_(e5) orient right-down
-	$ns duplex-link-op $node_(e4) $node_(c2) orient down
-	$ns duplex-link-op $node_(e1) $node_(c3) orient right
-
-	$self checkConfig $class $ns
-}
-
-# Hierarchical cache, 1 server + 7 cache + 4 clients, server linked to a 
-# second-level cache.
-Class Topology/cache3 -superclass SkelTopology
-
-Topology/cache3 instproc init ns {
-	$self next
-	$self instvar node_
-
-	set node_(c0) [$ns node]
-	set node_(c1) [$ns node]
-	set node_(c2) [$ns node]
-	set node_(c3) [$ns node]
-	set node_(e0) [$ns node]
-	set node_(e1) [$ns node]
-	set node_(e2) [$ns node]
-	set node_(e3) [$ns node]
-	set node_(e4) [$ns node]
-	set node_(e5) [$ns node]
-	set node_(e6) [$ns node]
-	set node_(s0) [$ns node]
-
-	# between top-level cache: OC3
-	$ns duplex-link $node_(e0) $node_(e1) 155Mb 100ms DropTail
-	# server to top-level cache and inside a cache hierarchy: T1
-	$ns duplex-link $node_(s0) $node_(e5) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e0) $node_(e2) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e0) $node_(e3) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e1) $node_(e4) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e1) $node_(e5) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(e2) $node_(e6) 10Mb 2ms DropTail
-	# client to caches: 10Mb ethernet
-	$ns duplex-link $node_(e2) $node_(c0) 10Mb 2ms DropTail
-	$ns duplex-link $node_(e6) $node_(c1) 10Mb 2ms DropTail
-	$ns duplex-link $node_(e4) $node_(c2) 10Mb 2ms DropTail
-	$ns duplex-link $node_(e1) $node_(c3) 10Mb 2ms DropTail
-
-	$ns duplex-link-op $node_(e5) $node_(s0) orient right
-	$ns duplex-link-op $node_(e0) $node_(e1) orient right
-	$ns duplex-link-op $node_(e0) $node_(e2) orient left-down
-	$ns duplex-link-op $node_(e0) $node_(e3) orient right-down
-	$ns duplex-link-op $node_(e2) $node_(e6) orient down
-	$ns duplex-link-op $node_(c0) $node_(e2) orient right
-	$ns duplex-link-op $node_(c1) $node_(e6) orient right
-	$ns duplex-link-op $node_(e1) $node_(e4) orient left-down
-	$ns duplex-link-op $node_(e1) $node_(e5) orient right-down
-	$ns duplex-link-op $node_(e4) $node_(c2) orient down
-	$ns duplex-link-op $node_(e1) $node_(c3) orient right
-
-	$self checkConfig $class $ns
-}
-
-# Two level hierarchical cache. 1 server + 1 TLC + n 2nd caches with one 
-# bottleneck link connecting TCL to other caches + n clients
-Class Topology/BottleNeck -superclass SkelTopology
-
-Class Topology/BottleNeck -superclass SkelTopology
-
-Topology/BottleNeck instproc init { ns } {
-	$self next 
-	$self instvar node_ 
-
-	global opts
-	if [info exists opts(num-2nd-cache)] {
-		set n $opts(num-2nd-cache)
-	} else {
-		error "Topology/BottleNeck requires option num-2nd-cache"
-	}
-
-	set node_(s0) [$ns node]
-	# TLC is node e0
-	for {set i 0} {$i <= $n} {incr i} {
-		set node_(e$i) [$ns node]
-	}
-	# We create clients separately so we have consecutive ids for all 
-	# clients
-	for {set i 0} {$i < $n} {incr i} {
-		set node_(c$i) [$ns node]
-	}
-
-	# Between TLC and server: T1
-#	$ns duplex-link $node_(e$n) $node_(s0) 1.5Mb 100ms DropTail
-
-	# Server attached to a client via a LAN
-	$ns duplex-link $node_(e0) $node_(s0) 1.5Mb 100ms DropTail
-	#$ns duplex-link $node_(e0) $node_(s0) 10Mb 2ms DropTail
-
-	# Bottleneck link
-	$self instvar dummy_
-	set dummy_ [$ns node]
-	$ns duplex-link $node_(e$n) $dummy_ 1.5Mb 50ms DropTail
-
-	for {set i 0} {$i < $n} {incr i} {
-		$ns duplex-link $node_(e$i) $dummy_ 1.5Mb 50ms DropTail
-		$ns duplex-link $node_(c$i) $node_(e$i) 10Mb 2ms DropTail
-	}
-
-	$self checkConfig $class $ns
-}
-
-Topology/BottleNeck instproc start-monitor { ns } {
-	$self instvar qmon_ node_ dummy_
-
-	# Traffic between server and its primary cache
-	set qmon_(svr_f) [$ns monitor-queue $node_(s0) $node_(e0) ""]
-	set qmon_(svr_t) [$ns monitor-queue $node_(e0) $node_(s0) ""]
-
-	global opts
-	set n $opts(num-2nd-cache)
-
-	# Traffic between TLC and all others
-	set qmon_(btnk_f) [$ns monitor-queue $node_(e$n) $dummy_ ""]
-	set qmon_(btnk_t) [$ns monitor-queue $dummy_ $node_(e$n) ""]
-
-	# Traffic for all the rest links
-	for {set i 0} {$i < $n} {incr i} {
-		set qmon_(e${i}_d_f) [$ns monitor-queue $node_(e$i) $dummy_ ""]
-		set qmon_(e${i}_d_t) [$ns monitor-queue $dummy_ $node_(e$i) ""]
-		set qmon_(e${i}_c${i}_f) \
-			[$ns monitor-queue $node_(e$i) $node_(c$i) ""]
-		set qmon_(e${i}_c${i}_t) \
-			[$ns monitor-queue $node_(c$i) $node_(e$i) ""]
-	}
-	#puts "Monitors started at time [$ns now]"
-}
-
-Topology/BottleNeck instproc mon-stat {} {
-	$self instvar qmon_
-
-	set total_bw 0
-	foreach n [array names qmon_] {
-		set total_bw [expr $total_bw + \
-			double([$qmon_($n) set bdepartures_])]
-	}
-	set svr_bw [expr double([$qmon_(svr_f) set bdepartures_]) + \
-			double([$qmon_(svr_t) set bdepartures_])]
-	set btnk_bw [expr double([$qmon_(btnk_f) set bdepartures_]) + \
-			double([$qmon_(btnk_t) set bdepartures_])]
-	return [list total_bw $total_bw svr_bw $svr_bw btnk_bw $btnk_bw]
-}
-
-#
-# Three level hierarchical cache, binary tree. 
-#
-Class Topology/cache4 -superclass SkelTopology
-
-Topology/cache4 instproc init { ns } {
-	$self next
-	$self instvar node_
-
-	# server attached to a leaf cache
-	set node_(s0) [$ns node]
-	# TLC is node e0
-	for {set i 0} {$i <= 6} {incr i} {
-		set node_(e$i) [$ns node]
-	}
-	# All clients attached to leaf caches
-	for {set i 0} {$i <= 3} {incr i} {
-		set node_(c$i) [$ns node]
-	}
-
-	# Bottleneck link between TLC and other caches
-	set dummy [$ns node]
-	$ns duplex-link $node_(e0) $dummy 100Mb 1ms DropTail
-	$ns duplex-link $dummy $node_(e1) 1.5Mb 50ms DropTail
-	$ns duplex-link $dummy $node_(e2) 1.5Mb 50ms DropTail
-
-	$ns duplex-link $node_(e1) $node_(e3) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(e1) $node_(e4) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(e2) $node_(e5) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(e2) $node_(e6) 1.5Mb 10ms DropTail
-	$ns duplex-link $node_(e3) $node_(c0) 10Mb 1ms DropTail
-	$ns duplex-link $node_(e4) $node_(c1) 10Mb 1ms DropTail
-	$ns duplex-link $node_(e5) $node_(c2) 10Mb 1ms DropTail
-	$ns duplex-link $node_(e6) $node_(c3) 10Mb 1ms DropTail
-	$ns duplex-link $node_(s0) $node_(e3) 10Mb 10ms DropTail
-	
-	$ns duplex-link-op $node_(e0) $dummy orient down
-	$ns duplex-link-op $dummy $node_(e1) orient left-down
-	$ns duplex-link-op $dummy $node_(e2) orient right-down
-	$ns duplex-link-op $node_(e1) $node_(e3) orient left-down
-	$ns duplex-link-op $node_(e1) $node_(e4) orient right-down
-	$ns duplex-link-op $node_(e2) $node_(e5) orient left-down
-	$ns duplex-link-op $node_(e2) $node_(e6) orient right-down
-	$ns duplex-link-op $node_(e3) $node_(c0) orient down
-	$ns duplex-link-op $node_(e4) $node_(c1) orient down
-	$ns duplex-link-op $node_(e5) $node_(c2) orient down
-	$ns duplex-link-op $node_(e6) $node_(c3) orient down
-	$ns duplex-link-op $node_(s0) $node_(e3) orient right
-
-	$self checkConfig $class $ns
-}
-
-# Same as Topology/cache4, except adding a dynamic links
-Class Topology/cache4d -superclass Topology/cache4
-
-Topology/cache4d instproc init { ns } {
-	$self next $ns
-	$self instvar node_
-	$ns rtmodel-at 500 down $node_(s0) $node_(e3)
-	$ns rtmodel-at 1000 up $node_(s0) $node_(e3)
-	$self checkConfig $class $ns
-}
-
-# 2-level topology with direct links from server to every client
-# Compare invalidation vs ttl with direct request
-Class Topology/cache5 -superclass SkelTopology
-
-Topology/cache5 instproc init { ns } {
-	$self next
-	$self instvar node_
-
-	global opts
-	if [info exists opts(num-2nd-cache)] {
-		set n $opts(num-2nd-cache)
-	} else {
-		error "Topology/BottleNeck requires option num-2nd-cache"
-	}
-
-	set node_(s0) [$ns node]
-	# TLC is node e0
-	for {set i 0} {$i <= $n} {incr i} {
-		set node_(e$i) [$ns node]
-	}
-	# We create clients separately so we have consecutive ids for all 
-	# clients
-	for {set i 0} {$i < $n} {incr i} {
-		set node_(c$i) [$ns node]
-	}
-
-	set sn [$ns node]	;# Dummy node for bottleneck link
-	$ns duplex-link $node_(e$n) $sn 1.5Mb 50ms DropTail
-	# Traffic on the duplex link. 
-	$self instvar qmon_
-	set qmon_(btnk_f) [$ns monitor-queue $node_(e$n) $sn ""]
-	set qmon_(btnk_t) [$ns monitor-queue $sn $node_(e$n) ""]
-
-	for {set i 0} {$i < $n} {incr i} {
-		$ns duplex-link $node_(e$i) $sn 1.5Mb 50ms DropTail
-		$ns duplex-link $node_(c$i) $node_(e$i) 10Mb 2ms DropTail
-		# Server attached to all clients, but its parent cache is e0
-		# delay to server is proportional to its distance to e0
-		set delay [expr 5 + $i*5]ms
-		$ns duplex-link $node_(e$i) $node_(s0) 1.5Mb $delay DropTail
-		set qmon_(svr_f$i) [$ns monitor-queue $node_(s0) $node_(e$i) ""]
-		set qmon_(svr_t$i) [$ns monitor-queue $node_(e$i) $node_(s0) ""]
-	}
-	$self checkConfig $class $ns
-}
-
-#
-# Simple 2 node topology testing SimpleTcp and TcpApp
-#
-Class Topology/2node -superclass SkelTopology
-
-Topology/2node instproc init { ns } {
-	$self next
-	$self instvar node_
-
-	set node_(0) [$ns node]
-	set node_(1) [$ns node]
-	$ns duplex-link $node_(0) $node_(1) 1.5Mb 10ms DropTail
-	$ns duplex-link-op $node_(0) $node_(1) orient right
-	$self checkConfig $class $ns
-}
-
-#
-# 3 node linear topology testing SimpleTcp and TcpApp
-#
-Class Topology/3node -superclass SkelTopology
-
-Topology/3node instproc init { ns } {
-	$self next 
-	$self instvar node_
-
-	set node_(0) [$ns node]
-	set node_(1) [$ns node]
-	set node_(2) [$ns node]
-	$ns duplex-link $node_(0) $node_(1) 1.5Mb 50ms DropTail
-	$ns duplex-link $node_(1) $node_(2) 1.5Mb 50ms DropTail
-	$ns duplex-link-op $node_(0) $node_(1) orient right
-	$ns duplex-link-op $node_(1) $node_(2) orient right
-}
-
-#
-# 5 node topology testing HTTP cache, with 3 clients, one server and 
-# one cache
-#
-Class Topology/5node -superclass SkelTopology
-
-Topology/5node instproc init { ns } {
-	$self next
-	$self instvar node_
-
-	for {set i 0} {$i < 5} {incr i} {
-		set node_($i) [$ns node]
-	}
-	$ns duplex-link $node_(3) $node_(4) 1Mb 50ms DropTail
-	$ns duplex-link $node_(0) $node_(3) 1Mb 50ms DropTail
-	$ns duplex-link $node_(1) $node_(3) 1Mb 50ms DropTail
-	$ns duplex-link $node_(2) $node_(3) 1Mb 50ms DropTail
-
-	$ns duplex-link-op $node_(4) $node_(3) orient right
-	$ns duplex-link-op $node_(0) $node_(3) orient down
-	$ns duplex-link-op $node_(1) $node_(3) orient left
-	$ns duplex-link-op $node_(2) $node_(3) orient up
-}
-
-
-#----------------------------------------------------------------------
-# Section 1: Base test class
-#----------------------------------------------------------------------
-Class Test
-
-Test instproc init-instvar v {
-	set cl [$self info class]
-	while { "$cl" != "" } {
-		foreach c $cl {
-			if ![catch "$c set $v" val] {
-				$self set $v $val
-				return
-			}
-		}
-		set parents ""
-		foreach c $cl {
-			if { $cl != "Object" } {
-				set parents "$parents [$c info superclass]"
-			}
-		}
-		set cl $parents
-	}
-}
-
-Test instproc init {} {
-	$self instvar ns_ trace_ net_ defNet_ testName_ node_ test_ topo_
-
-	set ns_ [new Simulator -multicast on]
-
-	set cls [$self info class]
-	set cls [split $cls /]
-	set test_ [lindex $cls [expr [llength $cls] - 1]]
-
-	global opts
-	ns-random $opts(ns-random-seed)
-
-	if $opts(nam-trace-all) {
-		#set trace_ [open "$test_" w]
-		# test-all-template1 requires data file to be temp.rands :(
-		set trace_ [open "temp.rands" w]
-		$ns_ trace-all $trace_
-	}
-
-	if ![info exists opts(net)] {
-		set net_ $defNet_
-	} else {
-		set net_ $opts(net)
-	}
-	if ![Topology/$defNet_ info subclass Topology/$net_] {
-		global argv0
-		puts "$argv0: cannot run test $test_ over topology $net_"
-		exit 1
-	}
-
-	set topo_ [new Topology/$net_ $ns_]
-	foreach i [$topo_ array names node_] {
-		# This would be cool, but lets try to be compatible
-		# with test-suite.tcl as far as possible.
-		#
-		# $self instvar $i
-		# set $i [$topo_ node? $i]
-		#
-		set node_($i) [$topo_ node? $i]
-	}
-
-	if {$net_ == $defNet_} {
-		set testName_ "$test_"
-	} else {
-		set testName_ "$test_:$net_"
-	}
-}
-
-# Use this so derived class would have a chance to overwrite the default net
-# of parent classes
-Test instproc set-defnet { defnet } {
-	$self instvar defNet_
-	if ![info exists defNet_] {
-		set defNet_ $defnet
-	}
-}
-
-Test instproc inherit-set { name val } {
-	$self instvar $name
-	if ![info exists $name] {
-		set $name $val
-	}
-}
-
-Test instproc write-testconf { file } {
-	$self instvar test_ net_
-	puts $file "# TESTNAME: $test_"
-	puts $file "# TOPOLOGY: $net_"
-	global opts
-	foreach n [lsort [array names opts]] {
-		# XXX Remove this after validating existing traces
-		if {$n == "quiet"} { continue }
-		puts $file "# $n: $opts($n)" 
-	}
-}
-
-Test instproc set-routing {} {
-}
-
-Test instproc set-members {} {
-}
-
-Test instproc finish {} {
-	$self instvar ns_ trace_
-
-	if [info exists trace_] {
-		$ns_ flush-trace
-		close $trace_
-	}
-	exit 0
-}
-
-Test instproc run {} {
-	$self instvar finishTime_ ns_ trace_
-
-	global opts
-	if $opts(nam-trace-all) {
-		$self write-testconf $trace_
-	}
-
-	$self set-routing
-	$self set-members
-	$ns_ at $finishTime_ "$self finish"
-	$ns_ run
-}
-
-# option processing copied from John's ~ns/tcl/ex/rbp_demo.tcl
-proc default_options {} {
-	global opts opt_wants_arg raw_opt_info
-
-	# raw_opt_info can be set in user's script
-
-	while {$raw_opt_info != ""} {
-		if {![regexp "^\[^\n\]*\n" $raw_opt_info line]} {
-			break
-		}
-		regsub "^\[^\n\]*\n" $raw_opt_info {} raw_opt_info
-		set line [string trim $line]
-		if {[regexp "^\[ \t\]*#" $line]} {
-			continue
-		}
-		if {$line == ""} {
-			continue
-		} elseif [regexp {^([^ ]+)[ ]+([^ ]+)$} $line dummy key value] {
-			set opts($key) $value
-			set opt_wants_arg($key) 1
-		} elseif [regexp {^([^ ]+)[ ]*$} $line dummy key] {
-			# So we don't need to assign opt($key)
-			set opt_wants_arg($key) 1
-		} else {
-			set opt_wants_arg($key) 0
-			error "unknown stuff \"$line\" in raw_opt_info"
-		}
-	}
-}
-
-proc process_args {} {
-	global argc argv opts opt_wants_arg
-
-	default_options
-	for {set i 0} {$i < $argc} {incr i} {
-		set key [lindex $argv $i]
-		if {$key == "-?" || $key == "--help" || $key == "-help" || $key == "-h"} {
-			usage
-		}
-		regsub {^--} $key {} key
-		if {![info exists opt_wants_arg($key)]} {
-			#puts stderr "unknown option $key";
-			#usage
-			continue
-		}
-		if {$opt_wants_arg($key)} {
-			incr i
-			set opts($key) [lindex $argv $i]
-		} else {
-			set opts($key) [expr !opts($key)]
-		}
-	}
-}
-
-# Startup procedure, called at the end of the script
-proc run {} {
-	global argc argv opts raw_opt_info
-
-	# We don't actually have any real arguments, but we do have 
-	# various initializations, which the script depends on.
-	process_args
-	#set prot $opts(prot)
-
-	# Calling convention by test-all-template1: 
-	# ns <file> <test> [QUIET]
-	set prot [lindex $argv 0]
-	set opts(prot) $prot
-	if {$argc > 1} {
-		set opts(quiet) 1
-	} else {
-		set opts(quiet) 0
-	}
-	set test [new Test/$prot]
-	$test run
-}
-
-
-#----------------------------------------------------------------------
-# Section 2 Base class for cache testing
-#----------------------------------------------------------------------
-
-Class Test-Cache -superclass Test
-
-# Page lifetime is a uniform distribution in [min, max].
-Test-Cache set startTime_ 10
-
-Test-Cache instproc init {} {
-	$self next
-	$self instvar startTime_
-	set startTime_ [$class set startTime_]
-	$self set-pagepool
-
-	global opts
-	if [info exists opts(hb-interval)] {
-		Http/Client set hb_interval_ $opts(hb-interval)
-		Http/Cache/Inval/Mcast set hb_interval_ $opts(hb-interval)
-		Http/Server/Inval/Yuc set hb_interval_ $opts(hb-interval)
-	}
-	if [info exists opts(upd-interval)] {
-		Http/Cache/Inval/Mcast set upd_interval_ $opts(upd-interval)
-	}
-	if [info exists opts(cache-ims-size)] {
-		Http set IMSSize_ $opts(cache-ims-size)
-	}
-	if [info exists opt(server-inv-size)] {
-		Http set INVSize_ $opt(server-inv-size)
-	}
-	if [info exists opts(cache-ref-size)] {
-		Http set REFSize_ $opts(cache-ref-size)
-	}
-	if [info exists opts(client-req-size)] {
-		Http set REQSize_ $opts(client-req-size)
-	}
-	
-	$self instvar ns_
-	$ns_ color 40 red
-	$ns_ color 41 orange
-
-	# Set default transport to SimpleTcp
-	Http set TRANSPORT_ SimpleTcp
-}
-
-# Allow global options to preempt, and derived classes to overwrite.
-Test-Cache instproc set-server-type { servertype } {
-	$self instvar serverType_ 
-	global opts
-	if [info exists opts(server)] {
-		set serverType_ $opts(server)
-	} else {
-		set serverType_ $servertype
-	}
-}
-
-Test-Cache instproc set-cache-type { cachetype } {
-	$self instvar cacheType_ 
-	global opts
-	if [info exists opts(cache)] {
-		set cacheType_ $opts(cache)
-	} else {
-		set cacheType_ $cachetype
-	}
-}
-
-Test-Cache instproc set-client-type { clienttype } {
-	$self instvar clientType_
-	global opts
-	if [info exists opts(client)] {
-		set clientType_ $opts(client)
-	} else {
-		set clientType_ $clienttype
-	}
-}
-
-Test-Cache instproc set-pagepool {} {
-	$self instvar startTime_ finishTime_ pgp_
-	global opts
-	if [info exists opts(page-file)] {
-		set pgp_ [new PagePool/Trace $opts(page-file)]
-		set max [$pgp_ get-poolsize]
-		set tmp [new RandomVariable/Uniform]
-		$tmp set min_ 0
-		$tmp set max_ [expr $max - 1]
-		$pgp_ ranvar $tmp
-
-		$pgp_ set start_time_ $startTime_
-		set finishTime_ [expr [$pgp_ get-duration] + $startTime_]
-	} else {
-		# Use PagePool/Math
-		set pgp_ [new PagePool/Math]
-		# Size generator
-		set tmp [new RandomVariable/Constant]
-		$tmp set val_ $opts(avg-page-size)
-		$pgp_ ranvar-size $tmp
-
-		# Age generator
-		$self instvar ageRNG_
-		if ![info exists ageRNG_] {
-			set ageRNG_ [new RNG]
-			$ageRNG_ seed $opts(ns-random-seed)
-		}
-		set tmp [new RandomVariable/Exponential]
-		$tmp use-rng $ageRNG_
-		$tmp set avg_ $opts(avg-page-age)
-		$pgp_ ranvar-age $tmp
-
-		$pgp_ set start_time_ $startTime_
-		set finishTime_ [expr $startTime_ + $opts(duration)]
-	}
-#	puts "Start at $startTime_, stop at $finishTime_"
-}
-
-Test-Cache instproc set-req-generator { client } {
-	$self instvar pgp_ reqRNG_
-
-	global opts
-	if ![info exists reqRNG_] {
-		set reqRNG_ [new RNG]
-		$reqRNG_ seed $opts(ns-random-seed)
-	}
-	set tmp [new RandomVariable/Exponential]
-	$tmp use-rng $reqRNG_
-	$tmp set avg_ $opts(avg-req-interval)
-	$client set-interval-generator $tmp
-	$client set-page-generator $pgp_
-}
-
-Test-Cache instproc create-members {} {
-	$self instvar client_ server_ cache_ log_ test_ pgp_ node_ ns_ \
-		serverType_ cacheType_ clientType_
-
-	set st $serverType_
-	set ct $cacheType_
-	set lt $clientType_
-
-	global opts
-	if $opts(enable-log) {
-		set log_ [open "$test_.log" w]
-		$self write-testconf $log_
-	}
-
-	foreach n [array names node_] {
-		set type [string range $n 0 0]
-		set num [string range $n 1 end]
-		if {$num == ""} {
-			set num 0
-		}
-		switch $type {
-			s {
-			 set server_($num) [new Http/Server$st $ns_ $node_($n)]
-			 $server_($num) set-page-generator $pgp_
-			 if $opts(enable-log) {
-				 $server_($num) log $log_
-			 }
-			}
-			e {
-			 set cache_($num) [new Http/Cache$ct $ns_ $node_($n)]
-			 if $opts(enable-log) {
-				 $cache_($num) log $log_
-			 }
-			}
-			c {
-			  set client_($num) [new Http/Client$lt $ns_ $node_($n)]
-			  $self set-req-generator $client_($num)
-			  if $opts(enable-log) {
-				  $client_($num) log $log_
-			  }
-			}
-		}
-	}
-}
-
-Test-Cache instproc set-routing {} {
-	$self instvar ns_ mh_
-	set mh_ [$ns_ mrtproto CtrMcast {}]
-	$ns_ rtproto Session
-}
-
-Test-Cache instproc set-members {} {
-	$self instvar ns_ finishTime_ startTime_
-	$ns_ at $startTime_ "$self start-connection"
-#	$ns_ at $finishTime_ "$self finish-connection"
-}
-
-Test-Cache instproc set-groups {} {
-	# Dummy proc
-}
-
-Test-Cache instproc start-connection {} {
-	$self instvar ns_
-
-	$self create-members
-	$self set-connections
-	$self set-groups
-
-	# Let initializations settles down, then start requests
-	$ns_ at [expr [$ns_ now] + 10] "$self start-requests"
-}
-
-# Empty
-Test-Cache instproc set-groups {} {
-}
-
-# Empty
-Test-Cache instproc set-connections {} {
-}
-
-Test-Cache instproc finish {} {
-	$self instvar log_
-	if [info exists log_] {
-		close $log_
-	}
-	$self next
-}
-
-
-#----------------------------------------------------------------------
-# Section 3: 
-# Tests of transport protocols and application data transmission over TCP
-#----------------------------------------------------------------------
-
-#
-# Test SimpleTcp
-#
-Class Test/SimpleTcp -superclass Test
-
-Test/SimpleTcp instproc init {} {
-	$self set-defnet 2node
-	$self next
-	$self instvar startTime_ finishTime_
-	set startTime_ 10
-	set finishTime_ 20
-	Http set TRANSPORT_ SimpleTcp
-}
-
-Test/SimpleTcp instproc set-routing {} {
-	$self instvar ns_
-	$ns_ rtproto Session
-}
-
-Test/SimpleTcp instproc set-members {} {
-	$self instvar ns_ src_ dst_ node_ ftp1_
-
-	$ns_ at 1.0 "$self start-connection 0 1"
-	$ns_ at 9.0 "$self finish-connection 0 1"
-}
-
-# Connect TCP source and destination after simulator starts
-Test/SimpleTcp instproc start-connection { s d } {
-	$self instvar ns_ src_ dst_ node_
-
-	set src_ [new Agent/TCP/SimpleTcp]
-	set dst_ [new Agent/TCP/SimpleTcp]
-	$src_ set fid_ 0
-	$dst_ set fid_ 0
-	$ns_ attach-agent $node_($s) $src_
-	$ns_ attach-agent $node_($d) $dst_
-	$ns_ connect $src_ $dst_ 
-
-	$src_ set dst_addr_ [$dst_ set agent_addr_]
-	$src_ set dst_port_ [$dst_ set agent_port_]
-	$src_ set window_ 100
-	$dst_ listen
-	$ns_ at [expr [$ns_ now] + 1.0] "$src_ send 1000"
-	$ns_ at [expr [$ns_ now] + 3.0] "$dst_ send 100"
-}
-
-Test/SimpleTcp instproc finish-connection { s d } {
-	$self instvar ns_ src_ dst_ node_
-	$src_ close
-}
-
-#
-# Base class for testing TcpApp over SimpleTcp and FullTcp
-#
-Class Test-TcpApp -superclass Test
-
-Test-TcpApp instproc set-routing {} {
-	$self instvar ns_
-	$ns_ rtproto Session
-}
-
-Class Test/TcpApp-2node -superclass Test-TcpApp
-
-Test/TcpApp-2node instproc init {} {
-	$self set-defnet 2node
-	$self next
-	$self instvar startTime_ finishTime_ ns_
-	set startTime_ 10
-	set finishTime_ 50
-	$ns_ color 1 red
-	$ns_ color 2 blue
-}
-
-Test/TcpApp-2node instproc send1 {} {
-	$self instvar app1_ app2_
-	$app1_ send 40 "$app2_ recv1 40"
-}
-
-Test/TcpApp-2node instproc send2 {} {
-	$self instvar app1_ app2_ ns_
-	$app2_ send 1024 "$app1_ recv2 1024"
-	$ns_ at [expr [$ns_ now] + 1.0] "$self send2"
-}
-
-Application/TcpApp instproc recv1 { sz } {
-	set now [[Simulator instance] now]
-	#puts "$now app2 receives data $sz bytes from app1"
-}
-
-Application/TcpApp instproc recv2 { sz } {
-	set now [[Simulator instance] now]
-	#puts "$now app1 receives data $sz bytes from app1"
-}
-
-Test/TcpApp-2node instproc set-members {} { 
-	$self instvar app1_ app2_ ns_ node_
-
-	set tcp1 [new Agent/TCP/FullTcp]
-	set tcp2 [new Agent/TCP/FullTcp]
-	$tcp1 set window_ 100
-	$tcp1 set fid_ 1
-	$tcp2 set window_ 100
-	$tcp2 set fid_ 2
-	$tcp2 set iss_ 1224
-	$ns_ attach-agent $node_(0) $tcp1
-	$ns_ attach-agent $node_(1) $tcp2
-	$ns_ connect $tcp1 $tcp2
-	$tcp2 listen
-
-	set app1_ [new Application/TcpApp $tcp1]
-	set app2_ [new Application/TcpApp $tcp2]
-	$app1_ connect $app2_
-
-	$ns_ at 1.0 "$self send1"
-	$ns_ at 1.2 "$self send2"
-}
-
-
-#----------------------------------------------------------------------
-# Section 4: Tests of Cache
-#----------------------------------------------------------------------
-
-#
-# test simplest http setup: one client + one server
-#
-Class Test/http1 -superclass Test
-
-Test/http1 instproc init {} {
-	$self set-defnet 3node
-	$self next
-	$self instvar finishTime_ 
-	set finishTime_ 40
-
-	# Use simple tcp agent
-	Http set TRANSPORT_ SimpleTcp
-}
-
-Test/http1 instproc set-members {} {
-	$self instvar ns_ src_ dst_ node_ ftp1_
-
-#	set ftp1_ [$src_ attach-app FTP]
-	$ns_ at 1.0 "$self start-connection 1 0"
-	$ns_ at 9.0 "$self finish-connection 1 0"
-	$ns_ at 10.0 "$self start-connection 1 2"
-	$ns_ at 19.0 "$self finish-connection 1 2"
-}
-
-# Connect TCP source and destination after simulator starts
-Test/http1 instproc start-connection { s d } {
-	$self instvar ns_ src_ dst_ node_
-
-	set src_ [new Http/Client $ns_ $node_($s)]
-	set dst_ [new Http/Server $ns_ $node_($d)]
-	$src_ connect $dst_
-	$src_ send-request $dst_ GET $dst_:1
-}
-
-Test/http1 instproc finish-connection { s d } {
-	$self instvar ns_ src_ dst_ node_
-
-	$src_ disconnect $dst_
-}
-
-Test/http1 instproc set-routing {} {
-	$self instvar ns_
-	$ns_ rtproto Session
-}
-
-Class Test/http1f -superclass Test/http1
-
-Test/http1f instproc init args {
-	eval $self next $args
-	Http set TRANSPORT_ FullTcp
-}
-
-
-#
-# Testing HTTP with one cache, one client and one server
-#
-Class Test/http2 -superclass Test
-
-Test/http2 instproc init {} {
-	$self set-defnet 3node
-	$self next
-	$self instvar finishTime_ 
-	set finishTime_ 40
-
-	Http set TRANSPORT_ SimpleTcp
-}
-
-Test/http2 instproc set-routing {} {
-	$self instvar ns_
-	$ns_ rtproto Session
-}
-
-Test/http2 instproc set-members {} {
-	$self instvar ns_ node_ client_ cache_ server_
-
-	set client_ [new Http/Client $ns_ $node_(0)]
-	set cache_ [new Http/Cache $ns_ $node_(1)]
-	set server_ [new Http/Server $ns_ $node_(2)]
-
-	$ns_ at 1.0 "$self start-connection"
-	$ns_ at 9.0 "$self finish-connection"
-	$ns_ at 21.0 "$self start-connection"
-	$ns_ at 29.0 "$self finish-connection"
-}
-
-# Connect TCP source and destination after simulator starts
-Test/http2 instproc start-connection {} {
-	$self instvar ns_ client_ server_ cache_ node_
-
-	$client_ connect $cache_
-	$cache_ connect $server_
-	$cache_ set-parent $server_
-	$client_ send-request $cache_ GET $server_:1 
-}
-
-Test/http2 instproc finish-connection {} {
-	$self instvar client_ server_ cache_
-
-	$client_ disconnect $cache_
-	$cache_ disconnect $server_
-}
-
-Class Test/http2f -superclass Test/http2
-
-Test/http2f instproc init args {
-	eval $self next $args
-	Http set TRANSPORT_ FullTcp
-}
-
-
-#----------------------------------------------------------------------
-# Testing HTTP with one cache, multiple client and one server
-#----------------------------------------------------------------------
-Class Test/http3 -superclass Test
-
-Test/http3 instproc init {} {
-	$self set-defnet 5node
-	$self next
-	$self instvar finishTime_ 
-	set finishTime_ 40
-
-	Http set TRANSPORT_ SimpleTcp
-}
-
-Test/http3 instproc set-routing {} {
-	$self instvar ns_
-	$ns_ rtproto Session
-}
-
-Test/http3 instproc set-members {} {
-	$self instvar ns_ client_ cache_ server_ node_ test_
-
-	set client_(0) [new Http/Client $ns_ $node_(0)]
-	set client_(1) [new Http/Client $ns_ $node_(1)]
-	set client_(2) [new Http/Client $ns_ $node_(2)]
-	set cache_ [new Http/Cache $ns_ $node_(3)]
-	set server_ [new Http/Server $ns_ $node_(4)]
-
-	$ns_ at 1.0 "$self start-connection"
-	$ns_ at 9.0 "$self finish-connection"
-
-	# XXX
-	# 
-	# (1) If we set connection restarts time to 10.0, then we may
-	# have a request sent out at 10.0 *before* the connection is 
-	# actually re-established, which will result in the lose of a 
-	# request packet and the blocking of subsequent requests.
-	# 
-	# (2) Currently when a connection is shut down, we do *NOT* 
-	# clean up pending requests. This will result in the possible
-	# blocking of requests after the connection is re-established. 
-	# This test illustrates this effect.
-	# 
-	# The cleaning of a cache after disconnection is currently *NOT*
-	# implemented. It can be disconnected but its behavior after
-	# re-connection is not defined. NOTE: disconnection means 
-	# explicitly call Http::disconnect(). Link dynamics and losses 
-	# are supported.
-
-	$ns_ at 9.9 "$self start-connection"
-	$ns_ at 19.0 "$self finish-connection"
-}
-
-# Connect TCP source and destination after simulator starts
-Test/http3 instproc start-connection {} {
-	$self instvar ns_ client_ server_ cache_ node_
-
-	$client_(0) connect $cache_
-	$client_(1) connect $cache_
-	$client_(2) connect $cache_
-	$cache_ connect $server_
-	$cache_ set-parent $server_
-	$self start-request
-}
-
-Test/http3 instproc start-request {} {
-	$self instvar client_ ns_ cache_ server_
-	$client_(0) send-request $cache_ GET $server_:0
-	set tmp [expr [$ns_ now] + 1]
-	$ns_ at $tmp "$client_(1) send-request $cache_ GET $server_:1"
-	set tmp [expr $tmp + 1]
-	$ns_ at $tmp "$client_(2) send-request $cache_ GET $server_:0"
-	set tmp [expr $tmp + 2]
-	$ns_ at $tmp "$self start-request"
-}
-
-Test/http3 instproc finish-connection {} {
-	$self instvar client_ server_ cache_
-
-	$client_(0) disconnect $cache_
-	$client_(1) disconnect $cache_
-	$client_(2) disconnect $cache_
-	$cache_ disconnect $server_
-}
-
-Class Test/http3f -superclass Test/http3
-
-Test/http3f instproc init args {
-	eval $self next $args
-	Http set TRANSPORT_ FullTcp
-}
-
-
-#
-# Testing cache with TTL invalidation
-#
-Class Test/http4 -superclass Test
-
-Test/http4 instproc init {} {
-	$self set-defnet 5node
-	$self next
-	$self instvar ns_ startTime_ finishTime_ 
-	set startTime_ 1
-	set finishTime_ 40
-
-	Http set TRANSPORT_ SimpleTcp
-}
-
-Test/http4 instproc set-routing {} {
-	$self instvar ns_
-	$ns_ rtproto Session
-}
-
-Test/http4 instproc set-topology {} {
-	$self instvar node_ ns_
-
-	for {set i 0} {$i < 5} {incr i} {
-		set node_($i) [$ns_ node]
-	}
-	$ns_ duplex-link $node_(3) $node_(4) 1Mb 50ms DropTail
-	$ns_ duplex-link $node_(0) $node_(3) 1Mb 50ms DropTail
-	$ns_ duplex-link $node_(1) $node_(3) 1Mb 50ms DropTail
-	$ns_ duplex-link $node_(2) $node_(3) 1Mb 50ms DropTail
-}
-
-Test/http4 instproc set-members {} {
-	$self instvar ns_ startTime_ client_ cache_ server_ node_ test_
-
-	set client_(0) [new Http/Client $ns_ $node_(0)]
-	set client_(1) [new Http/Client $ns_ $node_(1)]
-	set client_(2) [new Http/Client $ns_ $node_(2)]
-	set cache_ [new Http/Cache/TTL $ns_ $node_(3)]
-	set server_ [new Http/Server $ns_ $node_(4)]
-
-	$ns_ at $startTime_ "$self start-connection"
-	$ns_ at 10 "$self finish-connection"
-}
-
-Test/http4 instproc start-requests {} {
-	$self instvar client_ server_ cache_ ns_
-
-	$client_(0) send-request $cache_ GET $server_:0
-	set tmp [expr [$ns_ now] + 1]
-	$ns_ at $tmp "$client_(1) send-request $cache_ GET $server_:1"
-	incr tmp
-	$ns_ at $tmp "$client_(2) send-request $cache_ GET $server_:0"
-	incr tmp 3
-	$ns_ at $tmp "$self start-requests"
-}
-
-# Connect TCP source and destination after simulator starts
-Test/http4 instproc start-connection {} {
-	$self instvar ns_ client_ server_ cache_ node_ 
-
-	$client_(0) connect $cache_
-	$client_(1) connect $cache_
-	$client_(2) connect $cache_
-	$cache_ connect $server_
-	$cache_ set-parent $server_
-	$self start-requests
-}
-
-Test/http4 instproc finish-connection {} {
-	$self instvar client_ server_ cache_
-
-	$client_(0) disconnect $cache_
-	$client_(1) disconnect $cache_
-	$client_(2) disconnect $cache_
-	$cache_ disconnect $server_
-}
-
-Class Test/http4f -superclass Test/http4
-
-Test/http4f instproc init args {
-	eval $self next $args
-	Http set TRANSPORT_ FullTcp
-}
-
-
-#
-# Testing PagePool
-#
-Class Test/PagePool -superclass Test
-
-Test/PagePool instproc init {} {
-	$self instvar pgp_ 
-	global opts
-	set opts(page-file) pages
-	set pgp_ [new PagePool/Trace $opts(page-file)]
-	set max [$pgp_ get-poolsize]
-	set tmp [new RandomVariable/Uniform]
-	$tmp set min_ 0
-	$tmp set max_ [expr $max - 1]
-	$pgp_ ranvar $tmp
-}
-
-Test/PagePool instproc test-enumerate {} { 
-	$self instvar pgp_ log_
-	set max [$pgp_ get-poolsize]
-	for {set i 0} {$i < $max} {incr i} {
-		puts -nonewline $log_ "Page $i: "
-		puts -nonewline $log_ "size [$pgp_ gen-size $i] "
-		set mtime [$pgp_ gen-modtime $i -1]
-		puts -nonewline $log_ "ctime $mtime "
-		set tmp [$pgp_ gen-modtime $i $mtime]
-		while {$tmp != $mtime} {
-			puts -nonewline $log_ "mtime $tmp "
-			set mtime $tmp
-			set tmp [$pgp_ gen-modtime $i $mtime]
-		}
-		puts $log_ ""
-	}
-}
-
-Test/PagePool instproc test-getpageid {} {
-	$self instvar pgp_ log_
-	set max [$pgp_ get-poolsize]
-	for {set i 0} {$i < $max} {incr i} {
-		set id [$pgp_ gen-pageid 0]
-		puts -nonewline $log_ "Page $id: "
-		puts -nonewline $log_ "size [$pgp_ gen-size $id] "
-		set mtime [$pgp_ gen-modtime $id -1]
-		puts -nonewline $log_ "ctime $mtime "
-		set tmp [$pgp_ gen-modtime $id $mtime]
-		while {$tmp != $mtime} {
-			puts -nonewline $log_ "mtime $tmp "
-			set mtime $tmp
-			set tmp [$pgp_ gen-modtime $id $mtime]
-		}
-		puts $log_ ""
-	}
-}
-
-Test/PagePool instproc run {} {
-	$self instvar log_
-	set log_ [open "temp.rands" w]
-	$self test-getpageid
-	$self test-enumerate
-	close $log_
-}
-
-
-#----------------------------------------------------------------------
-# Testing simplest case for heartbeat message: 1 client+1 cache+1 server
-#----------------------------------------------------------------------
-
-# Multicast invalidation + server invalidation
-Class Test/cache0-inv -superclass Test-Cache
-
-Test/cache0-inv instproc init {} {
-	$self set-defnet cache0
-	$self next
-
-	$self set-server-type /Inval/Yuc
-	$self set-cache-type /Inval/Mcast
-	$self set-client-type ""
-	Http set TRANSPORT_ SimpleTcp
-}
-
-Test/cache0-inv instproc set-connections {} {
-	$self instvar client_ server_ cache_ 
-
-	# XXX Should always let server connects to cache first, then requests
-	$client_(0) connect $cache_(0)
-	$server_(0) connect $cache_(0)
-	$server_(0) set-parent-cache $cache_(0)
-}
-
-Test/cache0-inv instproc start-requests {} {
-	$self instvar client_ cache_ server_ ns_
-	$client_(0) start $cache_(0) $server_(0)
-}
-
-# Mcast inval
-Class Test/cache0f-inv -superclass Test/cache0-inv
-
-Test/cache0f-inv instproc init args {
-	eval $self next $args
-	Http set TRANSPORT_ FullTcp
-}
-
-# Push + mcast inval
-Class Test/cache0-push -superclass Test/cache0-inv
-
-Test/cache0-push instproc create-members {} {
-	$self next
-	$self instvar cache_ server_
-	$server_(0) set enable_upd_ 1
-	$cache_(0) set enable_upd_ 1
-}
-
-Class Test/cache0f-push -superclass {Test/cache0-push Test/cache0f-inv}
-
-# TTL 
-Class Test/cache0-ttl -superclass Test/cache0-inv
-
-Test/cache0-ttl instproc init args {
-	eval $self next $args
-	$self set-server-type ""
-	$self set-cache-type /TTL
-	$self set-client-type ""
-}
-
-Test/cache0-ttl instproc set-connections {} {
-	$self instvar client_ server_ cache_ 
-	# XXX Should always let server connects to cache first, then requests
-	$client_(0) connect $cache_(0)
-	$cache_(0) connect $server_(0)
-	$server_(0) set-parent-cache $cache_(0)
-}
-
-Class Test/cache0f-ttl -superclass {Test/cache0f-inv Test/cache0-ttl}
-
-# Omniscient TTL
-Class Test/cache0-ottl -superclass Test/cache0-ttl
-
-Test/cache0-ottl instproc init args {
-	eval $self next $args
-	$self set-cache-type /TTL/Omniscient
-}
-
-Class Test/cache0f-ottl -superclass {Test/cache0-ottl Test/cache0f-ttl}
-
-
-#----------------------------------------------------------------------
-# Two hierarchies #1: server0 -> root cache 0
-#----------------------------------------------------------------------
-Class Test/TLC1 -superclass Test-Cache
-
-Test/TLC1 instproc init {} {
-	# Do our own initialization
-	global opts
-	set opts(duration) 500
-	set opts(avg-page-age) 60
-	set opts(avg-req-interval) 6
-	set opts(hb-interval) 6
-
-	$self set-defnet cache2
-	$self next
-	$self set-cache-type /Inval/Mcast 
-	$self set-server-type /Inval/Yuc
-	$self set-client-type ""
-	Http set TRANSPORT_ SimpleTcp
-}
-
-Test/TLC1 instproc start-requests {} {
-	$self instvar client_ cache_ server_
-
-	$client_(0) start $cache_(2) $server_(0)
-	$client_(1) start $cache_(6) $server_(0)
-	$client_(2) start $cache_(4) $server_(0)
-	$client_(3) start $cache_(1) $server_(0)
-}
-
-Test/TLC1 instproc set-connections {} {
-	$self instvar client_ cache_ server_
-
-	$client_(0) connect $cache_(2)
-	$client_(1) connect $cache_(6)
-	$client_(2) connect $cache_(4)
-	$client_(3) connect $cache_(1)
-	$cache_(2) connect $cache_(0)
-	$cache_(2) set-parent $cache_(0)
-	$cache_(3) connect $cache_(0)
-	$cache_(3) set-parent $cache_(0)
-	$cache_(6) connect $cache_(2)
-	$cache_(6) set-parent $cache_(2)
-	$cache_(4) connect $cache_(1)
-	$cache_(4) set-parent $cache_(1)
-	$cache_(5) connect $cache_(1)
-	$cache_(5) set-parent $cache_(1)
-
-	# XXX
-	# We also need TCP connections between TLCs, but the order in which
-	# they are connected is tricky. I.e., the cache that first sends 
-	# out a packet should connect first. But how do we know which cache
-	# would send out a packet first???
-	$cache_(1) connect $cache_(0)
-}
-
-Test/TLC1 instproc set-groups {} {
-	$self instvar client_ cache_ server_ mh_
-
-	# TBA group setup stuff...
-	set grp [Node allocaddr]
-	$cache_(0) join-tlc-group $grp
-	$cache_(1) join-tlc-group $grp
-	$mh_ switch-treetype $grp
-
-	set grp [Node allocaddr]
-	$cache_(0) init-inval-group $grp
-	$cache_(2) join-inval-group $grp
-	$cache_(3) join-inval-group $grp
-	$mh_ switch-treetype $grp
-
-	set grp [Node allocaddr]
-	$cache_(1) init-inval-group $grp
-	$cache_(4) join-inval-group $grp
-	$cache_(5) join-inval-group $grp
-	$mh_ switch-treetype $grp
-
-	set grp [Node allocaddr]
-	$cache_(2) init-inval-group $grp
-	$cache_(6) join-inval-group $grp
-	$mh_ switch-treetype $grp
-
-	# XXX Must let the server to initialize connection, because it's 
-	# going to send out the first packet
-	$cache_(1) connect $server_(0)
-	$server_(0) connect $cache_(0)
-
-	# XXX Must do this at the end. It'll trigger a lot of JOINs.
-	$server_(0) set-parent-cache $cache_(0)
-	# XXX Must do this when using multiple hierarchies
-	$server_(0) set-tlc $cache_(0)
-}
-
-Class Test/TLC1f -superclass Test/TLC1
-
-Test/TLC1f instproc init {} {
-	$self next
-	Http set TRANSPORT_ FullTcp
-}
-
-#
-# Two hierarchies with direct request
-#
-#Class Test/TLC1-dreq -superclass Test/TLC1
-
-# Test/TLC1-dreq instproc init {} {
-# 	$self next
-# 	$self set-cache-type /Inval/Mcast/Perc
-# }
-
-# Set up direct connections from leaf caches (i.e., all caches who 
-# may connect to a browser) to the server
-# Test/TLC1-dreq instproc set-connections {} {
-# 	$self next
-# 	$self instvar cache_ server_
-# 	$cache_(1) connect $server_(0)
-# 	$cache_(2) connect $server_(0)
-# 	$cache_(4) connect $server_(0)
-# 	$cache_(6) connect $server_(0)
-# 	$cache_(1) set direct_request_ 1
-# 	$cache_(2) set direct_request_ 1
-# 	$cache_(4) set direct_request_ 1
-# 	$cache_(6) set direct_request_ 1
-# }
-
-
-
-#----------------------------------------------------------------------
-# Testing server/cache liveness messages and failure recovery
-#----------------------------------------------------------------------
-Class Test/Liveness -superclass Test-Cache
-
-Test/Liveness instproc init {} {
-	# Set default initialization values
-	global opts
-	set opts(duration) 1200	;# Link heals at time 1000.
-	set opts(avg-page-age) 60
-	set opts(avg-req-interval) 60
-	set opts(hb-interval) 30
-	
-	$self set-defnet cache4d
-	$self next
-	$self set-cache-type /Inval/Mcast
-	$self set-server-type /Inval/Yuc
-	$self set-client-type ""
-
-	# Must use FullTcp, because we'll have packet loss, etc.
-	Http set TRANSPORT_ FullTcp
-}
-
-Test/Liveness instproc start-requests {} {
-	$self instvar client_ cache_ server_ ns_
-
-	$client_(0) start $cache_(3) $server_(0)
-	$client_(1) start $cache_(4) $server_(0)
-	$client_(2) start $cache_(5) $server_(0)
-	$client_(3) start $cache_(6) $server_(0)
-#	puts "At [$ns_ now], request starts"
-}
-
-Test/Liveness instproc set-connections {} {
-	$self instvar ns_ client_ server_ cache_ 
-
-	# Enable dynamics somewhere
-	$client_(0) connect $cache_(3)
-	$client_(1) connect $cache_(4)
-	$client_(2) connect $cache_(5)
-	$client_(3) connect $cache_(6)
-
-	$cache_(1) connect $cache_(0)
-	$cache_(2) connect $cache_(0)
-	$cache_(3) connect $cache_(1)
-	$cache_(4) connect $cache_(1)
-	$cache_(5) connect $cache_(2)
-	$cache_(6) connect $cache_(2)
-	$cache_(1) set-parent $cache_(0)
-	$cache_(2) set-parent $cache_(0)
-	$cache_(3) set-parent $cache_(1)
-	$cache_(4) set-parent $cache_(1)
-	$cache_(5) set-parent $cache_(2)
-	$cache_(6) set-parent $cache_(2)
-
-	# All TLCs have connection to server
-	$cache_(0) connect $server_(0)
-	# Parent cache of the server is e3
-	$server_(0) connect $cache_(3)
-}
-
-Test/Liveness instproc set-groups {} {
-	$self instvar cache_ mh_ server_
-
-	set grp [Node allocaddr]
-	$cache_(0) init-inval-group $grp
-	$cache_(1) join-inval-group $grp
-	$cache_(2) join-inval-group $grp
-	$mh_ switch-treetype $grp
-
-	set grp [Node allocaddr]
-	$cache_(1) init-inval-group $grp
-	$cache_(3) join-inval-group $grp
-	$cache_(4) join-inval-group $grp
-	$mh_ switch-treetype $grp
-
-	set grp [Node allocaddr]
-	$cache_(2) init-inval-group $grp
-	$cache_(5) join-inval-group $grp
-	$cache_(6) join-inval-group $grp
-	$mh_ switch-treetype $grp
-
-	$server_(0) set-parent-cache $cache_(3)
-}
-
-
-#----------------------------------------------------------------------
-# Test Group 1: 
-#
-# Poisson page mods and Poisson requests, one bottleneck link, 2-level 
-# cache hierarchy with a single TLC. No loss.
-#
-# Comparing Invalidation, TTL and OTTL.
-#
-# Testing Mcast+Yucd using a bottleneck topology
-#----------------------------------------------------------------------
-Class Test/Mcast-PB -superclass Test-Cache
-
-Test/Mcast-PB instproc init {} {
-	# Our own initializations
-	global opts
-	set opts(duration) 200
-	set opts(avg-page-age) 10
-	set opts(avg-req-interval) 6
-	set opts(hb-interval) 6
-	set opts(num-2nd-cache) 5
-
-	$self set-defnet BottleNeck
-	$self next
-	$self instvar secondCaches_
-	set secondCaches_ $opts(num-2nd-cache)
-	$self set-cache-type /Inval/Mcast
-	$self set-server-type /Inval/Yuc
-	$self set-client-type ""
-}
-
-Test/Mcast-PB instproc start-requests {} {
-	$self instvar client_ cache_ server_ secondCaches_
-	
-	set n $secondCaches_
-	for {set i 0} {$i < $n} {incr i} {
-		$client_($i) start $cache_($i) $server_(0)
-	}
-
-	$self instvar pgp_ topo_ ns_
-
-	# Because Test/Cache::init{} already did set-pagepool{}, now we 
-	# know how many pages we have. Estimate the cache population time
-	# by NumPages*1+10, then start bandwidth monitoring after 
-	# the caches are populated with pages
-	$ns_ at [expr [$ns_ now] + [$pgp_ get-poolsize] + 10] \
-		"$topo_ start-monitor $ns_"
-}
-
-Test/Mcast-PB instproc set-connections {} {
-	$self instvar ns_ client_ server_ cache_ secondCaches_
-
-	set n $secondCaches_
-	for {set i 0} {$i < $n} {incr i} {
-		$client_($i) connect $cache_($i)
-		$cache_($i) connect $cache_($n)
-		$cache_($i) set-parent $cache_($n)
-	}
-	$cache_($n) connect $server_(0)
-	$self connect-server
-}
-
-Test/Mcast-PB instproc connect-server {} {
-	$self instvar server_ cache_
-	$server_(0) connect $cache_(0)
-}
-
-Test/Mcast-PB instproc set-groups {} {
-	$self instvar cache_ server_ secondCaches_ mh_
-
-	set n $secondCaches_
-	set grp1 [Node allocaddr]
-	set grp2 [Node allocaddr]
-	$cache_($n) init-inval-group $grp1
-	$cache_($n) init-update-group $grp2
-	for {set i 0} {$i < $n} {incr i} {
-		$cache_($i) join-inval-group $grp1
-		$cache_($i) join-update-group $grp2
-	}
-	$mh_ switch-treetype $grp1
-	$mh_ switch-treetype $grp2
-
-	$server_(0) set-parent-cache $cache_(0)
-}
-
-Test/Mcast-PB instproc collect-stat {} {
-	$self instvar topo_ client_ server_ cache_ secondCaches_
-	set bw [$topo_ mon-stat]
-
-	set sn 0
-	set gn 0
-	set st(max) 0
-	set st(min) 98765432
-	set st(avg) 0
-	set rt(max) 0
-	set rt(min) 98765432
-	set rt(avg) 0
-	foreach c [array names client_] {
-		set gn [expr $gn + [$client_($c) stat req-num]]
-		set sn [expr $sn + [$client_($c) stat stale-num]]
-
-		set st(avg) [expr $st(avg) + [$client_($c) stat stale-time]]
-		set tmp [$client_($c) stat st-min]
-		if { $tmp < $st(min) } { set st(min) $tmp }
-		set tmp [$client_($c) stat st-max]
-		if { $tmp > $st(max) } { set st(max) $tmp }
-
-		set rt(avg) [expr $rt(avg) + [$client_($c) stat rep-time]]
-		set tmp [$client_($c) stat rt-max]
-		if { $tmp > $rt(max) } { set rt(max) $tmp }
-		set tmp [$client_($c) stat rt-min]
-		if { $tmp < $rt(min) } { set rt(min) $tmp }
-	}
-	if {$st(max) < $st(min)} {
-		set st(max) 0
-		set st(min) 0
-	}
-	if {$rt(max) < $rt(min)} {
-		set rt(max) 0
-		set rt(min) 0
-	}
-	set sr [expr double($sn) / $gn * 100]
-	if [catch {set st(avg) [expr double($st(avg)) / $sn]}] {
-		set st(avg) 0	;# No stale hits
-	} 
-	set rt(avg) [expr double($rt(avg)) / $gn]
-
-	set ims 0
-	foreach c [array names cache_] {
-		set ims [expr $ims + [$cache_($c) stat ims-num]]
-	}
-
-	set res [list sr $sr sh [$server_(0) stat hit-num] th [$cache_($secondCaches_) stat hit-num] st $st(avg) st-max $st(max) st-min $st(min) rt $rt(avg) rt-max $rt(max) rt-min $rt(min) mn [$server_(0) stat mod-num] ims-num $ims]
-	return [concat $bw $res]
-}
-
-Test/Mcast-PB instproc output-stat { args } {
-	eval array set d $args
-	global opts 
-	# XXX Don't have statistics for total bandwidth. :(
-	#puts "$opts(hb-interval) Bandwidth*Hop -1 Stale $d(sr) AverageRepTime $d(rt) BottleneckBW $d(btnk_bw) ServerBW $d(svr_bw) StaleTime $d(st)"
-}
-
-Test/Mcast-PB instproc finish {} {
-	global opts
-	if $opts(quiet) {
-		$self output-stat [$self collect-stat]
-	}
-	$self next
-}
-
-#
-# Same as mcast-PB, except using Inval/Mcast/Perc cache
-# 
-Class Test/Mcast-PBP -superclass Test/Mcast-PB
-
-Test/Mcast-PBP instproc init {} {
-	$self next
-	$self set-cache-type /Inval/Mcast/Perc
-}
-
-#
-# Same as mcast-PB, except enabled selective push of updates
-#
-Class Test/Mcast-PBU -superclass Test/Mcast-PB
-
-Test/Mcast-PBU instproc create-members {} {
-	$self next
-	$self instvar cache_ server_
-	foreach n [array names cache_] {
-		$cache_($n) set enable_upd_ 1
-	}
-	foreach n [array names server_] {
-		$server_($n) set enable_upd_ 1
-	}
-}
-
-#
-# Mcast invalidation + selective push + mandatory push
-#
-Class Test/Mcast-PBU-MP -superclass Test/Mcast-PBU
-
-Test/Mcast-PBU-MP instproc create-members {} {
-	$self next
-	$self instvar client_ ns_ server_
-	$ns_ at 100.0 "$client_(1) request-mpush $server_(0):0"
-	$ns_ at 500.0 "$client_(1) stop-mpush $server_(0):0"
-}
-
-#
-# Testing TTL using a bottleneck topology
-#
-Class Test/ttl-PB -superclass Test/Mcast-PB
-
-Test/ttl-PB instproc init {} {
-	global opts
-	set opts(ttl) 0.1
-
-	$self next
-	$self set-cache-type /TTL
-	$self set-server-type ""
-	$self set-client-type ""
-}
-
-Test/ttl-PB instproc create-members {} {
-	$self next
-	global opts
-	$self instvar cache_
-	foreach n [array names cache_] {
-		$cache_($n) set-thresh $opts(ttl)
-	}
-}
-
-Test/ttl-PB instproc set-groups {} {
-	# We do not set any mcast groups
-}
-
-Test/ttl-PB instproc connect-server {} {
-	$self instvar server_ cache_
-	$cache_(0) connect $server_(0)
-}
-
-Test/ttl-PB instproc output-stat { args } {
-	eval array set d $args
-	global opts 
-	# XXX Don't have statistics for total bandwidth. :(
-	#puts "$opts(ttl) Bandwidth*Hop -1 Stale $d(sr) AverageRepTime $d(rt) BottleneckBW $d(btnk_bw) ServerBW $d(svr_bw) StaleTime $d(st)"
-}
-
-#
-# Testing Omniscient TTL using a bottleneck topology
-#
-Class Test/ottl-PB -superclass {Test/ttl-PB Test/Mcast-PB}
-
-Test/ottl-PB instproc init {} {
-	$self next
-	$self set-cache-type /TTL/Omniscient
-	$self set-server-type ""
-	$self set-client-type ""
-}
-
-Test/ottl-PB instproc output-stat { args } {
-	eval array set d $args
-	# XXX Don't have statistics for total bandwidth. :(
-	#puts "Bandwidth*Hop -1 Stale $d(sr) AverageRepTime $d(rt) BottleneckBW $d(btnk_bw) ServerBW $d(svr_bw) StaleTime $d(st)"
-}
-
-
-#
-# All the above tests with real traces
-#
-Class Test/Mcast-PBtr -superclass Test/Mcast-PB
-
-Test/Mcast-PBtr instproc init {} {
-	$self inherit-set pagepoolType_ "ProxyTrace"
-	$self next
-	Http set TRANSPORT_ FullTcp
-}
-
-Test/Mcast-PBtr instproc populate-cache {} {
-	# Populate servers and caches with pages.
-	# Do not use Http/Client::populate{}!
-	$self instvar pgp_ cache_ server_ secondCaches_ startTime_ ns_
-	set n $secondCaches_
-	for {set i 0} {$i < [$pgp_ get-poolsize]} {incr i} {
-		set pageid $server_(0):$i
-		$server_(0) gen-page $pageid
-		#set pageinfo [$server_(0) get-page $pageid]
-		#for {set j 0} {$j < $secondCaches_} {incr j} {
-		#	eval $cache_($j) enter-page $pageid $pageinfo
-		#}
-		#eval $cache_($secondCaches_) enter-page $pageid $pageinfo
-#		if {$i % 1000 == 0} {
-#			puts "$i pages populated"
-#		}
-	}
-}
-
-Test/Mcast-PBtr instproc start-connection {} {
-	$self next
-	$self populate-cache
-}
-
-Test/Mcast-PBtr instproc start-requests {} {
-	$self instvar client_ cache_ server_ secondCaches_
-	
-	for {set i 0} {$i < $secondCaches_} {incr i} {
-		# Use start-session{} to avoid populating cache
-		$client_($i) start-session $cache_($i) $server_(0)
-	}
-	
-	$self instvar topo_ ns_
-	$topo_ start-monitor $ns_
-}
-
-Test/Mcast-PBtr instproc set-pagepool {} {
-	$self instvar startTime_ finishTime_ pgp_ ns_ pagepoolType_
-	global opts
-	if {![info exists opts(xtrace-req)] || ![info exists opts(xtrace-page)]} {
-		error "Must supply request logs and page logs of proxy traces"
-	}
-	set pgp_ [new PagePool/$pagepoolType_]
-	$pgp_ set-reqfile $opts(xtrace-req)
-	$pgp_ set-pagefile $opts(xtrace-page)
-	$pgp_ bimodal-ratio 0.1
-	$pgp_ set-client-num $opts(num-2nd-cache)
-
-	# XXX Do *NOT* set start time of page generators. It'll be set
-	# after the cache population phase
-	# Estimate a finish time
-	set opts(duration) [$pgp_ get-duration]
-	set finishTime_ [expr $opts(duration) + $startTime_]
-	#puts "Duration changed to $opts(duration), finish at $finishTime_"
-
-	$self instvar ageRNG_
-	if ![info exists ageRNG_] {
-		set ageRNG_ [new RNG]
-		$ageRNG_ seed $opts(ns-random-seed)
-	}
-
-	# Dynamic page, with page modification 
-	set tmp [new RandomVariable/Uniform]
-	$tmp use-rng $ageRNG_
-	$tmp set min_ [expr $opts(avg-page-age)*0.001]
-	$tmp set max_ [expr $opts(avg-page-age)*1.999]
-	$pgp_ ranvar-dp $tmp
-
-	# Static page
-	set tmp [new RandomVariable/Uniform]
-	$tmp use-rng $ageRNG_
-	$tmp set min_ [expr $finishTime_ * 1.1]
-	$tmp set max_ [expr $finishTime_ * 1.2]
-	$pgp_ ranvar-sp $tmp
-}
-
-# Set every client's request generator to pgp_
-Test/Mcast-PBtr instproc set-req-generator { client } {
-	$self instvar pgp_
-	$client set-page-generator $pgp_
-}
-
-Class Test/Mcast-PBPtr -superclass {Test/Mcast-PBP Test/Mcast-PBtr}
-
-Class Test/Mcast-PBUtr -superclass {Test/Mcast-PBU Test/Mcast-PBtr}
-
-Class Test/ttl-PBtr -superclass {Test/ttl-PB Test/Mcast-PBtr}
-
-Class Test/ottl-PBtr -superclass {Test/ottl-PB Test/Mcast-PBtr}
-
-
-#----------------------------------------------------------------------
-# Test group 2
-#
-# Same as test group 1, except using compound pages
-#
-# Mcast-PB with compound pages
-#----------------------------------------------------------------------
-Class Test/mmcast-PB -superclass Test/Mcast-PB
-
-Test/mmcast-PB instproc init {} {
-	$self next
-	$self set-cache-type /Inval/Mcast/Perc
-	$self set-server-type /Inval/MYuc
-	$self set-client-type /Compound
-}
-
-Test/mmcast-PB instproc set-pagepool {} {
-	$self instvar startTime_ finishTime_ pgp_
-	global opts
-	# Use PagePool/Math, which means a single page
-	set pgp_ [new PagePool/CompMath]
-
-	# Size generator
-	$pgp_ set main_size_ $opts(avg-page-size)
-	$pgp_ set comp_size_ $opts(comp-page-size)
-
-	# Age generator
-	$self instvar ageRNG_
-	if ![info exists ageRNG_] {
-		set ageRNG_ [new RNG]
-		$ageRNG_ seed $opts(ns-random-seed)
-	}
-	set tmp [new RandomVariable/Exponential]
-	$tmp use-rng $ageRNG_
-	$tmp set avg_ $opts(avg-page-age)
-	$pgp_ ranvar-main-age $tmp
-
-	# Compound age generator
-	$self instvar compAgeRNG_
-	if ![info exists compAgeRNG_] {
-		set compAgeRNG_ [new RNG]
-		$compAgeRNG_ seed $opts(ns-random-seed)
-	}
-	set tmp [new RandomVariable/Uniform]
-	$tmp use-rng $compAgeRNG_
-	$tmp set min_ [expr $opts(avg-comp-page-age) * 0.9]
-	$tmp set max_ [expr $opts(avg-comp-page-age) * 1.1]
-	$pgp_ ranvar-obj-age $tmp
-
-	$pgp_ set num_pages_ [expr $opts(num-comp-pages) + 1]
-
-	$pgp_ set start_time_ $startTime_
-	set finishTime_ [expr $startTime_ + $opts(duration)]
-#	puts "Start at $startTime_, stop at $finishTime_"
-}
-
-#
-# selective push + inval
-#
-Class Test/mmcast-PBU -superclass {Test/Mcast-PBU Test/mmcast-PB}
-
-#
-# TTL with compound page
-#
-Class Test/mttl-PB -superclass {Test/ttl-PB Test/mmcast-PB}
-
-Test/mttl-PB instproc init {} {
-	$self next
-	$self set-cache-type /TTL
-	$self set-server-type /Compound
-	$self set-client-type /Compound
-}
-
-#
-# Omniscient TTL + compound page
-#
-Class Test/mottl-PB -superclass {Test/ottl-PB Test/mmcast-PB}
-
-Test/mottl-PB instproc init {} {
-	$self next
-	$self set-cache-type /TTL/Omniscient
-	$self set-server-type /Compound
-	$self set-client-type /Compound
-}
-
-
-#----------------------------------------------------------------------
-# Test group 3
-#
-# Comparison of direct request+invalidation vs ttl+direct request
-#
-# Topology is derived from the BottleNeck topology. It adds additional
-# direct links from every leaf cache to the web server. This link is
-# used to model the "short path" from leaf caches to the server.
-#----------------------------------------------------------------------
-Class Test-dreq -superclass Test-Cache
-
-Test-dreq instproc init {} {
-    $self set-defnet cache5
-    $self next
-    
-    $self instvar secondCaches_
-    global opts
-    set secondCaches_ $opts(num-2nd-cache)
-}
-
-Test-dreq instproc start-requests {} {
-	$self instvar client_ server_ cache_ secondCaches_
-	for {set i 0} {$i < $secondCaches_} {incr i} {
-		$client_($i) start $cache_($i) $server_(0)
-	}
-}
-
-Test-dreq instproc set-connections {} {
-	$self instvar client_ server_ cache_ secondCaches_ ns_
-	for {set i 0} {$i < $secondCaches_} {incr i} {
-		$client_($i) connect $cache_($i)
-	}
-}
-
-Test-dreq instproc collect-stat {} {
-	$self instvar topo_ client_ secondCaches_
-	$topo_ instvar qmon_
-
-	set svr_bw 0
-	for {set i 0} {$i < $secondCaches_} {incr i} {
-		set svr_bw [expr [$qmon_(svr_f$i) set bdepartures_] + \
-			$svr_bw + [$qmon_(svr_t$i) set bdepartures_]]
-	}
-	set btnk_bw [expr [$qmon_(btnk_f) set bdepartures_] + \
-			[$qmon_(btnk_t) set bdepartures_]]
-	set sn 0
-	set gn 0
-	set st 0
-	set rt 0
-	foreach c [array names client_] {
-		set gn [expr $gn + [$client_($c) stat req-num]]
-		set sn [expr $sn + [$client_($c) stat stale-num]]
-		set st [expr $st + [$client_($c) stat stale-time]]
-		set rt [expr $rt + [$client_($c) stat rep-time]]
-	}
-	set sr [expr double($sn) / $gn * 100]
-	if [catch {set st [expr double($st) / $sn]}] {
-		set st 0	;# No stale hits
-	}
-	set rt [expr double($rt) / $gn]
-	return [list svr_bw $svr_bw btnk_bw $btnk_bw sr $sr st $st rt $rt]
-}
-
-Test-dreq instproc finish {} {
-	$self output-stat [$self collect-stat]
-	$self next
-}
-
-#Class Test/mcast-dreq -superclass Test-dreq
-
-#Test/mcast-dreq instproc init {} {
-	# $self next
-# 	$self set-cache-type /Inval/Mcast/Perc
-# 	$self set-server-type /Inval/Yuc
-# 	$self set-client-type ""
-# }
-
-# Test/mcast-dreq instproc output-stat { args } {
-# 	eval array set d $args
-# 	global opts 
-# 	# XXX Don't have statistics for total bandwidth. :(
-# 	#puts "$opts(hb-interval) Bandwidth*Hop -1 Stale $d(sr) AverageRepTime $d(rt) BottleneckBW $d(btnk_bw) ServerBW $d(svr_bw) StaleTime $d(st)"
-# }
-
-# Test/mcast-dreq instproc set-connections {} {
-# 	$self next ;# connecting clients
-
-# 	$self instvar server_ cache_ secondCaches_ 
-# 	set n $secondCaches_
-# 	for {set i 0} {$i < $secondCaches_} {incr i} {
-# 		$cache_($i) connect $cache_($n)
-# 		$cache_($i) set-parent $cache_($n)
-# 		if $i {
-# 			# Let all leaf caches connect to server
-# 			$cache_($i) connect $server_(0)
-# 		}
-# 	}
-# 	$cache_($n) connect $server_(0)
-# 	$server_(0) connect $cache_(0)
-# }
-
-# Test/mcast-dreq instproc set-groups {} {
-# 	$self instvar cache_ server_ secondCaches_ mh_
-
-# 	set n $secondCaches_
-# 	set grp1 [Node allocaddr]
-# 	set grp2 [Node allocaddr]
-# 	$cache_($n) init-inval-group $grp1
-# 	$cache_($n) init-update-group $grp2
-# 	for {set i 0} {$i < $n} {incr i} {
-# 		$cache_($i) join-inval-group $grp1
-# 		$cache_($i) join-update-group $grp2
-# 		# Every leaf cache uses direct request
-# 		$cache_($i) set direct_request_ 1
-# 	}
-# 	$mh_ switch-treetype $grp1
-# 	$mh_ switch-treetype $grp2
-
-# 	$server_(0) set-parent-cache $cache_(0)
-# }
-
-
-#----------------------------------------------------------------------
-# Options 
-#----------------------------------------------------------------------
-global raw_opt_info
-set raw_opt_info {
-	# Random number seed; default is 0, so ns will give a 
-	# diff. one on each invocation.
-	# XXX Get a "good" seed from predef_seeds[] in rng.cc
-	ns-random-seed 188312339
-		
-	# Animation options; complete traces are useful
-	# for nam only, so do those only when a tracefile
-	# is being used for nam
-	nam-trace-all 1
-
-	enable-log 0
-
-	# Tests to be used
-	prot
-
-	duration 500
-		    
-	# Trace file used for PagePool
-	page-file 
-	
-	# TTL threshold
-	ttl 0.1
-	
-	# Cache type
-	cache 
-	# server type
-	server 
-	
-	# Packet size configurations
-	cache-ims-size	50
-	cache-ref-size	50
-	server-inv-size	43
-	client-req-size 43
-	
-	# request intervals
-	min-req-interval 50
-	max-req-interval 70
-	avg-req-interval 60
-
-	min-page-size 100
-	max-page-size 50000
-	avg-page-size 1024
-
-	min-page-age  50
-	max-page-age  70
-	avg-page-age  60
-
-	# compound page size: 50K
-	comp-page-size 51200
-	avg-comp-page-age 40000
-	num-comp-pages 1
-
-	# If we use only one page
-	single-page 1
-
-	hb-interval 30
-	upd-interval 5
-
-	# Number of second level caches. Needed by Topology/BottleNeck
-	num-2nd-cache 5
-
-	scheduler-type Calendar
-
-	# Proxy trace files: requests and pages
-	xtrace-req webtrace-reqlog
-	xtrace-page webtrace-pglog
-}
-
-
-#----------------------------------------------------------------------
-# Execution starts...
-#----------------------------------------------------------------------
-run
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-webtraf.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-webtraf.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-webtraf.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-webtraf.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,277 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-#
-# Time-stamp: <2000-09-07 12:53:04 haoboy>
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-webtraf.tcl,v 1.10 2006/01/24 23:00:08 sallyfloyd Exp $
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP  HttpInval ; # hdrs reqd for validation test
-
-# UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-
-Class TestSuite
-
-TestSuite instproc init { name } {
-	$self instvar ns_ totalpkt_ testname_
-	set testname_ $name
-	set ns_ [new Simulator]
-	set totalpkt_ 0
-}
-
-TestSuite instproc finish args {
-	$self instvar traceFile_ ns_
-	global quiet
-	if { $quiet != "true" } {
-		$ns_ flush-trace
-		close $traceFile_
-	}
-	exit 0
-}
-
-TestSuite instproc openTrace { stopTime } {
-	$self instvar ns_ traceFile_ testname_
-	global quiet
-	if { $quiet != "true" } {
-		set traceFile_ [open $testname_.nam w]
-		$ns_ namtrace-all $traceFile_
-	}
-	$ns_ at $stopTime "$self finish"
-}
-
-TestSuite instproc run {} {
-	$self instvar ns_
-	$ns_ run
-}
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> \[<quiet>\]"
-	puts stderr "Valid tests are:\t[get-subclasses TestSuite Test/]"
-	exit 1
-}
-
-proc isProc? {cls prc} {
-	if [catch "Object info subclass $cls/$prc" r] {
-		global argv0
-		puts stderr "$argv0: no such $cls: $prc"
-		usage
-	}
-}
-
-proc get-subclasses {cls pfx} {
-	set ret ""
-	set l [string length $pfx]
-
-	set c $cls
-	while {[llength $c] > 0} {
-		set t [lindex $c 0]
-		set c [lrange $c 1 end]
-		if [string match ${pfx}* $t] {
-			lappend ret [string range $t $l end]
-		}
-		eval lappend c [$t info subclass]
-	}
-	set ret
-}
-
-TestSuite proc runTest {} {
-	global argc argv quiet
-
-	set quiet false
-	switch $argc {
-		1 {
-			set test $argv
-			isProc? Test $test
-			set topo ""
-		}
-		2 {
-			set test [lindex $argv 0]
-			isProc? Test $test
-			set extra [lindex $argv 1]
-			if {$extra == "QUIET"} {
-				set quiet true
-			}
-		}
-		default {
-			usage
-		}
-	}
-	set t [new Test/$test $test]
-	$t run
-}
-
-# Create $ns sessions, each of which has $np pages
-# server mode flag: $sm
-TestSuite instproc create-session { ns np sm } {
-	# Polly's dumbbell topology
-
-	$self instvar ns_
-
-	set num_node 12
-	for {set i 0} {$i < $num_node} {incr i} {
-		set n($i) [$ns_ node]
-	}
-	$ns_ set src_ [list 2 3 4 5 6]
-	$ns_ set dst_ [list 7 8 9 10 11]
-	# EDGES (from-node to-node length a b):
-	$ns_ duplex-link $n(0) $n(1) 1.5Mb 40ms DropTail
-	$ns_ duplex-link $n(0) $n(2) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(0) $n(3) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(0) $n(4) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(0) $n(5) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(0) $n(6) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(1) $n(7) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(1) $n(8) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(1) $n(9) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(1) $n(10) 10Mb 20ms DropTail
-	$ns_ duplex-link $n(1) $n(11) 10Mb 20ms DropTail
-
-	$ns_ duplex-link-op $n(0) $n(1) orient left
-	$ns_ duplex-link-op $n(0) $n(2) orient up
-	$ns_ duplex-link-op $n(0) $n(3) orient right-up
-	$ns_ duplex-link-op $n(0) $n(4) orient right
-	$ns_ duplex-link-op $n(0) $n(5) orient right-down
-	$ns_ duplex-link-op $n(0) $n(6) orient down
-	$ns_ duplex-link-op $n(1) $n(7) orient up
-	$ns_ duplex-link-op $n(1) $n(8) orient left-up
-	$ns_ duplex-link-op $n(1) $n(9) orient left 
-	$ns_ duplex-link-op $n(1) $n(10) orient left-down
-	$ns_ duplex-link-op $n(1) $n(11) orient down
-
-	# Set up server and client nodes
-	set pool [new PagePool/WebTraf]
-	# Set debug to produce detailed output
-	$pool set debug_ 1
-
-	$pool set resp_trace_ 0
-	$pool set req_trace_ 0
-	
-	$pool set-num-client [llength [$ns_ set src_]]
-	$pool set-num-server [llength [$ns_ set dst_]]
-
-	set i 0
-	foreach s [$ns_ set src_] {
-		$pool set-client $i $n($s)
-		incr i
-	}
-	set i 0
-	foreach s [$ns_ set dst_] {
-		$pool set-server $i $n($s)
-		incr i
-	}
-
-	# Config server mode: 
-	# 0: no server processing delay
-	# 1: FCFS server scheduling policy
-	# 2: STF server scheduling policy
-	$pool set-server-mode $sm
-
-	# Session 0 starts from 0.1s, session 1 starts from 0.2s
-	$pool set-num-session $ns
-	for {set i 0} {$i < $ns} {incr i} {
-		set interPage [new RandomVariable/Exponential]
-		$interPage set avg_ 1
-		set pageSize [new RandomVariable/Constant]
-		$pageSize set val_ $np
-		set interObj [new RandomVariable/Exponential]
-		$interObj set avg_ 0.01
-		set objSize [new RandomVariable/ParetoII]
-		$objSize set avg_ 10
-		$objSize set shape_ 1.2
-		$pool create-session $i $np 0.1 $interPage $pageSize \
-				$interObj $objSize
-		# from webcache/webtraf.cc
-	}
-}
-
-# These tests only check the page scheduling mechanism of WebTrafPool.
-
-Class Test/1s-1p -superclass TestSuite
-
-Test/1s-1p instproc init args {
-	eval $self next $args
-	$self openTrace 100.0
-	$self create-session 1 1 0
-}
-
-Class Test/1s-2p -superclass TestSuite
-
-Test/1s-2p instproc init args {
-	eval $self next $args
-	$self openTrace 100.0
-	$self create-session 1 2 0
-}
-
-Class Test/3s-2p -superclass TestSuite
-
-Test/3s-2p instproc init args {
-	eval $self next $args
-	$self openTrace 100.0
-	$self create-session 3 2 0
-}
-
-Class Test/fcfs -superclass TestSuite
-
-Test/fcfs instproc init args {
-	eval $self next $args
-	$self openTrace 100.0
-	$self create-session 3 2 1
-}
-
-Class Test/stf -superclass TestSuite
-
-Test/stf instproc init args {
-	eval $self next $args
-	$self openTrace 100.0
-	$self create-session 3 2 2
-}
-
-TestSuite runTest
-
-### Local Variables:
-### mode: tcl
-### tcl-indent-level: 8
-### tcl-default-application: ns
-### End:
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-diffusion.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-diffusion.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-diffusion.tcl	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-diffusion.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,734 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-
-#
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-diffusion.tcl,v 1.10 2006/01/30 21:27:52 mweigle Exp $
-
-# To run all tests: test-all-wireless-diffusion
-# to run individual test:
-# ns test-suite-wireless-diffusion.tcl diff-rate-default
-# ns test-suite-wireless-diffusion.tcl diff-rate-other
-# ns test-suite-wireless-diffusion.tcl diff-prob
-# ns test-suite-wireless-diffusion.tcl omnimcast
-# ns test-suite-wireless-diffusion.tcl flooding
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-diffusion.tcl
-
-
-# ======================================================================
-# Define options
-# ======================================================================
-global opt
-set opt(chan)		Channel/WirelessChannel
-set opt(prop)		Propagation/TwoRayGround
-set opt(netif)		Phy/WirelessPhy
-set opt(mac)		Mac/802_11
-set opt(ifq)		Queue/DropTail/PriQueue
-set opt(ll)		LL
-set opt(ant)            Antenna/OmniAntenna
-
-set opt(ifqlen)		50		;# max packet in ifq
-set opt(seed)		1
-set opt(tr)		estudy.tr	;# trace file
-set opt(nam)		temp.rands
-set opt(lm)             "off"           ;# log movement
-set opt(engmodel)       EnergyModel     ;
-set opt(initeng)        1.1               ;# Initial energy in Joules
-set opt(txPower)        0.660;
-set opt(rxPower)        0.395;
-set opt(idlePower)      0.035;
-set opt(x)		800	;# X dimension of the topography
-set opt(y)		800     ;# Y dimension of the topography
-set opt(nn)		30	;# number of nodes
-set opt(stop)		25	;# simulation time
-set opt(prestop)        23      ;# time to prepare to stop
-
-# ======================================================================
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.2818
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# ======================================================================
-
-proc usage {}  {
-        global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid <tests> : diff-rate-default diff-rate-other diff-prob omnicast flooding "
-        exit 1
-}
-
-
-proc getopt {argc argv} {
-	global opt
-	lappend optlist cp nn seed sc stop tr x y
-
-	for {set i 0} {$i < $argc} {incr i} {
-		set arg [lindex $argv $i]
-		if {[string range $arg 0 0] != "-"} continue
-
-		set name [string range $arg 1 end]
-		set opt($name) [lindex $argv [expr $i+1]]
-	}
-}
-
-Class TestSuite
-
-Class Test/diff-rate-default -superclass TestSuite
-Class Test/diff-rate-other -superclass TestSuite
-Class Test/diff-prob -superclass TestSuite
-Class Test/omnimcast -superclass TestSuite
-Class Test/flooding -superclass TestSuite
-
-TestSuite instproc init {} {
-global opt 
-$self instvar ns_ topo  god_
-
-set ns_		[new Simulator]
-
-puts "Seeding Random number generator with $opt(seed)\n"
-ns-random $opt(seed)
-
-set topo	[new Topography]
-
-#set god_         [new God]
-
-set tracefd	[open $opt(tr) w]
-set namtrace    [open $opt(nam) w]
-
-$topo load_flatgrid $opt(x) $opt(y)
-
-$ns_ trace-all $tracefd
-$ns_ namtrace-all-wireless $namtrace $opt(x) $opt(y)
-
-set god_ [create-god $opt(nn)]
-}
-
-
-Test/diff-rate-default instproc init {} {
-   global opt
-   $self instvar ns_ topo god_
-
-    set opt(god)            on
-    set opt(traf)	"sk-30-3-3-1-1-6-64.tcl"      ;# traffic file
-    set opt(topo)	"scen-800x800-30-500-1.0-1"   ;# topology file
-    set opt(onoff)          ""                        ;# node on-off
-    set opt(adhocRouting)   DIFFUSION/RATE       
-    set opt(enablePos)      "true"
-    set opt(enableNeg)      "true"
-    set opt(subTxType)      BROADCAST
-    set opt(orgTxType)      UNICAST
-    set opt(posType)        ALL
-    set opt(posNodeType)    INTM
-    set opt(negWinType)     TIMER
-    set opt(negThrType)     ABSOLUTE
-    set opt(negMaxType)     FIXED
-    set opt(suppression)    "true"
-    set opt(duplicate)      "enable-duplicate"
-
-   $self next
-}
-Test/diff-rate-default instproc run {} {
-   global opt
-   $self instvar ns_ topo god_
-
-    $god_ $opt(god)
-    $god_ allow_to_stop
-    $god_ num_data_types 1
-    
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-		 -llType $opt(ll) \
-		 -macType $opt(mac) \
-		 -ifqType $opt(ifq) \
-		 -ifqLen $opt(ifqlen) \
-		 -antType $opt(ant) \
-		 -propType $opt(prop) \
-		 -phyType $opt(netif) \
-		 -channel [new $opt(chan)] \
-		 -topoInstance $topo \
-		 -agentTrace ON \
-                 -routerTrace ON \
-                 -macTrace ON \
-		 -energyModel $opt(engmodel) \
-		 -initialEnergy $opt(initeng) \
-		 -txPower  $opt(txPower) \
-		 -rxPower  $opt(rxPower) \
-		 -idlePower  $opt(idlePower)
-
-			 
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	set node_($i) [$ns_ node $i]
-	$node_($i) random-motion 0		;# disable random motion
-        $god_ new_node $node_($i)
-    }
-
-    if { $opt(topo) == "" } {
-	puts "*** NOTE: no topology file specified."
-        set opt(topo) "none"
-    } else {
-	puts "Loading topology file..."
-	source $opt(topo)
-	puts "Load complete..."
-    }
-
-    if { $opt(onoff) == "" } {
-	puts "*** NOTE: no node-on-off file specified."
-        set opt(onoff) "none"
-    } else {
-	puts "Loading node on-off file..."
-	source $opt(onoff)
-	puts "Load complete..."
-    }
-
-    if { $opt(traf) == "" } {
-	puts "*** NOTE: no traffic file specified."
-        set opt(traf) "none"
-    } else {
-	puts "Loading traffic file..."
-	source $opt(traf)
-	puts "Load complete..."
-    }
-
-#
-# Tell all the nodes when the simulation ends
-#
-
-$ns_ at $opt(prestop) "$ns_ prepare-to-stop"
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-$ns_ at $opt(stop).00000001 "finish"
-
-
-# Define node initial position in nam
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-
-    # 20 defines the node size in nam, must adjust it according to your scenario
-    # The function must be called after mobility model is defined
-
-    $ns_ initial_node_pos $node_($i) 20
-}
-
-$ns_ run
-}
-
-
-Test/diff-rate-other instproc init {} {
-   global opt
-   $self instvar ns_ topo god_
-
-    set opt(god)            on
-    set opt(traf)	"sk-30-3-3-1-1-6-64.tcl"      ;# traffic file
-    set opt(topo)	"scen-800x800-30-500-1.0-1"   ;# topology file
-    set opt(onoff)      "onoff-30-3-3-1-1-500-10.tcl" ;# node on-off
-    set opt(adhocRouting)   DIFFUSION/RATE       
-    set opt(enablePos)      "true"
-    set opt(enableNeg)      "true"
-    set opt(subTxType)      BROADCAST
-    set opt(orgTxType)      UNICAST
-    set opt(posType)        LAST
-    set opt(posNodeType)    END
-    set opt(negWinType)     COUNTER
-    set opt(negThrType)     ABSOLUTE
-    set opt(negMaxType)     FIXED
-    set opt(suppression)    "false"
-    set opt(duplicate)      "disable-duplicate"
-
-   $self next
-}
-Test/diff-rate-other instproc run {} {
-   global opt
-   $self instvar ns_ topo god_
-
-    $god_ $opt(god)
-    $god_ allow_to_stop
-    $god_ num_data_types 1
-    
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-		 -llType $opt(ll) \
-		 -macType $opt(mac) \
-		 -ifqType $opt(ifq) \
-		 -ifqLen $opt(ifqlen) \
-		 -antType $opt(ant) \
-		 -propType $opt(prop) \
-		 -phyType $opt(netif) \
-		 -channel [new $opt(chan)] \
-		 -topoInstance $topo \
-		 -agentTrace ON \
-                 -routerTrace ON \
-                 -macTrace ON \
-		 -energyModel $opt(engmodel) \
-		 -initialEnergy $opt(initeng) \
-		 -txPower  $opt(txPower) \
-		 -rxPower  $opt(rxPower) \
-		 -idlePower  $opt(idlePower)
-
-			 
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	set node_($i) [$ns_ node $i]
-	$node_($i) random-motion 0		;# disable random motion
-        $god_ new_node $node_($i)
-    }
-
-    if { $opt(topo) == "" } {
-	puts "*** NOTE: no topology file specified."
-        set opt(topo) "none"
-    } else {
-	puts "Loading topology file..."
-	source $opt(topo)
-	puts "Load complete..."
-    }
-
-    if { $opt(onoff) == "" } {
-	puts "*** NOTE: no node-on-off file specified."
-        set opt(onoff) "none"
-    } else {
-	puts "Loading node on-off file..."
-	source $opt(onoff)
-	puts "Load complete..."
-    }
-
-    if { $opt(traf) == "" } {
-	puts "*** NOTE: no traffic file specified."
-        set opt(traf) "none"
-    } else {
-	puts "Loading traffic file..."
-	source $opt(traf)
-	puts "Load complete..."
-    }
-
-#
-# Tell all the nodes when the simulation ends
-#
-
-$ns_ at $opt(prestop) "$ns_ prepare-to-stop"
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-$ns_ at $opt(stop).00000001 "finish"
-
-
-# Define node initial position in nam
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-
-    # 20 defines the node size in nam, must adjust it according to your scenario
-    # The function must be called after mobility model is defined
-
-    $ns_ initial_node_pos $node_($i) 20
-}
-
-$ns_ run
-}
-
-
-Test/diff-prob instproc init {} {
-    global opt
-    $self instvar ns_ topo god_
-
-    set opt(god)            on
-    set opt(traf)	"sk-30-1-1-1-1-6-64.tcl"      ;# traffic file
-    set opt(topo)	"scen-800x800-30-500-1.0-1"   ;# topology file
-    set opt(onoff)          ""                        ;# node on-off
-    set opt(adhocRouting)   DIFFUSION/PROB       
-    set opt(enablePos)      "true"
-    set opt(enableNeg)      "true"
-    set opt(duplicate)      "enable-duplicate"
-
-    $self next
-}
-
-Test/diff-prob instproc run {} {
-    global opt
-    $self instvar ns_ topo god_
-
-    $god_ $opt(god)
-    $god_ allow_to_stop
-    $god_ num_data_types 1
-    
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-		 -llType $opt(ll) \
-		 -macType $opt(mac) \
-		 -ifqType $opt(ifq) \
-		 -ifqLen $opt(ifqlen) \
-		 -antType $opt(ant) \
-		 -propType $opt(prop) \
-		 -phyType $opt(netif) \
-		 -channel [new $opt(chan)] \
-		 -topoInstance $topo \
-		 -agentTrace ON \
-                 -routerTrace ON \
-                 -macTrace ON \
-		 -energyModel $opt(engmodel) \
-		 -initialEnergy $opt(initeng) \
-		 -txPower  $opt(txPower) \
-		 -rxPower  $opt(rxPower) \
-		 -idlePower  $opt(idlePower)
-
-			 
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	set node_($i) [$ns_ node $i]
-	$node_($i) random-motion 0		;# disable random motion
-        $god_ new_node $node_($i)
-    }
-
-    if { $opt(topo) == "" } {
-	puts "*** NOTE: no topology file specified."
-        set opt(topo) "none"
-    } else {
-	puts "Loading topology file..."
-	source $opt(topo)
-	puts "Load complete..."
-    }
-
-    if { $opt(onoff) == "" } {
-	puts "*** NOTE: no node-on-off file specified."
-        set opt(onoff) "none"
-    } else {
-	puts "Loading node on-off file..."
-	source $opt(onoff)
-	puts "Load complete..."
-    }
-
-    if { $opt(traf) == "" } {
-	puts "*** NOTE: no traffic file specified."
-        set opt(traf) "none"
-    } else {
-	puts "Loading traffic file..."
-	source $opt(traf)
-	puts "Load complete..."
-    }
-
-#
-# Tell all the nodes when the simulation ends
-#
-
-$ns_ at $opt(prestop) "$ns_ prepare-to-stop"
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-$ns_ at $opt(stop).00000001 "finish"
-
-
-# Define node initial position in nam
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-
-    # 20 defines the node size in nam, must adjust it according to your scenario
-    # The function must be called after mobility model is defined
-
-    $ns_ initial_node_pos $node_($i) 20
-}
-
-$ns_ run
-}
-
-
-Test/omnimcast instproc init {} {
-   global opt
-   $self instvar ns_ topo god_
-
-    set opt(god)            on
-    set opt(traf)	"sk-30-3-3-1-1-6-64.tcl"      ;# traffic file
-    set opt(topo)	"scen-800x800-30-500-1.0-1"   ;# topology file
-    set opt(onoff)          ""                        ;# node on-off
-    set opt(adhocRouting)   OMNIMCAST       
-    set opt(duplicate)      "enable-duplicate"
-
-   $self next
-}
-Test/omnimcast instproc run {} {
-   global opt
-   $self instvar ns_ topo god_
-
-    $god_ $opt(god)
-    $god_ allow_to_stop
-    $god_ num_data_types 1
-    
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-		 -llType $opt(ll) \
-		 -macType $opt(mac) \
-		 -ifqType $opt(ifq) \
-		 -ifqLen $opt(ifqlen) \
-		 -antType $opt(ant) \
-		 -propType $opt(prop) \
-		 -phyType $opt(netif) \
-		 -channel [new $opt(chan)] \
-		 -topoInstance $topo \
-		 -agentTrace ON \
-                 -routerTrace ON \
-                 -macTrace ON \
-		 -energyModel $opt(engmodel) \
-		 -initialEnergy $opt(initeng) \
-		 -txPower  $opt(txPower) \
-		 -rxPower  $opt(rxPower) \
-		 -idlePower  $opt(idlePower)
-
-			 
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	set node_($i) [$ns_ node $i]
-	$node_($i) random-motion 0		;# disable random motion
-        $god_ new_node $node_($i)
-    }
-
-    if { $opt(topo) == "" } {
-	puts "*** NOTE: no topology file specified."
-        set opt(topo) "none"
-    } else {
-	puts "Loading topology file..."
-	source $opt(topo)
-	puts "Load complete..."
-    }
-
-    if { $opt(onoff) == "" } {
-	puts "*** NOTE: no node-on-off file specified."
-        set opt(onoff) "none"
-    } else {
-	puts "Loading node on-off file..."
-	source $opt(onoff)
-	puts "Load complete..."
-    }
-
-    if { $opt(traf) == "" } {
-	puts "*** NOTE: no traffic file specified."
-        set opt(traf) "none"
-    } else {
-	puts "Loading traffic file..."
-	source $opt(traf)
-	puts "Load complete..."
-    }
-
-#
-# Tell all the nodes when the simulation ends
-#
-
-$ns_ at $opt(prestop) "$ns_ prepare-to-stop"
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-$ns_ at $opt(stop).00000001 "finish"
-
-
-# Define node initial position in nam
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-
-    # 20 defines the node size in nam, must adjust it according to your scenario
-    # The function must be called after mobility model is defined
-
-    $ns_ initial_node_pos $node_($i) 20
-}
-
-$ns_ run
-}
-
-
-Test/flooding instproc init {} {
-   global opt
-   $self instvar ns_ topo god_
-
-    set opt(god)            on
-    set opt(traf)	"sk-30-3-3-1-1-6-64.tcl"      ;# traffic file
-    set opt(topo)	"scen-800x800-30-500-1.0-1"   ;# topology file
-    set opt(onoff)          ""                        ;# node on-off
-    set opt(adhocRouting)   FLOODING       
-    set opt(duplicate)      "enable-duplicate"
-
-   $self next
-}
-Test/flooding instproc run {} {
-   global opt
-   $self instvar ns_ topo god_
-
-    $god_ $opt(god)
-    $god_ allow_to_stop
-    $god_ num_data_types 1
-    
-    $ns_ node-config -adhocRouting $opt(adhocRouting) \
-		 -llType $opt(ll) \
-		 -macType $opt(mac) \
-		 -ifqType $opt(ifq) \
-		 -ifqLen $opt(ifqlen) \
-		 -antType $opt(ant) \
-		 -propType $opt(prop) \
-		 -phyType $opt(netif) \
-		 -channel [new $opt(chan)] \
-		 -topoInstance $topo \
-		 -agentTrace ON \
-                 -routerTrace ON \
-                 -macTrace ON \
-		 -energyModel $opt(engmodel) \
-		 -initialEnergy $opt(initeng) \
-		 -txPower  $opt(txPower) \
-		 -rxPower  $opt(rxPower) \
-		 -idlePower  $opt(idlePower)
-
-			 
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	set node_($i) [$ns_ node $i]
-	$node_($i) random-motion 0		;# disable random motion
-        $god_ new_node $node_($i)
-    }
-
-    if { $opt(topo) == "" } {
-	puts "*** NOTE: no topology file specified."
-        set opt(topo) "none"
-    } else {
-	puts "Loading topology file..."
-	source $opt(topo)
-	puts "Load complete..."
-    }
-
-    if { $opt(onoff) == "" } {
-	puts "*** NOTE: no node-on-off file specified."
-        set opt(onoff) "none"
-    } else {
-	puts "Loading node on-off file..."
-	source $opt(onoff)
-	puts "Load complete..."
-    }
-
-    if { $opt(traf) == "" } {
-	puts "*** NOTE: no traffic file specified."
-        set opt(traf) "none"
-    } else {
-	puts "Loading traffic file..."
-	source $opt(traf)
-	puts "Load complete..."
-    }
-
-#
-# Tell all the nodes when the simulation ends
-#
-
-$ns_ at $opt(prestop) "$ns_ prepare-to-stop"
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-}
-$ns_ at $opt(stop).00000001 "finish"
-
-
-# Define node initial position in nam
-
-for {set i 0} {$i < $opt(nn)} {incr i} {
-
-    # 20 defines the node size in nam, must adjust it according to your scenario
-    # The function must be called after mobility model is defined
-
-    $ns_ initial_node_pos $node_($i) 20
-}
-
-$ns_ run
-}
-
-proc finish {} {
-	puts "NS EXITING ..."
-
-	set ns_ [Simulator instance]
-	set god_ [God instance]
-
-	$ns_ terminate-all-agents 
-	$god_ dump_num_send
-
-	$ns_ flush-trace
-	exit 0
-}
-
-proc runtest {arg} {
-        global quiet
-        set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-	        set test $arg
-        } elseif {$b == 2} {
-	        set test [lindex $arg 0]
-            if {[lindex $arg 1] == "QUIET"} {
-	        set quiet 1
-            }
-        } else {
-	        usage
-        }
-	switch $test {
-	        diff-rate-default -
-	        diff-rate-other -
-	        diff-prob -
-	        omnimcast -
-		flooding {
-                     set t [new Test/$test]
-                }
-                default {
-	             stderr "Unknown test $test"
-		     exit 1
-                }
-         }
-	 $t run
-}
-
-global argv arg0 
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-gridkeeper.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-gridkeeper.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-gridkeeper.tcl	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-gridkeeper.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,344 +0,0 @@
-#
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-
-# The default is being changed to 1
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-
-# This test suite is for validating wireless lans (CMU extension)
-# with gridkeeper 
-# To run all tests: test-all-wireless-gridkeeper
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-gridkeeper.tcl
-#
-#
-
-Class TestSuite
-
-Class Test/dsdv -superclass TestSuite
-# wireless model using destination sequence distance vector
-
-#Class Test/dsr -superclass TestSuite
-# wireless model using dynamic source routing
-
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: dsdv dsr"
-	exit 1
-}
-
-
-proc default_options {} {
-	global opt
-
-	set opt(chan)		Channel/WirelessChannel
-	set opt(prop)		Propagation/TwoRayGround
-	set opt(netif)		Phy/WirelessPhy
-	set opt(mac)		Mac/802_11
-        set opt(ifq)		Queue/DropTail/PriQueue
-	set opt(ll)		LL
-	set opt(ant)            Antenna/OmniAntenna
-	set opt(x)		670 ;# X dimension of the topography
-	set opt(y)		670;# Y dimension of the topography
-	set opt(cp)		"../mobility/scene/cbr-50-20-4-512" ;# connection pattern file
-	set opt(sc)		"../mobility/scene/scen-670x670-50-600-20-0" ;# scenario file
-	set opt(ifqlen)		50	      ;# max packet in ifq
-	set opt(nn)		50	      ;# number of nodes
-	set opt(seed)		0.0
-	set opt(stop)		500.0	      ;# simulation time
-	set opt(tr)		temp.rands    ;# trace file
-	set opt(lm)             "off"          ;# log movement
-
-        set opt(radius)         150            ;# node comm. range
-        set opt(nam)            gkeeper.nam    ;# nam trace for node position
-
-}
-
-
-# =====================================================================
-# Other default settings
-
-set AgentTrace			ON
-set RouterTrace			OFF
-set MacTrace			OFF
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.2818
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ gkeeper
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	set chan	[new $opt(chan)]
-	set prop	[new $opt(prop)]
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-
-	set opt(rp) $testName_
-	$topo load_flatgrid $opt(x) $opt(y)
-	$prop topography $topo
-	#
-	# Create God
-	#
-	$self create-god $opt(nn)
-	
-	#
-	# log the mobile nodes movements if desired
-	#
-	if { $opt(lm) == "on" } {
-		$self log-movement
-	}
-	source ../mobility/$testName_.tcl
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		$testName_-create-mobile-node $i
-	}
-	puts "Loading connection pattern..."
-	source $opt(cp)
-	
-	#
-	# Tell all the nodes when the simulation ends
-	#
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		$ns_ at $opt(stop).000000001 "$node_($i) reset";
-	}
-
-	$ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;" 
-	#$ns_ halt"
-	$ns_ at $opt(stop).1 "$self finish"
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-
-        #enable node trace in nam
-        
-	set nf [open $opt(nam) w]
-	$ns_ namtrace-all-wireless $nf $opt(x) $opt(y)
-	
-        for {set i 0} {$i < $opt(nn)} {incr i} {
-             $node_($i) namattach $nf
-             # 20 defines the node size in nam, 
-	     # must adjust it according to your scenario
-             $ns_ initial_node_pos $node_($i) 20
-        }
- 
-	#       
-	# Create GridKeeper: OPTIONAL
-	#
-
-	$self create_gridkeeper
-
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-}
-
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	puts "finishing.."
-	exit 0
-}
-
-Test/dsdv instproc init {} {
-    $self instvar ns_ testName_
-    set testName_ dsdv
-    $self next
-}
-
-Test/dsdv instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-#Test/dsr instproc init {} {
-	#$self instvar ns_ testName_ 
-	#set testName_ dsr
-	#$self next 
-#}
-
-#Test/dsr instproc run {} {
-	#$self instvar ns_ 
-	#puts "Starting Simulation..."
-	#$ns_ run
-	
-#}
-
-proc cmu-trace { ttype atype node } {
-	global ns tracefd
-    
-        set ns [Simulator instance]
-	if { $tracefd == "" } {
-		return ""
-	}
-	set T [new CMUTrace/$ttype $atype]
-	$T target [$ns set nullAgent_]
-	$T attach $tracefd
-        $T set src_ [$node id]
-
-        $T node $node
-
-	return $T
-}
-
-TestSuite instproc create-god { nodes } {
-	global tracefd god_
-	$self instvar ns_
-
-	set god_ [new God]
-	$god_ num_nodes $nodes
-}
-
-TestSuite instproc create_gridkeeper { } {
-
-        global gkeeper opt node_
-                
-        set gkeeper [new GridKeeper]
-        
-        #initialize the gridkeeper
-                
-        $gkeeper dimension $opt(x) $opt(y)
- 
-        #
-        # add mobile node into the gridkeeper, must be added after
-        # scenario file
-        #       
-
-
-        for {set i 0} {$i < $opt(nn) } {incr i} {
-	    $gkeeper addnode $node_($i)
-        
-	    $node_($i) radius $opt(radius)
-        }       
-        
-	#dump grid info
-	#$gkeeper dump
-	
-}
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-infra-mobility.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-infra-mobility.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-infra-mobility.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-infra-mobility.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,321 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-# The default for rfc2988_ is being changed to true.
-Mac/802_11 set bugFix_timer_ true;     # default changed 2006/1/30
-#
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-Class TestSuite
-Class Test/wireless-infra-mobility -superclass TestSuite
- 
-  proc usage {} {
-  global argv0
-  puts stderr "usage: ns $argv0 <tests> "
-  puts "valid Tests: wireless-infra-mobility"
-  exit 1
-  }
-
-  proc default_options {} {
-      global opt
-      set opt(chan)	Channel/WirelessChannel
-      set opt(prop)	Propagation/TwoRayGround
-      set opt(netif)	Phy/WirelessPhy
-      set opt(mac)	Mac/802_11
-      set opt(ifq)	Queue/DropTail/PriQueue
-      set opt(ll)		LL
-      set opt(ant)        Antenna/OmniAntenna
-      set opt(x)		670 ;# X dimension of the topography
-      set opt(y)		670;# Y dimension of the topography
-      set opt(ifqlen)	50	      ;# max packet in ifq
-      set opt(seed)	0.0
-      set opt(tr)		temp.rands    ;# trace file
-      set opt(lm)         "OFF"          ;# log movement
-      set opt(eott)	"ON"	      ;# eot trace
-
-  }
-
-
-  # =====================================================================
-  # Other default settings
-
-  LL set mindelay_		50us
-  LL set delay_			25us
-  LL set bandwidth_		0	;# not used
-
-  Agent/Null set sport_		0
-  Agent/Null set dport_		0
-
-  Agent/CBR set sport_		0
-  Agent/CBR set dport_		0
-
-  Agent/TCPSink set sport_	0
-  Agent/TCPSink set dport_	0
-
-  Agent/TCP set sport_		0
-  Agent/TCP set dport_		0
-  Agent/TCP set packetSize_	1460
- 
-  Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
- 
-  # unity gain, omni-directional antennas
-  # set up the antennas to be centered in the node and 1.5 meters above it
-  Antenna/OmniAntenna set X_ 0
-  Antenna/OmniAntenna set Y_ 0
-  Antenna/OmniAntenna set Z_ 1.5
-  Antenna/OmniAntenna set Gt_ 1.0
-  Antenna/OmniAntenna set Gr_ 1.0
- 
-  # Initialize the SharedMedia interface with parameters to make
-  # it work like the 914MHz Lucent WaveLAN DSSS radio interface
-  Phy/WirelessPhy set CPThresh_ 10.0
-  Phy/WirelessPhy set CSThresh_ 1.559e-11
-  Phy/WirelessPhy set RXThresh_ 3.652e-10
-  Phy/WirelessPhy set Rb_ 2*1e6
-  Phy/WirelessPhy set Pt_ 0.28183815
-  Phy/WirelessPhy set freq_ 914e6
-  Phy/WirelessPhy set L_ 1.0
- 
-  # =====================================================================
- 
-  TestSuite instproc init {} {
-  	global opt tracefd topo chan prop
-  	global node_ god_
-  	$self instvar ns_ testName_
-  	set ns_         [new Simulator]
-  	set topo	[new Topography]
-  	set tracefd	[open $opt(tr) w]
- 
-  	$ns_ trace-all $tracefd
- 
-  	$topo load_flatgrid $opt(x) $opt(y)
- 
-  	set god_ [create-god $opt(nn)]
-  }
- 
-  Test/wireless-infra-mobility instproc init {} {
-      global opt node_ mac_ god_ chan topo
-      $self instvar ns_ testName_
-      set testName_       wireless-infra-mobility
-      set opt(nn)		10
-      set opt(stop)       12.0
- 
-      $self next
- 
-      $ns_ node-config -adhocRouting DumbAgent \
-                           -llType $opt(ll) \
-                           -macType $opt(mac) \
-                           -ifqType $opt(ifq) \
-                           -ifqLen $opt(ifqlen) \
-                           -antType $opt(ant) \
-                           -propType $opt(prop) \
-                           -phyType $opt(netif) \
-  			 -channel [new $opt(chan)] \
-  			 -topoInstance $topo \
-                          -agentTrace ON \
-                           -routerTrace OFF \
-                           -macTrace ON \
-                           -movementTrace ON \
-  			 -eotTrace $opt(eott)
- 
- 
-      #
-      # We set some parameters as default values, and some
-      # we wait until after creating the node.
-      #
- 
-
-      Mac/802_11 set BeaconInterval_ 0.2
-      Mac/802_11 set dataRate_ 11Mb
-
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-                  set node_($i) [$ns_ node]
-                  $node_($i) random-motion 0              ;# disable random motion
-  		set mac_($i) [$node_($i) getMac 0]
- 
-      		$mac_($i) set RTSThreshold_ 3000
- 
-  		$node_($i) set X_ $i
-  		$node_($i) set Y_ 0.0
-  		$node_($i) set Z_ 0.0
-      }
- 
-      # Tell everyone who the AP is
-     set AP_ADDR1 [$mac_(0) id]
-     $mac_(0) ap $AP_ADDR1
-     set AP_ADDR2 [$mac_([expr $opt(nn) - 1]) id]
-     $mac_([expr $opt(nn) - 1]) ap $AP_ADDR2
-
-     $mac_(1) ScanType ACTIVE
-
-     for {set i 3} {$i < [expr $opt(nn) - 1]} {incr i} {
-	   $mac_($i) ScanType PASSIVE	;#Passive
-     }
-
-
-      $ns_ at 1.0 "$mac_(2) ScanType ACTIVE"
- 
-      puts "Load complete..."
- 
-      $self  create-udp-traffic 0 $node_(4) $node_(1) 2.0
-      $self  create-udp-traffic 1 $node_(5) $node_(8) 2.5
-
-      $ns_ at 2.4 "$node_(4) setdest 300.0 1.0 30.0" 
-      #
-      # Tell all the nodes when the simulation ends
-      #
-
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-  	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-      }
- 
-      $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-      $ns_ at $opt(stop).1 "$self finish"
-  }
- 
-  Test/wireless-infra-mobility instproc run {} {
-      $self instvar ns_
-      puts "Starting Simulation..."
-      $ns_ run
-  }
- 
- 
- 
-  TestSuite instproc finish-basenode {} {
-  	$self instvar ns_
-  	global quiet opt tracefd
- 
-  	flush $tracefd
-  	close $tracefd
- 
-          set tracefd	[open $opt(tr) r]
-          set tracefd2    [open $opt(tr).w w]
- 
-          while { [eof $tracefd] == 0 } {
- 
-  	    set line [gets $tracefd]
-  	    set items [split $line " "]
-  	    if { [lindex $items 0] == "M" } {
-  		puts $tracefd2 $line
-  	    } else {
-  		if { [llength $items] > 15} {
-  		    puts $tracefd2 $line
-  		}
-  	    }
-  	}
- 
-  	close $tracefd
-  	close $tracefd2
- 
-  	exec mv $opt(tr).w $opt(tr)
- 
-  	puts "finishing.."
-  	exit 0
-  }
- 
-  TestSuite instproc finish {} {
-  	$self instvar ns_
-  	global quiet
- 
-  	$ns_ flush-trace
-          #if { !$quiet } {
-          #        puts "running nam..."
-          #        exec nam temp.rands.nam &
-          #}
-  	puts "finishing.."
-  	exit 0
-  }
- 
- 
-  #TestSuite instproc log-movement {} {
-  #	global ns
-  #	$self instvar logtimer_ ns_
-  #
-  #	set ns $ns_
-  #	source ../mobility/timer.tcl
-  #	Class LogTimer -superclass Timer
-  #	LogTimer instproc timeout {} {
-  #		global opt node_;
-  #		for {set i 0} {$i < $opt(nn)} {incr i} {
-  #			$node_($i) log-movement
-  #		}
-  #		$self sched 0.1
-  #	}
-  #
-  #	set logtimer_ [new LogTimer]
-  #	$logtimer_ sched 0.1
-  #}
- 
-  TestSuite instproc create-tcp-traffic {id src dst start} {
-      $self instvar ns_
-      set tcp_($id) [new Agent/TCP]
-      $tcp_($id) set class_ 2
-      set sink_($id) [new Agent/TCPSink]
-      $ns_ attach-agent $src $tcp_($id)
-      $ns_ attach-agent $dst $sink_($id)
-      $ns_ connect $tcp_($id) $sink_($id)
-      set ftp_($id) [new Application/FTP]
-      $ftp_($id) attach-agent $tcp_($id)
-      $ns_ at $start "$ftp_($id) start"
- 
-  }
- 
- 
-  TestSuite instproc create-udp-traffic {id src dst start} {
-      $self instvar ns_
-      set udp_($id) [new Agent/UDP]
-      $ns_ attach-agent $src $udp_($id)
-      set null_($id) [new Agent/Null]
-      $ns_ attach-agent $dst $null_($id)
-      set cbr_($id) [new Application/Traffic/CBR]
-      $cbr_($id) set packetSize_ 512
-      $cbr_($id) set rate_ 64Kb
-      $cbr_($id) attach-agent $udp_($id)
-      $ns_ connect $udp_($id) $null_($id)
-      $ns_ at $start "$cbr_($id) start"
- 
-  }
- 
- 
-  proc runtest {arg} {
-  	global quiet
-  	set quiet 0
- 
-  	set b [llength $arg]
-  	if {$b == 1} {
-  		set test $arg
-  	} elseif {$b == 2} {
-  		set test [lindex $arg 0]
-  		if {[lindex $arg 1] == "QUIET"} {
-  			set quiet 1
-  		}
-  	} else {
-  		usage
-  	}
-  	set t [new Test/$test]
- 
- 
-  	$t run
-  }
- 
-  global argv arg0
-  default_options
-  runtest $argv
- 
- 
- 
- 
- 
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-infra.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-infra.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-infra.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-infra.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,307 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-# The default for rfc2988_ is being changed to true.
-Mac/802_11 set bugFix_timer_ true;     # default changed 2006/1/30
-#
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-
-Class TestSuite
-Class Test/wireless-infra -superclass TestSuite
- 
-  proc usage {} {
-  global argv0
-  puts stderr "usage: ns $argv0 <tests> "
-  puts "valid Tests: wireless-infra"
-  exit 1
-  }
-
-  proc default_options {} {
-      global opt
-      set opt(chan)	Channel/WirelessChannel
-      set opt(prop)	Propagation/TwoRayGround
-      set opt(netif)	Phy/WirelessPhy
-      set opt(mac)	Mac/802_11
-      set opt(ifq)	Queue/DropTail/PriQueue
-      set opt(ll)		LL
-      set opt(ant)        Antenna/OmniAntenna
-      set opt(x)		670 ;# X dimension of the topography
-      set opt(y)		670;# Y dimension of the topography
-      set opt(ifqlen)	50	      ;# max packet in ifq
-      set opt(seed)	0.0
-      set opt(tr)		temp.rands    ;# trace file
-      set opt(lm)         "OFF"          ;# log movement
-      set opt(eott)	"ON"	      ;# eot trace
-
-  }
-
-
-  # =====================================================================
-  # Other default settings
-
-  
- 
-  # unity gain, omni-directional antennas
-  # set up the antennas to be centered in the node and 1.5 meters above it
-  Antenna/OmniAntenna set X_ 0
-  Antenna/OmniAntenna set Y_ 0
-  Antenna/OmniAntenna set Z_ 1.5
-  Antenna/OmniAntenna set Gt_ 1.0
-  Antenna/OmniAntenna set Gr_ 1.0
- 
-  # Initialize the SharedMedia interface with parameters to make
-  # it work like the 914MHz Lucent WaveLAN DSSS radio interface
-  Phy/WirelessPhy set CPThresh_ 10.0
-  Phy/WirelessPhy set CSThresh_ 1.559e-11
-  Phy/WirelessPhy set RXThresh_ 3.652e-10
-  Phy/WirelessPhy set Rb_ 2*1e6
-  Phy/WirelessPhy set Pt_ 0.28183815
-  Phy/WirelessPhy set freq_ 914e6
-  Phy/WirelessPhy set L_ 1.0
- 
-  # =====================================================================
- 
-  TestSuite instproc init {} {
-  	global opt tracefd topo chan prop
-  	global node_ god_
-  	$self instvar ns_ testName_
-  	set ns_         [new Simulator]
-  	set topo	[new Topography]
-  	set tracefd	[open $opt(tr) w]
- 
-  	$ns_ trace-all $tracefd
- 
-  	$topo load_flatgrid $opt(x) $opt(y)
- 
-  	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y)"
-  	puts $tracefd "M 0.0 seed:$opt(seed)"
-  	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-  	puts $tracefd "M 0.0 eott:$opt(eott)"
- 
-  	set god_ [create-god $opt(nn)]
-  }
- 
-  Test/wireless-infra instproc init {} {
-      global opt node_ mac_ god_ chan topo
-      $self instvar ns_ testName_
-      set testName_       wireless-infra
-      set opt(nn)		10
-      set opt(stop)       10.0
- 
-      $self next
- 
-      $ns_ node-config -adhocRouting DumbAgent \
-                           -llType $opt(ll) \
-                           -macType $opt(mac) \
-                           -ifqType $opt(ifq) \
-                           -ifqLen $opt(ifqlen) \
-                           -antType $opt(ant) \
-                           -propType $opt(prop) \
-                           -phyType $opt(netif) \
-  			 -channel [new $opt(chan)] \
-  			 -topoInstance $topo \
-                          -agentTrace ON \
-                           -routerTrace OFF \
-                           -macTrace ON \
-                           -movementTrace OFF \
-  			 -eotTrace $opt(eott)
- 
- 
-      #
-      # We set some parameters as default values, and some
-      # we wait until after creating the node.  
- 
-      
-      Mac/802_11 set BeaconInterval_ 0.2
-      Mac/802_11 set dataRate_ 11Mb
-
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-                  set node_($i) [$ns_ node]
-                  $node_($i) random-motion 0              ;# disable random motion
-  		set mac_($i) [$node_($i) getMac 0]
- 
-      		$mac_($i) set RTSThreshold_ 3000
- 
-  		$node_($i) set X_ $i
-  		$node_($i) set Y_ 0.0
-  		$node_($i) set Z_ 0.0
-      }
- 
-      # Tell everyone who the AP is
-     set AP_ADDR1 [$mac_(0) id]
-     $mac_(0) ap $AP_ADDR1
-     set AP_ADDR2 [$mac_([expr $opt(nn) - 1]) id]
-     $mac_([expr $opt(nn) - 1]) ap $AP_ADDR2
-
-     $mac_(1) ScanType ACTIVE
-
-     for {set i 3} {$i < [expr $opt(nn) - 1]} {incr i} {
-	   $mac_($i) ScanType PASSIVE	;#Passive
-     }
-
-
-      $ns_ at 1.0 "$mac_(2) ScanType ACTIVE"
- 
-      puts "Load complete..."
- 
-      $self  create-udp-traffic 0 $node_(5) $node_(1) 2.0
-      $self  create-udp-traffic 1 $node_(4) $node_(8) 3.0
- 
-      #
-      # Tell all the nodes when the simulation ends
-      #
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-  	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-      }
- 
-      $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-      $ns_ at $opt(stop).1 "$self finish"
-  }
- 
-  Test/wireless-infra instproc run {} {
-      $self instvar ns_
-      puts "Starting Simulation..."
-      $ns_ run
-  }
- 
- 
- 
-  TestSuite instproc finish-basenode {} {
-  	$self instvar ns_
-  	global quiet opt tracefd
- 
-  	flush $tracefd
-  	close $tracefd
- 
-          set tracefd	[open $opt(tr) r]
-          set tracefd2    [open $opt(tr).w w]
- 
-          while { [eof $tracefd] == 0 } {
- 
-  	    set line [gets $tracefd]
-  	    set items [split $line " "]
-  	    if { [lindex $items 0] == "M" } {
-  		puts $tracefd2 $line
-  	    } else {
-  		if { [llength $items] > 15} {
-  		    puts $tracefd2 $line
-  		}
-  	    }
-  	}
- 
-  	close $tracefd
-  	close $tracefd2
- 
-  	exec mv $opt(tr).w $opt(tr)
- 
-  	puts "finishing.."
-  	exit 0
-  }
- 
-  TestSuite instproc finish {} {
-  	$self instvar ns_
-  	global quiet
- 
-  	$ns_ flush-trace
-          #if { !$quiet } {
-          #        puts "running nam..."
-          #        exec nam temp.rands.nam &
-          #}
-  	puts "finishing.."
-  	exit 0
-  }
- 
- 
-  #TestSuite instproc log-movement {} {
-  #	global ns
-  #	$self instvar logtimer_ ns_
-  #
-  #	set ns $ns_
-  #	source ../mobility/timer.tcl
-  #	Class LogTimer -superclass Timer
-  #	LogTimer instproc timeout {} {
-  #		global opt node_;
-  #		for {set i 0} {$i < $opt(nn)} {incr i} {
-  #			$node_($i) log-movement
-  #		}
-  #		$self sched 0.1
-  #	}
-  #
-  #	set logtimer_ [new LogTimer]
-  #	$logtimer_ sched 0.1
-  #}
- 
-  TestSuite instproc create-tcp-traffic {id src dst start} {
-      $self instvar ns_
-      set tcp_($id) [new Agent/TCP]
-      $tcp_($id) set class_ 2
-      set sink_($id) [new Agent/TCPSink]
-      $ns_ attach-agent $src $tcp_($id)
-      $ns_ attach-agent $dst $sink_($id)
-      $ns_ connect $tcp_($id) $sink_($id)
-      set ftp_($id) [new Application/FTP]
-      $ftp_($id) attach-agent $tcp_($id)
-      $ns_ at $start "$ftp_($id) start"
- 
-  }
- 
- 
-  TestSuite instproc create-udp-traffic {id src dst start} {
-      $self instvar ns_
-      set udp_($id) [new Agent/UDP]
-      $ns_ attach-agent $src $udp_($id)
-      set null_($id) [new Agent/Null]
-      $ns_ attach-agent $dst $null_($id)
-      set cbr_($id) [new Application/Traffic/CBR]
-      $cbr_($id) set packetSize_ 512
-      $cbr_($id) set rate_ 64Kb
-      $cbr_($id) attach-agent $udp_($id)
-      $ns_ connect $udp_($id) $null_($id)
-      $ns_ at $start "$cbr_($id) start"
- 
-  }
- 
- 
-  proc runtest {arg} {
-  	global quiet
-  	set quiet 0
- 
-  	set b [llength $arg]
-  	if {$b == 1} {
-  		set test $arg
-  	} elseif {$b == 2} {
-  		set test [lindex $arg 0]
-  		if {[lindex $arg 1] == "QUIET"} {
-  			set quiet 1
-  		}
-  	} else {
-  		usage
-  	}
-  	set t [new Test/$test]
- 
- 
-  	$t run
-  }
- 
-  global argv arg0
-  default_options
-  runtest $argv
- 
- 
- 
- 
- 
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-aodv.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-aodv.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-aodv.tcl	2015-03-04 17:49:02.790750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-aodv.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,341 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-lan-aodv.tcl,v 1.14 2006/01/30 21:27:52 mweigle Exp $
-
-# This test suite is for validating wireless lans 
-# To run all tests: test-all-wireless-lan-tora
-# to run individual test:
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-lan.tcl
-#
-
-Class TestSuite
-
-Class Test/aodv -superclass TestSuite
-#wireless model using AODV
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: aodv"
-	exit 1
-}
-
-
-proc default_options {} {
-    global opt
-    set opt(chan)	Channel/WirelessChannel
-    set opt(prop)	Propagation/TwoRayGround
-    set opt(netif)	Phy/WirelessPhy
-    set opt(mac)	Mac/802_11
-    set opt(ifq)	Queue/DropTail/PriQueue
-    set opt(ll)		LL
-    set opt(ant)        Antenna/OmniAntenna
-    set opt(x)		670 ;# X dimension of the topography
-    set opt(y)		670;# Y dimension of the topography
-    set opt(ifqlen)	50	      ;# max packet in ifq
-    set opt(seed)	0.0
-    set opt(tr)		temp.rands    ;# trace file
-    set opt(lm)         "off"          ;# log movement
-
-}
-
-
-# =====================================================================
-# Other default settings
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.28183815
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	if {[string compare $testName_ "aodv"] && \
-			[string compare $testName_ "tora"]} {
-		$ns_ set-address-format hierarchical
-		AddrParams set domain_num_ 3
-		lappend cluster_num 2 1 1
-		AddrParams set cluster_num_ $cluster_num
-		lappend eilastlevel 1 1 4 1
-		AddrParams set nodes_num_ $eilastlevel
-        } 
-
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-	
-	$ns_ trace-all $tracefd
-
-	#set opt(rp) $testName_
-	$topo load_flatgrid $opt(x) $opt(y)
-
-	
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-}
-
-Test/aodv instproc init {} {
-	global opt node_ god_ chan topo
-	$self instvar ns_ testName_
-	set testName_       aodv
-	set opt(rp)         aodv
-	set opt(cp)		"../mobility/scene/cbr-50-20-4-512" 
-	set opt(sc)		"../mobility/scene/scen-670x670-50-600-20-0" 
-	set opt(nn)		50      
-	set opt(stop)       1000.0
-
-	$self next
-
-	#
-	# Create God
-	#
-	set god_ [create-god $opt(nn)]
-
-	$ns_ node-config -adhocRouting AODV \
-			-llType $opt(ll) \
-			-macType $opt(mac) \
-			-ifqType $opt(ifq) \
-			-ifqLen $opt(ifqlen) \
-			-antType $opt(ant) \
-			-propType $opt(prop) \
-			-phyType $opt(netif) \
-			-channel [new $opt(chan)] \
-			-topoInstance $topo \
-			-agentTrace ON \
-			-routerTrace ON \
-			-macTrace OFF \
-			-toraDebug OFF \
-			-movementTrace OFF
-    
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0              ;# disable random motion
-	}
-	puts "Loading connection pattern..."
-	source $opt(cp)
-	
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-
-	$ns_ at $opt(stop) "puts \"NS EXITING...\";"
-	$ns_ at $opt(stop).1 "$self finish-aodv"
-}
-
-Test/aodv instproc run {} {
-	$self instvar ns_
-	puts "Starting Simulation..."
-	$ns_ run
-}
-
-TestSuite instproc finish-aodv {} {
-	$self instvar ns_
-	global quiet opt tracefd
-
-	$ns_ flush-trace
-        
-        #set tracefd	[open $opt(tr) r]
-        #set tracefd2    [open $opt(tr).w w]
-
-        #while { [eof $tracefd] == 0 } {
-
-	 #   set line [gets $tracefd]
-	 #   set items [split $line " "]
-
-	  #set time [lindex $items 1]
-	    
-	   # set times [split $time "."]
-	   # set time1 [lindex $times 0]
-	   # set time2 [lindex $times 1]
-	   # set newtime2 [string range $time2 0 2]
-	   # set time $time1.$newtime2
-	   # puts $line
-	   #	puts $items
-	   # set newline [lreplace $line 1 1 $time] 
-
-	   # puts $tracefd2 $newline
-
-	#}
-	
-	close $tracefd
-	#close $tracefd2
-
-	#exec mv $opt(tr).w $opt(tr)
-
-	puts "finish.."
-	exit 0
-	
-
-}
-
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	puts "finishing.."
-	exit 0
-}
-
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-TestSuite instproc create-tcp-traffic {id src dst start} {
-    $self instvar ns_
-    set tcp_($id) [new Agent/TCP]
-    $tcp_($id) set class_ 2
-    set sink_($id) [new Agent/TCPSink]
-    $ns_ attach-agent $src $tcp_($id)
-    $ns_ attach-agent $dst $sink_($id)
-    $ns_ connect $tcp_($id) $sink_($id)
-    set ftp_($id) [new Application/FTP]
-    $ftp_($id) attach-agent $tcp_($id)
-    $ns_ at $start "$ftp_($id) start"
-    
-}
-
-
-TestSuite instproc create-udp-traffic {id src dst start} {
-    $self instvar ns_
-    set udp_($id) [new Agent/UDP]
-    $ns_ attach-agent $src $udp_($id)
-    set null_($id) [new Agent/Null]
-    $ns_ attach-agent $dst $null_($id)
-    set cbr_($id) [new Application/Traffic/CBR]
-    $cbr_($id) set packetSize_ 512
-    $cbr_($id) set interval_ 4.0
-    $cbr_($id) set random_ 1
-    $cbr_($id) set maxpkts_ 10000
-    $cbr_($id) attach-agent $udp_($id)
-    $ns_ connect $udp_($id) $null_($id)
-    $ns_ at $start "$cbr_($id) start"
-
-}
-
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	
-	
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-ap1.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-ap1.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-ap1.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-ap1.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,354 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-lan-ap1.tcl,v 1.4 2006/01/24 23:00:08 sallyfloyd Exp $
-
-# This test suite is for validating wireless lans 
-# To run all tests: test-all-wireless-lan-tora
-# to run individual test:
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-lan.tcl
-#
-
-Class TestSuite
-
-Class Test/ap -superclass TestSuite
-#wireless model using 802.11 AP
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: ap"
-	exit 1
-}
-
-
-proc default_options {} {
-    global opt
-    set opt(chan)	Channel/WirelessChannel
-    set opt(prop)	Propagation/TwoRayGround
-    set opt(netif)	Phy/WirelessPhy
-    set opt(mac)	Mac/802_11
-    set opt(ifq)	Queue/DropTail/PriQueue
-    set opt(ll)		LL
-    set opt(ant)        Antenna/OmniAntenna
-    set opt(x)		670 ;# X dimension of the topography
-    set opt(y)		670;# Y dimension of the topography
-    set opt(ifqlen)	50	      ;# max packet in ifq
-    set opt(seed)	0.0
-    set opt(tr)		temp.rands    ;# trace file
-    set opt(lm)         "off"          ;# log movement
-
-}
-
-
-# =====================================================================
-# Other default settings
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.28183815
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-	
-	$ns_ trace-all $tracefd
-
-	set opt(rp) $testName_
-	$topo load_flatgrid $opt(x) $opt(y)
-
-	
-	#puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	#puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	#puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-
-	#set god_ [create-god $opt(nn)]
-}
-
-Test/ap instproc init {} {
-	global opt node_ god_ chan topo
-	$self instvar ns_ testName_
-	set testName_       ap
-	set opt(nn)		3      
-	set opt(stop)       1.0
-
-	$self next
-
-	#
-	# Create God
-	#
-	set god_ [create-god $opt(nn)]
-
-	$ns_ node-config -adhocRouting AODV \
-			-llType $opt(ll) \
-			-macType $opt(mac) \
-			-ifqType $opt(ifq) \
-			-ifqLen $opt(ifqlen) \
-			-antType $opt(ant) \
-			-propType $opt(prop) \
-			-phyType $opt(netif) \
-			-channel [new $opt(chan)] \
-			-topoInstance $topo \
-			-agentTrace ON \
-			-routerTrace ON \
-			-macTrace OFF \
-			-toraDebug OFF \
-			-movementTrace OFF
-    
-
-	
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-                  set node_($i) [$ns_ node]
-                  $node_($i) random-motion 0              ;# disable random motion
-                set mac_($i) [$node_($i) getMac 0]
-
-                $mac_($i) set dataRate_ 54Mb
-                $mac_($i) set basicRate_ 24Mb
-                $mac_($i) set RTSThreshold_ 3000
-
-                $node_($i) set X_ 0.0
-                $node_($i) set Y_ 0.0
-                $node_($i) set Z_ 0.0
-      }
-
-      # Tell everyone who the AP is
-      set AP_ADDR [$mac_(0) id]
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-            $mac_($i) bss_id $AP_ADDR
-      }
-
-      puts "Load complete..."
-
-      $self  create-tcp-traffic 0 $node_(1) $node_(2) 0.0001
-
-      #
-      # Tell all the nodes when the simulation ends
-      #
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-        $ns_ at $opt(stop).000000001 "$node_($i) reset";
-      }
-
-      $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-      $ns_ at $opt(stop).1 "$self finish-ap"
-
-
-
-}
-
-Test/ap instproc run {} {
-	$self instvar ns_
-	puts "Starting Simulation..."
-	$ns_ run
-}
-
-TestSuite instproc finish-ap {} {
-	$self instvar ns_
-	global quiet opt tracefd
-
-	$ns_ flush-trace
-        
-        #set tracefd	[open $opt(tr) r]
-        #set tracefd2    [open $opt(tr).w w]
-
-        #while { [eof $tracefd] == 0 } {
-
-	 #   set line [gets $tracefd]
-	 #   set items [split $line " "]
-
-	  #set time [lindex $items 1]
-	    
-	   # set times [split $time "."]
-	   # set time1 [lindex $times 0]
-	   # set time2 [lindex $times 1]
-	   # set newtime2 [string range $time2 0 2]
-	   # set time $time1.$newtime2
-	   # puts $line
-	   #	puts $items
-	   # set newline [lreplace $line 1 1 $time] 
-
-	   # puts $tracefd2 $newline
-
-	#}
-	
-	close $tracefd
-	#close $tracefd2
-
-	#exec mv $opt(tr).w $opt(tr)
-
-	puts "finish.."
-	exit 0
-	
-
-}
-
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	puts "finishing.."
-	exit 0
-}
-
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-TestSuite instproc create-tcp-traffic {id src dst start} {
-    $self instvar ns_
-    set tcp_($id) [new Agent/TCP]
-    $tcp_($id) set class_ 2
-    set sink_($id) [new Agent/TCPSink]
-    $ns_ attach-agent $src $tcp_($id)
-    $ns_ attach-agent $dst $sink_($id)
-    $ns_ connect $tcp_($id) $sink_($id)
-    set ftp_($id) [new Application/FTP]
-    $ftp_($id) attach-agent $tcp_($id)
-    $ns_ at $start "$ftp_($id) start"
-    
-}
-
-
-TestSuite instproc create-udp-traffic {id src dst start} {
-    $self instvar ns_
-    set udp_($id) [new Agent/UDP]
-    $ns_ attach-agent $src $udp_($id)
-    set null_($id) [new Agent/Null]
-    $ns_ attach-agent $dst $null_($id)
-    set cbr_($id) [new Application/Traffic/CBR]
-    $cbr_($id) set packetSize_ 512
-    $cbr_($id) set interval_ 4.0
-    $cbr_($id) set random_ 1
-    $cbr_($id) set maxpkts_ 10000
-    $cbr_($id) attach-agent $udp_($id)
-    $ns_ connect $udp_($id) $null_($id)
-    $ns_ at $start "$cbr_($id) start"
-
-}
-
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	
-	
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-ap.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-ap.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-ap.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-ap.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,357 +0,0 @@
- # -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-  Agent/TCP set tcpTick_ 0.1
-  # The default for tcpTick_ is being changed to reflect a changing reality.
-  Agent/TCP set rfc2988_ false
-  # The default for rfc2988_ is being changed to true.
-  #
-  # Copyright (c) 1998,2000 University of Southern California.
-  # All rights reserved.
-  #
-  # Redistribution and use in source and binary forms are permitted
-  # provided that the above copyright notice and this paragraph are
-  # duplicated in all such forms and that any documentation, advertising
-  # materials, and other materials related to such distribution and use
-  # acknowledge that the software was developed by the University of
-  # Southern California, Information Sciences Institute.  The name of the
-  # University may not be used to endorse or promote products derived from
-  # this software without specific prior written permission.
-  #
-  # THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-  # WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-  # MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-  #
-  # $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-lan-ap.tcl,v 1.3 2006/01/24 23:00:08 sallyfloyd Exp $
- 
-  # FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-  Agent/TCP set useHeaders_ false
-  # The default is being changed to useHeaders_ true.
-  Agent/TCP set windowInit_ 1
-  # The default is being changed to 2.
-  Agent/TCP set singledup_ 0
-  # The default is being changed to 1
- 
-  # This test suite is for validating wireless lans with an AP
-  # To run all tests: test-all-wireless-lan-ap
-  # to run individual test:
-  # ns test-suite-wireless-lan-newnode.tcl basic
-  # ....
-  #
-  # To view a list of available test to run with this script:
-  # ns test-suite-wireless-lan.tcl
- 
-  Agent/TCP set minrto_ 0
-  # The default is being changed to minrto_ 1
-  Agent/TCP set syn_ false
-  Agent/TCP set delay_growth_ false
-  # In preparation for changing the default values for syn_ and delay_growth_.
- 
-  Class TestSuite
- 
-  # Basic test.
-  Class Test/basic -superclass TestSuite
- 
-  proc usage {} {
-        global argv0
-  puts stderr "usage: ns $argv0 <tests> "
-  puts "Valid Tests: basic"
-  exit 1
-  }
-
-  proc default_options {} {
-      global opt
-      set opt(chan)	Channel/WirelessChannel
-      set opt(prop)	Propagation/TwoRayGround
-      set opt(netif)	Phy/WirelessPhy
-      set opt(mac)	Mac/802_11
-      set opt(ifq)	Queue/DropTail/PriQueue
-      set opt(ll)		LL
-      set opt(ant)        Antenna/OmniAntenna
-      set opt(x)		670 ;# X dimension of the topography
-      set opt(y)		670;# Y dimension of the topography
-      set opt(ifqlen)	50	      ;# max packet in ifq
-      set opt(seed)	0.0
-      set opt(tr)		temp.rands    ;# trace file
-      set opt(lm)         "OFF"          ;# log movement
-      set opt(eott)	"ON"	      ;# eot trace
-
-  }
-
-
-  # =====================================================================
-  # Other default settings
-
-  LL set mindelay_		50us
-  LL set delay_			25us
-  LL set bandwidth_		0	;# not used
-
-  Agent/Null set sport_		0
-  Agent/Null set dport_		0
-
-  Agent/CBR set sport_		0
-  Agent/CBR set dport_		0
-
-  Agent/TCPSink set sport_	0
-  Agent/TCPSink set dport_	0
-
-  Agent/TCP set sport_		0
-  Agent/TCP set dport_		0
-  Agent/TCP set packetSize_	1460
- 
-  Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
- 
-  # unity gain, omni-directional antennas
-  # set up the antennas to be centered in the node and 1.5 meters above it
-  Antenna/OmniAntenna set X_ 0
-  Antenna/OmniAntenna set Y_ 0
-  Antenna/OmniAntenna set Z_ 1.5
-  Antenna/OmniAntenna set Gt_ 1.0
-  Antenna/OmniAntenna set Gr_ 1.0
- 
-  # Initialize the SharedMedia interface with parameters to make
-  # it work like the 914MHz Lucent WaveLAN DSSS radio interface
-  Phy/WirelessPhy set CPThresh_ 10.0
-  Phy/WirelessPhy set CSThresh_ 1.559e-11
-  Phy/WirelessPhy set RXThresh_ 3.652e-10
-  Phy/WirelessPhy set Rb_ 2*1e6
-  Phy/WirelessPhy set Pt_ 0.28183815
-  Phy/WirelessPhy set freq_ 914e6
-  Phy/WirelessPhy set L_ 1.0
- 
-  # =====================================================================
- 
-  TestSuite instproc init {} {
-  	global opt tracefd topo chan prop
-  	global node_ god_
-  	$self instvar ns_ testName_
-  	set ns_         [new Simulator]
-  	set topo	[new Topography]
-  	set tracefd	[open $opt(tr) w]
- 
-  	$ns_ trace-all $tracefd
- 
-  	$topo load_flatgrid $opt(x) $opt(y)
- 
-  	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y)"
-  	puts $tracefd "M 0.0 seed:$opt(seed)"
-  	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-  	puts $tracefd "M 0.0 eott:$opt(eott)"
- 
-  	set god_ [create-god $opt(nn)]
-  }
- 
-  Test/basic instproc init {} {
-      global opt node_ mac_ god_ chan topo
-      $self instvar ns_ testName_
-      set testName_       basic
-      set opt(nn)		3
-      set opt(stop)       1.0
- 
-      $self next
- 
-      $ns_ node-config -adhocRouting DSDV \
-                           -llType $opt(ll) \
-                           -macType $opt(mac) \
-                           -ifqType $opt(ifq) \
-                           -ifqLen $opt(ifqlen) \
-                           -antType $opt(ant) \
-                           -propType $opt(prop) \
-                           -phyType $opt(netif) \
-  			 -channel [new $opt(chan)] \
-  			 -topoInstance $topo \
-                          -agentTrace ON \
-                           -routerTrace OFF \
-                           -macTrace ON \
-                           -movementTrace OFF \
-  			 -eotTrace $opt(eott)
- 
- 
-      #
-      # We set some parameters as default values, and some
-      # we wait until after creating the node.  No great reason
-      # for the distinction - just want to test both options.
-      # The values are based (roughly) on 11a
-      #
- 
-      Mac/802_11 set CWMin_		15
-      Mac/802_11 set CWMax_		1023
-      Mac/802_11 set SlotTime_	0.000009	;# 9us
-      Mac/802_11 set SIFS_		0.000016	;# 16us
-      Mac/802_11 set PreambleLength_	40		;# wrong
-      Mac/802_11 set PLCPHeaderLength_	40	;# wrong
-      Mac/802_11 set PLCPDataRate_	1.0e6		;# 1Mbps
-      Mac/802_11 set ShortRetryLimit_	7		;# retransmittions
-      Mac/802_11 set LongRetryLimit_	4		;# retransmissions
- 
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-                  set node_($i) [$ns_ node]
-                  $node_($i) random-motion 0              ;# disable random motion
-  		set mac_($i) [$node_($i) getMac 0]
- 
-      		$mac_($i) set dataRate_ 54Mb
-      		$mac_($i) set basicRate_ 24Mb
-      		$mac_($i) set RTSThreshold_ 3000
- 
-  		$node_($i) set X_ 0.0
-  		$node_($i) set Y_ 0.0
-  		$node_($i) set Z_ 0.0
-      }
- 
-      # Tell everyone who the AP is
-      set AP_ADDR [$mac_(0) id]
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-  	    $mac_($i) bss_id $AP_ADDR
-      }
- 
-      puts "Load complete..."
- 
-      $self  create-tcp-traffic 0 $node_(1) $node_(2) 0.0001
- 
-      #
-      # Tell all the nodes when the simulation ends
-      #
-      for {set i 0} {$i < $opt(nn) } {incr i} {
-  	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-      }
- 
-      $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-      $ns_ at $opt(stop).1 "$self finish"
-  }
- 
-  Test/basic instproc run {} {
-      $self instvar ns_
-      puts "Starting Simulation..."
-      $ns_ run
-  }
- 
- 
- 
-  TestSuite instproc finish-basenode {} {
-  	$self instvar ns_
-  	global quiet opt tracefd
- 
-  	flush $tracefd
-  	close $tracefd
- 
-          set tracefd	[open $opt(tr) r]
-          set tracefd2    [open $opt(tr).w w]
- 
-          while { [eof $tracefd] == 0 } {
- 
-  	    set line [gets $tracefd]
-  	    set items [split $line " "]
-  	    if { [lindex $items 0] == "M" } {
-  		puts $tracefd2 $line
-  	    } else {
-  		if { [llength $items] > 15} {
-  		    puts $tracefd2 $line
-  		}
-  	    }
-  	}
- 
-  	close $tracefd
-  	close $tracefd2
- 
-  	exec mv $opt(tr).w $opt(tr)
- 
-  	puts "finishing.."
-  	exit 0
-  }
- 
-  TestSuite instproc finish {} {
-  	$self instvar ns_
-  	global quiet
- 
-  	$ns_ flush-trace
-          #if { !$quiet } {
-          #        puts "running nam..."
-          #        exec nam temp.rands.nam &
-          #}
-  	puts "finishing.."
-  	exit 0
-  }
- 
- 
-  #TestSuite instproc log-movement {} {
-  #	global ns
-  #	$self instvar logtimer_ ns_
-  #
-  #	set ns $ns_
-  #	source ../mobility/timer.tcl
-  #	Class LogTimer -superclass Timer
-  #	LogTimer instproc timeout {} {
-  #		global opt node_;
-  #		for {set i 0} {$i < $opt(nn)} {incr i} {
-  #			$node_($i) log-movement
-  #		}
-  #		$self sched 0.1
-  #	}
-  #
-  #	set logtimer_ [new LogTimer]
-  #	$logtimer_ sched 0.1
-  #}
- 
-  TestSuite instproc create-tcp-traffic {id src dst start} {
-      $self instvar ns_
-      set tcp_($id) [new Agent/TCP]
-      $tcp_($id) set class_ 2
-      set sink_($id) [new Agent/TCPSink]
-      $ns_ attach-agent $src $tcp_($id)
-      $ns_ attach-agent $dst $sink_($id)
-      $ns_ connect $tcp_($id) $sink_($id)
-      set ftp_($id) [new Application/FTP]
-      $ftp_($id) attach-agent $tcp_($id)
-      $ns_ at $start "$ftp_($id) start"
- 
-  }
- 
- 
-  TestSuite instproc create-udp-traffic {id src dst start} {
-      $self instvar ns_
-      set udp_($id) [new Agent/UDP]
-      $ns_ attach-agent $src $udp_($id)
-      set null_($id) [new Agent/Null]
-      $ns_ attach-agent $dst $null_($id)
-      set cbr_($id) [new Application/Traffic/CBR]
-      $cbr_($id) set packetSize_ 512
-      $cbr_($id) set interval_ 4.0
-      $cbr_($id) set random_ 1
-      $cbr_($id) set maxpkts_ 10000
-      $cbr_($id) attach-agent $udp_($id)
-      $ns_ connect $udp_($id) $null_($id)
-      $ns_ at $start "$cbr_($id) start"
- 
-  }
- 
- 
-  proc runtest {arg} {
-  	global quiet
-  	set quiet 0
- 
-  	set b [llength $arg]
-  	if {$b == 1} {
-  		set test $arg
-  	} elseif {$b == 2} {
-  		set test [lindex $arg 0]
-  		if {[lindex $arg 1] == "QUIET"} {
-  			set quiet 1
-  		}
-  	} else {
-  		usage
-  	}
-  	set t [new Test/$test]
- 
- 
-  	$t run
-  }
- 
-  global argv arg0
-  default_options
-  runtest $argv
- 
- 
- 
- 
- 
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-gaf.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-gaf.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-gaf.tcl	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-gaf.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,385 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-lan-gaf.tcl,v 1.8 2006/01/24 23:00:08 sallyfloyd Exp $
-
-# This test suite is for validating wireless lans 
-# To run all tests: test-all-wireless-lan-tora
-# to run individual test:
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-lan.tcl
-#
-
-Class TestSuite
-
-Class Test/gaf -superclass TestSuite
-#wireless model using AODV
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: dsdv dsr"
-	exit 1
-}
-
-
-proc default_options {} {
-    global opt
-
-set opt(chan)           Channel/WirelessChannel
-set opt(prop)           Propagation/TwoRayGround
-set opt(netif)          Phy/WirelessPhy
-set opt(mac)            Mac/802_11
-set opt(ifq)            Queue/DropTail/PriQueue
-set opt(ll)             LL
-set opt(ant)            Antenna/OmniAntenna
- 
-set opt(x)              1500    ;# X dimension of the topography
-set opt(y)              300             ;# Y dimension of the topography
-set opt(grid)           100     ;# grid size
-set opt(cp)             "../mobility/scene/cbr-10-1-10-20"
-set opt(sc)             "../mobility/scene/scen-1500x300-60-0-20-2"
- 
-set opt(ifqlen)         50              ;# max packet in ifq
-set opt(nn)             60              ;# number of nodes
-set opt(seed)           0.0
-set opt(stop)           800.0           ;# simulation time
-set opt(tr)             temp.rands          ;# trace file
-set opt(rp)             AODV            ;# routing protocol script
-set opt(lm)             "off"           ;# log movement
-set opt(energymodel)    EnergyModel     ;
-set opt(initialenergy)  500             ;# Initial energy in Joules
-set opt(infiniteenergy)  20000           ;# enough to keep sim run to the end
-#set opt(logenergy)      "on"           ;# log energy every 150 seconds
-set opt(gaf4)           0               ;# = 1 means run gaf        
-
-}
-
-
-# =====================================================================
-# Other default settings
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.28183815
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	if {[string compare $testName_ "gaf"] && \
-			[string compare $testName_ "tora"]} {
-		$ns_ set-address-format hierarchical
-		AddrParams set domain_num_ 3
-		lappend cluster_num 2 1 1
-		AddrParams set cluster_num_ $cluster_num
-		lappend eilastlevel 1 1 4 1
-		AddrParams set nodes_num_ $eilastlevel
-        } 
-
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-	
-	$ns_ trace-all $tracefd
-
-	#set opt(rp) $testName_
-	$topo load_flatgrid $opt(x) $opt(y)
-
-	
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-}
-
-Test/gaf instproc init {} {
-	global opt node_ god_ chan topo
-	$self instvar ns_ testName_
-	set testName_       gaf
-	set opt(rp)         AODV
-	set opt(cp)		"../mobility/scene/cbr-10-1-10-20" 
-	set opt(sc)		"../mobility/scene/scen-1500x300-60-0-20-2" 
-	set opt(nn)		60      
-	set opt(stop)       800.0
-
-	$self next
-
-	#
-	# Create God
-	#
-	set god_ [create-god $opt(nn)]
-	$god_ load_grid $opt(x) $opt(y) $opt(grid) 
-
-        $ns_ node-config -adhocRouting $opt(rp) \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propType $opt(prop) \
-                         -phyType $opt(netif) \
-                         -channelType $opt(chan) \
-                         -topoInstance $topo \
-                         -energyModel $opt(energymodel) \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -rxPower 1.2 \
-                         -txPower 1.6 \
-                         -idlePower 1.15 \
-                         -initialEnergy $opt(infiniteenergy) 
-    
-	for {set i 0} {$i < 10 } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0              ;# disable random motion
-		$node_($i) attach-gafpartner
-                $node_($i) unset-gafpartner             ;# 
-        }                   
-
-	$ns_ node-config -initialEnergy $opt(initialenergy)
- 
-                # The rest node is GAF node
-                #
-                for {set i 10} {$i < $opt(nn) } {incr i} {
- 
-                    set node_($i) [$ns_ node]
-                    $node_($i) random-motion 0
- 
-                    #attach gaf agent to this node, attach at port 254
-                    set gafagent_ [new Agent/GAF [$node_($i) id]]
-                    $node_($i) attach $gafagent_ 254
-                    $node_($i) attach-gafpartner
-                    $gafagent_ adapt-mobility $opt(gaf4)
-                    $ns_ at 0.0 "$gafagent_ start-gaf"
-                }       
-
-
-	puts "Loading connection pattern..."
-	source $opt(cp)
-	
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-
-#
-# Tell all the nodes when the simulation ends
-#
-for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-#    $ns_ at $opt(stop).000000001 "output_energy $i"
- 
-}   
-        $ns_ at $opt(stop).00000001 "puts \"NS EXITING...\" ; $ns_ halt"
-	
-#	$ns_ at $opt(stop).00000001 "$self finish-gaf"
-}
-
-Test/gaf instproc run {} {
-	$self instvar ns_
-	puts "Starting Simulation..."
-	$ns_ run
-}
-
-TestSuite instproc finish-gaf {} {
-	$self instvar ns_
-	global quiet opt
-
-	$ns_ flush-trace
-        
-        set tracefd	[open $opt(tr) r]
-        set tracefd2    [open $opt(tr).w w]
-
-        while { [eof $tracefd] == 0 } {
-
-	    set line [gets $tracefd]
-	    set items [split $line " "]
-
-	    set time [lindex $items 1]
-	    
-	    set times [split $time "."]
-	    set time1 [lindex $times 0]
-	    set time2 [lindex $times 1]
-	    set newtime2 [string range $time2 0 2]
-	    set time $time1.$newtime2
-	    
-	    set newline [lreplace $line 1 1 $time] 
-
-	    puts $tracefd2 $newline
-
-	}
-	
-	close $tracefd
-	close $tracefd2
-
-	exec mv $opt(tr).w $opt(tr)
-
-	puts "finish.."
-	exit 0
-	
-
-}
-
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	puts "finishing.."
-	exit 0
-}
-
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-TestSuite instproc create-tcp-traffic {id src dst start} {
-    $self instvar ns_
-    set tcp_($id) [new Agent/TCP]
-    $tcp_($id) set class_ 2
-    set sink_($id) [new Agent/TCPSink]
-    $ns_ attach-agent $src $tcp_($id)
-    $ns_ attach-agent $dst $sink_($id)
-    $ns_ connect $tcp_($id) $sink_($id)
-    set ftp_($id) [new Application/FTP]
-    $ftp_($id) attach-agent $tcp_($id)
-    $ns_ at $start "$ftp_($id) start"
-    
-}
-
-
-TestSuite instproc create-udp-traffic {id src dst start} {
-    $self instvar ns_
-    set udp_($id) [new Agent/UDP]
-    $ns_ attach-agent $src $udp_($id)
-    set null_($id) [new Agent/Null]
-    $ns_ attach-agent $dst $null_($id)
-    set cbr_($id) [new Application/Traffic/CBR]
-    $cbr_($id) set packetSize_ 512
-    $cbr_($id) set interval_ 4.0
-    $cbr_($id) set random_ 1
-    $cbr_($id) set maxpkts_ 10000
-    $cbr_($id) attach-agent $udp_($id)
-    $ns_ connect $udp_($id) $null_($id)
-    $ns_ at $start "$cbr_($id) start"
-
-}
-
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	
-	
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-newnode-80211Ext.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-newnode-80211Ext.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-newnode-80211Ext.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-newnode-80211Ext.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,311 +0,0 @@
-# Copyright (C) 2007
-# Mercedes-Benz Research & Development North America, Inc. and
-# University of Karlsruhe (TH)
-# All rights reserved.
-#
-# Qi Chen                 : qi.chen@daimler.com
-# Felix Schmidt-Eisenlohr : felix.schmidt-eisenlohr@kit.edu
-# Daniel Jiang            : daniel.jiang@daimler.com
-# 
-# For further information see:
-# http://dsn.tm.uni-karlsruhe.de/english/Overhaul_NS-2.php
-
-# This test suite is for validating the overhauled implementation of IEEE 802.11 
-# To run all tests: test-all-wireless-lan
-# to run individual test:
-# ns test-suite-wireless-lan-newnode-80211Ext.tcl unicast
-# ns test-suite-wireless-lan-newnode-80211Ext.tcl broadcast
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-lan-newnode-80211Ext.tcl
-
-Class TestSuite
-
-# 802.11Ext with unicast
-Class Test/unicast -superclass TestSuite
-
-# 802.11Ext with broadcast
-Class Test/broadcast -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: unicast broadcast"
-	exit 1
-}
-
-proc default_options {} {
-    global opt
-    set opt(seed) 1
-    set opt(chan)       Channel/WirelessChannel
-    set opt(prop)       Propagation/Nakagami
-
-    set opt(netif)      Phy/WirelessPhyExt
-    set opt(mac)        Mac/802_11Ext
-    set opt(ifq)        Queue/DropTail/PriQueue
-    set opt(ll)         LL
-    set opt(ant)        Antenna/OmniAntenna
-    set opt(x)          50   	;# X dimension of the topography
-    set opt(y)          50   	;# Y dimension of the topography
-    set opt(ifqlen)     20           ;# max packet in ifq
-    set opt(rtg)        DumbAgent
-    set opt(stop)       5         ;# simulation time
-    set opt(tr)         temp.rands    ;# trace file
-}
-
-
-# =====================================================================
-# Other default settings
-
-Mac/802_11 set CWMin_               15
-Mac/802_11 set CWMax_               1023
-Mac/802_11 set SlotTime_            0.000009
-Mac/802_11 set SIFS_                0.000016
-Mac/802_11 set ShortRetryLimit_     7
-Mac/802_11 set LongRetryLimit_      4
-Mac/802_11 set PreambleLength_      60
-Mac/802_11 set PLCPHeaderLength_    60
-Mac/802_11 set PLCPDataRate_        6.0e6
-Mac/802_11 set RTSThreshold_        2000
-Mac/802_11 set basicRate_           6.0e6
-Mac/802_11 set dataRate_            6.0e6
-
-Mac/802_11Ext set CWMin_            15
-Mac/802_11Ext set CWMax_            1023
-Mac/802_11Ext set SlotTime_         0.000009
-Mac/802_11Ext set SIFS_             0.000016
-Mac/802_11Ext set ShortRetryLimit_  7
-Mac/802_11Ext set LongRetryLimit_   4
-Mac/802_11Ext set HeaderDuration_   0.000020 
-Mac/802_11Ext set SymbolDuration_   0.000004
-Mac/802_11Ext set BasicModulationScheme_ 0
-Mac/802_11Ext set use_802_11a_flag_ true
-Mac/802_11Ext set RTSThreshold_     2000
-Mac/802_11Ext set MAC_DBG           0
-
-Phy/WirelessPhy set CSThresh_       6.30957e-12
-Phy/WirelessPhy set Pt_             0.01
-Phy/WirelessPhy set freq_           5.18e9
-Phy/WirelessPhy set L_              1.0
-Phy/WirelessPhy set RXThresh_       3.652e-10
-Phy/WirelessPhy set bandwidth_      20e6
-Phy/WirelessPhy set CPThresh_       10.0
-
-Phy/WirelessPhyExt set CSThresh_           6.30957e-13
-Phy/WirelessPhyExt set Pt_                 0.001
-Phy/WirelessPhyExt set freq_               5.18e9
-Phy/WirelessPhyExt set noise_floor_        2.51189e-13
-Phy/WirelessPhyExt set L_                  1.0
-Phy/WirelessPhyExt set PowerMonitorThresh_ 0
-Phy/WirelessPhyExt set HeaderDuration_     0.000020
-Phy/WirelessPhyExt set BasicModulationScheme_ 0
-Phy/WirelessPhyExt set PreambleCaptureSwitch_ 1
-Phy/WirelessPhyExt set DataCaptureSwitch_  0
-Phy/WirelessPhyExt set SINR_PreambleCapture_ 2.5118
-Phy/WirelessPhyExt set SINR_DataCapture_   100.0
-Phy/WirelessPhyExt set trace_dist_         1e6
-Phy/WirelessPhyExt set PHY_DBG_            0
-Phy/WirelessPhyExt set CPThresh_           0 ;# not used at the moment
-Phy/WirelessPhyExt set RXThresh_           0 ;# not used at the moment
-
-#=====================================================================
-
-#configure RF model parameters
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-Propagation/Nakagami set use_nakagami_dist_ true 
-Propagation/Nakagami set gamma0_ 2.0
-Propagation/Nakagami set gamma1_ 2.0
-Propagation/Nakagami set gamma2_ 2.0
-
-Propagation/Nakagami set d0_gamma_ 200
-Propagation/Nakagami set d1_gamma_ 500
-
-Propagation/Nakagami set m0_  1.0
-Propagation/Nakagami set m1_  1.0
-Propagation/Nakagami set m2_  1.0
-
-Propagation/Nakagami set d0_m_ 80
-Propagation/Nakagami set d1_m_ 200
-
-# =====================================================================
-
-TestSuite instproc init {} {
-}
-
-Test/unicast instproc init {} {
-    global defaultRNG opt chan topo god_ node_
-    $self instvar ns_ testName_
-    set testName_ unicast
-    set ns_		[new Simulator]
-    
-    set opt(nn)         3
-
-    $defaultRNG seed $opt(seed)
-    set topo	[new Topography]
-    set tracefd [open $opt(tr) w]
-    $ns_ trace-all $tracefd
-
-    $topo load_flatgrid $opt(x) $opt(y)
-    set god_ [create-god $opt(nn)]
-    $god_ off
-
-    set chan [new $opt(chan)]
-    $ns_ node-config -adhocRouting $opt(rtg) \
-                     -llType $opt(ll) \
-                     -macType $opt(mac) \
-                     -ifqType $opt(ifq) \
-                     -ifqLen $opt(ifqlen) \
-                     -antType $opt(ant) \
-                     -propType $opt(prop) \
-                     -phyType $opt(netif) \
-                     -channel $chan \
-            		 -topoInstance $topo \
-            		 -agentTrace ON \
-                     -routerTrace OFF \
-                     -macTrace ON \
-                     -phyTrace ON
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-        set ID_($i) $i
-        set node_($i) [$ns_ node]
-        $node_($i) set id_  $ID_($i)
-        $node_($i) set address_ $ID_($i)
-        $node_($i) nodeid $ID_($i)
-
-        set agent_($i) [new Agent/PBC]
-        $ns_ attach-agent $node_($i)  $agent_($i)
-        $agent_($i) set Pt_ 2.0e-4
-        $agent_($i) set payloadSize 1000
-        $agent_($i) set modulationScheme 0
-        $agent_($i) PeriodicBroadcast OFF
-        $ns_ at $opt(stop).0 "$node_($i) reset";
-    }   
-
-    $node_(0) set X_ 10.00
-    $node_(0) set Y_ 10.00
-    $node_(0) set Z_ 10.00
-    $node_(1) set X_ 20.00.
-    $node_(1) set Y_ 10.00
-    $node_(1) set Z_ 10.00
-    $node_(2) set X_ 30.00.
-    $node_(2) set Y_ 10.00
-    $node_(2) set Z_ 10.00
-
-    $ns_ at 0.01 "$agent_(1) singleBroadcast"
-    $ns_ at 1.01 "$agent_(1) unicast 2"
-    $ns_ at 2.01 "$agent_(1) unicast 3"
-    $ns_ at 3.01 "$agent_(1) set payloadSize 2500"
-    $ns_ at 3.02 "$agent_(1) unicast 2"
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-        $ns_ at $opt(stop).0 "$node_($i) reset";
-    }
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/unicast instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-Test/broadcast instproc init {} {
-    global defaultRNG opt chan topo god_ node_
-    $self instvar ns_ testName_
-    set testName_ unicast
-    set ns_		[new Simulator]
-
-    set opt(nn) 20
-
-    $defaultRNG seed $opt(seed)
-    set topo	[new Topography]
-    set tracefd [open $opt(tr) w]
-    $ns_ trace-all $tracefd
-
-    $topo load_flatgrid $opt(x) $opt(y)
-    set god_ [create-god $opt(nn)]
-    $god_ off
-
-    set chan [new $opt(chan)]
-    $ns_ node-config -adhocRouting $opt(rtg) \
-                     -llType $opt(ll) \
-                     -macType $opt(mac) \
-                     -ifqType $opt(ifq) \
-                     -ifqLen $opt(ifqlen) \
-                     -antType $opt(ant) \
-                     -propType $opt(prop) \
-                     -phyType $opt(netif) \
-                     -channel $chan \
-		             -topoInstance $topo \
-		             -agentTrace ON \
-                     -routerTrace OFF \
-                     -macTrace OFF \
-                     -phyTrace OFF
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-        set ID_($i) $i
-        set node_($i) [$ns_ node]
-        $node_($i) set id_  $ID_($i)
-        $node_($i) set address_ $ID_($i)
-        $node_($i) set X_ [expr $i * 5]
-        $node_($i) set Y_ 10
-        $node_($i) set Z_ 0
-        $node_($i) nodeid $ID_($i)
-
-        set agent_($i) [new Agent/PBC]
-        $ns_ attach-agent $node_($i)  $agent_($i)
-        $agent_($i) set Pt_ 1e-4
-        $agent_($i) set payloadSize 1000
-        $agent_($i) set peroidcaBroadcastInterval 0.2
-        $agent_($i) set peroidcaBroadcastVariance 0.05
-        $agent_($i) set modulationScheme 1
-        $agent_($i) PeriodicBroadcast ON
-        $ns_ at $opt(stop).0 "$node_($i) reset";
-    }
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-        $ns_ at $opt(stop).0 "$node_($i) reset";
-    }
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/broadcast instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-TestSuite instproc finish {} {
-    $self instvar ns_
-    $ns_ flush-trace
-    puts "finishing.."
-    exit 0
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	
-	
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-newnode-err.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-newnode-err.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-newnode-err.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-newnode-err.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,441 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-#
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-lan-newnode-err.tcl,v 1.7 2006/01/24 23:00:08 sallyfloyd Exp $
-
-# This test suite is for validating wireless lans with transmission errors 
-# To run all tests: test-all-wireless-lan
-# to run individual test:
-# ns test-suite-wireless-lan-newnode.tcl dsdv-uniform-err
-# ns test-suite-wireless-lan-newnode.tcl dsdv-multistate-err
-
-
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-lan.tcl
-
-Class TestSuite
-
-# wireless model using destination sequence distance vector
-Class Test/dsdv-uniform-err -superclass TestSuite
-Class Test/dsdv-multistate-err -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: dsdv-uniform-err dsdv-multistate-err"
-	exit 1
-}
-
-proc default_options {} {
-    global opt
-    set opt(chan)	Channel/WirelessChannel
-    set opt(prop)	Propagation/TwoRayGround
-    set opt(netif)	Phy/WirelessPhy
-    set opt(err)        UniformErrorProc
-    set opt(FECstrength) 1
-    set opt(unit)       pkt
-    set opt(mac)	Mac/802_11
-    set opt(ifq)	Queue/DropTail/PriQueue
-    set opt(ll)		LL
-    set opt(ant)        Antenna/OmniAntenna
-    set opt(x)		670 ;# X dimension of the topography
-    set opt(y)		670;# Y dimension of the topography
-    set opt(ifqlen)	50	      ;# max packet in ifq
-    set opt(seed)	0.0
-    set opt(tr)		temp.rands    ;# trace file
-    set opt(lm)         "off"          ;# log movement
-}
-
-
-# =====================================================================
-# Other default settings
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1000
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.28183815
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-Phy/WirelessPhy set bandwidth_ 1e5
-
-# Initialize the Errormodel
-
-ErrorModule set debug_ false
-
-ErrorModel set enable_ 1
-ErrorModel set markecn_ false
-ErrorModel set bandwidth_ 2Mb
-ErrorModel set rate_ 0.00001
-
-ErrorModel/Trace set good_ 123456789
-ErrorModel/Trace set loss_ 0
-ErrorModel/Periodic set period_ 3.0
-ErrorModel/Periodic set offset_ 0.0
-ErrorModel/Periodic set burstlen_ 0.0
-ErrorModel/MultiState set curperiod_ 0.0
-ErrorModel/MultiState set sttype_ pkt
-ErrorModel/MultiState set texpired_ 0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-
-	if {[string compare $testName_ "dsdv-uniform-err"] && \
-			[string compare $testName_ "dsdv-multistate-err"]} {
-		$ns_ node-config -addressType hierarchical
-		AddrParams set domain_num_ 3
-		lappend cluster_num 2 1 1
-		AddrParams set cluster_num_ $cluster_num
-		lappend eilastlevel 1 1 4 1
-		AddrParams set nodes_num_ $eilastlevel
-	}
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-
-	set namfd       [open "wireless.nam" w]	
-	
-	$ns_ trace-all $tracefd
-	$ns_ namtrace-all $namfd
-
-        # ns-random $opt(seed)
-
-	$topo load_flatgrid $opt(x) $opt(y)
-	
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-
-	set god_ [create-god $opt(nn)]
-}
-
-Test/dsdv-uniform-err instproc init {} {
-    global opt node_ god_ chan topo 
-    $self instvar ns_ testName_
-    set testName_       dsdv-uniform-err
-    set opt(rp)         dsdv
-    set opt(sc)		"../mobility/scene/scen-3-test" 
-    set opt(nn)		3	      
-    set opt(stop)       100.0
-    
-    $self next
-    
-    $ns_ node-config -adhocRouting DSDV \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propType $opt(prop) \
-                         -phyType $opt(netif) \
-			 -channel [new $opt(chan)] \
-			 -topoInstance $topo \
-                        -agentTrace ON \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -movementTrace OFF \
-			 -IncomingErrProc $opt(err) -OutgoingErrProc $opt(err) 
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0              ;# disable random motion
-    }
-
-    $self create-tcp-traffic 1 $node_(0) $node_(1) 0
-
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-    
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-    
-    $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;" 
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/dsdv-uniform-err instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-Test/dsdv-multistate-err instproc init {} {
-    global opt node_ god_ chan topo 
-    $self instvar ns_ testName_
-    set testName_       dsdv-multistate-err
-    set opt(rp)         dsdv
-    set opt(sc)		"../mobility/scene/scen-3-test" 
-    set opt(nn)		3	      
-    set opt(stop)       100.0
-    
-    $self next
-
-    $ns_ node-config -adhocRouting DSDV \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propType $opt(prop) \
-                         -phyType $opt(netif) \
-			 -channel [new $opt(chan)] \
-			 -topoInstance $topo \
-                        -agentTrace ON \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -movementTrace OFF \
-			 -IncomingErrProc MultistateErrorProc \
-			 -OutgoingErrProc MultistateErrorProc
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0              ;# disable random motion
-    }
-    $self create-tcp-traffic 1 $node_(0) $node_(1) 0
-    
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-    
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-    
-    $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;" 
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/dsdv-multistate-err instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-
-TestSuite instproc finish-basenode {} {
-	$self instvar ns_
-	global quiet opt
-
-	$ns_ flush-trace
-        
-        set tracefd	[open $opt(tr) r]
-        set tracefd2    [open $opt(tr).w w]
-
-        while { [eof $tracefd] == 0 } {
-
-	    set line [gets $tracefd]
-	    set items [split $line " "]
-	    if { [lindex $items 0] == "M" } {
-		puts $tracefd2 $line
-	    } else {
-		if { [llength $items] > 15} {
-		    puts $tracefd2 $line
-		}
-	    }
-	}
-	
-	close $tracefd
-	close $tracefd2
-
-	exec mv $opt(tr).w $opt(tr)
-	
-	puts "finishing.."
-	exit 0
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	puts "finishing.."
-	exit 0
-}
-
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-TestSuite instproc create-tcp-traffic {id src dst start} {
-    $self instvar ns_
-    set tcp_($id) [new Agent/TCP]
-    $tcp_($id) set class_ 2
-    set sink_($id) [new Agent/TCPSink]
-    $ns_ attach-agent $src $tcp_($id)
-    $ns_ attach-agent $dst $sink_($id)
-    $ns_ connect $tcp_($id) $sink_($id)
-    set ftp_($id) [new Application/FTP]
-    $ftp_($id) attach-agent $tcp_($id)
-    $ns_ at $start "$ftp_($id) start"
-    
-}
-
-
-TestSuite instproc create-udp-traffic {id src dst start} {
-    $self instvar ns_
-    set udp_($id) [new Agent/UDP]
-    $ns_ attach-agent $src $udp_($id)
-    set null_($id) [new Agent/Null]
-    $ns_ attach-agent $dst $null_($id)
-    set cbr_($id) [new Application/Traffic/CBR]
-    $cbr_($id) set packetSize_ 512
-    $cbr_($id) set interval_ 4.0
-    $cbr_($id) set random_ 1
-    $cbr_($id) set maxpkts_ 10000
-    $cbr_($id) attach-agent $udp_($id)
-    $ns_ connect $udp_($id) $null_($id)
-    $ns_ at $start "$cbr_($id) start"
-}
-
-proc UniformErrorProc {} {
-    global opt
-	
-    set	errObj [new ErrorModel]
-    $errObj unit bit
-    $errObj FECstrength $opt(FECstrength) 
-    $errObj datapktsize 1000
-    $errObj cntrlpktsize 80
-    return $errObj
-}
-
-proc MultistateErrorProc {} {
-    set tmp [new ErrorModel/Uniform 0 pkt]
-    set tmp1 [new ErrorModel/Uniform .9 pkt]
-    set tmp2 [new ErrorModel/Uniform .5 pkt]
-    set m_states [list $tmp $tmp1 $tmp2]
-    set m_periods [list 0 .0075 .00375]
-    set m_transmx {{0.95 0.05 0} {0 0 1} {1 0 0}}
-    set m_trunit pkt
-    set m_sttype time
-    set m_nstates 3
-    set m_nstart [lindex $m_states 0]
-
-    set errObj [new ErrorModel/MultiState $m_states $m_periods $m_transmx $m_trunit $m_sttype $m_nstates $m_nstart]
-
-    $errObj FECstrength 2
-    return $errObj
-}
-
-proc runtest {arg} {
-	global quiet tracefd opt
-	set quiet 0
-
-	set b [llength $arg]
-
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-newnode.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-newnode.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-newnode.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-newnode.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,660 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-#
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-lan-newnode.tcl,v 1.27 2006/01/30 21:27:52 mweigle Exp $
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-
-# This test suite is for validating wireless lans 
-# To run all tests: test-all-wireless-lan
-# to run individual test:
-# ns test-suite-wireless-lan-newnode.tcl dsdv
-# ns test-suite-wireless-lan-newnode.tcl dsr
-# ns test-suite-wireless-lan-newnode.tcl dsdv-wired-cum-wireless
-# ns test-suite-wireless-lan-newnode.tcl dsdv-wireless-mip
-# ....
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-lan.tcl
-
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Class TestSuite
-
-# wireless model using destination sequence distance vector
-Class Test/dsdv -superclass TestSuite
-
-# wireless model using dynamic source routing
-Class Test/dsr -superclass TestSuite
-
-#wireless model using TORA
-#Class Test/tora -superclass TestSuite
-
-# simulation between a wired and a wireless domain through
-# gateways called base-stations.
-Class Test/dsdv-wired-cum-wireless -superclass TestSuite
-
-# Wireless Mobile IP model in which a mobilehost roams between 
-# a Home Agent and Foreign Agent. see test-suite-wireless-lan.txt for
-# details
-Class Test/dsdv-wireless-mip -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: dsdv dsr"
-	exit 1
-}
-
-proc default_options {} {
-    global opt
-    set opt(chan)	Channel/WirelessChannel
-    set opt(prop)	Propagation/TwoRayGround
-    set opt(netif)	Phy/WirelessPhy
-    set opt(mac)	Mac/802_11
-    set opt(ifq)	Queue/DropTail/PriQueue
-    set opt(ll)		LL
-    set opt(ant)        Antenna/OmniAntenna
-    set opt(x)		670 ;# X dimension of the topography
-    set opt(y)		670;# Y dimension of the topography
-    set opt(ifqlen)	50	      ;# max packet in ifq
-    set opt(seed)	0.0
-    set opt(tr)		temp.rands    ;# trace file
-    set opt(lm)         "off"          ;# log movement
-
-}
-
-
-# =====================================================================
-# Other default settings
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.28183815
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	if {[string compare $testName_ "dsdv"] && \
-			[string compare $testName_ "dsr"]} {
-		$ns_ node-config -addressType hierarchical
-		AddrParams set domain_num_ 3
-		lappend cluster_num 2 1 1
-		AddrParams set cluster_num_ $cluster_num
-		lappend eilastlevel 1 1 4 1
-		AddrParams set nodes_num_ $eilastlevel
-	}
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-	
-	$ns_ trace-all $tracefd
-
-	$topo load_flatgrid $opt(x) $opt(y)
-	
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-
-	set god_ [create-god $opt(nn)]
-}
-
-Test/dsdv instproc init {} {
-    global opt node_ god_ chan topo
-    $self instvar ns_ testName_
-    set testName_       dsdv
-    set opt(rp)         dsdv
-    set opt(cp)		"../mobility/scene/cbr-50-20-4-512" 
-    set opt(sc)		"../mobility/scene/scen-670x670-50-600-20-0" ;
-    set opt(nn)		50	      
-    set opt(stop)       1000.0
-    
-    $self next
-
-    $ns_ node-config -adhocRouting DSDV \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propType $opt(prop) \
-                         -phyType $opt(netif) \
-			 -channel [new $opt(chan)] \
-			 -topoInstance $topo \
-                        -agentTrace ON \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -movementTrace OFF
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0              ;# disable random motion
-    }
-    puts "Loading connection pattern..."
-    source $opt(cp)
-    
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-    
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-    
-    $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;" 
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/dsdv instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-Test/dsr instproc init {} {
-    global opt node_ god_ chan topo
-    $self instvar ns_ testName_
-    set testName_       dsr
-    set opt(rp)         dsr
-    set opt(ifq)        CMUPriQueue	
-    set opt(cp)         "../mobility/scene/cbr-50-20-4-512"
-    set opt(sc)         "../mobility/scene/scen-670x670-50-600-20-0" ;
-    set opt(nn)         50
-    set opt(stop)       1000.0
-
-    $self next
-
-    $ns_ node-config -adhocRouting DSR \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propType $opt(prop) \
-                         -phyType $opt(netif) \
-                         -channel [new $opt(chan)] \
-                         -topoInstance $topo \
-                         -agentTrace ON \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -movementTrace OFF
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0          ;# disable random motion
-    }
-    puts "Loading connection pattern..."
-    source $opt(cp)
-
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-
-    $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/dsr instproc run {} {
-	$self instvar ns_
-	puts "Starting Simulation..."
-	$ns_ run
-}
-
-TestSuite instproc finish-dsr {} {
-	$self instvar ns_
-	global quiet opt tracefd
-
-	$ns_ flush-trace
-	flush $tracefd
-	close $tracefd
-        
-        set tracefd	[open $opt(tr) r]
-        set tracefd2    [open $opt(tr).w w]
-
-        while { [eof $tracefd] == 0 } {
-
-	    set line [gets $tracefd]
-	    set items [split $line " "]
-
-	    set time [lindex $items 1]
-	    
-	    set times [split $time "."]
-	    set time1 [lindex $times 0]
-	    set time2 [lindex $times 1]
-	    set newtime2 [string range $time2 0 3]
-	    set time $time1.$newtime2
-	    
-	    set newline [lreplace $line 1 1 $time] 
-
-	    puts $tracefd2 $newline
-
-	}
-	
-	close $tracefd
-	close $tracefd2
-
-	exec mv $opt(tr).w $opt(tr)
-	
-	puts "finishing.."
-	exit 0
-}
-
-Test/dsdv-wired-cum-wireless instproc init {} {
-    global opt god_ node_ topo
-    $self instvar ns_ testName_
-    set testName_ dsdv-wired-cum-wireless
-    set opt(rp)            dsdv
-    set opt(sc)            "../mobility/scene/scen-3-test"
-    set opt(cp)            ""
-    set opt(nn)            5
-    set opt(stop)          500.0
-    set num_wired_nodes    2
-    set num_wireless_nodes 3
-
-    $self next
-
-    #setup wired nodes
-    set temp {0.0.0 0.1.0}
-    for {set i 0} {$i < $num_wired_nodes} {incr i} {
-        set W($i) [$ns_ node [lindex $temp $i]]
-    }
-
-    # setup base stations & wireless nodes
-
-    $ns_ node-config -adhocRouting DSDV \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propType $opt(prop) \
-                         -phyType $opt(netif) \
-                         -channel [new $opt(chan)] \
-                         -topoInstance $topo \
-		 	 -wiredRouting ON \
-                        -agentTrace ON \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -movementTrace OFF
-
-    set temp {1.0.0 1.0.1 1.0.2 1.0.3}
-
-    set BS(0) [$ns_ node [lindex $temp 0]]
-    set BS(1) [$ns_ node 2.0.0]
-    $BS(0) random-motion 0
-    $BS(1) random-motion 0
-
-    #provide some co-ord (fixed) to base stations
-    $BS(0) set X_ 1.0
-    $BS(0) set Y_ 2.0
-    $BS(0) set Z_ 0.0
-   
-    $BS(1) set X_ 650.0
-    $BS(1) set Y_ 600.0
-    $BS(1) set Z_ 0.0
-
-    # create mobilenode only
-    $ns_ node-config -wiredRouting OFF  
-
-    #create some mobilenodes in the same domain as BS_0
-    for {set j 0} {$j < $num_wireless_nodes} {incr j} {
-	set node_($j) [$ns_ node [lindex $temp [expr $j+1]] ]
-
-        $node_($j) base-station [AddrParams addr2id \
-                [$BS(0) node-addr]]
-    }
-
-    puts "Loading connection pattern..."
-    $self create-udp-traffic 0 $node_(0) $W(0) 240.00000000000000
-    $self create-tcp-traffic 0 $W(1) $node_(2) 160.00000000000000
-    $self create-tcp-traffic 1 $node_(0) $W(0) 200.00000000000000
-
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-
-    #create links between wired and BS nodes
-
-    $ns_ duplex-link $W(0) $W(1) 5Mb 2ms DropTail
-    $ns_ duplex-link $W(1) $BS(0) 5Mb 2ms DropTail
-    $ns_ duplex-link $W(1) $BS(1) 5Mb 2ms DropTail
-
-    $ns_ duplex-link-op $W(0) $W(1) orient down
-    $ns_ duplex-link-op $W(1) $BS(0) orient left-down
-    $ns_ duplex-link-op $W(1) $BS(1) orient right-down
-
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $num_wireless_nodes} {incr i} {
-        $ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-    $ns_ at $opt(stop).0000010 "$BS(0) reset";
-    $ns_ at $opt(stop).0000010 "$BS(1) reset";
-
-    $ns_ at $opt(stop).20 "puts \"NS EXITING...\" ;"
-    $ns_ at $opt(stop).21 "$self finish-basenode"
-
-}
-
-Test/dsdv-wired-cum-wireless instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-Test/dsdv-wireless-mip instproc init {} {
-    global opt god_ node_ topo
-    $self instvar ns_ testName_
-    
-    set testName_ dsdv-wireless-mip
-    set opt(rp)            dsdv
-    set opt(sc)            "../mobility/scene/scen-3-test"
-    set opt(cp)            ""
-    set opt(nn)            3       ;#total no of wireless nodes
-    set opt(stop)          250.0
-    set num_wired_nodes    2
-    set num_wireless_nodes 1
-    
-    $self next
-    
-    ## setup the wired nodes
-    set temp {0.0.0 0.1.0}
-    for {set i 0} {$i < $num_wired_nodes} {incr i} {
-	set W($i) [$ns_ node [lindex $temp $i]] 
-    }
-
-    $ns_ node-config -mobileIP   ON
- 
-    $ns_ node-config -adhocRouting DSDV \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propType $opt(prop) \
-                         -phyType $opt(netif) \
-                         -channel [new $opt(chan)] \
-                         -topoInstance $topo \
-		 	 -wiredRouting ON \
-                         -agentTrace ON \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -movementTrace OFF
-
-    set HA [$ns_ node 1.0.0]
-    set FA [$ns_ node 2.0.0]
-    $HA random-motion 0
-    $FA random-motion 0
-
-    #provide some co-ord (fixed) to these base-station nodes.
-    $HA set X_ 1.000000000000
-    $HA set Y_ 2.000000000000
-    $HA set Z_ 0.000000000000
-   
-    $FA set X_ 650.000000000000
-    $FA set Y_ 600.000000000000
-    $FA set Z_ 0.000000000000
-
-    # create a mobilenode that would be moving between HA and FA.
-    # note address of MH indicates its in the same domain as HA.
-
-    $ns_ node-config -wiredRouting OFF 
-    set MH [$ns_ node 1.0.2]
-    set node_(0) $MH
-
-    set HAaddress [AddrParams addr2id [$HA node-addr]]
-
-    [$MH set regagent_] set home_agent_ $HAaddress
-    
-    # movement of MH
-    $MH set Z_ 0.000000000000
-    $MH set Y_ 2.000000000000
-    $MH set X_ 2.000000000000
-    # starts to move towards FA
-    $ns_ at 100.000000000000 "$MH setdest 640.000000000000 610.000000000000 20.000000000000"
-    # goes back to HA
-    $ns_ at 200.000000000000 "$MH setdest 2.000000000000 2.000000000000 20.000000000000"
-    
-    # create links between wired and BaseStation nodes
-    $ns_ duplex-link $W(0) $W(1) 5Mb 2ms DropTail
-    $ns_ duplex-link $W(1) $HA 5Mb 2ms DropTail
-    $ns_ duplex-link $W(1) $FA 5Mb 2ms DropTail
-    
-    $ns_ duplex-link-op $W(0) $W(1) orient down
-    $ns_ duplex-link-op $W(1) $HA orient left-down
-    $ns_ duplex-link-op $W(1) $FA orient right-down
-    
-    # setup TCP connections between a wired node and the MH
-    puts "Loading connection pattern..."
-    $self create-tcp-traffic 0 $W(0) $MH 100.0
-
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $num_wireless_nodes } {incr i} {
-	$ns_ at $opt(stop).0000010 "$node_($i) reset";
-    }
-    $ns_ at $opt(stop).0000010 "$HA reset";
-    $ns_ at $opt(stop).0000010 "$FA reset";
-    
-    $ns_ at $opt(stop).21 "$self finish-basenode"
-    $ns_ at $opt(stop).20 "puts \"NS EXITING...\" ; "
-}
-
-Test/dsdv-wireless-mip instproc run {} {
-    $self instvar ns_ 
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-TestSuite instproc finish-basenode {} {
-	$self instvar ns_
-	global quiet opt tracefd
-
-	flush $tracefd
-	close $tracefd
-        
-        set tracefd	[open $opt(tr) r]
-        set tracefd2    [open $opt(tr).w w]
-
-        while { [eof $tracefd] == 0 } {
-
-	    set line [gets $tracefd]
-	    set items [split $line " "]
-	    if { [lindex $items 0] == "M" } {
-		puts $tracefd2 $line
-	    } else {
-		if { [llength $items] > 15} {
-		    puts $tracefd2 $line
-		}
-	    }
-	}
-	
-	close $tracefd
-	close $tracefd2
-
-	exec mv $opt(tr).w $opt(tr)
-	
-	puts "finishing.."
-	exit 0
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	puts "finishing.."
-	exit 0
-}
-
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-TestSuite instproc create-tcp-traffic {id src dst start} {
-    $self instvar ns_
-    set tcp_($id) [new Agent/TCP]
-    $tcp_($id) set class_ 2
-    set sink_($id) [new Agent/TCPSink]
-    $ns_ attach-agent $src $tcp_($id)
-    $ns_ attach-agent $dst $sink_($id)
-    $ns_ connect $tcp_($id) $sink_($id)
-    set ftp_($id) [new Application/FTP]
-    $ftp_($id) attach-agent $tcp_($id)
-    $ns_ at $start "$ftp_($id) start"
-    
-}
-
-
-TestSuite instproc create-udp-traffic {id src dst start} {
-    $self instvar ns_
-    set udp_($id) [new Agent/UDP]
-    $ns_ attach-agent $src $udp_($id)
-    set null_($id) [new Agent/Null]
-    $ns_ attach-agent $dst $null_($id)
-    set cbr_($id) [new Application/Traffic/CBR]
-    $cbr_($id) set packetSize_ 512
-    $cbr_($id) set interval_ 4.0
-    $cbr_($id) set random_ 1
-    $cbr_($id) set maxpkts_ 10000
-    $cbr_($id) attach-agent $udp_($id)
-    $ns_ connect $udp_($id) $null_($id)
-    $ns_ at $start "$cbr_($id) start"
-
-}
-
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	
-	
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,616 +0,0 @@
-#
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-lan.tcl,v 1.27 2006/01/24 23:00:08 sallyfloyd Exp $
-
-# THIS TEST IS SUBSUMED BY TEST-SUITE-WIRELESS-LAN-NEWNODE.TCL 
-# - Sep 15, 2000
-
-puts "THIS TEST IS SUBSUMED BY TEST-SUITE-WIRELESS-LAN-NEWNODE.TCL" 
-exit 0
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-# This test suite is for validating wireless lans 
-# To run all tests: test-all-wireless-lan
-# to run individual test:
-# ns test-suite-wireless-lan.tcl dsdv
-# ns test-suite-wireless-lan.tcl dsr
-# ns test-suite-wireless-lan.tcl wired-cum-wireless
-# ns test-suite-wireless-lan.tcl wireless-mip
-# ....
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-lan.tcl
-#
-
-Class TestSuite
-
-# wireless model using destination sequence distance vector
-Class Test/dsdv -superclass TestSuite
-
-# wireless model using dynamic source routing
-Class Test/dsr -superclass TestSuite
-
-# simulation between a wired and a wireless domain through
-# gateways called base-stations.
-Class Test/dsdv-wired-cum-wireless -superclass TestSuite
-
-# same as above , only with DSR routing. see test-suite-wireless-lan.
-# txt for details
-#Class Test/dsr-wired-cum-wireless -superclass TestSuite
-
-# Wireless Mobile IP model in which a mobilehost roams between 
-# a Home Agent and Foreign Agent. see test-suite-wireless-lan.txt for
-# details
-Class Test/dsdv-wireless-mip -superclass TestSuite
-
-# same as above, only with DSR routing
-#Class Test/dsr-wireless-mip -superclass TestSuite
-
-# XXX The dsr version of the tests are not added to test-suite as their 
-# outputs are not consistent (events vary, even with the same random seed 
-# value) and thus couldnot be validated. -Padma, may 1999.
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: dsdv dsr"
-	exit 1
-}
-
-proc default_options {} {
-    global opt
-    set opt(chan)	Channel/WirelessChannel
-    set opt(prop)	Propagation/TwoRayGround
-    set opt(netif)	Phy/WirelessPhy
-    set opt(mac)	Mac/802_11
-    set opt(ifq)	Queue/DropTail/PriQueue
-    set opt(ll)		LL
-    set opt(ant)        Antenna/OmniAntenna
-    set opt(x)		670 ;# X dimension of the topography
-    set opt(y)		670;# Y dimension of the topography
-    set opt(ifqlen)	50	      ;# max packet in ifq
-    set opt(seed)	0.0
-    set opt(tr)		temp.rands    ;# trace file
-    set opt(lm)         "off"          ;# log movement
-}
-
-# =====================================================================
-# Other default settings
-
-set AgentTrace			ON
-set RouterTrace			OFF
-set MacTrace			OFF
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.28183815
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	# This is really confusing. Why not a simple test 
-	# ($testName_ != "dsdv") && ($testName_ != "dsr") ?
-	if {[string compare $testName_ "dsdv"] && \
-			[string compare $testName_ "dsr"]} {
-		# XXX We explicitly test HierNode. Since set-address-format
-		# is used by both the new and the old code, we can't add a 
-		# warning there to say that it's obsolete; nor can we keep 
-		# this set node_factory_ stuff there. So the following is 
-		# the only solution. Ugly but it works.
-		Simulator set node_factory_ HierNode
-		$ns_ set-address-format hierarchical
-		AddrParams set domain_num_ 3
-		lappend cluster_num 2 1 1
-		AddrParams set cluster_num_ $cluster_num
-		lappend eilastlevel 1 1 4 1
-		AddrParams set nodes_num_ $eilastlevel
-        }  
-	set chan	[new $opt(chan)]
-	set prop	[new $opt(prop)]
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-
-	$topo load_flatgrid $opt(x) $opt(y)
-	$prop topography $topo
-	#
-	# Create God
-	#
-	$self create-god $opt(nn)
-	
-	#
-	# log the mobile nodes movements if desired
-	#
-	if { $opt(lm) == "on" } {
-		$self log-movement
-	}
-	
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-}
-
-
-Test/dsdv instproc init {} {
-    global opt node_ god_
-    $self instvar ns_ testName_
-    set testName_       dsdv
-    set opt(rp)         dsdv
-    set opt(cp)		"../mobility/scene/cbr-50-20-4-512" 
-    set opt(sc)		"../mobility/scene/scen-670x670-50-600-20-0" ;
-    set opt(nn)		50	      
-    set opt(stop)       1000.0
-    
-    $self next
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$testName_-create-mobile-node $i
-    }
-    puts "Loading connection pattern..."
-    source $opt(cp)
-    
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-    
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-    
-    $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;" 
-    #$ns_ halt"
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/dsdv instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-
-Test/dsr instproc init {} {
-    global opt node_ god_
-    $self instvar ns_ testName_
-    set testName_       dsr
-    set opt(rp)         dsr
-    set opt(cp)         "../mobility/scene/cbr-50-20-4-512"
-    set opt(sc)         "../mobility/scene/scen-670x670-50-600-20-0" ;
-    set opt(nn)         50
-    set opt(stop)       1000.0
-
-    $self next
-
-    puts "creating mobile nodes"
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-        $testName_-create-mobile-node $i
-    }
-    puts "Loading connection pattern..."
-    source $opt(cp)
-
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-        $ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-
-    $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-TestSuite instproc finish-dsr {} {
-	$self instvar ns_ 
-	global quiet opt tracefd
-
-	$ns_ flush-trace
-	flush $tracefd
-	close $tracefd
-        
-        set tracefd	[open $opt(tr) r]
-        set tracefd2    [open $opt(tr).w w]
-
-        while { [eof $tracefd] == 0 } {
-
-	    set line [gets $tracefd]
-	    set items [split $line " "]
-
-	    set time [lindex $items 1]
-	    
-	    set times [split $time "."]
-	    set time1 [lindex $times 0]
-	    set time2 [lindex $times 1]
-	    set newtime2 [string range $time2 0 3]
-	    set time $time1.$newtime2
-	    
-	    set newline [lreplace $line 1 1 $time] 
-
-	    puts $tracefd2 $newline
-
-	}
-	
-	close $tracefd
-	close $tracefd2
-
-	exec mv $opt(tr).w $opt(tr)
-
-	puts "finish.."
-	exit 0
-	
-
-}
-
-Test/dsr instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-#
-
-Test/dsdv-wired-cum-wireless instproc init {} {
-    global opt god_ node_ 
-    $self instvar ns_ testName_
-    set testName_ dsdv-wired-cum-wireless
-    set opt(rp)            dsdv
-    set opt(sc)            "../mobility/scene/scen-3-test"
-    set opt(cp)            ""
-    set opt(nn)            5
-    set opt(stop)          500.0
-    set num_wired_nodes    2
-    set num_wireless_nodes 3
-
-    $self next
-
-    #setup wired nodes
-    set temp {0.0.0 0.1.0}
-    for {set i 0} {$i < $num_wired_nodes} {incr i} {
-	set W($i) [$ns_ node [lindex $temp $i]] 
-    }
-    
-    # setup base stations & wireless nodes
-    set temp {1.0.0 1.0.1 1.0.2 1.0.3}
-    set BS(0) [create-base-station-node [lindex $temp 0]]
-    set BS(1) [create-base-station-node 2.0.0]
-
-    #provide some co-ord (fixed) to base stations
-    $BS(0) set X_ 1.0
-    $BS(0) set Y_ 2.0
-    $BS(0) set Z_ 0.0
-    
-    $BS(1) set X_ 650.0
-    $BS(1) set Y_ 600.0
-    $BS(1) set Z_ 0.0
-    
-    #create some mobilenodes in the same domain as BS_0
-    for {set j 0} {$j < $num_wireless_nodes} {incr j} {
-	set node_($j) [ $opt(rp)-create-mobile-node $j [lindex $temp \
-		[expr $j+1]] ]
-	$node_($j) base-station [AddrParams addr2id \
-		[$BS(0) node-addr]]
-    }
-    
-    puts "Loading connection pattern..."
-    $self create-udp-traffic 0 $node_(0) $W(0) 240.00000000000000
-    $self create-tcp-traffic 0 $W(1) $node_(2) 160.00000000000000
-    $self create-tcp-traffic 1 $node_(0) $W(0) 200.00000000000000
-    
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
- 
-    #create links between wired and BS nodes
-    
-    $ns_ duplex-link $W(0) $W(1) 5Mb 2ms DropTail
-    $ns_ duplex-link $W(1) $BS(0) 5Mb 2ms DropTail
-    $ns_ duplex-link $W(1) $BS(1) 5Mb 2ms DropTail
-    
-    $ns_ duplex-link-op $W(0) $W(1) orient down
-    $ns_ duplex-link-op $W(1) $BS(0) orient left-down
-    $ns_ duplex-link-op $W(1) $BS(1) orient right-down
-    
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $num_wireless_nodes} {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-    $ns_ at $opt(stop).0000010 "$BS(0) reset";
-    $ns_ at $opt(stop).0000010 "$BS(1) reset";
-	
-    $ns_ at $opt(stop).20 "puts \"NS EXITING...\" ;" 
-    $ns_ at $opt(stop).21 "$self finish"
-    
-}
-
-Test/dsdv-wired-cum-wireless instproc run {} {
-    $self instvar ns_ 
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-
-Test/dsdv-wireless-mip instproc init {} {
-    global opt god_ node_ 
-    $self instvar ns_ testName_
-    
-    set testName_ dsdv-wireless-mip
-    set opt(rp)            dsdv
-    set opt(sc)            "../mobility/scene/scen-3-test"
-    set opt(cp)            ""
-    set opt(nn)            3       ;#total no of wireless nodes
-    set opt(stop)          250.0
-    set num_wired_nodes    2
-    set num_wireless_nodes 1
-    source ../lib/ns-wireless-mip.tcl
-    
-    $self next
-    
-    # set mobileIP flag
-    Simulator set mobile_ip_ 1
-
-    ## setup the wired nodes
-    set temp {0.0.0 0.1.0}
-    for {set i 0} {$i < $num_wired_nodes} {incr i} {
-	set W($i) [$ns_ node [lindex $temp $i]] 
-    }
-    
-    ## setup ForeignAgent and HomeAgent nodes
-    set HA [create-base-station-node 1.0.0]
-    set FA [create-base-station-node 2.0.0]
-    
-    #provide some co-ord (fixed) to these base-station nodes.
-    $HA set X_ 1.000000000000
-    $HA set Y_ 2.000000000000
-    $HA set Z_ 0.000000000000
-    
-    $FA set X_ 650.000000000000
-    $FA set Y_ 600.000000000000
-    $FA set Z_ 0.000000000000
-    
-    # create a mobilenode that would be moving between HA and FA.
-    # note address of MH indicates its in the same domain as HA.
-    
-    set MH [$opt(rp)-create-mobile-node 0 1.0.2]
-    set HAaddress [AddrParams addr2id [$HA node-addr]]
-    [$MH set regagent_] set home_agent_ $HAaddress
-    
-    # movement of MH
-    $MH set Z_ 0.000000000000
-    $MH set Y_ 2.000000000000
-    $MH set X_ 2.000000000000
-    # starts to move towards FA
-    $ns_ at 100.000000000000 "$MH setdest 640.000000000000 610.000000000000 20.000000000000"
-    # goes back to HA
-    $ns_ at 200.000000000000 "$MH setdest 2.000000000000 2.000000000000 20.000000000000"
-    
-    # create links between wired and BaseStation nodes
-    $ns_ duplex-link $W(0) $W(1) 5Mb 2ms DropTail
-    $ns_ duplex-link $W(1) $HA 5Mb 2ms DropTail
-    $ns_ duplex-link $W(1) $FA 5Mb 2ms DropTail
-    
-    $ns_ duplex-link-op $W(0) $W(1) orient down
-    $ns_ duplex-link-op $W(1) $HA orient left-down
-    $ns_ duplex-link-op $W(1) $FA orient right-down
-    
-    # setup TCP connections between a wired node and the MH
-    puts "Loading connection pattern..."
-    $self create-tcp-traffic 0 $W(0) $MH 100.0
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $num_wireless_nodes } {incr i} {
-	$ns_ at $opt(stop).0000010 "$node_($i) reset";
-    }
-    $ns_ at $opt(stop).0000010 "$HA reset";
-    $ns_ at $opt(stop).0000010 "$FA reset";
-    
-    $ns_ at $opt(stop).21 "$self finish"
-    $ns_ at $opt(stop).20 "puts \"NS EXITING...\" ; "
-}
-
-Test/dsdv-wireless-mip instproc run {} {
-    $self instvar ns_ 
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-proc cmu-trace { ttype atype node } {
-	global ns tracefd sc
-    
-        set ns [Simulator instance]
-	if { $tracefd == "" } {
-		return ""
-	}
-	set T [new CMUTrace/$ttype $atype]
-	$T target [$ns set nullAgent_]
-	$T attach $tracefd
-        $T set src_ [$node id]
-
-        $T node $node
-
-	return $T
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	#puts "finishing.."
-	
-	puts "finishing.."
-	exit 0
-}
-
-
-
-
-TestSuite instproc create-god { nodes } {
-	global tracefd god_
-	$self instvar ns_
-
-	set god_ [new God]
-	$god_ num_nodes $nodes
-}
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-TestSuite instproc create-tcp-traffic {id src dst start} {
-    $self instvar ns_
-    set tcp_($id) [new Agent/TCP]
-    $tcp_($id) set class_ 2
-    set sink_($id) [new Agent/TCPSink]
-    $ns_ attach-agent $src $tcp_($id)
-    $ns_ attach-agent $dst $sink_($id)
-    $ns_ connect $tcp_($id) $sink_($id)
-    set ftp_($id) [new Application/FTP]
-    $ftp_($id) attach-agent $tcp_($id)
-    $ns_ at $start "$ftp_($id) start"
-    
-}
-
-
-TestSuite instproc create-udp-traffic {id src dst start} {
-    $self instvar ns_
-    set udp_($id) [new Agent/UDP]
-    $ns_ attach-agent $src $udp_($id)
-    set null_($id) [new Agent/Null]
-    $ns_ attach-agent $dst $null_($id)
-    set cbr_($id) [new Application/Traffic/CBR]
-    $cbr_($id) set packetSize_ 512
-    $cbr_($id) set interval_ 4.0
-    $cbr_($id) set random_ 1
-    $cbr_($id) set maxpkts_ 10000
-    $cbr_($id) attach-agent $udp_($id)
-    $ns_ connect $udp_($id) $null_($id)
-    $ns_ at $start "$cbr_($id) start"
-
-}
-
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
-
-
-
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-tora.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-tora.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan-tora.tcl	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan-tora.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,276 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set minrto_ 1
-# default changed on 10/14/2004.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-#
-# Copyright (c) 1998 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-lan-tora.tcl,v 1.8 2006/01/24 23:00:08 sallyfloyd Exp $
-
-
-# This test suite is for validating wireless lans 
-# To run all tests: test-all-wireless-lan-tora
-# to run individual test:
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-lan.tcl
-#
-
-Class TestSuite
-
-Class Test/tora -superclass TestSuite
-#wireless model using TORA
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: dsdv dsr"
-	exit 1
-}
-
-
-proc default_options {} {
-    global opt
-    set opt(chan)	Channel/WirelessChannel
-    set opt(prop)	Propagation/TwoRayGround
-    set opt(netif)	Phy/WirelessPhy
-    set opt(mac)	Mac/802_11
-    set opt(ifq)	Queue/DropTail/PriQueue
-    set opt(ll)		LL
-    set opt(ant)        Antenna/OmniAntenna
-    set opt(x)		670 ;# X dimension of the topography
-    set opt(y)		670;# Y dimension of the topography
-    set opt(ifqlen)	50	      ;# max packet in ifq
-    set opt(seed)	0.0
-    set opt(tr)		temp.rands    ;# trace file
-    set opt(lm)         "off"          ;# log movement
-
-}
-
-
-# =====================================================================
-# Other default settings
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Agent/TCPSink set sport_	0
-Agent/TCPSink set dport_	0
-
-Agent/TCP set sport_		0
-Agent/TCP set dport_		0
-Agent/TCP set packetSize_	1460
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.2818
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	if {[string compare $testName_ "dsdv"] && \
-			[string compare $testName_ "tora"]} {
-		$ns_ set-address-format hierarchical
-		AddrParams set domain_num_ 3
-		lappend cluster_num 2 1 1
-		AddrParams set cluster_num_ $cluster_num
-		lappend eilastlevel 1 1 4 1
-		AddrParams set nodes_num_ $eilastlevel
-        }  
-
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-	
-	$ns_ trace-all $tracefd
-
-	$topo load_flatgrid $opt(x) $opt(y)
-
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-}
-
-Test/tora instproc init {} {
-	global opt node_ god_ chan topo
-	$self instvar ns_ testName_
-	set testName_       tora
-	set opt(rp)         tora
-	set opt(cp)		"../mobility/scene/cbr-3-test" 
-	set opt(sc)		"../mobility/scene/scen-3-test" 
-	set opt(nn)		3	      
-	set opt(stop)       200.0
-
-	$self next
-
-	#
-	# Create God
-	#
-	set god_ [create-god $opt(nn)]
-
-	$ns_ node-config -adhocRouting TORA \
-			-llType $opt(ll) \
-			-macType $opt(mac) \
-			-ifqType $opt(ifq) \
-			-ifqLen $opt(ifqlen) \
-			-antType $opt(ant) \
-			-propType $opt(prop) \
-			-phyType $opt(netif) \
-			-channel [new $opt(chan)] \
-			-topoInstance $topo \
-			-agentTrace ON \
-			-routerTrace ON \
-			-macTrace OFF \
-			-toraDebug OFF \
-			-movementTrace OFF
-	
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0            ;# disable random motion
-	}
-	puts "Loading connection pattern..."
-	source $opt(cp)
-    
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-	
-	$ns_ at $opt(stop) "puts \"NS EXITING...\" ; exit"
-}
-
-Test/tora instproc run {} {
-	$self instvar ns_
-	puts "Starting Simulation..."
-	$ns_ run
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-	puts "finishing.."
-	exit 0
-}
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-TestSuite instproc create-tcp-traffic {id src dst start} {
-    $self instvar ns_
-    set tcp_($id) [new Agent/TCP]
-    $tcp_($id) set class_ 2
-    set sink_($id) [new Agent/TCPSink]
-    $ns_ attach-agent $src $tcp_($id)
-    $ns_ attach-agent $dst $sink_($id)
-    $ns_ connect $tcp_($id) $sink_($id)
-    set ftp_($id) [new Application/FTP]
-    $ftp_($id) attach-agent $tcp_($id)
-    $ns_ at $start "$ftp_($id) start"
-}
-
-TestSuite instproc create-udp-traffic {id src dst start} {
-    $self instvar ns_
-    set udp_($id) [new Agent/UDP]
-    $ns_ attach-agent $src $udp_($id)
-    set null_($id) [new Agent/Null]
-    $ns_ attach-agent $dst $null_($id)
-    set cbr_($id) [new Application/Traffic/CBR]
-    $cbr_($id) set packetSize_ 512
-    $cbr_($id) set interval_ 4.0
-    $cbr_($id) set random_ 1
-    $cbr_($id) set maxpkts_ 10000
-    $cbr_($id) attach-agent $udp_($id)
-    $ns_ connect $udp_($id) $null_($id)
-    $ns_ at $start "$cbr_($id) start"
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan.txt ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan.txt
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-lan.txt	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-lan.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,54 +0,0 @@
-
-The wireless-lan test suite (test-suite-wireless-lan.tcl) consists of the following tests:
-
-    - an ad-hoc wireless network running dsdv routing protocol
-    - a wired-cum-wireless network (running dsdv)
-    - mobileIP
-
-***Note tests for DSR routing protocol was not added to the test-suite as their outputs are not consistent (events vary, even with the same random seed value) and thus could not be validated.
-
-1.Test/dsdv:
-Topology for the first test case (dsdv) consists of 50 mobilenodes forming a mulit-hop ad-hoc network. The node movements are defined in ~ns/tcl/mobility/scene/scen-670x670-50-600-20-0. The traffic patterns are defined in ~ns/tcl/mobility/scene/cbr-50-20-4-512. With the help of destination sequence distance vector routing, the nodes comunicate and exchange data among themselves. The sim runs for 1000s.
-
-
-2.Test/dsdv-wired-cum-wireless:
-The topology used in this case is as follows -
-
-
-                   0    o W1(0.0.0)                 WIRED NODES
-                        |
-                   1    o W2 (0.1.0)
-                       / \
-                      /   \                    
---*--*--*--*--*-  2  o     o  3  base-stn nodes  --*-*-*-*-*-*-*-
-         (2.0.0)   BS1      BS2 (2.0.0)              
-                       o 5
-               4  o    WL2 (2.0.2)  
-         (2.0.1) WL1             
-                       o 6 (2.0.3)        WIRELESS NODES
-                      WL3
-
-Nodes 2 & 3 are base-station nodes that act as gateways between the wired and wireless domain. nodes 4, 5 & 6 are mobilenodes. nodes 1 & 2 are wired.
-Node 4 and 6 communicate thru node 5 who can hear the base-station node BS1. TCP flows are established between node 0 and node 6. BS2 doesnot really take any part in this test.
-
-
-3.Test/dsdv-wireless-mip:
-The topology in this case is -
-
-
-                       o W1                 WIRED NODES
-                       |
-                       o W2
-                      / \
-                     /   \                    
---*--*--*--*--*--*- o     o MIP enabled base-stn nodes --*-*-*-*-*-*-*
-                   HA      FA               
-                       o
-                      WL                 MIP enabled WIRELESS NODE 
-					 MOVING
-		                         IN BETWEEN HA AND FA.
-
-
-The HA ad FA represents two different domains and the MH moves between them. A tcp flow established between W1 and MH. Initially MH is within range of HA and receives all pkts directly through the HA. Then at time=100, MH starts to move away from HA towards FA. All pkts now reaching HA is tunnelled towards FA that decapsulates and hands pkt over to MH. At time=200, the MH again starts to come back to HA. This simulation shows the working of mobileIP. There are some interim periods that the MH may not be within the range of either the FA or HA and thus may be dropping pkts destined to W1, temporarily. This is what we see as a "warning: Route to base_stn not known: dropping pkt"
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-shadowing.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-shadowing.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-shadowing.tcl	2015-03-04 17:49:02.806750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-shadowing.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,326 +0,0 @@
-                                                                             #
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-#
-
-
-# This test suite is for validating shadowing propagation model
-# To run all tests: test-all-wireless-shadowing
-# to run individual test:
-# ns test-suite-wireless-shadowing.tcl dsdv
-# ns test-suite-wireless-shadowing.tcl dsr
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-shadowing.tcl
-
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-
-Class TestSuite
-
-# wireless model using destination sequence distance vector
-Class Test/dsdv -superclass TestSuite
-
-# wireless model using dynamic source routing
-Class Test/dsr -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: dsdv dsr"
-	exit 1
-}
-
-
-proc default_options {} {
-	global opt
-	set opt(chan)	Channel/WirelessChannel
-	set opt(prop)	Propagation/Shadowing
-	set opt(netif)	Phy/WirelessPhy
-	set opt(mac)	Mac/802_11
-	set opt(ifq)	Queue/DropTail/PriQueue
-	set opt(ll)	LL
-	set opt(ant)    Antenna/OmniAntenna
-	set opt(x)	670 ;# X dimension of the topography
-	set opt(y)	670;# Y dimension of the topography
-	set opt(ifqlen)	50	      ;# max packet in ifq
-	set opt(seed)	0.0
-	set opt(tr)	temp.rands    ;# trace file
-	set opt(lm)	"off"          ;# log movement
-
-}
-
-
-# =====================================================================
-# Other default settings
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set bandwidth_ 2e6
-Phy/WirelessPhy set Pt_ 0.28183815
-Phy/WirelessPhy set freq_ 914e+6
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop_
-	global node_ god_
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	if {[string compare $testName_ "dsdv"] && \
-			[string compare $testName_ "dsr"]} {
-		$ns_ node-config -addressType hierarchical
-		AddrParams set domain_num_ 3
-		lappend cluster_num 2 1 1
-		AddrParams set cluster_num_ $cluster_num
-		lappend eilastlevel 1 1 4 1
-		AddrParams set nodes_num_ $eilastlevel
-	}
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-	
-	set prop_	[new $opt(prop)]
-	$prop_ set pathlossExp_ 2.0
-	$prop_ set std_db_ 4.0
-	$prop_ set dist0_ 1.0
-	$prop_ seed predef 0
-	
-	$ns_ trace-all $tracefd
-	
-	$topo load_flatgrid $opt(x) $opt(y)
-	
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-
-	set god_ [create-god $opt(nn)]
-}
-
-Test/dsdv instproc init {} {
-    global opt node_ god_ chan topo prop_
-    $self instvar ns_ testName_
-    set testName_       dsdv
-    set opt(rp)         dsdv
-    set opt(cp)		"../mobility/scene/cbr-50-20-4-512"
-    set opt(sc)		"../mobility/scene/scen-670x670-50-600-20-0" ;
-    set opt(nn)		50	
-    set opt(stop)       500.0
-
-    $self next
-
-    $ns_ node-config -adhocRouting DSDV \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propInstance $prop_ \
-                         -phyType $opt(netif) \
-			 -channel [new $opt(chan)] \
-			 -topoInstance $topo \
-                         -agentTrace ON \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -movementTrace OFF
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0          ;# disable random motion
-    }
-    puts "Loading connection pattern..."
-    source $opt(cp)
-
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-
-    $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/dsdv instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-Test/dsr instproc init {} {
-    global opt node_ god_ chan topo prop_
-    $self instvar ns_ testName_
-    set testName_       dsr
-    set opt(rp)         dsr
-    set opt(ifq)        CMUPriQueue
-    set opt(cp)         "../mobility/scene/cbr-50-20-4-512"
-    set opt(sc)         "../mobility/scene/scen-670x670-50-600-20-0" ;
-    set opt(nn)         50
-    set opt(stop)       500.0
-
-    $self next
-
-    $ns_ node-config -adhocRouting $opt(rp) \
-                         -llType $opt(ll) \
-                         -macType $opt(mac) \
-                         -ifqType $opt(ifq) \
-                         -ifqLen $opt(ifqlen) \
-                         -antType $opt(ant) \
-                         -propInstance $prop_ \
-                         -phyType $opt(netif) \
-			 -channel [new $opt(chan)] \
-			 -topoInstance $topo \
-                         -agentTrace ON \
-                         -routerTrace OFF \
-                         -macTrace OFF \
-                         -movementTrace OFF
-
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-                set node_($i) [$ns_ node]
-                $node_($i) random-motion 0          ;# disable random motion
-    }
-    puts "Loading connection pattern..."
-    source $opt(cp)
-
-    puts "Loading scenario file..."
-    source $opt(sc)
-    puts "Load complete..."
-
-    #
-    # Tell all the nodes when the simulation ends
-    #
-    for {set i 0} {$i < $opt(nn) } {incr i} {
-	$ns_ at $opt(stop).000000001 "$node_($i) reset";
-    }
-
-    $ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-    $ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/dsr instproc run {} {
-	$self instvar ns_
-	puts "Starting Simulation..."
-	$ns_ run
-}
-
-TestSuite instproc finish-dsr {} {
-	$self instvar ns_
-	global quiet opt tracefd
-
-	$ns_ flush-trace
-	flush $tracefd
-	close $tracefd
-
-        set tracefd	[open $opt(tr) r]
-        set tracefd2    [open $opt(tr).w w]
-
-        while { [eof $tracefd] == 0 } {
-
-	    set line [gets $tracefd]
-	    set items [split $line " "]
-
-	    set time [lindex $items 1]
-	
-	    set times [split $time "."]
-	    set time1 [lindex $times 0]
-	    set time2 [lindex $times 1]
-	    set newtime2 [string range $time2 0 3]
-	    set time $time1.$newtime2
-	
-	    set newline [lreplace $line 1 1 $time]
-
-	    puts $tracefd2 $newline
-
-	}
-	
-	close $tracefd
-	close $tracefd2
-
-	exec mv $opt(tr).w $opt(tr)
-	
-	puts "finishing.."
-	exit 0
-}
-
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	puts "finishing.."
-	exit 0
-}
-
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	
-	
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
-
-
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-tdma.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-tdma.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wireless-tdma.tcl	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wireless-tdma.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,378 +0,0 @@
-#
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-wireless-tdma.tcl,v 1.6 2005/06/14 19:43:49 haldar Exp $
-
-# This test suite is for validating wireless TDMA mac layer protocol 
-# To run all tests: test-all-wireless-tdma
-# to run individual test:
-# ns test-suite-wireless-tdma.tcl dsdv
-# ns test-suite-wireless-tdma.tcl dsr
-#
-# To view a list of available test to run with this script:
-# ns test-suite-wireless-tdma.tcl
-
-Class TestSuite
-
-# wireless model using destination sequence distance vector
-Class Test/dsdv -superclass TestSuite
-
-# wireless model using dynamic source routing
-Class Test/dsr -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: dsdv dsr"
-	exit 1
-}
-
-
-proc default_options {} {
-	global opt
-	set opt(chan)	Channel/WirelessChannel
-	set opt(prop)	Propagation/TwoRayGround
-	set opt(netif)	Phy/WirelessPhy
-	set opt(mac)	Mac/Tdma
-	set opt(ifq)	Queue/DropTail/PriQueue
-	set opt(ll)	LL
-	set opt(ant)    Antenna/OmniAntenna
-	set opt(x)	670 ;# X dimension of the topography
-	set opt(y)	670;# Y dimension of the topography
-	set opt(ifqlen)	50	      ;# max packet in ifq
-	set opt(seed)	0.0
-	set opt(tr)	temp.rands    ;# trace file
-	set opt(lm)     "off"          ;# log movement
-	set opt(energy) EnergyModel
-}
-
-
-# =====================================================================
-# Other default settings
-
-set AgentTrace			ON
-set RouterTrace			OFF
-set MacTrace			OFF
-
-#Mac/Tdma set slot_packet_len_	512
-#Mac/Tdma set max_node_num_	50
-
-LL set mindelay_		50us
-LL set delay_			25us
-LL set bandwidth_		0	;# not used
-
-Agent/Null set sport_		0
-Agent/Null set dport_		0
-
-Agent/CBR set sport_		0
-Agent/CBR set dport_		0
-
-Queue/DropTail/PriQueue set Prefer_Routing_Protocols    1
-
-# unity gain, omni-directional antennas
-# set up the antennas to be centered in the node and 1.5 meters above it
-Antenna/OmniAntenna set X_ 0
-Antenna/OmniAntenna set Y_ 0
-Antenna/OmniAntenna set Z_ 1.5
-Antenna/OmniAntenna set Gt_ 1.0
-Antenna/OmniAntenna set Gr_ 1.0
-
-# Initialize the SharedMedia interface with parameters to make
-# it work like the 914MHz Lucent WaveLAN DSSS radio interface
-Phy/WirelessPhy set CPThresh_ 10.0
-Phy/WirelessPhy set CSThresh_ 1.559e-11
-Phy/WirelessPhy set RXThresh_ 3.652e-10
-Phy/WirelessPhy set Rb_ 2*1e6
-Phy/WirelessPhy set Pt_ 0.28183815
-Phy/WirelessPhy set freq_ 914e+6 
-Phy/WirelessPhy set L_ 1.0
-
-# =====================================================================
-
-TestSuite instproc init {} {
-	global opt tracefd topo chan prop 
-	global node_ god_ 
-	$self instvar ns_ testName_
-	set ns_         [new Simulator]
-	if {[string compare $testName_ "dsdv"] && \
-			[string compare $testName_ "dsr"]} {
-		$ns_ set-address-format hierarchical
-		AddrParams set domain_num_ 3
-		lappend cluster_num 2 1 1
-		AddrParams set cluster_num_ $cluster_num
-		lappend eilastlevel 1 1 4 1
-		AddrParams set nodes_num_ $eilastlevel
-        } 
-	#set chan	[new $opt(chan)]
-	#set prop	[new $opt(prop)]
-	set topo	[new Topography]
-	set tracefd	[open $opt(tr) w]
-
-	$topo load_flatgrid $opt(x) $opt(y)
-	#$prop topography $topo
-	$ns_ trace-all $tracefd
-
-	#
-	# Create God
-	#
-	$self create-god $opt(nn)
-	#
-	# log the mobile nodes movements if desired
-	#
-	if { $opt(lm) == "on" } {
-		$self log-movement
-	}
-	
-	puts $tracefd "M 0.0 nn:$opt(nn) x:$opt(x) y:$opt(y) rp:$opt(rp)"
-	puts $tracefd "M 0.0 sc:$opt(sc) cp:$opt(cp) seed:$opt(seed)"
-	puts $tracefd "M 0.0 prop:$opt(prop) ant:$opt(ant)"
-}
-
-
-Test/dsdv instproc init {} {
-    global opt topo node_ god_
-    $self instvar ns_ testName_
-    set testName_       dsdv
-    set opt(rp)         DSDV
-    set opt(cp)		"../mobility/scene/cbr-50-20-4-512" 
-    set opt(sc)		"../mobility/scene/scen-670x670-50-600-20-0" ;
-    set opt(nn)		50	      
-    set opt(stop)       1000.0
-    
-	$self next
-	
-	$ns_ node-config -adhocRouting $opt(rp) \
-	-llType $opt(ll) \
-	-macType $opt(mac) \
-	-ifqType $opt(ifq) \
-	-ifqLen $opt(ifqlen) \
-	-antType $opt(ant) \
-	-propType $opt(prop) \
-	-phyType $opt(netif) \
-	-channel [new $opt(chan)] \
-	-topoInstance $topo \
-	-energyModel $opt(energy) \
-	-macTrace ON \
-	-rxPower 0.3 \
-	-txPower 0.6 \
-	-initialEnergy 0.455
-	
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		set node_($i) [$ns_ node]	
-		$node_($i) random-motion 0		;# disable random motion
-	}
-	
-	puts "Loading connection pattern..."
-	source $opt(cp)
-	
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-	
-	#
-	# Tell all the nodes when the simulation ends
-	#
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		$ns_ at $opt(stop).000000001 "$node_($i) reset";
-	}
-	
-	$ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;" 
-	$ns_ at $opt(stop).1 "$self finish"
-}
-
-Test/dsdv instproc run {} {
-	$self instvar ns_
-	puts "Starting Simulation..."
-	$ns_ run
-}
-
-Test/dsr instproc init {} {
-	global opt topo node_ god_
-	$self instvar ns_ testName_
-	set testName_       dsr
-	set opt(rp)         DSR
-	set opt(ifq)        CMUPriQueue
-	set opt(cp)         "../mobility/scene/cbr-50-20-4-512"
-	set opt(sc)         "../mobility/scene/scen-670x670-50-600-20-0" ;
-	set opt(nn)         50
-	set opt(stop)       1000.0
-	
-	$self next
-	
-	$ns_ node-config -adhocRouting $opt(rp) \
-	    -llType $opt(ll) \
-	    -macType $opt(mac) \
-	    -ifqType $opt(ifq) \
-	    -ifqLen $opt(ifqlen) \
-	    -antType $opt(ant) \
-	    -propType $opt(prop) \
-	    -phyType $opt(netif) \
-	    -channel [new $opt(chan)] \
-	    -topoInstance $topo \
-	    -energyModel $opt(energy) \
-	    -macTrace ON \
-	    -rxPower 0.3 \
-	    -txPower 0.6 \
-	    -initialEnergy 0.455
-	
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		set node_($i) [$ns_ node]	
-		$node_($i) random-motion 0		;# disable random motion
-	}
-	
-	puts "Loading connection pattern..."
-	source $opt(cp)
-
-	puts "Loading scenario file..."
-	source $opt(sc)
-	puts "Load complete..."
-
-	#
-	# Tell all the nodes when the simulation ends
-	#
-	for {set i 0} {$i < $opt(nn) } {incr i} {
-		$ns_ at $opt(stop).000000001 "$node_($i) reset";
-	}
-
-	$ns_ at $opt(stop).000000001 "puts \"NS EXITING...\" ;"
-	$ns_ at $opt(stop).1 "$self finish"
-}
-
-TestSuite instproc finish-dsr {} {
-	$self instvar ns_
-	global quiet opt
-
-	$ns_ flush-trace
-        
-        set tracefd	[open $opt(tr) r]
-        set tracefd2    [open $opt(tr).w w]
-
-        while { [eof $tracefd] == 0 } {
-
-	    set line [gets $tracefd]
-	    set items [split $line " "]
-
-	    set time [lindex $items 1]
-	    
-	    set times [split $time "."]
-	    set time1 [lindex $times 0]
-	    set time2 [lindex $times 1]
-	    set newtime2 [string range $time2 0 3]
-	    set time $time1.$newtime2
-	    
-	    set newline [lreplace $line 1 1 $time] 
-
-	    puts $tracefd2 $newline
-
-	}
-	
-	close $tracefd
-	close $tracefd2
-
-	exec mv $opt(tr).w $opt(tr)
-
-	puts "finish.."
-	exit 0
-}
-
-Test/dsr instproc run {} {
-    $self instvar ns_
-    puts "Starting Simulation..."
-    $ns_ run
-}
-
-proc cmu-trace { ttype atype node } {
-	global ns tracefd
-    
-        set ns [Simulator instance]
-	if { $tracefd == "" } {
-		return ""
-	}
-	set T [new CMUTrace/$ttype $atype]
-	$T target [$ns set nullAgent_]
-	$T attach $tracefd
-        $T set src_ [$node id]
-
-        $T node $node
-
-	return $T
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global quiet
-
-	$ns_ flush-trace
-        #if { !$quiet } {
-        #        puts "running nam..."
-        #        exec nam temp.rands.nam &
-        #}
-	#puts "finishing.."
-	
-	puts "finishing.."
-	exit 0
-}
-
-TestSuite instproc create-god { nodes } {
-	global tracefd god_
-	$self instvar ns_
-
-	set god_ [new God]
-	$god_ num_nodes $nodes
-}
-
-TestSuite instproc log-movement {} {
-	global ns
-	$self instvar logtimer_ ns_
-
-	set ns $ns_
-	source ../mobility/timer.tcl
-	Class LogTimer -superclass Timer
-	LogTimer instproc timeout {} {
-		global opt node_;
-		for {set i 0} {$i < $opt(nn)} {incr i} {
-			$node_($i) log-movement
-		}
-		$self sched 0.1
-	}
-
-	set logtimer_ [new LogTimer]
-	$logtimer_ sched 0.1
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-global argv arg0
-default_options
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-WLtutorial.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-WLtutorial.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-WLtutorial.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-WLtutorial.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,400 +0,0 @@
-# -*-	Mode:tcl; tcl-indent-level:8; tab-width:8; indent-tabs-mode:t -*-
-Agent/TCP set tcpTick_ 0.1
-# The default for tcpTick_ is being changed to reflect a changing reality.
-Agent/TCP set rfc2988_ false
-# The default for rfc2988_ is being changed to true.
-Agent/TCP set SetCWRonRetransmit_ true
-# Changing the default value.
-Mac/802_11 set bugFix_timer_ false;     # default changed 2006/1/30
-#
-# Copyright (c) 1998,2000 University of Southern California.
-# All rights reserved.                                            
-#                                                                
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.  The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-# $Header: /cvsroot/nsnam/ns-2/tcl/test/test-suite-WLtutorial.tcl,v 1.18 2006/01/30 21:27:52 mweigle Exp $
-
-###########################################################################
-# IMPORTANT NOTE:
-# If you are updating any part of this WLtutorial test-suite, please
-# update the examples (wireless1.tcl, wireless2.tcl & wireless3.tcl) used
-# for wireless tutorial under vint/tutorial/example directory.
-###########################################################################
-
-# This test suite is for validating wireless examples used in Greis' tutorial
-# To run all tests: test-all-WLtutorial
-# to run individual test:
-# ns test-suite-WLtutorial.tcl wireless1
-# ns test-suite-WLtutorial.tcl wireless2
-# ns test-suite-WLtutorial.tcl wireless3
-# ....
-#
-# To view a list of available test to run with this script:
-# ns test-suite-WLtutorial.tcl
-#
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Agent/TCP set useHeaders_ false
-# The default is being changed to useHeaders_ true.
-Agent/TCP set windowInit_ 1
-# The default is being changed to 2.
-Agent/TCP set singledup_ 0
-# The default is being changed to 1
-Agent/TCP set minrto_ 0
-# The default is being changed to minrto_ 1
-Agent/TCP set syn_ false
-Agent/TCP set delay_growth_ false
-# In preparation for changing the default values for syn_ and delay_growth_.
-
-Class TestSuite
-
-# tutorial example of a simple wireless scenario
-Class Test/wireless1 -superclass TestSuite
-
-# tutorial example involving a wired-cum-wireless scenario
-Class Test/wireless2 -superclass TestSuite
-
-# tutorial example on wirelessMIP
-Class Test/wireless3 -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <tests> "
-        puts "Valid Tests: wireless1 wireless2 wireless3"
-	exit 1
-}
-
-proc default-options {} {
-global opt
-set opt(chan)       Channel/WirelessChannel
-set opt(prop)       Propagation/TwoRayGround
-set opt(netif)      Phy/WirelessPhy
-set opt(mac)        Mac/802_11
-set opt(ifq)        Queue/DropTail/PriQueue
-set opt(ll)         LL
-set opt(ant)        Antenna/OmniAntenna
-set opt(x)              670   
-set opt(y)              670   
-set opt(ifqlen)         50           
-set opt(tr)          temp.rands
-}    
-
-# =====================================================================
-
-Test/wireless1 instproc init {} {
-  global opt
-  $self instvar ns_
-	set opt(adhocRouting)   DSR
-	set opt(ifq)            CMUPriQueue
-  set opt(nn)             3             
-  set opt(cp)             "../mobility/scene/cbr-3-test"
-  set opt(sc)             "../mobility/scene/scen-3-test"
-  set opt(stop)           400.0           
-    
-  set ns_         [new Simulator]  
-  set topo        [new Topography] 
-
-  set tracefd     [open $opt(tr) w]
-  $ns_ trace-all $tracefd
-
-  $topo load_flatgrid $opt(x) $opt(y)
-  set god_ [create-god $opt(nn)]
-
-  $ns_ node-config -adhocRouting $opt(adhocRouting) \
-                 -llType $opt(ll) \
-                 -macType $opt(mac) \
-                 -ifqType $opt(ifq) \
-                 -ifqLen $opt(ifqlen) \
-                 -antType $opt(ant) \
-                 -propInstance [new $opt(prop)] \
-                 -phyType $opt(netif) \
-                 -channel [new $opt(chan)] \
-                 -topoInstance $topo \
-                 -agentTrace ON \
-                 -routerTrace OFF \
-                 -macTrace OFF
-   for {set i 0} {$i < $opt(nn) } {incr i} {
-        set node_($i) [$ns_ node]
-        $node_($i) random-motion 0              ;# disable random motion
- }
-  puts "Loading connection pattern..."
-  source $opt(cp) 
-  puts "Loading scenario file..."
-  source $opt(sc) 
-  
-  for {set i 0} {$i < $opt(nn)} {incr i} {
-    $ns_ initial_node_pos $node_($i) 20
-  }
-  for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).000000001 "$node_($i) reset";
-  }
-  $ns_ at  $opt(stop).000000001 "puts \"NS EXITING...\" ; $ns_ halt"  
-}
-
-Test/wireless1 instproc run {} {
-	$self instvar ns_
-	puts "Starting Simulation..."
-	$ns_ run
-}
-
-Test/wireless2 instproc init {} {
-  global opt
-  $self instvar ns_
-  set opt(nn)             3                       
-  set opt(adhocRouting)   DSDV                      
-  set opt(cp)             ""                        
-  set opt(sc)             "../mobility/scene/scen-3-test"   
-  set opt(stop)           250                           
-  set num_wired_nodes      2
-  set num_bs_nodes         1
-
-  set ns_   [new Simulator]
-
-  # set up for hierarchical routing
-  $ns_ node-config -addressType hierarchical
-  AddrParams set domain_num_ 2           
-  lappend cluster_num 2 1                
-  AddrParams set cluster_num_ $cluster_num
-  lappend eilastlevel 1 1 4              
-  AddrParams set nodes_num_ $eilastlevel 
-
-  set tracefd  [open $opt(tr) w]
-  $ns_ trace-all $tracefd
-
-  set topo   [new Topography]
-  $topo load_flatgrid $opt(x) $opt(y)
-  create-god [expr $opt(nn) + $num_bs_nodes]
-
-  #create wired nodes
-  set temp {0.0.0 0.1.0}        
-  for {set i 0} {$i < $num_wired_nodes} {incr i} {
-      set W($i) [$ns_ node [lindex $temp $i]]
-  } 
-  $ns_ node-config -adhocRouting $opt(adhocRouting) \
-                 -llType $opt(ll) \
-                 -macType $opt(mac) \
-                 -ifqType $opt(ifq) \
-                 -ifqLen $opt(ifqlen) \
-                 -antType $opt(ant) \
-                 -propInstance [new $opt(prop)] \
-                 -phyType $opt(netif) \
-                 -channel [new $opt(chan)] \
-                 -topoInstance $topo \
-                 -wiredRouting ON \
-                 -agentTrace ON \
-                 -routerTrace OFF \
-                 -macTrace OFF
-
-  set temp {1.0.0 1.0.1 1.0.2 1.0.3}   
-  set BS(0) [$ns_ node [lindex $temp 0]]
-  $BS(0) random-motion 0 
-  $BS(0) set X_ 1.0
-  $BS(0) set Y_ 2.0
-  $BS(0) set Z_ 0.0
-
-  #configure for mobilenodes
-  $ns_ node-config -wiredRouting OFF
-
-  for {set j 0} {$j < $opt(nn)} {incr j} {
-    set node_($j) [ $ns_ node [lindex $temp \
-            [expr $j+1]] ]
-    $node_($j) base-station [AddrParams addr2id [$BS(0) node-addr]]
-  }
-  #create links between wired and BS nodes
-  $ns_ duplex-link $W(0) $W(1) 5Mb 2ms DropTail
-  $ns_ duplex-link $W(1) $BS(0) 5Mb 2ms DropTail
-  $ns_ duplex-link-op $W(0) $W(1) orient down
-  $ns_ duplex-link-op $W(1) $BS(0) orient left-down
-
-  # setup TCP connections
-  set tcp1 [new Agent/TCP]
-  $tcp1 set class_ 2
-  set sink1 [new Agent/TCPSink]
-  $ns_ attach-agent $node_(0) $tcp1
-  $ns_ attach-agent $W(0) $sink1
-  $ns_ connect $tcp1 $sink1
-  set ftp1 [new Application/FTP]
-  $ftp1 attach-agent $tcp1
-  $ns_ at 160 "$ftp1 start"
-
-  for {set i 0} {$i < $opt(nn)} {incr i} {
-      $ns_ initial_node_pos $node_($i) 20
-   }
-
-  for {set i } {$i < $opt(nn) } {incr i} {
-      $ns_ at $opt(stop).0000010 "$node_($i) reset";
-  }
-  $ns_ at $opt(stop).0000010 "$BS(0) reset";
-
-  $ns_ at $opt(stop).1 "puts \"NS EXITING...\" ; $ns_ halt"
-}
-
-Test/wireless2 instproc run {} {
-  $self instvar ns_
-  puts "Starting Simulation..."
-  $ns_ run 
-}
-  
-Test/wireless3 instproc init {} {
-  global opt
-  $self instvar ns_
-  set opt(nn)             1                      
-  set opt(adhocRouting)   DSDV                   
-  set opt(cp)             ""                             
-  set opt(sc)             ""
-  set opt(stop)           250                            
-  set num_wired_nodes      2
-  set num_bs_nodes         2
-
-  # create simulator instance
-  set ns_   [new Simulator]
-
-  # set up for hierarchical routing
-  $ns_ node-config -addressType hierarchical
-  AddrParams set domain_num_ 3           
-  lappend cluster_num 2 1 1              
-  AddrParams set cluster_num_ $cluster_num
-  lappend eilastlevel 1 1 2 1            
-  AddrParams set nodes_num_ $eilastlevel 
-
-  set tracefd  [open $opt(tr) w]
-  $ns_ trace-all $tracefd
-
-  set topo   [new Topography]
-  $topo load_flatgrid $opt(x) $opt(y)
-  # 2 for the FA / the HA
-  create-god [expr $opt(nn)  + 2]
-
-  #create wired nodes
-  set temp {0.0.0 0.1.0}           
-  for {set i 0} {$i < $num_wired_nodes} {incr i} {
-      set W($i) [$ns_ node [lindex $temp $i]]
-  }
-  #Configure for ForeignAgent and HomeAgent nodes
-  $ns_ node-config -mobileIP ON \
-                 -adhocRouting $opt(adhocRouting) \
-                 -llType $opt(ll) \
-                 -macType $opt(mac) \
-                 -ifqType $opt(ifq) \
-                 -ifqLen $opt(ifqlen) \
-                 -antType $opt(ant) \
-                 -phyType $opt(netif) \
-                 -propInstance [new $opt(prop)] \
-                 -channel [new $opt(chan)] \
-                 -topoInstance $topo \
-                 -wiredRouting ON \
-                 -agentTrace ON \
-                 -routerTrace OFF \
-                 -macTrace OFF
-
-  # Create HA and FA
-  set HA [$ns_ node 1.0.0]
-  set FA [$ns_ node 2.0.0]     
-  $HA random-motion 0
-  $FA random-motion 0
-  # Position (fixed) for base-station nodes (HA & FA).
-  $HA set X_ 1.000000000000
-  $HA set Y_ 2.000000000000
-  $HA set Z_ 0.000000000000
-
-  $FA set X_ 650.000000000000
-  $FA set Y_ 600.000000000000
-  $FA set Z_ 0.000000000000
-
-  $ns_ node-config -wiredRouting OFF
-  set MH [$ns_ node 1.0.2]
-  set node_(0) $MH
-  set HAaddress [AddrParams addr2id [$HA node-addr]]
-  [$MH set regagent_] set home_agent_ $HAaddress
-
-  $MH set Z_ 0.000000000000
-  $MH set Y_ 2.000000000000
-  $MH set X_ 2.000000000000
-
-  # MH starts to move towards FA
-  $ns_ at 100.000000000000 "$MH setdest 640.000000000000 \
-	610.000000000000 20.000000000000"
-  # MH goes back to HA
-  $ns_ at 200.000000000000 "$MH setdest 2.000000000000 \
-	2.000000000000 20.000000000000"
-
-  # create links between wired and BaseStation nodes
-  $ns_ duplex-link $W(0) $W(1) 5Mb 2ms DropTail
-  $ns_ duplex-link $W(1) $HA 5Mb 2ms DropTail
-  $ns_ duplex-link $W(1) $FA 5Mb 2ms DropTail
-
-  $ns_ duplex-link-op $W(0) $W(1) orient down
-  $ns_ duplex-link-op $W(1) $HA orient left-down
-  $ns_ duplex-link-op $W(1) $FA orient right-down 
-
-  set tcp1 [new Agent/TCP]
-  $tcp1 set class_ 2
-  set sink1 [new Agent/TCPSink]
-  $ns_ attach-agent $W(0) $tcp1
-  $ns_ attach-agent $MH $sink1
-  $ns_ connect $tcp1 $sink1
-  set ftp1 [new Application/FTP]
-  $ftp1 attach-agent $tcp1
-  $ns_ at 100.0 "$ftp1 start"
-
-  for {set i 0} {$i < $opt(nn)} {incr i} {
-    $ns_ initial_node_pos $node_($i) 20
-  }
-  for {set i 0} {$i < $opt(nn) } {incr i} {
-    $ns_ at $opt(stop).0000010 "$node_($i) reset"
-  }
-  $ns_ at $opt(stop).0000010 "$HA reset"
-  $ns_ at $opt(stop).0000010 "$FA reset"
-  $ns_ at $opt(stop).1 "puts \"NS EXITING...\" ; $ns_ halt"
-}
-
-Test/wireless3 instproc finish {} {
-	$self instvar ns_
-	$ns_ flush-trace
-	exit 0
-}
-
-Test/wireless3 instproc run {} {
-  $self instvar ns_
-  puts "Starting Simulation..."	 
-  $ns_ run     
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	
-	
-	$t run
-}
-
-global argv arg0
-default-options
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wpan.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wpan.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-wpan.tcl	2015-03-04 17:49:02.798750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-wpan.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,421 +0,0 @@
-#! /bin/sh
-#
-# Copyright (c) 2003-2004 Samsung Advanced Institute of Technology and
-# The City University of New York. All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#      This product includes software developed by the Joint Lab of Samsung 
-#      Advanced Institute of Technology and The City University of New York.
-# 4. Neither the name of Samsung Advanced Institute of Technology nor of 
-#    The City University of New York may be used to endorse or promote 
-#    products derived from this software without specific prior written 
-#    permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE JOINT LAB OF SAMSUNG ADVANCED INSTITUTE
-# OF TECHNOLOGY AND THE CITY UNIVERSITY OF NEW YORK ``AS IS'' AND ANY EXPRESS 
-# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
-# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN 
-# NO EVENT SHALL SAMSUNG ADVANCED INSTITUTE OR THE CITY UNIVERSITY OF NEW YORK 
-# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
-# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
-# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
-# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP RTP TCP ARP LL Mac LRWPAN AODV ;
-# hdrs reqd for validation
-
-# FOR UPDATING GLOBAL DEFAULTS:
-Agent/TCP set precisionReduce_ false ;   # default changed on 2006/1/24.
-Agent/TCP set rtxcur_init_ 6.0 ;      # Default changed on 2006/01/21
-Agent/TCP set updated_rttvar_ false ;  # Variable added on 2006/1/21
-Class TestSuite
-
-Class Test/wpan -superclass TestSuite
-
-proc usage {} {
-	global argv0
-	puts stderr "usage: ns $argv0 <test> "
-	exit 1
-}
-
-proc default_values {} {
-	global val
-	set val(chan)           Channel/WirelessChannel    ;# channel type
-	set val(prop)           Propagation/TwoRayGround   ;# radio-propagation model
-	set val(netif)          Phy/WirelessPhy/802_15_4
-	set val(mac)            Mac/802_15_4
-	set val(ifq)            Queue/DropTail/PriQueue    ;# interface queue type
-	set val(ll)             LL                         ;# link layer type
-	set val(ant)            Antenna/OmniAntenna        ;# antenna model
-	set val(ifqlen)         50                         ;# max packet in ifq
-	set val(nn)             21                         ;# number of mobilenodes
-	set val(rp)             AODV                       ;# routing
-	set val(x)              50
-	set val(y)              50
-	set val(tr)             temp.rands                 ;# trace file
-	set val(traffic)        mix                        ;# traffic (mix/cbr/poisson/ftp)
-
-	# For propagation model 'TwoRayGround'
-	set dist(5m)  7.69113e-06
-	set dist(9m)  2.37381e-06
-	set dist(10m) 1.92278e-06
-	set dist(11m) 1.58908e-06
-	set dist(12m) 1.33527e-06
-	set dist(13m) 1.13774e-06
-	set dist(14m) 9.81011e-07
-	set dist(15m) 8.54570e-07
-	set dist(16m) 7.51087e-07
-	set dist(20m) 4.80696e-07
-	set dist(25m) 3.07645e-07
-	set dist(30m) 2.13643e-07
-	set dist(35m) 1.56962e-07
-	set dist(40m) 1.20174e-07
-	Phy/WirelessPhy set CSThresh_ $dist(12m)
-	Phy/WirelessPhy set RXThresh_ $dist(12m)
-}
-
-TestSuite instproc topology {} {
-	global node_
-
-	$node_(0) set X_ 20.0 
-	$node_(0) set Y_ 25.0 
-	$node_(0) set Z_ 0.0 
-
-	$node_(1) set X_ 10.0 
-	$node_(1) set Y_ 25.0
-	$node_(1) set Z_ 0.0 
-
-	$node_(2) set X_ 10.0 
-	$node_(2) set Y_ 15.0 
-	$node_(2) set Z_ 0.0 
-
-	$node_(3) set X_ 10.0 
-	$node_(3) set Y_ 5.0 
-	$node_(3) set Z_ 0.0 
-
-	$node_(4) set X_ 0.0 
-	$node_(4) set Y_ 15.0 
-	$node_(4) set Z_ 0.0 
-
-	$node_(5) set X_ 0.0 
-	$node_(5) set Y_ 25.0 
-	$node_(5) set Z_ 0.0 
-
-	$node_(6) set X_ 0.0 
-	$node_(6) set Y_ 35.0 
-	$node_(6) set Z_ 0.0
- 
-	$node_(7) set X_ 10.0 
-	$node_(7) set Y_ 35.0 
-	$node_(7) set Z_ 0.0 
-
-	$node_(8) set X_ 10.0 
-	$node_(8) set Y_ 45.0 
-	$node_(8) set Z_ 0.0
- 
-	$node_(9) set X_ 20.0
-	$node_(9) set Y_ 35.0 
-	$node_(9) set Z_ 0.0
- 
-	$node_(10) set X_ 20.0 
-	$node_(10) set Y_ 45.0 
-	$node_(10) set Z_ 0.0 
-
-	$node_(11) set X_ 30.0 
-	$node_(11) set Y_ 35.0 
-	$node_(11) set Z_ 0.0 
-
-	$node_(12) set X_ 30.0 
-	$node_(12) set Y_ 45.0 
-	$node_(12) set Z_ 0.0 
-
-	$node_(13) set X_ 30.0 
-	$node_(13) set Y_ 25.0 
-	$node_(13) set Z_ 0.0 
-
-	$node_(14) set X_ 40.0 
-	$node_(14) set Y_ 25.0 
-	$node_(14) set Z_ 0.0 
-
-	$node_(15) set X_ 40.0 
-	$node_(15) set Y_ 35.0 
-	$node_(15) set Z_ 0.0 
-
-	$node_(16) set X_ 30.0 
-	$node_(16) set Y_ 15.0 
-	$node_(16) set Z_ 0.0 
-
-	$node_(17) set X_ 40.0 
-	$node_(17) set Y_ 15.0 
-	$node_(17) set Z_ 0.0 
-
-	$node_(18) set X_ 30.0 
-	$node_(18) set Y_ 5.0 
-	$node_(18) set Z_ 0.0 
-
-	$node_(19) set X_ 20.0 
-	$node_(19) set Y_ 15.0 
-	$node_(19) set Z_ 0.0 
-
-	$node_(20) set X_ 20.0 
-	$node_(20) set Y_ 5.0 
-	$node_(20) set Z_ 0.0
-}
-
-TestSuite instproc cbrtraffic { src dst interval starttime } {
-	global node_
-	$self instvar ns_
-	set udp_($src) [new Agent/UDP]
-	eval $ns_ attach-agent \$node_($src) \$udp_($src)
-	set null_($dst) [new Agent/Null]
-	eval $ns_ attach-agent \$node_($dst) \$null_($dst)
-	set cbr_($src) [new Application/Traffic/CBR]
-	eval \$cbr_($src) set packetSize_ 80
-	eval \$cbr_($src) set interval_ $interval
-	eval \$cbr_($src) set random_ 0
-	#eval \$cbr_($src) set maxpkts_ 10000
-	eval \$cbr_($src) attach-agent \$udp_($src)
-	eval $ns_ connect \$udp_($src) \$null_($dst)
-	$ns_ at $starttime "$cbr_($src) start"
-}
-
-TestSuite instproc poissontraffic { src dst interval starttime } {
-	global node_
-	$self instvar ns_
-	set udp($src) [new Agent/UDP]
-	eval $ns_ attach-agent \$node_($src) \$udp($src)
-	set null($dst) [new Agent/Null]
-	eval $ns_ attach-agent \$node_($dst) \$null($dst)
-	set expl($src) [new Application/Traffic/Exponential]
-	eval \$expl($src) set packetSize_ 70
-	eval \$expl($src) set burst_time_ 0
-	eval \$expl($src) set idle_time_ [expr $interval*1000.0-70.0/100]ms	;# idle_time + pkt_tx_time = interval
-	eval \$expl($src) set rate_ 100k
-	eval \$expl($src) attach-agent \$udp($src)
-	eval $ns_ connect \$udp($src) \$null($dst)
-	$ns_ at $starttime "$expl($src) start"
-}
-
-TestSuite instproc ftptraffic { src dst starttime } {
-	global node_
-	$self instvar ns_
-	set tcp($src) [new Agent/TCP]
-	eval \$tcp($src) set packetSize_ 60
-	set sink($dst) [new Agent/TCPSink]
-	eval $ns_ attach-agent \$node_($src) \$tcp($src)
-	eval $ns_ attach-agent \$node_($dst) \$sink($dst)
-	eval $ns_ connect \$tcp($src) \$sink($dst)
-	set ftp($src) [new Application/FTP]
-	eval \$ftp($src) attach-agent \$tcp($src)
-	$ns_ at $starttime "$ftp($src) start"
-}
-
-TestSuite instproc init {} {
-	global val tracefd topo
-	$self instvar ns_
-
-	set ns_		[new Simulator]
-	set tracefd     [open ./$val(tr) w]
-	$ns_ trace-all $tracefd
-	set topo       [new Topography]
-	$topo load_flatgrid $val(x) $val(y)
-}
-
-TestSuite instproc finish {} {
-	$self instvar ns_
-	global tracefd
-
-	$ns_ flush-trace
-	close $tracefd
-	exit 0
-}
-
-Test/wpan instproc init {} {
-	global val node_ god_ chan topo
-	$self instvar ns_ testName_
-
-	set testName_ wpan
-	$self next
-
-	set god_ [create-god $val(nn)]
-	set chan [new $val(chan)]
-
-	# configure node
-	$ns_ node-config -adhocRouting $val(rp) \
-			-llType $val(ll) \
-			-macType $val(mac) \
-			-ifqType $val(ifq) \
-			-ifqLen $val(ifqlen) \
-			-antType $val(ant) \
-			-propType $val(prop) \
-			-phyType $val(netif) \
-			-topoInstance $topo \
-			-agentTrace OFF \
-			-routerTrace OFF \
-			-macTrace ON \
-			-movementTrace OFF \
-	                #-energyModel "EnergyModel" \
-	                #-initialEnergy 1 \
-	                #-rxPower 0.3 \
-	                #-txPower 0.3 \
-			-channel $chan
-
-	for {set i 0} {$i < $val(nn) } {incr i} {
-		set node_($i) [$ns_ node]
-		$node_($i) random-motion 0
-	}
-
-	$self topology
-
-	# === actual test begins here =======================
-
-	set appTime1         	10.3
-	set appTime2         	10.6
-	set stopTime            100
-
-	# start PAN coordinator (beacon enabled):
-	#  -- active channel scan and channel selection
-	#  -- PAN coordinator startup
-	#  -- beacon transmission
-	$ns_ at 0.0	"$node_(0) sscs startPANCoord 1"	;# startPANCoord <txBeacon=1> <BO=3> <SO=3>
-	
-	# start non-beacon enabled coordinator:
-	#  -- active channel scan
-	#  -- channel selection and coordinator selection
-	#  -- association
-	#  -- beacon tracking and synchronization
-	$ns_ at 0.3	"$node_(1) sscs startDevice 1 1" 	;# startDevice <isFFD=1> <assoPermit=1> <txBeacon=0> <BO=3> <SO=3>
-	$ns_ at 1.3	"$node_(9) sscs startDevice 1 1"
-	$ns_ at 1.7	"$node_(13) sscs startDevice 1 1"
-	$ns_ at 2.3	"$node_(19) sscs startDevice 1 1"
-	
-	# start beacon enabled coordinator:
-	#  -- active channel scan
-	#  -- channel selection and coordinator selection
-	#  -- association
-	#  -- beacon tracking and synchronization
-	#  -- beacon transmission
-	$ns_ at 3.3	"$node_(2) sscs startDevice 1 1 1"
-	$ns_ at 3.5	"$node_(7) sscs startDevice 1 1 1"
-	$ns_ at 3.6	"$node_(11) sscs startDevice 1 1 1"
-	$ns_ at 3.8	"$node_(16) sscs startDevice 1 1 1"
-	
-	# start RFD (leaf node)
-	$ns_ at 4.3	"$node_(3) sscs startDevice 0 0"
-	
-	# start non-beacon enabled coordinator
-	$ns_ at 4.5	"$node_(6) sscs startDevice 1 1"
-	
-	# start FFD not supporting association
-	$ns_ at 4.8	"$node_(12) sscs startDevice 1 0"
-	$ns_ at 5.1	"$node_(17) sscs startDevice 1 0"
-	
-	# start non-beacon enabled coordinator
-	$ns_ at 5.6	"$node_(20) sscs startDevice 1 1"
-	$ns_ at 5.8	"$node_(5) sscs startDevice 1 1"
-	$ns_ at 6.0	"$node_(10) sscs startDevice 1 1"
-	$ns_ at 6.3	"$node_(14) sscs startDevice 1 1"
-	
-	# start FFD not supporting association
-	$ns_ at 6.8	"$node_(18) sscs startDevice 1 0"
-	
-	# start RFD (leaf node)
-	$ns_ at 7.0	"$node_(4) sscs startDevice 0 0"
-	$ns_ at 7.3	"$node_(8) sscs startDevice 0 0"
-	$ns_ at 7.7	"$node_(15) sscs startDevice 0 0"
-	
-	# stop beacon transmission (become non-beacon enabled coordinator)
-	$ns_ at $appTime1 "$node_(0) sscs stopBeacon"
-	$ns_ at $appTime1 "$node_(16) sscs stopBeacon"
-	
-	# change beacon order and superframe order
-	$ns_ at $appTime1 "$node_(2) sscs startBeacon 4 4"
-	$ns_ at $appTime1 "$node_(7) sscs startBeacon 4 4"
-	
-	# setup cbr/poisson/mix traffic flows between nodes:
-	#  -- LQD
-	#  -- CCA, CSMA/CA and slotted CSMA/CA
-	#  -- filtering
-	if { ("$val(traffic)" == "mix") || ("$val(traffic)" == "cbr") || ("$val(traffic)" == "poisson") } {
-	   if { "$val(traffic)" == "mix" } {
-	   	set trafficName "cbr + poisson"
-	   	set traffic1 cbr
-	   	set traffic2 poisson
-	   } else {
-	   	set trafficName $val(traffic)
-	   	set traffic1 $val(traffic)
-	   	set traffic2 $val(traffic)
-	   }
-	   $self ${traffic1}traffic 3 18 0.2 $appTime1
-	   $self ${traffic2}traffic 9 17 0.2 $appTime2
-	}
-	
-	# setup ftp traffic flows between nodes:
-	#  -- LQD
-	#  -- CCA, CSMA/CA and slotted CSMA/CA
-	#  -- filtering
-	if { "$val(traffic)" == "ftp" } {
-	   $self ftptraffic 3 18 $appTime1
-	   $self ftptraffic 9 17 $appTime2
-	}
-	
-	# failure handling
-	#  -- orphaning
-	#  -- coordinator realignment
-	#  -- reassociation
-	$ns_ at [expr $appTime1 + 2.0] "Mac/802_15_4 wpanCmd link-down 0 19"
-	$ns_ at [expr $appTime2 + 3.0] "$node_(2) node-down"
-	$ns_ at [expr $appTime1 + 8.0] "Mac/802_15_4 wpanCmd link-up 0 19"
-	$ns_ at [expr $appTime2 + 10.0] "$node_(2) node-up"
-
-	# begin to use indrect data transmission
-	$ns_ at [expr $appTime1 + 60.0] "Mac/802_15_4 wpanCmd txOption 4"	;# 0x02=GTS; 0x04=Indirect; 0x00=Direct (only for 802.15.4-unaware upper layer app. packet)
-
-	# tell nodes when the simulation ends
-	for {set i 0} {$i < $val(nn) } {incr i} {
-	    $ns_ at $stopTime "$node_($i) reset";
-	}
-
-	$ns_ at $stopTime.1 "$self finish"
-}
-
-Test/wpan instproc run {} {
-	$self instvar ns_
-	$ns_ run
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	
-	$t run
-}
-
-global argv arg0
-default_values
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-xcp.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-xcp.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/test-suite-xcp.tcl	2015-03-04 17:49:02.814750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/test-suite-xcp.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,676 +0,0 @@
-#
-# Copyright (c) 2004-2006 University of Southern California.
-# All rights reserved.						  
-#								 
-# Redistribution and use in source and binary forms are permitted
-# provided that the above copyright notice and this paragraph are
-# duplicated in all such forms and that any documentation, advertising
-# materials, and other materials related to such distribution and use
-# acknowledge that the software was developed by the University of
-# Southern California, Information Sciences Institute.	The name of the
-# University may not be used to endorse or promote products derived from
-# this software without specific prior written permission.
-# 
-# THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
-# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
-# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
-# 
-
-# To run all tests: test-all-xcp
-# to run individual test:
-# ns test-suite-xcp.tcl simple-xcp
-# ns test-suite-xcp.tcl simple-full-xcp
-
-# To view a list of available test to run with this script:
-# ns test-suite-xcp.tcl
-
-# This test-suite validate xcp congestion control scenarios along with
-# xcp-tcp mixed flows through routers.
-
-remove-all-packet-headers       ; # removes all except common
-add-packet-header Flags IP TCP XCP ; # hdrs reqd for validation
-
-set fullxcp 1
-set halfxcp 1
-set validtests ""
-
-if {![TclObject is-class Agent/TCP/Reno/XCP]} {
-	puts "xcp (half) module is not present; validation skipped"
-	set halfxcp 0
-} else {
-	set validtests "simple-xcp $validtests"
-}
-if {![TclObject is-class Agent/TCP/FullTcp/Newreno/XCP]} {
-	puts "xcp (full) module is not present; validation skipped"
-	set fullxcp 0
-	if { $halfxcp == 0 } {
-		exit 0; #will skip entire suite
-	}
-} else {
-	set validtests "$validtests simple-full-xcp"
-	# The following tests aren't validated because
-	#   xcp-tcp isn't really testing anything useful and
-	#   parking-lot-topo utilization plot is useless
-	#set validtests "$validtests xcp-tcp parking-lot-topo"
-}
-
-Class TestSuite
-
-proc usage {} {
-	global argv0 validtests
-	puts stderr "usage: ns $argv0 <tests> "
-	puts "Valid Tests: $validtests"
-	exit 1
-}
-
-
-TestSuite instproc init {} {
-	
-	$self instvar ns_ rtg_ tracefd_ qType_ qSize_ BW_ delay_ \
-	    tracedFlows_
-	set ns_ [new Simulator]
-	$ns_ use-scheduler Heap
-	set rtg_ [new RNG]
-	$rtg_ seed 472904
-}
-
-TestSuite instproc create-Bottleneck {} {
-	global R0 R1 Bottleneck rBottleneck l rl all_links
-	$self instvar ns_ qType_ qSize_ BW_ delay_
-	
-	# create bottleneck nodes
-	set R0 [$ns_ node]
-	set R1 [$ns_ node]
-	
-	$ns_ duplex-link $R0 $R1 [set BW_]Mb [set delay_]ms $qType_
-	$ns_ queue-limit $R0 $R1 $qSize_
-	$ns_ queue-limit $R1 $R0 $qSize_
-
-	# Give a global handle to the Bottleneck Queue to allow 
-	# setting the RED paramters
-
-	set	 Bottleneck  [[$ns_ link $R0 $R1] queue] 
-	set	 rBottleneck [[$ns_ link $R1 $R0] queue]
-
-	set	 l  [$ns_ link $R0 $R1]	 
-	set	 rl [$ns_ link $R1 $R0]
-
-	set all_links "$l $rl "
-}
-
-TestSuite instproc create-sidelinks {numSideLinks deltaDelay} {
-	global R0 R1 all_links n
-	$self instvar ns_ BW_ delay_ qSize_ qType_
-	
-	set i 0
-	while { $i < $numSideLinks } {
-		set n($i)  [$ns_ node]
-		$ns_ duplex-link $n($i) $R0 [set BW_]Mb [expr $delay_ + $i * $deltaDelay]ms $qType_
-
-		$ns_ queue-limit $n($i)	 $R0  $qSize_
-		$ns_ queue-limit $R0 $n($i)   $qSize_
-		set  q$i   [[$ns_ link $n($i)  $R0] queue] 
-		set  rq$i  [[$ns_ link $R0 $n($i)] queue]
-		set  l$i    [$ns_ link $n($i)  $R0] 
-		set  rl$i   [$ns_ link $R0 $n($i)]
-		set all_links "$all_links [set l$i] [set rl$i] "
-		incr i
-	}
-
-}
-
-TestSuite instproc create-string-topology {numHops BW_list d_list qtype_list qsize_list } {
-	$self instvar ns_
-	global quiet n all_links
-	set numNodes [expr $numHops + 1 ]
-	
-	# first sanity check
-    if { [llength $BW_list] !=  [llength $d_list] || [llength $qtype_list] !=  [llength $qsize_list]} {
-	error "Args sizes don't match with $numHops hops"
-	if { [llength $BW_list] != $numHops || $numHops != [llength $qsize_list]} {
-	    puts "error in using proc create-string-topology"
-	    error "Args sizes don't match with $numHops hops"
-	}
-    }
-	# compute the pipe assuming delays are in msec and BWs are in Mbits
-    set i 0; set forwarddelay 0; global minBW; set minBW [lindex $BW_list 0];
-    while { $i < $numHops } {
-	set forwarddelay [expr $forwarddelay + [lindex $d_list $i]]
-	if {$minBW > [lindex $BW_list $i] } { set $minBW [lindex $BW_list $i] }
-	incr i
-    }
-	# pipe in bytes,assuming pktsize as 1000bytes,BW in Mbps,delay in ms
-	set pipe [expr round([expr ($minBW * 2.0 * $forwarddelay)/8.0 ])]
-	
-	set i 0
-	while { $i < $numNodes } {
-		set n($i) [$ns_ node]
-		incr i
-	}
-	set all_links ""
-	set  i 0 
-	while { $i < $numHops } {
-		set qsize [lindex $qsize_list $i]
-		set bw    [lindex $BW_list $i]
-		set delay [lindex $d_list $i]
-		set qtype [lindex $qtype_list $i]
-		if {$quiet == 0} {
-			puts "$i bandwidth $bw"
-		}
-		if {$qsize == 0} { set qsize $pipe}
-		$ns_ duplex-link [set n($i)] [set n([expr $i +1])] [set bw]Mb [set delay]ms $qtype
-		$ns_ queue-limit [set n($i)] [set n([expr $i + 1])] $qsize
-		$ns_ queue-limit [set n([expr $i + 1])] [set n($i)] $qsize
-		
-		# Give a global handle to the Queues to allow setting the RED paramters
-		set  l$i   [$ns_ link [set n($i)] [set n([expr $i + 1])]]
-		set  rl$i  [$ns_ link [set n([expr $i + 1])] [set n($i)]]
-		set all_links "$all_links [set l$i] [set rl$i] "
-		global q$i rq$i
-		set q$i  [[$ns_ link [set n($i)] [set n([expr $i + 1])]] queue]
-		set rq$i [[$ns_ link [set n([expr $i + 1])] [set n($i)]] queue]
-		incr i
-	}
-}
-
-TestSuite instproc process-parking-lot-data {what name flows PlotTime} {
-	global quiet
-	set tracedFlows $flows
-	exec rm -f temp.rands
-	set f [open temp.rands w]
-	
-	foreach i $tracedFlows {
-		exec rm -f temp.c temp.out
-		exec touch temp.c temp.out
-		set result [exec awk -v PlotTime=$PlotTime -v what=$what {
-			{
-				if (($1 == what) && ($2 > PlotTime)) {
-					print $2, $3 >> "temp.c";
-				}
-			}
-		} ft_red_q$i.tr ]
-			
-		exec awk -v L=$i \
-		    {BEGIN {sum=0.0; f=0;} {sum=sum+$2;f=f+1} \
-			 END {printf("%d %.2g\n", L+1, sum/f);} } \
-		    "temp.c" >> "temp.out"
-	
-		exec cat temp.out >@ $f
-		flush $f
-	}
-	close $f
-	if {$quiet == 0} {
-		exec xgraph -m -x "link ID" -y $name temp.rands &
-	}
-}
-
-
-TestSuite instproc post-process {what PlotTime} {
-	global quiet
-	$self instvar tracedFlows_ src_
-	exec rm -f temp.rands
-	set f [open temp.rands w]
-	
-	foreach i $tracedFlows_ {
-		exec rm -f temp.c 
-		exec touch temp.c
-		set result [exec awk -v PlotTime=$PlotTime -v what=$what {
-			{
-				if (($6 == what) && ($1 > PlotTime)) {
-				    if ((what == "throughput"))
-                                        print $1, ($7 * 8) >> "temp.c";
-                                    else
-                                  	print $1, $7 >> "temp.c";
-				}
-			}
-		} xcp$i.tr ]
-		
-		puts $f \"$what$i
-		exec cat temp.c >@ $f
-		puts $f "\n"
-		flush $f
-	}
-	close $f
-	if {$quiet == 0} {
-		exec xgraph -nl -m -x time -y $what temp.rands &
-	}
-}
-
-
-TestSuite instproc finish {} {
-	$self instvar ns_ tracefd_ tracedFlows_ src_ qtraces_
-	if [info exists tracedFlows_] {
-		foreach i $tracedFlows_ {
-			set file [[set src_($i)] set tcpTrace_]
-			if {[info exists file]} {
-				flush $file
-				close $file
-			}	
-		}
-	}
-
-	if {[info exists tracefd_]} {
-		flush $tracefd_
-		close $tracefd_
-	}
-	if {[info exists qtraces_]} {
-		foreach file $qtraces_ {
-			if {[info exists file]} {
-				flush $file
-				close $file
-			}
-		}
-	}
-	$ns_ halt
-}
-
-Class GeneralSender  -superclass Agent 
-
-#   otherparams are "startTime TCPclass .."
-
-GeneralSender instproc init { ns id srcnode dstnode otherparams } {
-	global quiet
-	$self next
-	$self instvar tcp_ id_ ftp_ snode_ dnode_ tcp_rcvr_ tcp_type_
-	set id_ $id
-	
-	if { [llength $otherparams] > 1 } {
-		set TCP [lindex $otherparams 1]
-	} else { 
-		puts stderr "undefined transport protocol type"
-		exit 1
-	}
-	
-	switch -exact $TCP {
-		TCP/FullTcp/Newreno/XCP {
-			set TCPSINK "TCP/FullTcp/Newreno/XCP"
-		} 
-		TCP/FullTcp/Newreno {
-			set TCPSINK "TCP/FullTcp/Newreno"
-		}
-		TCP/Reno/XCP {
-			set TCPSINK "TCPSink/XCPSink"
-		}
-		TCP/Reno {
-			set TCPSINK "TCPSink"
-		}
-		default {
-			puts stderr "unsupported protocol $TCP"
-			exit 1
-		}
-	}
-	
-	if { [llength $otherparams] > 2 } {
-		set traffic_type [lindex $otherparams 2]
-	} else {
-		set traffic_type FTP
-	}
-	
-	set	  tcp_type_ $TCP
-	set	  tcp_ [new Agent/$TCP]
-	set	  tcp_rcvr_ [new Agent/$TCPSINK]
-	$tcp_ set  packetSize_ 1000	  
-	$tcp_ set  segsize_ 1000
-	$tcp_ set  class_  $id
-
-	switch -exact $traffic_type {
-		FTP {
-			set traf_ [new Application/FTP]
-			$traf_ attach-agent $tcp_
-		}
-		EXP {
-			
-			set traf_ [new Application/Traffic/Exponential]
-			$traf_ set packetSize_ 1000
-			$traf_ set burst_time_ 250ms
-			$traf_ set idle_time_ 250ms
-			$traf_ set rate_ 10Mb
-			$traf_ attach-agent $tcp_
-		}
-		default {
-			puts "unsupported traffic\n"
-			exit 1
-		}
-	}
-	$ns	  attach-agent $srcnode $tcp_
-	$ns	  attach-agent $dstnode $tcp_rcvr_
-	$ns	  connect $tcp_	 $tcp_rcvr_
-        $tcp_rcvr_ listen;
-
-	set	  startTime [lindex $otherparams 0]
-	$ns	  at $startTime "$traf_ start"
-
-	if {$quiet == 0} {
-		puts  "initialized Sender $id_ at $startTime"
-	}
-}
-
-
-GeneralSender instproc trace-xcp parameters {
-	$self instvar tcp_ id_ tcpTrace_
-	set ftracetcp$id_ [open  xcp$id_.tr w]
-	set tcpTrace_ [set ftracetcp$id_]
-	$tcp_ attach-trace $tcpTrace_
-	if { -1 < [lsearch $parameters cwnd]  } { $tcp_ tracevar cwnd_ }
-	if { -1 < [lsearch $parameters seqno] } { $tcp_ tracevar t_seqno_ }
-	if { -1 < [lsearch $parameters ackno] } { $tcp_ tracevar ack_ }
-	if { -1 < [lsearch $parameters rtt]	 } { $tcp_ tracevar rtt_ }
-	if { -1 < [lsearch $parameters ssthresh]  } { $tcp_ tracevar ssthresh_ }
-	if { -1 < [lsearch $parameters throughput]  } { $tcp_ tracevar throughput_ }
-}
-
-
-Class Test/simple-xcp -superclass TestSuite
-
-Test/simple-xcp instproc init {} {
-	global halfxcp
-	if { $halfxcp == 0 } { exit 0 }
-	$self instvar ns_ testName_ qType_ qSize_ BW_ delay_ nXCPs_ \
- 	    SimStopTime_ tracedFlows_
-
- 	set testName_ simple-xcp
- 	set qType_		XCP
- 	set BW_			20; # in Mb/s
- 	set delay_		10; # in ms
- 	set qSize_		[expr round([expr ($BW_ / 8.0) * 4 * $delay_])];#set buffer to the pipe size
- 	set SimStopTime_	30
- 	set nXCPs_		3
- 	set tracedFlows_	"0 1 2"
- 	$self next 
-}
-
-Test/simple-xcp instproc get-tcpType {} {
-	return 	"TCP/Reno/XCP"
-}
-
-Test/simple-xcp instproc run {} {
- 	global R1 n all_links Bottleneck quiet
- 	$self instvar ns_ SimStopTime_ nXCPs_ qSize_ delay_ rtg_ \
- 	    tracedFlows_ src_ allchan_
-
- 	set numsidelinks 3
- 	set deltadelay 0.0
-	
- 	$self create-Bottleneck
- 	$self create-sidelinks $numsidelinks $deltadelay
-
- 	foreach link $all_links {
- 		set queue [$link queue]
- 		if {[$queue info class] == "Queue/XCP"} {
- 			$queue set-link-capacity [[$link set link_] set bandwidth_];  
- 		}
- 	}
-
-	# added for troubleshooting purposes - Sally
-	if {$quiet == "false"} {
-		set allchan_ [open all.tr w]
-		$ns_ trace-all $allchan_
-	}
-
- 	# Create sources:
- 	set i 0
- 	while { $i < $nXCPs_  } {
- 		set StartTime [expr $i * 10]
- 		set src_($i) [new GeneralSender $ns_ $i [set n($i)] $R1 "$StartTime [$self get-tcpType]"]
-		set pktSize_  1000
- 		[[set src_($i)] set tcp_]  set	 packetSize_ $pktSize_
-		[[set src_($i)] set tcp_]  set   segsize_ $pktSize_
- 		[[set src_($i)] set tcp_]  set	 window_     [expr $qSize_]
- 		incr i
- 	}
-	
- 	# trace bottleneck queue, if needed
- 	#foreach queue_name "Bottleneck" {
-	#set queue [set "$queue_name"]
-	#if {[$queue info class] == "Queue/XCP"} {
-	# $queue attach $tracefd_
- 	#	} 
- 	#}
-	
- 	# trace sources
- 	foreach i $tracedFlows_ {
- 		#[set src_($i)] trace-xcp "cwnd"
-		[set src_($i)] trace-xcp "throughput"
- 	}
-	if {$quiet == "false"} {
-		$ns_ at $SimStopTime_ "close $allchan_"
-	}
-       
- 	$ns_ at $SimStopTime_ "$self finish"
- 	$ns_ run
-	
- 	#$self post-process cwnd_ 0.0
- 	$self post-process throughput 0.0
-}
-
-Class Test/simple-full-xcp -superclass Test/simple-xcp
-
-Test/simple-full-xcp instproc init {} {
-	global fullxcp
-	if { $fullxcp == 0 } { exit 0 }
- 	$self set testName_ simple-full-xcp
- 	$self next 
-}
-
-Test/simple-full-xcp instproc get-tcpType {} {
-	return 	"TCP/FullTcp/Newreno/XCP"
-}
-
-#disabled on 05/27/06
- Class Test/xcp-tcp -superclass TestSuite
-
-Test/xcp-tcp instproc init {} {
-	global halfxcp
-	if { $halfxcp == 0 } { exit 0 }
-	$self instvar ns_ testName_ qType_ qSize_ BW_ delay_ nXCPs_ \
-	    SimStopTime_ tracedFlows_
-
-	# set RED parameters for TCP queue
-	Queue/RED set maxthresh_ [expr 0.8 * [Queue set limit_]]
-	Queue/RED set thresh_ [expr 0.6 * [Queue set limit_]]
-	Queue/RED set q_weight_ 0.001
-	Queue/RED set linterm_ 10
-	
-	set testName_   xcp-tcp
-	set qType_	XCP
-	set BW_		0; # in Mb/s
-	set delay_	10; # in ms
-	set qSize_      [expr round([expr ($BW_ / 8.0) * 4 * $delay_])];#set buffer to the pipe size
-	set SimStopTime_	  30
-	set nXCPs_		  3
-	set tracedFlows_	  "0 1 2 3"
-
-	$self next
-}
-
-Test/xcp-tcp instproc run {} {
-	global R1 n all_links Bottleneck
-	$self instvar ns_ tracefd_ SimStopTime_ nXCPs_ qSize_ delay_ rtg_ \
-	    tracedFlows_ src_
-	
-	Queue/XCP set tcp_xcp_on_ 1
-	set numsidelinks 4
-	set deltadelay 0.0
-	
-	$self create-Bottleneck
-	$self create-sidelinks $numsidelinks $deltadelay
-
-	foreach link $all_links {
-		set queue [$link queue]
-		if {[$queue info class] == "Queue/XCP"} {
-			$queue set-link-capacity [[$link set link_] set bandwidth_];  
-		}
-	}
-	
-	# Create sources:
-	set i 0
-	while { $i < $nXCPs_  } {
-		set StartTime [expr [$rtg_ integer 1000] * 0.001 * (0.01 * $delay_) + $i  * 0.0] 
-		set src_($i) [new GeneralSender $ns_ $i [set n($i)] $R1 "$StartTime TCP/Reno/XCP"]
-		set pktSize_              1000
-		[[set src_($i)] set tcp_]  set	 packetSize_ $pktSize_
-		[[set src_($i)] set tcp_]  set	 window_     [expr $qSize_ * 10]
-		incr i
-	}
-	
-	set StartTime [expr [$rtg_ integer 1000] * 0.001 * (0.01 * $delay_) + $i  * 0.0] 
-	set src_($i) [new GeneralSender $ns_ $i [set n($i)] $R1 "$StartTime TCP/Reno"]
-	set pktSize_              1000
-	[[set src_($i)] set tcp_]  set	 packetSize_ $pktSize_
-	[[set src_($i)] set tcp_]  set	 window_     [expr $qSize_ * 10]
-	
-	
-	# trace sources
-	foreach i $tracedFlows_ {
-		[set src_($i)] trace-xcp "cwnd"
-	}
-	
-	$ns_ at $SimStopTime_ "$self finish"
-	$ns_ run
-
-	$self post-process cwnd_ 0.0
-
-}
-
-#disabled on 05/27/06
- Class Test/parking-lot-topo -superclass TestSuite
-# This is a downsized version of Dina's original test. We use around 30 flows
-# compared to 300 flows in the original version.
-
-Test/parking-lot-topo instproc init {} {
-	global halfxcp
-	if { $halfxcp == 0 } { exit 0 }
-   	$self instvar ns_ testName_ delay_ BW_list_ qType_list_ delay_list_ qSize_list_ nTCPsPerHop_list_ rTCPs_ nAllHopsTCPs_ qEffective_RTT_ numHops_ SimStopTime_ qSize_
-	
-   	set testName_   parking-lot-topo
-   	set qType_	XCP
-   	set BW_	        30;                 #in Mb/s
-   	set BBW_         [expr $BW_ / 2.0]  ; #BW of bottleneck
-   	set delay_	10;                 #in ms
-   	set qSize_      [expr round([expr ($BW_ / 8.0) * 2.0 * $delay_ * 4.5])];
-   	set SimStopTime_	  20
-   	set qEffective_RTT_        [expr  20 * $delay_ * 0.001]
-   	set nAllHopsTCPs_          10
-   	set numHops_               9
-   	set BW_list_     " $BW_ $BW_ $BBW_ $BW_ $BW_ $BW_ $BW_ $BW_ $BW_"
-   	set qType_list_  " $qType_ $qType_  $qType_ $qType_  $qType_ $qType_ $qType_ $qType_ $qType_"
-   	set delay_list_  "$delay_ $delay_ $delay_ $delay_ $delay_ $delay_ $delay_ $delay_ $delay_"
-   	set qSize_list_  "$qSize_ $qSize_ $qSize_ $qSize_ $qSize_ $qSize_ $qSize_ $qSize_ $qSize_"
-   	set nTCPsPerHop_list_     "1 1 1 1 1 1 1 1 1"
-   	set rTCPs_                1; #traverse all of the reverse path
-
-   	$self next
-	
-}
-
-
-Test/parking-lot-topo instproc run {} {
-	$self instvar ns_ rtg_ numHops_ BW_list_ qType_list_ delay_ delay_list_ qSize_list_ nTCPsPerHop_list_ rTCPs_ nAllHopsTCPs_ qtraces_ qEffective_RTT_ SimStopTime_ qSize_
-	
-   	global n all_links
-	
-	#all except the first are lists
-   	$self create-string-topology $numHops_ $BW_list_ $delay_list_ $qType_list_ $qSize_list_;
-	
-   	 #set BW for xcp queue
-   	foreach link $all_links {
-   		set queue [$link queue]
-   		if {[$queue info class] == "Queue/XCP"} {
-   			$queue set-link-capacity [[$link set link_] set bandwidth_];  
-   		}
-   	}
-	
-	#Create sources: 1) Long TCPs
-   	set i 0
-   	while { $i < $nAllHopsTCPs_  } {
-   		set StartTime     [expr [$rtg_ integer 1000] * 0.001 * (0.01 * $numHops_ * $delay_)] 
-   		set src_($i)      [new GeneralSender $ns_ $i $n(0) [set n($numHops_)] "$StartTime TCP/Reno/XCP"]
-		
-   		[[set src_($i)] set tcp_]  set  window_     [expr $qSize_ * 10]
-   		incr i
-   	}
-
-   	 #2) jth Hop TCPs; start at j*1000
-   	set i 0;
-   	while {$i < $numHops_} {
-   		set j [expr (1000 * $i) + 1000 ]; 
-   		while { $j < [expr [lindex $nTCPsPerHop_list_ $i] + ($i + 1) * 1000]  } {
-   			set StartTime     [expr [$rtg_ integer 1000] * 0.001 * (0.01 * $numHops_ * $delay_)] 
-   			set src_($j)      [new GeneralSender $ns_ $j [set n($i)] [set n([expr $i+1])] "$StartTime TCP/Reno/XCP"]
-   			[[set src_($j)] set tcp_] set window_ [expr $qSize_ * 10]
-   			incr j
-   		}
-   		incr i   	}
-	
-   	 #3) reverse TCP; ids follow directly allhops TCPs
-
-	
-   	set i 0
-   	while {$i < $numHops_} {
-   		set l 0
-   		while { $l < $rTCPs_} {
-   			set s [expr $l + $nAllHopsTCPs_ + ( $i * $rTCPs_ ) ] 
-   			set StartTime     [expr [$rtg_ integer 1000] * 0.001 * (0.01 * $numHops_ * $delay_)+ 0.0] 
-   			set src_($s)      [new GeneralSender $ns_ $s [set n([expr $i + 1])] [set n($i)] "$StartTime TCP/Reno/XCP"]
-		
-   			[[set src_($s)] set tcp_] set window_ [expr $qSize_ * 10]
-   			incr l
-   		}
-   		incr i
-   	}
-
-   	 #Trace Queues
-   	set i 0;
-   	while { $i < $numHops_ } {
-   		set qtype [lindex $qType_list_ $i]
-   		global q$i rq$i
-   		foreach queue_name "q$i rq$i" {
-   			set queue [set "$queue_name"]
-   			switch $qtype {
-   				"XCP" {
-   					set qtrace [open ft_red_[set queue_name].tr w]
-   					$queue attach $qtrace
-					lappend qtraces_ $qtrace
-   				}
-   			}
-   		}
- 		#sample parameters at queue at a given time interval of qeffective_RTT
-   		foreach queue_name "q$i" {
-   			set queue [set "$queue_name"]
-   			$queue queue-sample-everyrtt $qEffective_RTT_
-   		}
-   		incr i
-   	}
-	
-   	$ns_ at $SimStopTime_ "$self finish"
-   	$ns_ run
-	
-   	set flows "0 1 2 3 4 5 6 7 8"
-	#use utilization as validation output
-	$self process-parking-lot-data "u" "Utilization" $flows 0.0
-	#$self process-parking-lot-data "q" "Average Queue" $flows 0.0
-
-
-}
-
-proc runtest {arg} {
-	global quiet
-	set quiet 0
-	
-	set b [llength $arg]
-	if {$b == 1} {
-		set test $arg
-	} elseif {$b == 2} {
-		set test [lindex $arg 0]
-		if {[lindex $arg 1] == "QUIET"} {
-			set quiet 1
-		}
-	} else {
-		usage
-	}
-	set t [new Test/$test]
-	$t run
-}
-
-global argv arg0
-runtest $argv
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/topologies-full-fixes.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/topologies-full-fixes.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/topologies-full-fixes.tcl	2015-03-04 17:49:02.794750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/topologies-full-fixes.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,770 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/topologies-full-fixes.tcl,v 1.1 2005/06/19 16:10:23 sfloyd Exp $
-#
-#
-# This test suite reproduces most of the tests from the following note:
-# Floyd, S., Simulator Tests. July 1995.  
-# URL ftp://ftp.ee.lbl.gov/papers/simtests.ps.Z.
-#
-# To run individual tests:
-# ns test-suite.tcl tahoe1
-# ns test-suite.tcl tahoe2
-# ...
-#
-
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-   $self instvar node_
-    set n1 [lindex $nodelist 0]
-    foreach n2 [lrange $nodelist 1 end] {
-	if ![info exists node_($n2)] {
-	    set node_($n2) [$ns node]
-	}
-	$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-	foreach opt $args {
-	    set cmd [lindex $opt 0]
-	    set val [lindex $opt 1]
-	    if {[llength $opt] > 2} {
-		set x1 [lindex $opt 2]
-		set x2 [lindex $opt 3]
-	    } else {
-		set x1 $n1
-		set x2 $n2
-	    }
-	    $ns $cmd $node_($x1) $node_($x2) $val
-	    $ns $cmd $node_($x2) $node_($x1) $val
-	}
-	set n1 $n2
-    }
-}
-
-SkelTopology instproc checkConfig {lclass ns} {
-    if {[$lclass info instprocs config] != "" &&		\
-	    [$self info class] == $lclass} {
-	$self config $ns
-    }
-}
-
-#
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-# Create a simple four node topology:
-#
-#	   s1
-#	     \ 
-#     8Mb,5ms \   0.8Mb,100ms
-#	        r1 --------- k1
-#     8Mb,5ms /
-#	     /
-#	   s2
-
-NodeTopology/4nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 100ms bottleneck.
-# Queue-limit on bottleneck is 6 packets.
-#
-Class Topology/net0 -superclass NodeTopology/4nodes
-Topology/net0 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0
-    $ns duplex-link-op $node_(k1) $node_(r1) queuePos 0
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-lossy -superclass NodeTopology/4nodes
-Topology/net0-lossy instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0
-    $ns duplex-link-op $node_(k1) $node_(r1) queuePos 0
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $errmodel set offset_ 1.0
-    $errmodel set period_ 25.0
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-lossy2 -superclass NodeTopology/4nodes
-Topology/net0-lossy2 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0
-    $ns duplex-link-op $node_(k1) $node_(r1) queuePos 0
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(k1) $node_(r1)]; # drops are on ACK path
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $errmodel set offset_ 1.0
-    $errmodel set period_ 25.0
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0- -superclass Topology/net0
-Topology/net0- instproc init ns {
-    $self next $ns
-    $self instvar node_ rtm_
-    set rtm_(r1:k1)  [$ns rtmodel Exponential {} $node_(r1) $node_(k1)]
-    set dynamicsTrace [open dyn.tr "w"]
-    [$ns link $node_(r1) $node_(k1)] trace-dynamics $ns $dynamicsTrace
-    [$ns link $node_(k1) $node_(r1)] trace-dynamics $ns $dynamicsTrace
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-Session -superclass Topology/net0
-Topology/net0-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 800Kb 100ms DropTail
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-DV -superclass Topology/net0
-Topology/net0-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 800Kb 100ms DropTail
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-DVm0 -superclass Topology/net0
-Topology/net0-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    Agent/rtProto/Direct set preference_ 200	;# Cf. tcl/ex/simple-eqp1.tcl
-
-    $self next $ns			;# now instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 800Kb 100ms DropTail {cost 2 r1 k1}
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-DVm1 -superclass Topology/net0
-Topology/net0-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    Agent/rtProto/Direct set preference_ 200	;# Cf. tcl/ex/simple-eqp1.tcl
-
-    $self next $ns			;# now instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 800Kb 100ms DropTail {cost 2 r1 k1}
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-#
-#
-# Links1 uses 10Mb, 5ms feeders, and a 1.5Mb 100ms bottleneck.
-# Queue-limit on bottleneck is 23 packets.
-#
-
-Class Topology/net1 -superclass NodeTopology/4nodes
-Topology/net1 instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail 
-    $ns duplex-link $node_(r1) $node_(k1) 1.5Mb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 23
-    $ns queue-limit $node_(k1) $node_(r1) 23
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0
-    $ns duplex-link-op $node_(k1) $node_(r1) queuePos 0
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-lossy -superclass NodeTopology/4nodes
-Topology/net1-lossy instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail 
-    $ns duplex-link $node_(r1) $node_(k1) 1.5Mb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 23
-    $ns queue-limit $node_(k1) $node_(r1) 23
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0
-    $ns duplex-link-op $node_(k1) $node_(r1) queuePos 0
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $errmodel set offset_ 1.0
-    $errmodel set period_ 25.0
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1- -superclass Topology/net1
-Topology/net1- instproc init ns {
-    $self next $ns
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Exponential {} $node_(r1) $node_(k1)]
-    set dynamicsTrace [open dyn.tr "w"]
-    [$ns link $node_(r1) $node_(k1)] trace-dynamics $ns $dynamicsTrace
-    [$ns link $node_(k1) $node_(r1)] trace-dynamics $ns $dynamicsTrace
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-Session -superclass Topology/net1
-Topology/net1-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 1.5Mb 100ms DropTail
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-DV -superclass Topology/net1
-Topology/net1-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 1.5Mb 100ms DropTail
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-DVm0 -superclass Topology/net1
-Topology/net1-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    Agent/rtProto/Direct set preference_ 200	;# Cf. tcl/ex/simple-eqp1.tcl
-
-    $self next $ns			;# now instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 1.5Mb 100ms DropTail {cost 2 r1 k1}
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-DVm1 -superclass Topology/net1
-Topology/net1-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    Agent/rtProto/Direct set preference_ 200	;# Cf. tcl/ex/simple-eqp1.tcl
-
-    $self next $ns			;# now instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 1.5Mb 100ms DropTail {cost 2 r1 k1}
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-#
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-#
-# Create a simple six node topology:
-#
-#        s1                 s3
-#         \                 /
-# 10Mb,2ms \  1.5Mb,20ms   / 10Mb,4ms
-#           r1 --------- r2
-# 10Mb,3ms /               \ 10Mb,5ms
-#         /                 \
-#        s2                 s4 
-#
-
-NodeTopology/6nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-}
-
-Class Topology/cbq1 -superclass NodeTopology/6nodes
-Topology/cbq1 instproc init ns {
-	$self next $ns
-
-	$self instvar node_
-	$ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail
-	$ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail
-	$ns duplex-link $node_(s3) $node_(r1) 10Mb 5ms DropTail
-	$ns duplex-link $node_(s4) $node_(r1) 10Mb 5ms DropTail
-	$ns simplex-link $node_(r2) $node_(r1) 1.5Mb 5ms DropTail
-	$ns queue-limit $node_(r2) $node_(r1) 20
-}
-
-Class Topology/cbq1-prr -superclass Topology/cbq1
-Topology/cbq1-prr instproc init ns {
-	$self next $ns
-
-	$self instvar node_ cbqlink_
-	$ns simplex-link $node_(r1) $node_(r2) 1.5Mb 5ms CBQ
-	set cbqlink_ [$ns link $node_(r1) $node_(r2)]
-}
-
-Class Topology/cbq1-wrr -superclass Topology/cbq1
-Topology/cbq1-wrr instproc init ns {
-	$self next $ns
-
-	$self instvar node_ cbqlink_
-	$ns simplex-link $node_(r1) $node_(r2) 1.5Mb 5ms CBQ/WRR
-	set cbqlink_ [$ns link $node_(r1) $node_(r2)]
-}
-
-Class Topology/net2 -superclass NodeTopology/6nodes
-Topology/net2 instproc init ns {
-    $self next $ns
-
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail 
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED 
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail 
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail 
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-lossy -superclass Topology/net2
-Topology/net2-lossy instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-}
-
-Class Topology/net2- -superclass Topology/net2
-Topology/net2- instproc init ns {
-    $self next $ns
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Exponential {} $node_(r1) $node_(r2)]
-    set dynamicsTrace [open dyn.tr "w"]
-    [$ns link $node_(r1) $node_(r2)] trace-dynamics $ns $dynamicsTrace
-    [$ns link $node_(r2) $node_(r1)] trace-dynamics $ns $dynamicsTrace
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-Session -superclass Topology/net2
-Topology/net2-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms DropTail \
-	    {queue-limit 25}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-DV -superclass Topology/net2
-Topology/net2-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms DropTail \
-	    {queue-limit 25}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-DVm0 -superclass Topology/net2
-Topology/net2-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms DropTail \
-	    {queue-limit 25} {cost 2 r1 r2}
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-DVm1 -superclass Topology/net2
-Topology/net2-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms DropTail \
-	    {queue-limit 25} {cost 2 r1 r2}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2RED-Session -superclass Topology/net2
-Topology/net2RED-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms RED \
-	    {queue-limit 25}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2RED-DV -superclass Topology/net2
-Topology/net2RED-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms RED \
-	    {queue-limit 25}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2RED-DVm0 -superclass Topology/net2
-Topology/net2RED-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms RED \
-	    {queue-limit 25} {cost 2 r1 r2}
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2RED-DVm1 -superclass Topology/net2
-Topology/net2RED-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms RED \
-	    {queue-limit 25} {cost 2 r1 r2}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-#
-
-Class NodeTopology/8nodes -superclass SkelTopology
-
-#
-# Create a simple eight node topology:
-#
-#        s1                 s3
-#         \      4  x       /
-# 10Mb,2ms \  1.5Mb,20ms   / 10Mb,4ms
-#           r1 -.--.--.- r4
-# 10Mb,3ms /               \ 10Mb,5ms
-#         /                 \
-#        s2                 s4 
-#
-# This topology is of interest when the 4 node spine is dynamic,
-# and 3 alternate nodes provide fallback paths.
-#
-
-NodeTopology/8nodes instproc init ns {
-    $self next
-    
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-    
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(r3) [$ns node]
-    set node_(r4) [$ns node]
-}
-
-Class Topology/net3 -superclass NodeTopology/8nodes
-Topology/net3 instproc init ns {
-    $self next $ns
-    
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail 
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED 
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(r2) $node_(r3) 1.5Mb 20ms DropTail 
-    $ns duplex-link $node_(r3) $node_(r4) 1.5Mb 20ms DropTail 
-    $ns duplex-link $node_(s3) $node_(r4) 10Mb 4ms DropTail 
-    $ns duplex-link $node_(s4) $node_(r4) 10Mb 5ms DropTail 
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r3) orient right
-    $ns duplex-link-op $node_(r3) $node_(r4) orient right
-    $ns duplex-link-op $node_(s3) $node_(r4) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r4) orient left-up
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3- -superclass Topology/net3
-Topology/net3- instproc init ns {
-    $self next $ns
-    $self instvar node_ rtm_
-    set dynamicsTrace [open dyn.tr "w"]
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set rtm_($x1:$x2) [$ns rtmodel Exponential {5.0 1.0} $node_($x1) $node_($x2)]
-	[$ns link $node_($x1) $node_($x2)] trace-dynamics $ns $dynamicsTrace
-	[$ns link $node_($x2) $node_($x1)] trace-dynamics $ns $dynamicsTrace
-    }
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3-Session -superclass Topology/net3
-Topology/net3-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms DropTail \
-		{queue-limit 25}
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3-DV -superclass Topology/net3
-Topology/net3-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms DropTail \
-		{queue-limit 25}
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3-DVm0 -superclass Topology/net3
-Topology/net3-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms DropTail \
-		{queue-limit 25} [list cost 2 $x1 $x2]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3-DVm1 -superclass Topology/net3
-Topology/net3-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms DropTail \
-		{queue-limit 25} [list cost 2 $x1 $x2]
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3RED-Session -superclass Topology/net3
-Topology/net3RED-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms RED \
-		{queue-limit 25}
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3RED-DV -superclass Topology/net3
-Topology/net3RED-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms RED \
-		{queue-limit 25}
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3RED-DVm0 -superclass Topology/net3
-Topology/net3RED-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms RED \
-		{queue-limit 25} [list cost 2 $x1 $x2]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3RED-DVm1 -superclass Topology/net3
-Topology/net3RED-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms RED \
-		{queue-limit 25} [list cost 2 $x1 $x2]
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/topologies.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/topologies.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/topologies.tcl	2015-03-04 17:49:02.810750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/topologies.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,709 +0,0 @@
-#
-# Copyright (c) 1995 The Regents of the University of California.
-# All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions
-# are met:
-# 1. Redistributions of source code must retain the above copyright
-#    notice, this list of conditions and the following disclaimer.
-# 2. Redistributions in binary form must reproduce the above copyright
-#    notice, this list of conditions and the following disclaimer in the
-#    documentation and/or other materials provided with the distribution.
-# 3. All advertising materials mentioning features or use of this software
-#    must display the following acknowledgement:
-#	This product includes software developed by the Computer Systems
-#	Engineering Group at Lawrence Berkeley Laboratory.
-# 4. Neither the name of the University nor of the Laboratory may be used
-#    to endorse or promote products derived from this software without
-#    specific prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
-# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
-# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
-# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-# SUCH DAMAGE.
-#
-# @(#) $Header: /cvsroot/nsnam/ns-2/tcl/test/topologies.tcl,v 1.14 1998/05/09 00:35:53 sfloyd Exp $
-#
-#
-# This test suite reproduces most of the tests from the following note:
-# Floyd, S., Simulator Tests. July 1995.  
-# URL ftp://ftp.ee.lbl.gov/papers/simtests.ps.Z.
-#
-# To run individual tests:
-# ns test-suite.tcl tahoe1
-# ns test-suite.tcl tahoe2
-# ...
-#
-
-Class SkelTopology
-
-SkelTopology instproc init {} {
-    $self next
-}
-
-SkelTopology instproc node? n {
-    $self instvar node_
-    if [info exists node_($n)] {
-	set ret $node_($n)
-    } else {
-	set ret ""
-    }
-    set ret
-}
-
-SkelTopology instproc add-fallback-links {ns nodelist bw delay qtype args} {
-   $self instvar node_
-    set n1 [lindex $nodelist 0]
-    foreach n2 [lrange $nodelist 1 end] {
-	if ![info exists node_($n2)] {
-	    set node_($n2) [$ns node]
-	}
-	$ns duplex-link $node_($n1) $node_($n2) $bw $delay $qtype
-	foreach opt $args {
-	    set cmd [lindex $opt 0]
-	    set val [lindex $opt 1]
-	    if {[llength $opt] > 2} {
-		set x1 [lindex $opt 2]
-		set x2 [lindex $opt 3]
-	    } else {
-		set x1 $n1
-		set x2 $n2
-	    }
-	    $ns $cmd $node_($x1) $node_($x2) $val
-	    $ns $cmd $node_($x2) $node_($x1) $val
-	}
-	set n1 $n2
-    }
-}
-
-SkelTopology instproc checkConfig {lclass ns} {
-    if {[$lclass info instprocs config] != "" &&		\
-	    [$self info class] == $lclass} {
-	$self config $ns
-    }
-}
-
-#
-
-Class NodeTopology/4nodes -superclass SkelTopology
-
-# Create a simple four node topology:
-#
-#	   s1
-#	     \ 
-#     8Mb,5ms \   0.8Mb,100ms
-#	        r1 --------- k1
-#     8Mb,5ms /
-#	     /
-#	   s2
-
-NodeTopology/4nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(k1) [$ns node]
-}
-
-#
-# Links1 uses 8Mb, 5ms feeders, and a 800Kb 100ms bottleneck.
-# Queue-limit on bottleneck is 6 packets.
-#
-Class Topology/net0 -superclass NodeTopology/4nodes
-Topology/net0 instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0
-    $ns duplex-link-op $node_(k1) $node_(r1) queuePos 0
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-lossy -superclass NodeTopology/4nodes
-Topology/net0-lossy instproc init ns {
-    $self next $ns
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 8Mb 5ms DropTail 
-    $ns duplex-link $node_(r1) $node_(k1) 800Kb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 6
-    $ns queue-limit $node_(k1) $node_(r1) 6
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0
-    $ns duplex-link-op $node_(k1) $node_(r1) queuePos 0
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(k1)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $errmodel set offset_ 1.0
-    $errmodel set period_ 25.0
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0- -superclass Topology/net0
-Topology/net0- instproc init ns {
-    $self next $ns
-    $self instvar node_ rtm_
-    set rtm_(r1:k1)  [$ns rtmodel Exponential {} $node_(r1) $node_(k1)]
-    set dynamicsTrace [open dyn.tr "w"]
-    [$ns link $node_(r1) $node_(k1)] trace-dynamics $ns $dynamicsTrace
-    [$ns link $node_(k1) $node_(r1)] trace-dynamics $ns $dynamicsTrace
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-Session -superclass Topology/net0
-Topology/net0-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 800Kb 100ms DropTail
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-DV -superclass Topology/net0
-Topology/net0-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 800Kb 100ms DropTail
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-DVm0 -superclass Topology/net0
-Topology/net0-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    Agent/rtProto/Direct set preference_ 200	;# Cf. tcl/ex/simple-eqp1.tcl
-
-    $self next $ns			;# now instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 800Kb 100ms DropTail {cost 2 r1 k1}
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net0-DVm1 -superclass Topology/net0
-Topology/net0-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    Agent/rtProto/Direct set preference_ 200	;# Cf. tcl/ex/simple-eqp1.tcl
-
-    $self next $ns			;# now instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 800Kb 100ms DropTail {cost 2 r1 k1}
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-#
-#
-# Links1 uses 10Mb, 5ms feeders, and a 1.5Mb 100ms bottleneck.
-# Queue-limit on bottleneck is 23 packets.
-#
-
-Class Topology/net1 -superclass NodeTopology/4nodes
-Topology/net1 instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail 
-    $ns duplex-link $node_(r1) $node_(k1) 1.5Mb 100ms DropTail
-    $ns queue-limit $node_(r1) $node_(k1) 23
-    $ns queue-limit $node_(k1) $node_(r1) 23
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(k1) orient right
-    $ns duplex-link-op $node_(r1) $node_(k1) queuePos 0
-    $ns duplex-link-op $node_(k1) $node_(r1) queuePos 0
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1- -superclass Topology/net1
-Topology/net1- instproc init ns {
-    $self next $ns
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Exponential {} $node_(r1) $node_(k1)]
-    set dynamicsTrace [open dyn.tr "w"]
-    [$ns link $node_(r1) $node_(k1)] trace-dynamics $ns $dynamicsTrace
-    [$ns link $node_(k1) $node_(r1)] trace-dynamics $ns $dynamicsTrace
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-Session -superclass Topology/net1
-Topology/net1-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 1.5Mb 100ms DropTail
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-DV -superclass Topology/net1
-Topology/net1-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 1.5Mb 100ms DropTail
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-DVm0 -superclass Topology/net1
-Topology/net1-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    Agent/rtProto/Direct set preference_ 200	;# Cf. tcl/ex/simple-eqp1.tcl
-
-    $self next $ns			;# now instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 1.5Mb 100ms DropTail {cost 2 r1 k1}
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net1-DVm1 -superclass Topology/net1
-Topology/net1-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    Agent/rtProto/Direct set preference_ 200	;# Cf. tcl/ex/simple-eqp1.tcl
-
-    $self next $ns			;# now instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 k1} 1.5Mb 100ms DropTail {cost 2 r1 k1}
-    $self instvar node_ rtm_
-    set rtm_(r1:k1) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(k1)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-#
-
-Class NodeTopology/6nodes -superclass SkelTopology
-
-#
-# Create a simple six node topology:
-#
-#        s1                 s3
-#         \                 /
-# 10Mb,2ms \  1.5Mb,20ms   / 10Mb,4ms
-#           r1 --------- r2
-# 10Mb,3ms /               \ 10Mb,5ms
-#         /                 \
-#        s2                 s4 
-#
-
-NodeTopology/6nodes instproc init ns {
-    $self next
-
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-}
-
-Class Topology/cbq1 -superclass NodeTopology/6nodes
-Topology/cbq1 instproc init ns {
-	$self next $ns
-
-	$self instvar node_
-	$ns duplex-link $node_(s1) $node_(r1) 10Mb 5ms DropTail
-	$ns duplex-link $node_(s2) $node_(r1) 10Mb 5ms DropTail
-	$ns duplex-link $node_(s3) $node_(r1) 10Mb 5ms DropTail
-	$ns duplex-link $node_(s4) $node_(r1) 10Mb 5ms DropTail
-	$ns simplex-link $node_(r2) $node_(r1) 1.5Mb 5ms DropTail
-	$ns queue-limit $node_(r2) $node_(r1) 20
-}
-
-Class Topology/cbq1-prr -superclass Topology/cbq1
-Topology/cbq1-prr instproc init ns {
-	$self next $ns
-
-	$self instvar node_ cbqlink_
-	$ns simplex-link $node_(r1) $node_(r2) 1.5Mb 5ms CBQ
-	set cbqlink_ [$ns link $node_(r1) $node_(r2)]
-}
-
-Class Topology/cbq1-wrr -superclass Topology/cbq1
-Topology/cbq1-wrr instproc init ns {
-	$self next $ns
-
-	$self instvar node_ cbqlink_
-	$ns simplex-link $node_(r1) $node_(r2) 1.5Mb 5ms CBQ/WRR
-	set cbqlink_ [$ns link $node_(r1) $node_(r2)]
-}
-
-Class Topology/net2 -superclass NodeTopology/6nodes
-Topology/net2 instproc init ns {
-    $self next $ns
-
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail 
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED 
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(s3) $node_(r2) 10Mb 4ms DropTail 
-    $ns duplex-link $node_(s4) $node_(r2) 10Mb 5ms DropTail 
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(s3) $node_(r2) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r2) orient left-up
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-lossy -superclass Topology/net2
-Topology/net2-lossy instproc init ns {
-    $self next $ns
-    $self instvar node_
-
-    $self instvar lossylink_
-    set lossylink_ [$ns link $node_(r1) $node_(r2)]
-    set em [new ErrorModule Fid]
-    set errmodel [new ErrorModel/Periodic]
-    $errmodel unit pkt
-    $lossylink_ errormodule $em
-    $em insert $errmodel
-    $em bind $errmodel 0
-    $em default pass
-}
-
-Class Topology/net2- -superclass Topology/net2
-Topology/net2- instproc init ns {
-    $self next $ns
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Exponential {} $node_(r1) $node_(r2)]
-    set dynamicsTrace [open dyn.tr "w"]
-    [$ns link $node_(r1) $node_(r2)] trace-dynamics $ns $dynamicsTrace
-    [$ns link $node_(r2) $node_(r1)] trace-dynamics $ns $dynamicsTrace
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-Session -superclass Topology/net2
-Topology/net2-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms DropTail \
-	    {queue-limit 25}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-DV -superclass Topology/net2
-Topology/net2-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms DropTail \
-	    {queue-limit 25}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-DVm0 -superclass Topology/net2
-Topology/net2-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms DropTail \
-	    {queue-limit 25} {cost 2 r1 r2}
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2-DVm1 -superclass Topology/net2
-Topology/net2-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms DropTail \
-	    {queue-limit 25} {cost 2 r1 r2}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2RED-Session -superclass Topology/net2
-Topology/net2RED-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms RED \
-	    {queue-limit 25}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2RED-DV -superclass Topology/net2
-Topology/net2RED-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms RED \
-	    {queue-limit 25}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2RED-DVm0 -superclass Topology/net2
-Topology/net2RED-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms RED \
-	    {queue-limit 25} {cost 2 r1 r2}
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net2RED-DVm1 -superclass Topology/net2
-Topology/net2RED-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self add-fallback-links $ns {r1 b1 r2} 1.5Mb 10ms RED \
-	    {queue-limit 25} {cost 2 r1 r2}
-    $self instvar node_ rtm_
-    set rtm_(r1:r2) [$ns rtmodel Trace "dyn.tr" $node_(r1) $node_(r2)]
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-#
-
-Class NodeTopology/8nodes -superclass SkelTopology
-
-#
-# Create a simple eight node topology:
-#
-#        s1                 s3
-#         \      4  x       /
-# 10Mb,2ms \  1.5Mb,20ms   / 10Mb,4ms
-#           r1 -.--.--.- r4
-# 10Mb,3ms /               \ 10Mb,5ms
-#         /                 \
-#        s2                 s4 
-#
-# This topology is of interest when the 4 node spine is dynamic,
-# and 3 alternate nodes provide fallback paths.
-#
-
-NodeTopology/8nodes instproc init ns {
-    $self next
-    
-    $self instvar node_
-    set node_(s1) [$ns node]
-    set node_(s2) [$ns node]
-    set node_(s3) [$ns node]
-    set node_(s4) [$ns node]
-    
-    set node_(r1) [$ns node]
-    set node_(r2) [$ns node]
-    set node_(r3) [$ns node]
-    set node_(r4) [$ns node]
-}
-
-Class Topology/net3 -superclass NodeTopology/8nodes
-Topology/net3 instproc init ns {
-    $self next $ns
-    
-    $self instvar node_
-    $ns duplex-link $node_(s1) $node_(r1) 10Mb 2ms DropTail 
-    $ns duplex-link $node_(s2) $node_(r1) 10Mb 3ms DropTail 
-    $ns duplex-link $node_(r1) $node_(r2) 1.5Mb 20ms RED 
-    $ns queue-limit $node_(r1) $node_(r2) 25
-    $ns queue-limit $node_(r2) $node_(r1) 25
-    $ns duplex-link $node_(r2) $node_(r3) 1.5Mb 20ms DropTail 
-    $ns duplex-link $node_(r3) $node_(r4) 1.5Mb 20ms DropTail 
-    $ns duplex-link $node_(s3) $node_(r4) 10Mb 4ms DropTail 
-    $ns duplex-link $node_(s4) $node_(r4) 10Mb 5ms DropTail 
-
-    $ns duplex-link-op $node_(s1) $node_(r1) orient right-down
-    $ns duplex-link-op $node_(s2) $node_(r1) orient right-up
-    $ns duplex-link-op $node_(r1) $node_(r2) orient right
-    $ns duplex-link-op $node_(r1) $node_(r2) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r1) queuePos 0
-    $ns duplex-link-op $node_(r2) $node_(r3) orient right
-    $ns duplex-link-op $node_(r3) $node_(r4) orient right
-    $ns duplex-link-op $node_(s3) $node_(r4) orient left-down
-    $ns duplex-link-op $node_(s4) $node_(r4) orient left-up
-
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3- -superclass Topology/net3
-Topology/net3- instproc init ns {
-    $self next $ns
-    $self instvar node_ rtm_
-    set dynamicsTrace [open dyn.tr "w"]
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set rtm_($x1:$x2) [$ns rtmodel Exponential {5.0 1.0} $node_($x1) $node_($x2)]
-	[$ns link $node_($x1) $node_($x2)] trace-dynamics $ns $dynamicsTrace
-	[$ns link $node_($x2) $node_($x1)] trace-dynamics $ns $dynamicsTrace
-    }
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3-Session -superclass Topology/net3
-Topology/net3-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms DropTail \
-		{queue-limit 25}
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3-DV -superclass Topology/net3
-Topology/net3-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms DropTail \
-		{queue-limit 25}
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3-DVm0 -superclass Topology/net3
-Topology/net3-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms DropTail \
-		{queue-limit 25} [list cost 2 $x1 $x2]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3-DVm1 -superclass Topology/net3
-Topology/net3-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms DropTail \
-		{queue-limit 25} [list cost 2 $x1 $x2]
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3RED-Session -superclass Topology/net3
-Topology/net3RED-Session instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms RED \
-		{queue-limit 25}
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto Session
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3RED-DV -superclass Topology/net3
-Topology/net3RED-DV instproc init ns {
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms RED \
-		{queue-limit 25}
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3RED-DVm0 -superclass Topology/net3
-Topology/net3RED-DVm0 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms RED \
-		{queue-limit 25} [list cost 2 $x1 $x2]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
-Class Topology/net3RED-DVm1 -superclass Topology/net3
-Topology/net3RED-DVm1 instproc init ns {
-    Node set multiPath_ 1
-    $self next $ns			;# instantiate entire topology
-    $self instvar node_ rtm_
-    foreach i [list {r1 b1 r2} {r2 b2 r3} {r3 b3 r4}] {
-	set x1 [lindex $i 0]
-	set x2 [lindex $i 2]
-	set b1 [lindex $i 1]
-	$self add-fallback-links $ns [list $x1 $b1 $x2] 1.5Mb 10ms RED \
-		{queue-limit 25} [list cost 2 $x1 $x2]
-	set rtm_($x1:$x2) [$ns rtmodel Trace "dyn.tr" $node_($x1) $node_($x2)]
-    }
-    $ns rtproto DV
-    $self checkConfig $class $ns
-}
-
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/ts1000.tcl ns-allinone-2.34-qjump/ns-2.34/tcl/test/ts1000.tcl
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/ts1000.tcl	2015-03-04 17:49:02.778750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/ts1000.tcl	1970-01-01 01:00:00.000000000 +0100
@@ -1,2112 +0,0 @@
-# Generated by sgb2ns, created by Polly Huang
-# GRAPH (#nodes #edges id uu vv ww xx yy zz):
-# 1000 3790 transtub(0,3,0,0,{2,283,3,1.000,0.000,0.000},{20,142,3,0.600,0.000,0.000},{8,63,3,0.420,0.000,0.000}) 283 3 6 1 
-
-proc create-topology {linkBW} {
-	global ns n
-
-	set verbose 1
-
-	if {$verbose} { 
-		puts "creating nodes..." 
-}
-		for {set i 0} {$i < 1000} {incr i} {
-			set n($i) [$ns node]
-	}
-
-	# EDGES (from-node to-node length a b):
-	if {$verbose} { 
-		puts -nonewline "Creating links 0..."
-		flush stdout 
-	}
-	$ns duplex-link-of-interfaces $n(0) $n(33) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(27) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(1) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(5) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(7) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(8) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(11) $linkBW 730ms DropTail
-	$ns duplex-link-of-interfaces $n(0) $n(15) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(57) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(47) $linkBW 200ms DropTail
-	if {$verbose} { puts -nonewline "10..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1) $n(36) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(2) $linkBW 940ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(4) $linkBW 1150ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(5) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(6) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(9) $linkBW 1060ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(11) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(12) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(13) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(14) $linkBW 360ms DropTail
-	if {$verbose} { puts -nonewline "20..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(1) $n(16) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(17) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(18) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(1) $n(19) $linkBW 740ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(95) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(88) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(75) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(69) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(61) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(5) $linkBW 540ms DropTail
-	if {$verbose} { puts -nonewline "30..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(2) $n(7) $linkBW 960ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(8) $linkBW 1240ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(9) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(11) $linkBW 1290ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(14) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(15) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(2) $n(17) $linkBW 770ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(138) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(123) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(113) $linkBW 130ms DropTail
-	if {$verbose} { puts -nonewline "40..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(3) $n(107) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(104) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(4) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(6) $linkBW 900ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(8) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(10) $linkBW 1220ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(12) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(13) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(14) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(15) $linkBW 660ms DropTail
-	if {$verbose} { puts -nonewline "50..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(3) $n(16) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(17) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(3) $n(18) $linkBW 1150ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(517) $linkBW 1380ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(153) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(144) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(6) $linkBW 1370ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(7) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(9) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(11) $linkBW 1220ms DropTail
-	if {$verbose} { puts -nonewline "60..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(4) $n(12) $linkBW 780ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(15) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(17) $linkBW 830ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(18) $linkBW 1090ms DropTail
-	$ns duplex-link-of-interfaces $n(4) $n(19) $linkBW 850ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(170) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(159) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(6) $linkBW 820ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(9) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(10) $linkBW 640ms DropTail
-	if {$verbose} { puts -nonewline "70..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(5) $n(11) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(12) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(13) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(14) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(15) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(17) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(18) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(5) $n(19) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(187) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(174) $linkBW 380ms DropTail
-	if {$verbose} { puts -nonewline "80..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(6) $n(7) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(8) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(9) $linkBW 1370ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(11) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(12) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(13) $linkBW 1070ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(14) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(16) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(17) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(6) $n(18) $linkBW 780ms DropTail
-	if {$verbose} { puts -nonewline "90..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(6) $n(19) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(224) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(214) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(206) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(200) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(188) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(8) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(9) $linkBW 950ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(10) $linkBW 1020ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(12) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "100..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(7) $n(13) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(14) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(16) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(17) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(7) $n(19) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(280) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(275) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(267) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(260) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(248) $linkBW 480ms DropTail
-	if {$verbose} { puts -nonewline "110..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(8) $n(238) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(232) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(9) $linkBW 1270ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(10) $linkBW 1100ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(12) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(13) $linkBW 990ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(16) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(8) $n(18) $linkBW 960ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(507) $linkBW 1650ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(307) $linkBW 50ms DropTail
-	if {$verbose} { puts -nonewline "120..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(9) $n(295) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(287) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(10) $linkBW 750ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(11) $linkBW 1330ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(12) $linkBW 770ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(13) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(9) $n(19) $linkBW 1050ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(326) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(318) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(314) $linkBW 300ms DropTail
-	if {$verbose} { puts -nonewline "130..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(10) $n(11) $linkBW 1140ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(12) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(13) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(14) $linkBW 650ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(15) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(16) $linkBW 1190ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(18) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(10) $n(19) $linkBW 1110ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(355) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(349) $linkBW 200ms DropTail
-	if {$verbose} { puts -nonewline "140..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(11) $n(346) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(342) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(13) $linkBW 1040ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(14) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(15) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(17) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(18) $linkBW 980ms DropTail
-	$ns duplex-link-of-interfaces $n(11) $n(19) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(12) $n(367) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(12) $n(13) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "150..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(12) $n(14) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(12) $n(15) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(12) $n(17) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(12) $n(18) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(13) $n(379) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(13) $n(14) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(13) $n(15) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(13) $n(16) $linkBW 1080ms DropTail
-	$ns duplex-link-of-interfaces $n(13) $n(17) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(13) $n(19) $linkBW 800ms DropTail
-	if {$verbose} { puts -nonewline "160..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(14) $n(391) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(14) $n(381) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(14) $n(15) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(14) $n(16) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(14) $n(17) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(14) $n(18) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(14) $n(19) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(15) $n(415) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(15) $n(409) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(15) $n(406) $linkBW 510ms DropTail
-	if {$verbose} { puts -nonewline "170..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(15) $n(17) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(16) $n(429) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(16) $n(428) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(17) $n(441) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(17) $n(19) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(452) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(446) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(18) $n(19) $linkBW 1020ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(495) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(487) $linkBW 110ms DropTail
-	if {$verbose} { puts -nonewline "180..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(19) $n(477) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(467) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(19) $n(460) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(21) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(22) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(24) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(25) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(20) $n(28) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(21) $n(25) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(21) $n(26) $linkBW 610ms DropTail
-	if {$verbose} { puts -nonewline "190..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(21) $n(27) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(22) $n(23) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(22) $n(26) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(24) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(25) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(26) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(23) $n(27) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(25) $n(27) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(25) $n(28) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(26) $n(27) $linkBW 670ms DropTail
-	if {$verbose} { puts -nonewline "200..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(26) $n(28) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(27) $n(28) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(29) $n(32) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(29) $n(33) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(29) $n(34) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(30) $n(33) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(30) $n(34) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(30) $n(35) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(31) $n(33) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(32) $n(34) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "210..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(32) $n(35) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(33) $n(35) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(34) $n(35) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(36) $n(42) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(37) $n(39) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(37) $n(42) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(38) $n(39) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(38) $n(40) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(38) $n(41) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(38) $n(42) $linkBW 420ms DropTail
-	if {$verbose} { puts -nonewline "220..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(39) $n(41) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(40) $n(41) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(40) $n(42) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(43) $n(46) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(43) $n(48) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(44) $n(45) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(44) $n(46) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(45) $n(47) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(45) $n(48) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(46) $n(48) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "230..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(46) $n(49) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(47) $n(48) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(50) $n(56) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(50) $n(59) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(51) $n(53) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(51) $n(54) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(51) $n(57) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(52) $n(53) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(52) $n(58) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(53) $n(54) $linkBW 240ms DropTail
-	if {$verbose} { puts -nonewline "240..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(53) $n(56) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(53) $n(58) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(53) $n(59) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(54) $n(58) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(55) $n(57) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(56) $n(58) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(56) $n(59) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(57) $n(59) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(60) $n(62) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(60) $n(63) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "250..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(60) $n(66) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(61) $n(62) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(61) $n(64) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(61) $n(66) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(62) $n(65) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(62) $n(66) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(63) $n(64) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(63) $n(66) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(67) $n(69) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(67) $n(70) $linkBW 340ms DropTail
-	if {$verbose} { puts -nonewline "260..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(67) $n(71) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(67) $n(72) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(68) $n(71) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(73) $n(74) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(73) $n(75) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(73) $n(82) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(74) $n(76) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(74) $n(77) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(74) $n(79) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(74) $n(80) $linkBW 120ms DropTail
-	if {$verbose} { puts -nonewline "270..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(74) $n(82) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(75) $n(80) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(75) $n(81) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(75) $n(82) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(76) $n(78) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(76) $n(79) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(76) $n(81) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(77) $n(78) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(77) $n(79) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(77) $n(81) $linkBW 640ms DropTail
-	if {$verbose} { puts -nonewline "280..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(78) $n(79) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(78) $n(81) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(81) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(79) $n(82) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(80) $n(81) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(83) $n(87) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(83) $n(88) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(84) $n(86) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(84) $n(88) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(85) $n(86) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "290..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(86) $n(88) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(90) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(91) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(93) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(97) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(98) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(89) $n(99) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(90) $n(91) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(90) $n(92) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(90) $n(93) $linkBW 480ms DropTail
-	if {$verbose} { puts -nonewline "300..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(90) $n(95) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(90) $n(96) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(90) $n(98) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(90) $n(99) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(91) $n(96) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(91) $n(98) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(91) $n(99) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(92) $n(93) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(92) $n(95) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(92) $n(97) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "310..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(92) $n(99) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(93) $n(94) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(93) $n(99) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(94) $n(96) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(94) $n(99) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(95) $n(97) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(95) $n(99) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(97) $n(98) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(100) $n(103) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(100) $n(106) $linkBW 160ms DropTail
-	if {$verbose} { puts -nonewline "320..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(101) $n(102) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(101) $n(104) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(101) $n(106) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(102) $n(104) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(102) $n(105) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(102) $n(106) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(103) $n(106) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(104) $n(105) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(104) $n(106) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(105) $n(106) $linkBW 220ms DropTail
-	if {$verbose} { puts -nonewline "330..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(107) $n(108) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(107) $n(110) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(108) $n(111) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(109) $n(111) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(110) $n(111) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(111) $n(112) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(113) $n(114) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(113) $n(117) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(113) $n(121) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(114) $n(117) $linkBW 490ms DropTail
-	if {$verbose} { puts -nonewline "340..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(114) $n(118) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(114) $n(119) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(114) $n(121) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(115) $n(117) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(115) $n(120) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(116) $n(117) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(116) $n(118) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(116) $n(120) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(116) $n(121) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(117) $n(119) $linkBW 590ms DropTail
-	if {$verbose} { puts -nonewline "350..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(117) $n(120) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(118) $n(119) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(119) $n(120) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(120) $n(121) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(122) $n(125) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(122) $n(128) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(122) $n(130) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(122) $n(131) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(122) $n(132) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(123) $n(126) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "360..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(123) $n(129) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(123) $n(131) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(124) $n(129) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(124) $n(130) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(125) $n(128) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(125) $n(130) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(125) $n(131) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(125) $n(132) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(126) $n(127) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(126) $n(129) $linkBW 330ms DropTail
-	if {$verbose} { puts -nonewline "370..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(128) $n(129) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(128) $n(130) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(128) $n(132) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(129) $n(130) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(129) $n(132) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(131) $n(132) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(133) $n(134) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(133) $n(138) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(133) $n(139) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(134) $n(137) $linkBW 360ms DropTail
-	if {$verbose} { puts -nonewline "380..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(134) $n(139) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(135) $n(137) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(135) $n(138) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(136) $n(137) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(136) $n(138) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(136) $n(139) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(140) $n(141) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(140) $n(143) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(140) $n(144) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(140) $n(146) $linkBW 360ms DropTail
-	if {$verbose} { puts -nonewline "390..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(140) $n(148) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(141) $n(146) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(142) $n(143) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(145) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(143) $n(148) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(144) $n(145) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(144) $n(147) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(146) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(145) $n(147) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(146) $n(148) $linkBW 330ms DropTail
-	if {$verbose} { puts -nonewline "400..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(149) $n(151) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(150) $n(151) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(150) $n(152) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(150) $n(154) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(151) $n(154) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(152) $n(155) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(153) $n(154) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(156) $n(157) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(156) $n(160) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(156) $n(162) $linkBW 500ms DropTail
-	if {$verbose} { puts -nonewline "410..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(157) $n(160) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(157) $n(161) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(158) $n(159) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(158) $n(160) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(158) $n(161) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(158) $n(162) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(160) $n(161) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(161) $n(162) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(163) $n(167) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(163) $n(170) $linkBW 390ms DropTail
-	if {$verbose} { puts -nonewline "420..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(163) $n(171) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(164) $n(167) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(164) $n(168) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(165) $n(169) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(165) $n(170) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(166) $n(169) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(166) $n(170) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(166) $n(171) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(167) $n(168) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(167) $n(171) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "430..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(168) $n(170) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(168) $n(171) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(169) $n(170) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(170) $n(171) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(172) $n(175) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(172) $n(177) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(173) $n(174) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(173) $n(175) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(174) $n(176) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(174) $n(177) $linkBW 210ms DropTail
-	if {$verbose} { puts -nonewline "440..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(174) $n(178) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(175) $n(176) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(175) $n(178) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(176) $n(178) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(179) $n(180) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(179) $n(181) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(179) $n(182) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(179) $n(185) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(179) $n(186) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(179) $n(187) $linkBW 250ms DropTail
-	if {$verbose} { puts -nonewline "450..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(180) $n(185) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(180) $n(186) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(180) $n(187) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(181) $n(182) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(181) $n(184) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(181) $n(185) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(181) $n(186) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(182) $n(187) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(183) $n(184) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(183) $n(185) $linkBW 350ms DropTail
-	if {$verbose} { puts -nonewline "460..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(184) $n(186) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(185) $n(186) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(186) $n(187) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(188) $n(190) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(188) $n(192) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(189) $n(191) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(190) $n(191) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(190) $n(192) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(190) $n(193) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(190) $n(195) $linkBW 410ms DropTail
-	if {$verbose} { puts -nonewline "470..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(191) $n(194) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(192) $n(194) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(192) $n(195) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(194) $n(195) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(196) $n(197) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(196) $n(198) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(196) $n(199) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(196) $n(201) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(197) $n(198) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(197) $n(200) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "480..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(198) $n(201) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(199) $n(201) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(202) $n(203) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(203) $n(204) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(203) $n(206) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(204) $n(205) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(205) $n(206) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(207) $n(208) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(207) $n(211) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(207) $n(212) $linkBW 500ms DropTail
-	if {$verbose} { puts -nonewline "490..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(207) $n(213) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(207) $n(214) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(207) $n(215) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(209) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(211) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(213) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(214) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(215) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(217) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(208) $n(218) $linkBW 150ms DropTail
-	if {$verbose} { puts -nonewline "500..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(209) $n(211) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(214) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(216) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(209) $n(217) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(216) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(210) $n(218) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(212) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(213) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(215) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(211) $n(216) $linkBW 560ms DropTail
-	if {$verbose} { puts -nonewline "510..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(211) $n(217) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(213) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(214) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(212) $n(217) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(213) $n(215) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(213) $n(216) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(214) $n(215) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(215) $n(216) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(219) $n(220) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(219) $n(222) $linkBW 390ms DropTail
-	if {$verbose} { puts -nonewline "520..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(219) $n(226) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(220) $n(223) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(220) $n(226) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(221) $n(222) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(221) $n(227) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(222) $n(227) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(223) $n(225) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(223) $n(226) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(224) $n(227) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(228) $n(229) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "530..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(228) $n(230) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(228) $n(234) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(229) $n(233) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(229) $n(234) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(230) $n(231) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(230) $n(235) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(231) $n(232) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(231) $n(233) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(231) $n(234) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(231) $n(235) $linkBW 440ms DropTail
-	if {$verbose} { puts -nonewline "540..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(232) $n(233) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(232) $n(235) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(236) $n(238) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(236) $n(241) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(236) $n(243) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(236) $n(244) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(237) $n(238) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(238) $n(240) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(238) $n(243) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(239) $n(240) $linkBW 500ms DropTail
-	if {$verbose} { puts -nonewline "550..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(239) $n(242) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(239) $n(243) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(239) $n(244) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(240) $n(241) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(240) $n(242) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(241) $n(242) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(241) $n(244) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(242) $n(243) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(242) $n(244) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(245) $n(247) $linkBW 550ms DropTail
-	if {$verbose} { puts -nonewline "560..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(245) $n(248) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(245) $n(249) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(245) $n(254) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(246) $n(249) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(246) $n(251) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(246) $n(253) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(246) $n(257) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(247) $n(251) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(247) $n(252) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(247) $n(254) $linkBW 130ms DropTail
-	if {$verbose} { puts -nonewline "570..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(248) $n(249) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(248) $n(250) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(248) $n(251) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(248) $n(254) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(249) $n(251) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(249) $n(255) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(250) $n(252) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(250) $n(255) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(250) $n(257) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(251) $n(252) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "580..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(252) $n(257) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(254) $n(255) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(254) $n(257) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(256) $n(257) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(258) $n(262) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(259) $n(260) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(259) $n(261) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(259) $n(262) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(260) $n(262) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(263) $n(267) $linkBW 90ms DropTail
-	if {$verbose} { puts -nonewline "590..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(263) $n(269) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(263) $n(270) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(264) $n(266) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(264) $n(267) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(265) $n(266) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(265) $n(269) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(265) $n(270) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(266) $n(269) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(267) $n(268) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(268) $n(270) $linkBW 40ms DropTail
-	if {$verbose} { puts -nonewline "600..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(271) $n(272) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(271) $n(273) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(271) $n(276) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(272) $n(275) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(272) $n(276) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(276) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(273) $n(278) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(275) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(277) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(274) $n(278) $linkBW 130ms DropTail
-	if {$verbose} { puts -nonewline "610..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(276) $n(277) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(277) $n(278) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(279) $n(281) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(279) $n(282) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(280) $n(282) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(280) $n(283) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(281) $n(283) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(282) $n(283) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(284) $n(286) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(284) $n(287) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "620..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(285) $n(287) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(285) $n(290) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(287) $n(289) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(287) $n(290) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(288) $n(289) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(288) $n(290) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(289) $n(290) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(292) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(293) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(295) $linkBW 180ms DropTail
-	if {$verbose} { puts -nonewline "630..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(291) $n(297) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(298) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(300) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(291) $n(301) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(292) $n(293) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(292) $n(294) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(292) $n(295) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(292) $n(296) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(292) $n(297) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(292) $n(301) $linkBW 450ms DropTail
-	if {$verbose} { puts -nonewline "640..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(293) $n(295) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(294) $n(296) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(294) $n(298) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(294) $n(299) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(294) $n(300) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(294) $n(301) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(295) $n(296) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(295) $n(298) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(295) $n(301) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(296) $n(297) $linkBW 330ms DropTail
-	if {$verbose} { puts -nonewline "650..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(296) $n(300) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(296) $n(301) $linkBW 680ms DropTail
-	$ns duplex-link-of-interfaces $n(296) $n(302) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(297) $n(298) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(298) $n(301) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(298) $n(302) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(303) $n(306) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(304) $n(306) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(305) $n(306) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(305) $n(307) $linkBW 260ms DropTail
-	if {$verbose} { puts -nonewline "660..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(306) $n(307) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(308) $n(311) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(308) $n(312) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(308) $n(313) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(308) $n(314) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(309) $n(310) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(309) $n(312) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(310) $n(313) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(310) $n(315) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(311) $n(314) $linkBW 600ms DropTail
-	if {$verbose} { puts -nonewline "670..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(312) $n(315) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(313) $n(315) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(316) $n(319) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(316) $n(323) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(317) $n(319) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(318) $n(320) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(318) $n(322) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(319) $n(320) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(320) $n(321) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(320) $n(323) $linkBW 460ms DropTail
-	if {$verbose} { puts -nonewline "680..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(321) $n(322) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(324) $n(326) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(324) $n(327) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(324) $n(329) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(325) $n(326) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(325) $n(329) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(325) $n(330) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(326) $n(329) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(326) $n(331) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(327) $n(329) $linkBW 150ms DropTail
-	if {$verbose} { puts -nonewline "690..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(328) $n(329) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(328) $n(330) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(329) $n(331) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(330) $n(331) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(332) $n(336) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(332) $n(338) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(332) $n(341) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(332) $n(342) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(333) $n(334) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(333) $n(337) $linkBW 290ms DropTail
-	if {$verbose} { puts -nonewline "700..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(334) $n(340) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(334) $n(341) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(335) $n(342) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(336) $n(338) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(336) $n(342) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(337) $n(339) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(337) $n(340) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(337) $n(342) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(339) $n(340) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(339) $n(341) $linkBW 340ms DropTail
-	if {$verbose} { puts -nonewline "710..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(340) $n(342) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(344) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(345) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(343) $n(347) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(345) $n(346) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(346) $n(347) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(346) $n(348) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(349) $n(350) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(349) $n(352) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(349) $n(353) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "720..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(349) $n(354) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(350) $n(354) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(351) $n(352) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(351) $n(353) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(351) $n(354) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(352) $n(354) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(355) $n(356) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(355) $n(357) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(355) $n(360) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(355) $n(363) $linkBW 450ms DropTail
-	if {$verbose} { puts -nonewline "730..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(356) $n(357) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(356) $n(359) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(356) $n(360) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(357) $n(358) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(357) $n(360) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(357) $n(361) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(357) $n(362) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(357) $n(363) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(358) $n(362) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(359) $n(360) $linkBW 260ms DropTail
-	if {$verbose} { puts -nonewline "740..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(359) $n(361) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(360) $n(363) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(364) $n(365) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(364) $n(370) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(365) $n(369) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(365) $n(370) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(366) $n(367) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(366) $n(370) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(367) $n(371) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(368) $n(369) $linkBW 220ms DropTail
-	if {$verbose} { puts -nonewline "750..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(368) $n(371) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(369) $n(371) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(372) $n(377) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(373) $n(374) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(373) $n(375) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(373) $n(378) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(374) $n(375) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(374) $n(377) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(375) $n(376) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(375) $n(378) $linkBW 480ms DropTail
-	if {$verbose} { puts -nonewline "760..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(375) $n(379) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(376) $n(379) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(377) $n(378) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(377) $n(379) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(378) $n(379) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(380) $n(381) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(380) $n(384) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(380) $n(386) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(381) $n(386) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(381) $n(388) $linkBW 210ms DropTail
-	if {$verbose} { puts -nonewline "770..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(382) $n(383) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(382) $n(385) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(382) $n(387) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(383) $n(387) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(384) $n(386) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(384) $n(387) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(384) $n(388) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(386) $n(388) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(389) $n(390) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(389) $n(392) $linkBW 90ms DropTail
-	if {$verbose} { puts -nonewline "780..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(390) $n(394) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(390) $n(395) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(391) $n(394) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(392) $n(393) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(396) $n(398) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(396) $n(400) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(396) $n(401) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(396) $n(404) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(397) $n(399) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(397) $n(404) $linkBW 480ms DropTail
-	if {$verbose} { puts -nonewline "790..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(397) $n(405) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(397) $n(406) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(398) $n(399) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(398) $n(400) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(398) $n(403) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(398) $n(406) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(398) $n(407) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(399) $n(400) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(399) $n(402) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(399) $n(404) $linkBW 50ms DropTail
-	if {$verbose} { puts -nonewline "800..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(399) $n(406) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(399) $n(408) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(400) $n(402) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(400) $n(406) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(400) $n(407) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(402) $n(403) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(402) $n(408) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(403) $n(406) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(403) $n(407) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(404) $n(405) $linkBW 460ms DropTail
-	if {$verbose} { puts -nonewline "810..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(404) $n(408) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(405) $n(408) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(406) $n(407) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(406) $n(408) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(407) $n(408) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(409) $n(410) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(409) $n(412) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(410) $n(411) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(411) $n(412) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(413) $n(417) $linkBW 420ms DropTail
-	if {$verbose} { puts -nonewline "820..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(414) $n(417) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(414) $n(418) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(415) $n(416) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(415) $n(418) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(416) $n(417) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(416) $n(419) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(418) $n(419) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(420) $n(423) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(420) $n(427) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(421) $n(422) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "830..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(421) $n(423) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(421) $n(424) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(421) $n(428) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(422) $n(425) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(422) $n(427) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(422) $n(428) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(423) $n(424) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(423) $n(426) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(424) $n(428) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(425) $n(427) $linkBW 170ms DropTail
-	if {$verbose} { puts -nonewline "840..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(426) $n(428) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(429) $n(430) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(429) $n(431) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(429) $n(433) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(429) $n(434) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(430) $n(432) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(430) $n(434) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(430) $n(435) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(431) $n(432) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(432) $n(433) $linkBW 370ms DropTail
-	if {$verbose} { puts -nonewline "850..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(432) $n(434) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(432) $n(435) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(436) $n(437) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(436) $n(442) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(436) $n(443) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(437) $n(440) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(437) $n(442) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(437) $n(443) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(438) $n(440) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(439) $n(443) $linkBW 120ms DropTail
-	if {$verbose} { puts -nonewline "860..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(440) $n(441) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(441) $n(443) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(444) $n(446) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(444) $n(449) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(444) $n(451) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(445) $n(446) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(445) $n(447) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(446) $n(451) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(447) $n(449) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(447) $n(450) $linkBW 380ms DropTail
-	if {$verbose} { puts -nonewline "870..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(447) $n(451) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(448) $n(449) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(448) $n(450) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(449) $n(451) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(452) $n(453) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(452) $n(455) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(452) $n(457) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(452) $n(459) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(453) $n(455) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(453) $n(456) $linkBW 240ms DropTail
-	if {$verbose} { puts -nonewline "880..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(453) $n(458) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(453) $n(459) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(454) $n(455) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(454) $n(458) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(455) $n(456) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(455) $n(457) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(455) $n(458) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(456) $n(457) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(457) $n(458) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(458) $n(459) $linkBW 490ms DropTail
-	if {$verbose} { puts -nonewline "890..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(460) $n(461) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(460) $n(462) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(460) $n(463) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(460) $n(464) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(460) $n(466) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(461) $n(462) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(461) $n(464) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(461) $n(465) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(461) $n(466) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(462) $n(463) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "900..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(462) $n(465) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(462) $n(466) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(465) $n(466) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(467) $n(469) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(467) $n(472) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(467) $n(475) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(469) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(470) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(471) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(472) $linkBW 100ms DropTail
-	if {$verbose} { puts -nonewline "910..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(468) $n(473) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(468) $n(475) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(471) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(472) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(469) $n(474) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(471) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(472) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(470) $n(475) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(471) $n(472) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(472) $n(474) $linkBW 450ms DropTail
-	if {$verbose} { puts -nonewline "920..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(473) $n(475) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(474) $n(475) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(476) $n(477) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(476) $n(479) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(478) $n(482) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(479) $n(480) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(479) $n(481) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(479) $n(482) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(483) $n(487) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(483) $n(488) $linkBW 490ms DropTail
-	if {$verbose} { puts -nonewline "930..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(484) $n(487) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(484) $n(488) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(485) $n(488) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(485) $n(489) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(486) $n(489) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(486) $n(490) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(486) $n(491) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(487) $n(491) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(488) $n(489) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(488) $n(491) $linkBW 360ms DropTail
-	if {$verbose} { puts -nonewline "940..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(490) $n(491) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(492) $n(496) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(492) $n(497) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(492) $n(499) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(493) $n(494) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(493) $n(496) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(493) $n(497) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(495) $n(497) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(495) $n(499) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(496) $n(497) $linkBW 170ms DropTail
-	if {$verbose} { puts -nonewline "950..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(497) $n(498) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(498) $n(499) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(548) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(538) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(531) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(526) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(501) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(502) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(503) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(504) $linkBW 210ms DropTail
-	if {$verbose} { puts -nonewline "960..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(500) $n(511) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(514) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(515) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(500) $n(517) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(556) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(502) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(510) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(511) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(512) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(513) $linkBW 270ms DropTail
-	if {$verbose} { puts -nonewline "970..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(501) $n(514) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(516) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(517) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(501) $n(519) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(502) $n(599) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(502) $n(585) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(502) $n(576) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(502) $n(573) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(502) $n(561) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(502) $n(509) $linkBW 440ms DropTail
-	if {$verbose} { puts -nonewline "980..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(502) $n(518) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(502) $n(519) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(503) $n(615) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(503) $n(607) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(503) $n(508) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(503) $n(510) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(503) $n(513) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(504) $n(620) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(504) $n(506) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(504) $n(508) $linkBW 220ms DropTail
-	if {$verbose} { puts -nonewline "990..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(504) $n(509) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(504) $n(513) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(504) $n(515) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(504) $n(518) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(504) $n(519) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(647) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(644) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(636) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(506) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(508) $linkBW 260ms DropTail
-	if {$verbose} { puts -nonewline "1000..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(505) $n(512) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(513) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(514) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(515) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(516) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(505) $n(517) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(655) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(507) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(509) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(510) $linkBW 240ms DropTail
-	if {$verbose} { puts -nonewline "1010..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(506) $n(512) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(514) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(515) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(516) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(517) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(506) $n(519) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(507) $n(668) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(507) $n(659) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(507) $n(513) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(507) $n(515) $linkBW 190ms DropTail
-	if {$verbose} { puts -nonewline "1020..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(507) $n(517) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(508) $n(675) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(508) $n(513) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(508) $n(514) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(508) $n(517) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(508) $n(518) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(508) $n(519) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(509) $n(686) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(509) $n(513) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(509) $n(514) $linkBW 120ms DropTail
-	if {$verbose} { puts -nonewline "1030..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(509) $n(518) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(713) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(709) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(702) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(697) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(511) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(512) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(513) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(515) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(510) $n(519) $linkBW 50ms DropTail
-	if {$verbose} { puts -nonewline "1040..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(511) $n(722) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(511) $n(513) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(511) $n(516) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(511) $n(517) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(511) $n(518) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(512) $n(737) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(512) $n(732) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(512) $n(518) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(513) $n(778) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(513) $n(773) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "1050..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(513) $n(765) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(513) $n(757) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(513) $n(748) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(513) $n(516) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(513) $n(518) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(845) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(838) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(833) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(820) $linkBW 670ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(811) $linkBW 320ms DropTail
-	if {$verbose} { puts -nonewline "1060..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(514) $n(799) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(790) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(786) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(515) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(516) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(514) $n(517) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(515) $n(855) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(515) $n(854) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(515) $n(519) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(516) $n(899) $linkBW 390ms DropTail
-	if {$verbose} { puts -nonewline "1070..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(516) $n(893) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(516) $n(882) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(516) $n(880) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(516) $n(865) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(516) $n(518) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(516) $n(519) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(517) $n(940) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(517) $n(934) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(517) $n(925) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(517) $n(918) $linkBW 280ms DropTail
-	if {$verbose} { puts -nonewline "1080..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(517) $n(909) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(517) $n(518) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(517) $n(519) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(518) $n(983) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(518) $n(974) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(518) $n(970) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(518) $n(962) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(518) $n(954) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(518) $n(952) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(519) $n(994) $linkBW 470ms DropTail
-	if {$verbose} { puts -nonewline "1090..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(520) $n(521) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(520) $n(526) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(522) $n(523) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(522) $n(524) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(522) $n(525) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(523) $n(524) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(523) $n(525) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(524) $n(526) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(525) $n(526) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(527) $n(532) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "1100..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(527) $n(533) $linkBW 720ms DropTail
-	$ns duplex-link-of-interfaces $n(528) $n(529) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(528) $n(531) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(528) $n(534) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(528) $n(535) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(529) $n(530) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(529) $n(531) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(529) $n(534) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(530) $n(532) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(530) $n(534) $linkBW 280ms DropTail
-	if {$verbose} { puts -nonewline "1110..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(531) $n(532) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(531) $n(533) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(531) $n(535) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(532) $n(533) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(532) $n(534) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(534) $n(535) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(538) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(539) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(536) $n(542) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(537) $n(538) $linkBW 440ms DropTail
-	if {$verbose} { puts -nonewline "1120..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(537) $n(542) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(539) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(540) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(541) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(538) $n(542) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(539) $n(540) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(539) $n(541) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(539) $n(542) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(540) $n(541) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(540) $n(542) $linkBW 190ms DropTail
-	if {$verbose} { puts -nonewline "1130..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(541) $n(542) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(543) $n(545) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(543) $n(548) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(543) $n(550) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(544) $n(545) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(544) $n(546) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(544) $n(548) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(545) $n(548) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(545) $n(550) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(546) $n(549) $linkBW 450ms DropTail
-	if {$verbose} { puts -nonewline "1140..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(546) $n(550) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(547) $n(550) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(548) $n(549) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(548) $n(550) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(548) $n(551) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(549) $n(550) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(552) $n(554) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(552) $n(555) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(552) $n(557) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(552) $n(558) $linkBW 350ms DropTail
-	if {$verbose} { puts -nonewline "1150..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(553) $n(554) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(553) $n(556) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(553) $n(558) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(553) $n(559) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(554) $n(557) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(554) $n(558) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(555) $n(557) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(555) $n(558) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(556) $n(557) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(556) $n(558) $linkBW 550ms DropTail
-	if {$verbose} { puts -nonewline "1160..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(556) $n(559) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(558) $n(559) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(560) $n(563) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(561) $n(562) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(561) $n(565) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(561) $n(566) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(562) $n(566) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(562) $n(567) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(562) $n(568) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(563) $n(566) $linkBW 540ms DropTail
-	if {$verbose} { puts -nonewline "1170..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(563) $n(568) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(564) $n(566) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(565) $n(566) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(565) $n(567) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(566) $n(567) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(566) $n(568) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(567) $n(568) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(569) $n(570) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(569) $n(571) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(571) $n(572) $linkBW 210ms DropTail
-	if {$verbose} { puts -nonewline "1180..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(572) $n(573) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(574) $n(576) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(574) $n(577) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(574) $n(578) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(574) $n(579) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(574) $n(581) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(575) $n(577) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(575) $n(580) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(576) $n(577) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(576) $n(580) $linkBW 410ms DropTail
-	if {$verbose} { puts -nonewline "1190..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(577) $n(579) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(578) $n(581) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(580) $n(581) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(582) $n(584) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(582) $n(585) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(582) $n(590) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(583) $n(585) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(583) $n(586) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(583) $n(587) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(584) $n(585) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "1200..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(584) $n(588) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(584) $n(590) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(585) $n(588) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(585) $n(590) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(586) $n(589) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(587) $n(589) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(588) $n(589) $linkBW 800ms DropTail
-	$ns duplex-link-of-interfaces $n(591) $n(594) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(591) $n(597) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(591) $n(598) $linkBW 650ms DropTail
-	if {$verbose} { puts -nonewline "1210..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(592) $n(593) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(592) $n(594) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(592) $n(597) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(592) $n(598) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(593) $n(598) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(593) $n(599) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(594) $n(598) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(594) $n(599) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(595) $n(599) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(596) $n(597) $linkBW 450ms DropTail
-	if {$verbose} { puts -nonewline "1220..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(596) $n(598) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(597) $n(598) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(597) $n(599) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(600) $n(605) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(600) $n(607) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(601) $n(603) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(601) $n(604) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(601) $n(606) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(601) $n(607) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(602) $n(604) $linkBW 480ms DropTail
-	if {$verbose} { puts -nonewline "1230..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(602) $n(606) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(603) $n(604) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(604) $n(605) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(606) $n(607) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(608) $n(612) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(608) $n(613) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(608) $n(615) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(609) $n(610) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(609) $n(612) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(610) $n(611) $linkBW 20ms DropTail
-	if {$verbose} { puts -nonewline "1240..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(610) $n(613) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(610) $n(614) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(611) $n(613) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(612) $n(613) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(613) $n(614) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(613) $n(615) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(616) $n(618) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(616) $n(620) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(617) $n(621) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(617) $n(622) $linkBW 140ms DropTail
-	if {$verbose} { puts -nonewline "1250..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(618) $n(620) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(618) $n(621) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(619) $n(623) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(620) $n(621) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(620) $n(622) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(621) $n(622) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(621) $n(623) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(625) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(627) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(629) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "1260..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(624) $n(633) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(634) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(624) $n(637) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(626) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(627) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(630) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(635) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(625) $n(636) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(626) $n(630) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(626) $n(632) $linkBW 290ms DropTail
-	if {$verbose} { puts -nonewline "1270..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(626) $n(637) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(631) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(627) $n(635) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(628) $n(630) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(628) $n(631) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(628) $n(632) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(628) $n(634) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(628) $n(635) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(629) $n(630) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(629) $n(631) $linkBW 370ms DropTail
-	if {$verbose} { puts -nonewline "1280..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(629) $n(632) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(629) $n(633) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(629) $n(637) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(630) $n(631) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(630) $n(635) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(630) $n(637) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(631) $n(633) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(631) $n(637) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(632) $n(633) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(632) $n(635) $linkBW 100ms DropTail
-	if {$verbose} { puts -nonewline "1290..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(633) $n(634) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(633) $n(636) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(633) $n(637) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(638) $n(642) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(638) $n(643) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(639) $n(642) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(639) $n(643) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(639) $n(646) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(640) $n(643) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(641) $n(642) $linkBW 410ms DropTail
-	if {$verbose} { puts -nonewline "1300..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(641) $n(646) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(642) $n(645) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(642) $n(646) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(643) $n(644) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(645) $n(646) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(648) $n(649) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(648) $n(650) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(648) $n(655) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(649) $n(650) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(649) $n(652) $linkBW 220ms DropTail
-	if {$verbose} { puts -nonewline "1310..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(649) $n(653) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(649) $n(655) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(650) $n(651) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(650) $n(654) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(650) $n(655) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(651) $n(655) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(652) $n(653) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(652) $n(655) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(653) $n(655) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(656) $n(657) $linkBW 310ms DropTail
-	if {$verbose} { puts -nonewline "1320..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(656) $n(661) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(657) $n(658) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(657) $n(660) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(657) $n(661) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(659) $n(660) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(659) $n(661) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(660) $n(661) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(662) $n(664) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(662) $n(665) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(662) $n(666) $linkBW 70ms DropTail
-	if {$verbose} { puts -nonewline "1330..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(662) $n(670) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(663) $n(666) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(663) $n(668) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(663) $n(671) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(664) $n(668) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(664) $n(670) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(665) $n(671) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(666) $n(667) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(666) $n(671) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(667) $n(668) $linkBW 450ms DropTail
-	if {$verbose} { puts -nonewline "1340..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(667) $n(670) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(667) $n(671) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(668) $n(669) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(668) $n(671) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(669) $n(670) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(669) $n(671) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(670) $n(671) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(672) $n(674) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(672) $n(675) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(673) $n(676) $linkBW 410ms DropTail
-	if {$verbose} { puts -nonewline "1350..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(673) $n(678) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(673) $n(679) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(674) $n(676) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(674) $n(677) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(674) $n(678) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(675) $n(676) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(675) $n(677) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(675) $n(678) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(675) $n(679) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(677) $n(678) $linkBW 80ms DropTail
-	if {$verbose} { puts -nonewline "1360..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(677) $n(679) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(682) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(683) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(685) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(680) $n(687) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(681) $n(682) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(681) $n(683) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(681) $n(687) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(682) $n(685) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(682) $n(686) $linkBW 110ms DropTail
-	if {$verbose} { puts -nonewline "1370..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(684) $n(685) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(685) $n(686) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(685) $n(687) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(688) $n(693) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(688) $n(695) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(688) $n(696) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(689) $n(690) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(689) $n(697) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(690) $n(696) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(691) $n(693) $linkBW 540ms DropTail
-	if {$verbose} { puts -nonewline "1380..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(691) $n(695) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(692) $n(696) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(693) $n(696) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(694) $n(695) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(694) $n(697) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(695) $n(696) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(696) $n(697) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(698) $n(703) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(698) $n(704) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(699) $n(702) $linkBW 330ms DropTail
-	if {$verbose} { puts -nonewline "1390..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(700) $n(702) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(701) $n(702) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(701) $n(704) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(702) $n(703) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(702) $n(704) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(705) $n(706) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(705) $n(708) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(705) $n(710) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(706) $n(707) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(706) $n(710) $linkBW 230ms DropTail
-	if {$verbose} { puts -nonewline "1400..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(706) $n(711) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(707) $n(710) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(707) $n(711) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(708) $n(709) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(710) $n(711) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(712) $n(713) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(712) $n(714) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(712) $n(716) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(712) $n(718) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(712) $n(719) $linkBW 90ms DropTail
-	if {$verbose} { puts -nonewline "1410..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(713) $n(714) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(713) $n(719) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(714) $n(716) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(714) $n(718) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(714) $n(719) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(715) $n(717) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(716) $n(717) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(720) $n(721) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(720) $n(722) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(720) $n(723) $linkBW 370ms DropTail
-	if {$verbose} { puts -nonewline "1420..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(720) $n(726) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(720) $n(727) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(721) $n(722) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(721) $n(724) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(721) $n(727) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(722) $n(724) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(722) $n(726) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(723) $n(726) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(724) $n(725) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(724) $n(726) $linkBW 190ms DropTail
-	if {$verbose} { puts -nonewline "1430..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(725) $n(726) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(725) $n(727) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(728) $n(730) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(728) $n(732) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(728) $n(733) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(728) $n(734) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(728) $n(736) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(729) $n(732) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(729) $n(736) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(730) $n(733) $linkBW 420ms DropTail
-	if {$verbose} { puts -nonewline "1440..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(730) $n(734) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(731) $n(736) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(732) $n(735) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(733) $n(735) $linkBW 600ms DropTail
-	$ns duplex-link-of-interfaces $n(734) $n(735) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(734) $n(736) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(735) $n(736) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(737) $n(741) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(737) $n(742) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(737) $n(743) $linkBW 500ms DropTail
-	if {$verbose} { puts -nonewline "1450..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(738) $n(742) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(739) $n(740) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(739) $n(742) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(740) $n(741) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(740) $n(742) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(740) $n(743) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(741) $n(743) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(744) $n(745) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(744) $n(746) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(744) $n(747) $linkBW 130ms DropTail
-	if {$verbose} { puts -nonewline "1460..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(744) $n(748) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(745) $n(747) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(746) $n(748) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(749) $n(750) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(749) $n(754) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(749) $n(755) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(749) $n(756) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(750) $n(753) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(750) $n(754) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(750) $n(755) $linkBW 260ms DropTail
-	if {$verbose} { puts -nonewline "1470..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(750) $n(757) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(751) $n(756) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(752) $n(753) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(752) $n(754) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(752) $n(757) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(753) $n(757) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(754) $n(756) $linkBW 30ms DropTail
-	$ns duplex-link-of-interfaces $n(756) $n(757) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(758) $n(760) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(758) $n(762) $linkBW 170ms DropTail
-	if {$verbose} { puts -nonewline "1480..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(758) $n(764) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(758) $n(767) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(759) $n(764) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(759) $n(766) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(760) $n(761) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(760) $n(763) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(761) $n(762) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(761) $n(765) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(762) $n(764) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(762) $n(767) $linkBW 280ms DropTail
-	if {$verbose} { puts -nonewline "1490..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(763) $n(764) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(764) $n(767) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(769) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(771) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(772) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(773) $linkBW 20ms DropTail
-	$ns duplex-link-of-interfaces $n(768) $n(775) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(769) $n(773) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(769) $n(776) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(770) $n(772) $linkBW 480ms DropTail
-	if {$verbose} { puts -nonewline "1500..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(770) $n(773) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(770) $n(774) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(771) $n(773) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(771) $n(774) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(771) $n(776) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(772) $n(774) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(772) $n(775) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(773) $n(774) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(774) $n(775) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(777) $n(778) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "1510..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(777) $n(781) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(777) $n(782) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(778) $n(781) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(778) $n(782) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(779) $n(783) $linkBW 640ms DropTail
-	$ns duplex-link-of-interfaces $n(780) $n(781) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(781) $n(783) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(784) $n(786) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(784) $n(788) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(784) $n(789) $linkBW 280ms DropTail
-	if {$verbose} { puts -nonewline "1520..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(785) $n(789) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(786) $n(788) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(787) $n(789) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(790) $n(792) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(790) $n(793) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(790) $n(795) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(791) $n(793) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(791) $n(795) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(792) $n(793) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(792) $n(794) $linkBW 20ms DropTail
-	if {$verbose} { puts -nonewline "1530..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(792) $n(795) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(793) $n(795) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(796) $n(800) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(797) $n(798) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(797) $n(799) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(797) $n(801) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(798) $n(800) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(799) $n(800) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(800) $n(801) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(802) $n(803) $linkBW 110ms DropTail
-	if {$verbose} { puts -nonewline "1540..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(802) $n(808) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(802) $n(809) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(802) $n(811) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(802) $n(813) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(802) $n(815) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(803) $n(805) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(803) $n(806) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(803) $n(808) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(803) $n(809) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(803) $n(810) $linkBW 530ms DropTail
-	if {$verbose} { puts -nonewline "1550..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(803) $n(811) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(803) $n(813) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(803) $n(814) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(803) $n(815) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(804) $n(808) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(804) $n(809) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(804) $n(811) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(804) $n(814) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(804) $n(816) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(805) $n(806) $linkBW 130ms DropTail
-	if {$verbose} { puts -nonewline "1560..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(805) $n(807) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(805) $n(810) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(805) $n(812) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(805) $n(814) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(806) $n(807) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(806) $n(809) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(806) $n(810) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(806) $n(814) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(806) $n(815) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(807) $n(808) $linkBW 220ms DropTail
-	if {$verbose} { puts -nonewline "1570..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(807) $n(812) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(807) $n(813) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(807) $n(814) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(808) $n(811) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(808) $n(813) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(808) $n(814) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(808) $n(816) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(809) $n(810) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(809) $n(815) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(809) $n(816) $linkBW 300ms DropTail
-	if {$verbose} { puts -nonewline "1580..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(810) $n(814) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(811) $n(814) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(811) $n(815) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(811) $n(816) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(812) $n(814) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(812) $n(815) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(813) $n(815) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(817) $n(820) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(817) $n(821) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(817) $n(823) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "1590..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(818) $n(822) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(822) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(825) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(819) $n(826) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(820) $n(821) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(821) $n(824) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(823) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(824) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(822) $n(826) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(823) $n(824) $linkBW 610ms DropTail
-	if {$verbose} { puts -nonewline "1600..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(825) $n(826) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(827) $n(831) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(827) $n(832) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(827) $n(834) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(828) $n(832) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(828) $n(833) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(828) $n(834) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(829) $n(830) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(829) $n(831) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(829) $n(832) $linkBW 60ms DropTail
-	if {$verbose} { puts -nonewline "1610..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(830) $n(833) $linkBW 760ms DropTail
-	$ns duplex-link-of-interfaces $n(831) $n(832) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(831) $n(833) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(835) $n(838) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(835) $n(839) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(835) $n(840) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(836) $n(838) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(836) $n(839) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(836) $n(841) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(837) $n(838) $linkBW 250ms DropTail
-	if {$verbose} { puts -nonewline "1620..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(837) $n(840) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(838) $n(840) $linkBW 690ms DropTail
-	$ns duplex-link-of-interfaces $n(839) $n(840) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(842) $n(847) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(843) $n(846) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(844) $n(845) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(844) $n(846) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(844) $n(847) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(845) $n(847) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(848) $n(850) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "1630..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(849) $n(852) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(850) $n(851) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(850) $n(852) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(851) $n(853) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(851) $n(854) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(852) $n(854) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(853) $n(854) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(855) $n(856) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(855) $n(858) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(855) $n(859) $linkBW 370ms DropTail
-	if {$verbose} { puts -nonewline "1640..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(855) $n(863) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(856) $n(860) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(856) $n(861) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(856) $n(862) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(857) $n(859) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(857) $n(861) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(858) $n(861) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(858) $n(863) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(859) $n(863) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(860) $n(862) $linkBW 200ms DropTail
-	if {$verbose} { puts -nonewline "1650..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(860) $n(863) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(864) $n(865) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(864) $n(866) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(864) $n(867) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(864) $n(868) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(865) $n(866) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(865) $n(869) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(865) $n(870) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(866) $n(870) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(867) $n(868) $linkBW 110ms DropTail
-	if {$verbose} { puts -nonewline "1660..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(868) $n(869) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(868) $n(870) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(869) $n(870) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(872) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(873) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(875) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(877) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(871) $n(880) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(872) $n(873) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(872) $n(875) $linkBW 620ms DropTail
-	if {$verbose} { puts -nonewline "1670..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(872) $n(879) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(872) $n(880) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(874) $n(876) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(874) $n(879) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(874) $n(881) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(877) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(878) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(880) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(875) $n(881) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(876) $n(880) $linkBW 530ms DropTail
-	if {$verbose} { puts -nonewline "1680..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(877) $n(878) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(877) $n(880) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(878) $n(879) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(882) $n(884) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(882) $n(886) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(882) $n(887) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(882) $n(888) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(882) $n(890) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(883) $n(884) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(883) $n(885) $linkBW 250ms DropTail
-	if {$verbose} { puts -nonewline "1690..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(883) $n(886) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(883) $n(887) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(883) $n(888) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(883) $n(889) $linkBW 530ms DropTail
-	$ns duplex-link-of-interfaces $n(884) $n(885) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(885) $n(886) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(885) $n(889) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(886) $n(887) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(886) $n(888) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(887) $n(888) $linkBW 410ms DropTail
-	if {$verbose} { puts -nonewline "1700..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(887) $n(890) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(888) $n(890) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(891) $n(895) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(891) $n(896) $linkBW 510ms DropTail
-	$ns duplex-link-of-interfaces $n(892) $n(893) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(892) $n(894) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(892) $n(896) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(893) $n(895) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(897) $n(899) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(898) $n(899) $linkBW 100ms DropTail
-	if {$verbose} { puts -nonewline "1710..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(898) $n(901) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(900) $n(901) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(900) $n(903) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(901) $n(902) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(901) $n(903) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(902) $n(903) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(904) $n(905) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(905) $n(906) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(905) $n(909) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(906) $n(907) $linkBW 500ms DropTail
-	if {$verbose} { puts -nonewline "1720..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(906) $n(910) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(907) $n(908) $linkBW 190ms DropTail
-	$ns duplex-link-of-interfaces $n(908) $n(910) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(909) $n(910) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(911) $n(913) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(911) $n(917) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(912) $n(913) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(912) $n(916) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(912) $n(917) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(912) $n(920) $linkBW 320ms DropTail
-	if {$verbose} { puts -nonewline "1730..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(912) $n(922) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(913) $n(915) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(913) $n(916) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(913) $n(919) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(913) $n(922) $linkBW 700ms DropTail
-	$ns duplex-link-of-interfaces $n(914) $n(918) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(914) $n(923) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(915) $n(918) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(915) $n(919) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(915) $n(921) $linkBW 180ms DropTail
-	if {$verbose} { puts -nonewline "1740..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(915) $n(923) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(916) $n(917) $linkBW 380ms DropTail
-	$ns duplex-link-of-interfaces $n(916) $n(919) $linkBW 150ms DropTail
-	$ns duplex-link-of-interfaces $n(916) $n(920) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(916) $n(921) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(916) $n(922) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(917) $n(918) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(917) $n(919) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(917) $n(920) $linkBW 140ms DropTail
-	$ns duplex-link-of-interfaces $n(917) $n(921) $linkBW 290ms DropTail
-	if {$verbose} { puts -nonewline "1750..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(917) $n(923) $linkBW 60ms DropTail
-	$ns duplex-link-of-interfaces $n(918) $n(921) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(918) $n(922) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(919) $n(921) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(919) $n(922) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(919) $n(923) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(920) $n(921) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(920) $n(922) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(920) $n(923) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(921) $n(922) $linkBW 350ms DropTail
-	if {$verbose} { puts -nonewline "1760..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(922) $n(923) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(924) $n(925) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(924) $n(926) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(924) $n(927) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(924) $n(929) $linkBW 100ms DropTail
-	$ns duplex-link-of-interfaces $n(925) $n(929) $linkBW 520ms DropTail
-	$ns duplex-link-of-interfaces $n(927) $n(928) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(929) $n(930) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(931) $n(933) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(931) $n(935) $linkBW 500ms DropTail
-	if {$verbose} { puts -nonewline "1770..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(932) $n(933) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(932) $n(938) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(933) $n(935) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(933) $n(937) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(933) $n(938) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(934) $n(935) $linkBW 320ms DropTail
-	$ns duplex-link-of-interfaces $n(935) $n(936) $linkBW 470ms DropTail
-	$ns duplex-link-of-interfaces $n(936) $n(939) $linkBW 450ms DropTail
-	$ns duplex-link-of-interfaces $n(937) $n(939) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(940) $n(941) $linkBW 340ms DropTail
-	if {$verbose} { puts -nonewline "1780..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(941) $n(942) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(942) $n(943) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(944) $n(947) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(944) $n(948) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(944) $n(950) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(945) $n(948) $linkBW 280ms DropTail
-	$ns duplex-link-of-interfaces $n(945) $n(950) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(946) $n(949) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(946) $n(952) $linkBW 290ms DropTail
-	$ns duplex-link-of-interfaces $n(947) $n(948) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "1790..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(947) $n(950) $linkBW 50ms DropTail
-	$ns duplex-link-of-interfaces $n(947) $n(951) $linkBW 70ms DropTail
-	$ns duplex-link-of-interfaces $n(948) $n(950) $linkBW 480ms DropTail
-	$ns duplex-link-of-interfaces $n(948) $n(951) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(951) $n(952) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(953) $n(954) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(953) $n(955) $linkBW 180ms DropTail
-	$ns duplex-link-of-interfaces $n(953) $n(957) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(953) $n(959) $linkBW 360ms DropTail
-	$ns duplex-link-of-interfaces $n(953) $n(960) $linkBW 310ms DropTail
-	if {$verbose} { puts -nonewline "1800..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(954) $n(955) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(954) $n(957) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(954) $n(959) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(954) $n(960) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(955) $n(956) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(955) $n(957) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(955) $n(960) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(956) $n(957) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(956) $n(958) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(956) $n(960) $linkBW 520ms DropTail
-	if {$verbose} { puts -nonewline "1810..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(956) $n(961) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(959) $n(960) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(960) $n(961) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(962) $n(964) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(962) $n(965) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(962) $n(967) $linkBW 490ms DropTail
-	$ns duplex-link-of-interfaces $n(963) $n(966) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(963) $n(967) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(963) $n(968) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(964) $n(965) $linkBW 400ms DropTail
-	if {$verbose} { puts -nonewline "1820..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(964) $n(966) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(964) $n(968) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(965) $n(968) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(966) $n(968) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(969) $n(971) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(970) $n(971) $linkBW 270ms DropTail
-	$ns duplex-link-of-interfaces $n(972) $n(973) $linkBW 560ms DropTail
-	$ns duplex-link-of-interfaces $n(972) $n(976) $linkBW 610ms DropTail
-	$ns duplex-link-of-interfaces $n(972) $n(977) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(973) $n(974) $linkBW 490ms DropTail
-	if {$verbose} { puts -nonewline "1830..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(973) $n(975) $linkBW 500ms DropTail
-	$ns duplex-link-of-interfaces $n(973) $n(976) $linkBW 430ms DropTail
-	$ns duplex-link-of-interfaces $n(974) $n(976) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(978) $n(979) $linkBW 660ms DropTail
-	$ns duplex-link-of-interfaces $n(978) $n(981) $linkBW 630ms DropTail
-	$ns duplex-link-of-interfaces $n(978) $n(984) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(978) $n(985) $linkBW 110ms DropTail
-	$ns duplex-link-of-interfaces $n(978) $n(987) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(978) $n(990) $linkBW 200ms DropTail
-	$ns duplex-link-of-interfaces $n(979) $n(982) $linkBW 510ms DropTail
-	if {$verbose} { puts -nonewline "1840..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(979) $n(985) $linkBW 570ms DropTail
-	$ns duplex-link-of-interfaces $n(979) $n(987) $linkBW 620ms DropTail
-	$ns duplex-link-of-interfaces $n(979) $n(988) $linkBW 390ms DropTail
-	$ns duplex-link-of-interfaces $n(979) $n(989) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(980) $n(982) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(980) $n(983) $linkBW 90ms DropTail
-	$ns duplex-link-of-interfaces $n(980) $n(985) $linkBW 460ms DropTail
-	$ns duplex-link-of-interfaces $n(980) $n(986) $linkBW 410ms DropTail
-	$ns duplex-link-of-interfaces $n(980) $n(987) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(980) $n(988) $linkBW 430ms DropTail
-	if {$verbose} { puts -nonewline "1850..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(980) $n(991) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(981) $n(983) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(981) $n(985) $linkBW 550ms DropTail
-	$ns duplex-link-of-interfaces $n(981) $n(986) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(981) $n(987) $linkBW 580ms DropTail
-	$ns duplex-link-of-interfaces $n(981) $n(988) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(981) $n(989) $linkBW 160ms DropTail
-	$ns duplex-link-of-interfaces $n(981) $n(991) $linkBW 10ms DropTail
-	$ns duplex-link-of-interfaces $n(982) $n(983) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(982) $n(984) $linkBW 350ms DropTail
-	if {$verbose} { puts -nonewline "1860..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(982) $n(985) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(982) $n(986) $linkBW 300ms DropTail
-	$ns duplex-link-of-interfaces $n(982) $n(987) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(982) $n(988) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(983) $n(984) $linkBW 10ms DropTail
-	$ns duplex-link-of-interfaces $n(983) $n(989) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(984) $n(986) $linkBW 340ms DropTail
-	$ns duplex-link-of-interfaces $n(984) $n(987) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(984) $n(988) $linkBW 370ms DropTail
-	$ns duplex-link-of-interfaces $n(984) $n(991) $linkBW 330ms DropTail
-	if {$verbose} { puts -nonewline "1870..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(985) $n(986) $linkBW 330ms DropTail
-	$ns duplex-link-of-interfaces $n(985) $n(988) $linkBW 220ms DropTail
-	$ns duplex-link-of-interfaces $n(985) $n(989) $linkBW 400ms DropTail
-	$ns duplex-link-of-interfaces $n(986) $n(990) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(986) $n(991) $linkBW 240ms DropTail
-	$ns duplex-link-of-interfaces $n(987) $n(990) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(987) $n(991) $linkBW 590ms DropTail
-	$ns duplex-link-of-interfaces $n(988) $n(991) $linkBW 350ms DropTail
-	$ns duplex-link-of-interfaces $n(989) $n(991) $linkBW 170ms DropTail
-	$ns duplex-link-of-interfaces $n(990) $n(991) $linkBW 500ms DropTail
-	if {$verbose} { puts -nonewline "1880..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(992) $n(994) $linkBW 540ms DropTail
-	$ns duplex-link-of-interfaces $n(992) $n(995) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(992) $n(999) $linkBW 420ms DropTail
-	$ns duplex-link-of-interfaces $n(993) $n(994) $linkBW 440ms DropTail
-	$ns duplex-link-of-interfaces $n(993) $n(995) $linkBW 250ms DropTail
-	$ns duplex-link-of-interfaces $n(993) $n(996) $linkBW 230ms DropTail
-	$ns duplex-link-of-interfaces $n(993) $n(997) $linkBW 130ms DropTail
-	$ns duplex-link-of-interfaces $n(993) $n(999) $linkBW 210ms DropTail
-	$ns duplex-link-of-interfaces $n(994) $n(995) $linkBW 310ms DropTail
-	$ns duplex-link-of-interfaces $n(994) $n(998) $linkBW 320ms DropTail
-	if {$verbose} { puts -nonewline "1890..."; flush stdout }
-	$ns duplex-link-of-interfaces $n(996) $n(997) $linkBW 120ms DropTail
-	$ns duplex-link-of-interfaces $n(996) $n(998) $linkBW 40ms DropTail
-	$ns duplex-link-of-interfaces $n(997) $n(998) $linkBW 80ms DropTail
-	$ns duplex-link-of-interfaces $n(997) $n(999) $linkBW 260ms DropTail
-	$ns duplex-link-of-interfaces $n(998) $n(999) $linkBW 250ms DropTail
-
-	if {$verbose} { 
-		puts -nonewline "1895..."
-		flush stdout
-		puts "starting"
-	}
-	return 1000}
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/userintercdf1 ns-allinone-2.34-qjump/ns-2.34/tcl/test/userintercdf1
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/userintercdf1	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/userintercdf1	1970-01-01 01:00:00.000000000 +0100
@@ -1,177 +0,0 @@
-1.7 210 0.152064
-3.4 161 0.268646
-5.1 135 0.366401
-6.8 104 0.441709
-8.5 87 0.504707
-10.2 71 0.556119
-11.9 75 0.610427
-13.6 53 0.648805
-15.3 50 0.685011
-17 47 0.719044
-18.7 38 0.74656
-20.4 25 0.764663
-22.1 22 0.780594
-23.8 31 0.803041
-25.5 21 0.818248
-27.2 13 0.827661
-28.9 16 0.839247
-30.6 18 0.852281
-32.3 15 0.863143
-34 0 0.878349
-35.7 16 0.889935
-37.4 10 0.897176
-39.1 6 0.901521
-40.8 8 0.907314
-42.5 11 0.915279
-44.2 10 0.92252
-45.9 9 0.929037
-47.6 7 0.934106
-49.3 6 0.93845
-51 3 0.940623
-52.7 7 0.945692
-54.4 5 0.949312
-56.1 3 0.951484
-57.8 5 0.955105
-59.5 0 0.955105
-61.2 3 0.957277
-62.9 4 0.960174
-64.6 6 0.964518
-66.3 3 0.966691
-68 4 0.969587
-69.7 3 0.97176
-71.4 2 0.973208
-73.1 1 0.973932
-74.8 1 0.974656
-76.5 2 0.976104
-78.2 1 0.976828
-79.9 3 0.979001
-81.6 1 0.979725
-83.3 4 0.982621
-85 1 0.983345
-86.7 0 0.983345
-88.4 2 0.984794
-90.1 1 0.985518
-91.8 1 0.986242
-93.5 3 0.988414
-95.2 0 0.988414
-96.9 1 0.989138
-98.6 2 0.990587
-100.3 1 0.991311
-102 0 0.991311
-103.7 1 0.992035
-105.4 0 0.992035
-107.1 0 0.992035
-108.8 0 0.992035
-110.5 0 0.992035
-112.2 0 0.992035
-113.9 1 0.992759
-115.6 0 0.992759
-117.3 1 0.993483
-119 0 0.993483
-120.7 2 0.994931
-122.4 0 0.994931
-124.1 0 0.994931
-125.8 0 0.994931
-127.5 0 0.994931
-129.2 0 0.994931
-130.9 0 0.994931
-132.6 0 0.994931
-134.3 0 0.994931
-136 0 0.994931
-137.7 0 0.994931
-139.4 0 0.994931
-141.1 1 0.995655
-142.8 0 0.995655
-144.5 0 0.995655
-146.2 0 0.995655
-147.9 0 0.995655
-149.6 1 0.996379
-151.3 1 0.997104
-153 0 0.997104
-154.7 0 0.997104
-156.4 0 0.997104
-158.1 0 0.997104
-159.8 0 0.997104
-161.5 0 0.997104
-163.2 2 0.998552
-164.9 0 0.998552
-166.6 0 0.998552
-168.3 0 0.998552
-170 0 0.998552
-171.7 1 0.999276
-173.4 0 0.999276
-175.1 0 0.999276
-176.8 0 0.999276
-178.5 0 0.999276
-180.2 0 0.999276
-181.9 0 0.999276
-183.6 0 0.999276
-185.3 0 0.999276
-187 0 0.999276
-188.7 0 0.999276
-190.4 0 0.999276
-192.1 0 0.999276
-193.8 0 0.999276
-195.5 0 0.999276
-197.2 0 0.999276
-198.9 0 0.999276
-200.6 0 0.999276
-202.3 0 0.999276
-204 0 0.999276
-205.7 0 0.999276
-207.4 0 0.999276
-209.1 0 0.999276
-210.8 0 0.999276
-212.5 0 0.999276
-214.2 0 0.999276
-215.9 0 0.999276
-217.6 0 0.999276
-219.3 0 0.999276
-221 0 0.999276
-222.7 0 0.999276
-224.4 0 0.999276
-226.1 0 0.999276
-227.8 0 0.999276
-229.5 0 0.999276
-231.2 0 0.999276
-232.9 0 0.999276
-234.6 0 0.999276
-236.3 0 0.999276
-238 0 0.999276
-239.7 0 0.999276
-241.4 0 0.999276
-243.1 0 0.999276
-244.8 0 0.999276
-246.5 0 0.999276
-248.2 0 0.999276
-249.9 0 0.999276
-251.6 0 0.999276
-253.3 0 0.999276
-255 0 0.999276
-256.7 0 0.999276
-258.4 0 0.999276
-260.1 0 0.999276
-261.8 0 0.999276
-263.5 0 0.999276
-265.2 0 0.999276
-266.9 0 0.999276
-268.6 0 0.999276
-270.3 0 0.999276
-272 0 0.999276
-273.7 0 0.999276
-275.4 0 0.999276
-277.1 0 0.999276
-278.8 0 0.999276
-280.5 0 0.999276
-282.2 0 0.999276
-283.9 0 0.999276
-285.6 0 0.999276
-287.3 0 0.999276
-289 0 0.999276
-290.7 0 0.999276
-292.4 0 0.999276
-294.1 0 0.999276
-295.8 0 0.999276
-297.5 0 0.999276
-299.2 0 0.999276
-300.9 1 1
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/webtrace-pglog ns-allinone-2.34-qjump/ns-2.34/tcl/test/webtrace-pglog
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/webtrace-pglog	2015-03-04 17:49:02.822750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/webtrace-pglog	1970-01-01 01:00:00.000000000 +0100
@@ -1,39 +0,0 @@
-0 0 2788 4
-0 1 124 2
-0 2 1250 2
-0 3 2624 2
-0 4 4889 2
-0 5 156 2
-0 6 935 2
-0 7 231 2
-0 8 1501 1
-0 9 1329 1
-0 10 1535 1
-0 11 3302 1
-0 12 1497 1
-0 13 5084 1
-0 14 2376 1
-0 15 1588 1
-0 16 1325 1
-0 17 51661 1
-0 18 15173 1
-0 19 991 1
-0 20 647 1
-0 21 17756 1
-0 22 647 1
-0 23 617 1
-0 24 4217 1
-0 25 2624 1
-0 26 56431 1
-0 27 10752 1
-0 28 83 1
-0 29 224 1
-0 30 2372 1
-0 31 5651 1
-0 32 7005 1
-0 33 2624 1
-0 34 6829 1
-0 35 4602 1
-0 36 1014 1
-0 37 527 1
-0 38 132 1
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcl/test/webtrace-reqlog ns-allinone-2.34-qjump/ns-2.34/tcl/test/webtrace-reqlog
--- ns-allinone-2.34-pfabric/ns-2.34/tcl/test/webtrace-reqlog	2015-03-04 17:49:02.818750271 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcl/test/webtrace-reqlog	1970-01-01 01:00:00.000000000 +0100
@@ -1,50 +0,0 @@
-0.000000 1 0 12
-11.000000 2 0 16
-28.000000 3 0 36
-50.000000 4 0 4
-51.000000 4 0 3
-53.000000 4 0 6
-54.000000 5 0 0
-54.000000 4 0 0
-54.000000 4 0 5
-54.000000 4 0 1
-55.000000 4 0 7
-60.000000 3 0 19
-72.000000 4 0 24
-75.000000 3 0 2
-96.000000 4 0 17
-116.000000 6 0 35
-118.000000 3 0 26
-128.000000 5 0 0
-141.000000 4 0 23
-142.000000 4 0 29
-167.000000 4 0 14
-169.000000 4 0 33
-179.000000 3 0 2
-191.000000 7 0 18
-220.000000 4 0 28
-221.000000 8 0 8
-227.000000 4 0 37
-243.000000 9 0 4
-250.000000 10 0 34
-253.000000 9 0 3
-254.000000 10 0 32
-255.000000 10 0 11
-260.000000 11 0 10
-270.000000 4 0 25
-272.000000 9 0 6
-275.000000 9 0 1
-276.000000 9 0 5
-280.000000 5 0 15
-280.000000 9 0 0
-283.000000 9 0 7
-294.000000 12 0 27
-294.000000 5 0 22
-294.000000 12 0 9
-294.000000 12 0 20
-294.000000 12 0 21
-298.000000 12 0 38
-300.000000 4 0 13
-300.000000 12 0 30
-302.000000 10 0 31
-i 302.000000 39
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcp/tcp-full.cc ns-allinone-2.34-qjump/ns-2.34/tcp/tcp-full.cc
--- ns-allinone-2.34-pfabric/ns-2.34/tcp/tcp-full.cc	2015-03-04 17:50:43.190749269 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcp/tcp-full.cc	2015-03-04 23:13:41.198555793 +0000
@@ -1,4 +1,4 @@
- /* Mortier <Richard.Mortier@cl.cam.ac.uk>
+/* Mortier <Richard.Mortier@cl.cam.ac.uk>
  *
  * Some warnings and comments:
  *	this version of TCP will not work correctly if the sequence number
@@ -38,7 +38,7 @@
 
 #ifndef lint
 static const char rcsid[] =
-    "@(#) $Header: /cvsroot/nsnam/ns-2/tcp/tcp-full.cc,v 1.128 2009/03/29 20:59:41 sallyfloyd Exp $ (LBL)";
+        "@(#) $Header: /cvsroot/nsnam/ns-2/tcp/tcp-full.cc,v 1.128 2009/03/29 20:59:41 sallyfloyd Exp $ (LBL)";
 #endif
 
 #include "ip.h"
@@ -67,54 +67,54 @@ static const char rcsid[] =
 
 static class FullTcpClass : public TclClass { 
 public:
-	FullTcpClass() : TclClass("Agent/TCP/FullTcp") {}
-	TclObject* create(int, const char*const*) { 
-		return (new FullTcpAgent());
-	}
+    FullTcpClass() : TclClass("Agent/TCP/FullTcp") {}
+    TclObject* create(int, const char*const*) {
+        return (new FullTcpAgent());
+    }
 } class_full;
 
 static class TahoeFullTcpClass : public TclClass { 
 public:
-	TahoeFullTcpClass() : TclClass("Agent/TCP/FullTcp/Tahoe") {}
-	TclObject* create(int, const char*const*) { 
-		// ns-default sets reno_fastrecov_ to false
-		return (new TahoeFullTcpAgent());
-	}
+    TahoeFullTcpClass() : TclClass("Agent/TCP/FullTcp/Tahoe") {}
+    TclObject* create(int, const char*const*) {
+        // ns-default sets reno_fastrecov_ to false
+        return (new TahoeFullTcpAgent());
+    }
 } class_tahoe_full;
 
 static class NewRenoFullTcpClass : public TclClass { 
 public:
-	NewRenoFullTcpClass() : TclClass("Agent/TCP/FullTcp/Newreno") {}
-	TclObject* create(int, const char*const*) { 
-		// ns-default sets open_cwnd_on_pack_ to false
-		return (new NewRenoFullTcpAgent());
-	}
+    NewRenoFullTcpClass() : TclClass("Agent/TCP/FullTcp/Newreno") {}
+    TclObject* create(int, const char*const*) {
+        // ns-default sets open_cwnd_on_pack_ to false
+        return (new NewRenoFullTcpAgent());
+    }
 } class_newreno_full;
 
 static class SackFullTcpClass : public TclClass { 
 public:
-	SackFullTcpClass() : TclClass("Agent/TCP/FullTcp/Sack") {}
-	TclObject* create(int, const char*const*) { 
-		// ns-default sets reno_fastrecov_ to false
-		// ns-default sets open_cwnd_on_pack_ to false
-		return (new SackFullTcpAgent());
-	}
+    SackFullTcpClass() : TclClass("Agent/TCP/FullTcp/Sack") {}
+    TclObject* create(int, const char*const*) {
+        // ns-default sets reno_fastrecov_ to false
+        // ns-default sets open_cwnd_on_pack_ to false
+        return (new SackFullTcpAgent());
+    }
 } class_sack_full;
 
 static class MinTcpClass : public TclClass {
 public:
-	MinTcpClass() : TclClass("Agent/TCP/FullTcp/Sack/MinTCP") {}
-	TclObject* create(int, const char*const*) {
-		return (new MinTcpAgent());
-	}
+    MinTcpClass() : TclClass("Agent/TCP/FullTcp/Sack/MinTCP") {}
+    TclObject* create(int, const char*const*) {
+        return (new MinTcpAgent());
+    }
 } class_min_full;
 
 static class DDTcpClass : public TclClass {
 public:
-	DDTcpClass() : TclClass("Agent/TCP/FullTcp/Sack/DDTCP") {}
-	TclObject* create(int, const char*const*) {
-		return (new DDTcpAgent());
-	}
+    DDTcpClass() : TclClass("Agent/TCP/FullTcp/Sack/DDTCP") {}
+    TclObject* create(int, const char*const*) {
+        return (new DDTcpAgent());
+    }
 } class_dd_full;
 
 /*
@@ -124,166 +124,166 @@ public:
 void
 FullTcpAgent::delay_bind_init_all()
 {
-        delay_bind_init_one("segsperack_");
-        delay_bind_init_one("segsize_");
-        delay_bind_init_one("tcprexmtthresh_");
-        delay_bind_init_one("iss_");
-        delay_bind_init_one("nodelay_");
-        delay_bind_init_one("data_on_syn_");
-        delay_bind_init_one("dupseg_fix_");
-        delay_bind_init_one("dupack_reset_");
-        delay_bind_init_one("close_on_empty_");
-        delay_bind_init_one("signal_on_empty_");
-        delay_bind_init_one("interval_");
-        delay_bind_init_one("ts_option_size_");
-        delay_bind_init_one("reno_fastrecov_");
-        delay_bind_init_one("pipectrl_");
-        delay_bind_init_one("open_cwnd_on_pack_");
-        delay_bind_init_one("halfclose_");
-        delay_bind_init_one("nopredict_");
-        delay_bind_init_one("ecn_syn_");
-        delay_bind_init_one("ecn_syn_wait_");
-        delay_bind_init_one("debug_");
-        delay_bind_init_one("spa_thresh_");
-	
-	delay_bind_init_one("flow_remaining_"); //Mohammad
-	delay_bind_init_one("dynamic_dupack_");
-
-	delay_bind_init_one("prio_scheme_"); // Shuang
-	delay_bind_init_one("prio_num_"); //Shuang
-	delay_bind_init_one("prio_cap0"); //Shuang
-	delay_bind_init_one("prio_cap1"); //Shuang
-	delay_bind_init_one("prio_cap2"); //Shuang
-	delay_bind_init_one("prio_cap3"); //Shuang
-	delay_bind_init_one("prio_cap4"); //Shuang
-	delay_bind_init_one("prio_cap5"); //Shuang
-	delay_bind_init_one("prio_cap6"); //Shuang
-	delay_bind_init_one("deadline"); //Shuang
-	delay_bind_init_one("early_terminated_"); //Shuang
-
-	TcpAgent::delay_bind_init_all();
-       
-      	reset();
+    delay_bind_init_one("segsperack_");
+    delay_bind_init_one("segsize_");
+    delay_bind_init_one("tcprexmtthresh_");
+    delay_bind_init_one("iss_");
+    delay_bind_init_one("nodelay_");
+    delay_bind_init_one("data_on_syn_");
+    delay_bind_init_one("dupseg_fix_");
+    delay_bind_init_one("dupack_reset_");
+    delay_bind_init_one("close_on_empty_");
+    delay_bind_init_one("signal_on_empty_");
+    delay_bind_init_one("interval_");
+    delay_bind_init_one("ts_option_size_");
+    delay_bind_init_one("reno_fastrecov_");
+    delay_bind_init_one("pipectrl_");
+    delay_bind_init_one("open_cwnd_on_pack_");
+    delay_bind_init_one("halfclose_");
+    delay_bind_init_one("nopredict_");
+    delay_bind_init_one("ecn_syn_");
+    delay_bind_init_one("ecn_syn_wait_");
+    delay_bind_init_one("debug_");
+    delay_bind_init_one("spa_thresh_");
+
+    delay_bind_init_one("flow_remaining_"); //Mohammad
+    delay_bind_init_one("dynamic_dupack_");
+
+    delay_bind_init_one("prio_scheme_"); // Shuang
+    delay_bind_init_one("prio_num_"); //Shuang
+    delay_bind_init_one("prio_cap0"); //Shuang
+    delay_bind_init_one("prio_cap1"); //Shuang
+    delay_bind_init_one("prio_cap2"); //Shuang
+    delay_bind_init_one("prio_cap3"); //Shuang
+    delay_bind_init_one("prio_cap4"); //Shuang
+    delay_bind_init_one("prio_cap5"); //Shuang
+    delay_bind_init_one("prio_cap6"); //Shuang
+    delay_bind_init_one("deadline"); //Shuang
+    delay_bind_init_one("early_terminated_"); //Shuang
+
+    TcpAgent::delay_bind_init_all();
+
+    reset();
 }
 
 int
 FullTcpAgent::delay_bind_dispatch(const char *varName, const char *localName, TclObject *tracer)
 {
-        if (delay_bind(varName, localName, "segsperack_", &segs_per_ack_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "segsize_", &maxseg_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "tcprexmtthresh_", &tcprexmtthresh_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "iss_", &iss_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "spa_thresh_", &spa_thresh_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "nodelay_", &nodelay_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "data_on_syn_", &data_on_syn_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "dupseg_fix_", &dupseg_fix_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "dupack_reset_", &dupack_reset_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "close_on_empty_", &close_on_empty_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "signal_on_empty_", &signal_on_empty_, tracer)) return TCL_OK;
-        if (delay_bind_time(varName, localName, "interval_", &delack_interval_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "ts_option_size_", &ts_option_size_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "reno_fastrecov_", &reno_fastrecov_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "pipectrl_", &pipectrl_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "open_cwnd_on_pack_", &open_cwnd_on_pack_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "halfclose_", &halfclose_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "nopredict_", &nopredict_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "ecn_syn_", &ecn_syn_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "ecn_syn_wait_", &ecn_syn_wait_, tracer)) return TCL_OK;
-        if (delay_bind_bool(varName, localName, "debug_", &debug_, tracer)) return TCL_OK;
-	if (delay_bind(varName, localName, "flow_remaining_", &flow_remaining_, tracer)) return TCL_OK; // Mohammad
-	if (delay_bind(varName, localName, "dynamic_dupack_", &dynamic_dupack_, tracer)) return TCL_OK; // Mohammad
-	if (delay_bind(varName, localName, "prio_scheme_", &prio_scheme_, tracer)) return TCL_OK; // Shuang
-	if (delay_bind(varName, localName, "prio_num_", &prio_num_, tracer)) return TCL_OK; //Shuang
-	if (delay_bind(varName, localName, "prio_cap0", &prio_cap_[0], tracer)) return TCL_OK; 
-	if (delay_bind(varName, localName, "prio_cap1", &prio_cap_[1], tracer)) return TCL_OK; 
-	if (delay_bind(varName, localName, "prio_cap2", &prio_cap_[2], tracer)) return TCL_OK; 
-	if (delay_bind(varName, localName, "prio_cap3", &prio_cap_[3], tracer)) return TCL_OK; 
-	if (delay_bind(varName, localName, "prio_cap4", &prio_cap_[4], tracer)) return TCL_OK; 
-	if (delay_bind(varName, localName, "prio_cap5", &prio_cap_[5], tracer)) return TCL_OK; 
-	if (delay_bind(varName, localName, "prio_cap6", &prio_cap_[6], tracer)) return TCL_OK; 
-	if (delay_bind(varName, localName, "prob_cap_", &prob_cap_, tracer)) return TCL_OK; //Shuang
-	if (delay_bind(varName, localName, "deadline", &deadline, tracer)) return TCL_OK; //Shuang
-	if (delay_bind(varName, localName, "early_terminated_", &early_terminated_, tracer)) return TCL_OK; //Shuang
-        return TcpAgent::delay_bind_dispatch(varName, localName, tracer);
+    if (delay_bind(varName, localName, "segsperack_", &segs_per_ack_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "segsize_", &maxseg_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "tcprexmtthresh_", &tcprexmtthresh_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "iss_", &iss_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "spa_thresh_", &spa_thresh_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "nodelay_", &nodelay_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "data_on_syn_", &data_on_syn_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "dupseg_fix_", &dupseg_fix_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "dupack_reset_", &dupack_reset_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "close_on_empty_", &close_on_empty_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "signal_on_empty_", &signal_on_empty_, tracer)) return TCL_OK;
+    if (delay_bind_time(varName, localName, "interval_", &delack_interval_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "ts_option_size_", &ts_option_size_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "reno_fastrecov_", &reno_fastrecov_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "pipectrl_", &pipectrl_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "open_cwnd_on_pack_", &open_cwnd_on_pack_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "halfclose_", &halfclose_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "nopredict_", &nopredict_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "ecn_syn_", &ecn_syn_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "ecn_syn_wait_", &ecn_syn_wait_, tracer)) return TCL_OK;
+    if (delay_bind_bool(varName, localName, "debug_", &debug_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "flow_remaining_", &flow_remaining_, tracer)) return TCL_OK; // Mohammad
+    if (delay_bind(varName, localName, "dynamic_dupack_", &dynamic_dupack_, tracer)) return TCL_OK; // Mohammad
+    if (delay_bind(varName, localName, "prio_scheme_", &prio_scheme_, tracer)) return TCL_OK; // Shuang
+    if (delay_bind(varName, localName, "prio_num_", &prio_num_, tracer)) return TCL_OK; //Shuang
+    if (delay_bind(varName, localName, "prio_cap0", &prio_cap_[0], tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "prio_cap1", &prio_cap_[1], tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "prio_cap2", &prio_cap_[2], tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "prio_cap3", &prio_cap_[3], tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "prio_cap4", &prio_cap_[4], tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "prio_cap5", &prio_cap_[5], tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "prio_cap6", &prio_cap_[6], tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "prob_cap_", &prob_cap_, tracer)) return TCL_OK; //Shuang
+    if (delay_bind(varName, localName, "deadline", &deadline, tracer)) return TCL_OK; //Shuang
+    if (delay_bind(varName, localName, "early_terminated_", &early_terminated_, tracer)) return TCL_OK; //Shuang
+    return TcpAgent::delay_bind_dispatch(varName, localName, tracer);
 }
 
 void
 SackFullTcpAgent::delay_bind_init_all()
 {
-        delay_bind_init_one("clear_on_timeout_");
-        delay_bind_init_one("sack_rtx_cthresh_");
-        delay_bind_init_one("sack_rtx_bthresh_");
-        delay_bind_init_one("sack_block_size_");
-        delay_bind_init_one("sack_option_size_");
-        delay_bind_init_one("max_sack_blocks_");
-        delay_bind_init_one("sack_rtx_threshmode_");
-	FullTcpAgent::delay_bind_init_all();
+    delay_bind_init_one("clear_on_timeout_");
+    delay_bind_init_one("sack_rtx_cthresh_");
+    delay_bind_init_one("sack_rtx_bthresh_");
+    delay_bind_init_one("sack_block_size_");
+    delay_bind_init_one("sack_option_size_");
+    delay_bind_init_one("max_sack_blocks_");
+    delay_bind_init_one("sack_rtx_threshmode_");
+    FullTcpAgent::delay_bind_init_all();
 }
 
 int
 SackFullTcpAgent::delay_bind_dispatch(const char *varName, const char *localName, TclObject *tracer)
 {
-        if (delay_bind_bool(varName, localName, "clear_on_timeout_", &clear_on_timeout_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "sack_rtx_cthresh_", &sack_rtx_cthresh_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "sack_rtx_bthresh_", &sack_rtx_bthresh_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "sack_rtx_threshmode_", &sack_rtx_threshmode_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "sack_block_size_", &sack_block_size_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "sack_option_size_", &sack_option_size_, tracer)) return TCL_OK;
-        if (delay_bind(varName, localName, "max_sack_blocks_", &max_sack_blocks_, tracer)) return TCL_OK;
-        return FullTcpAgent::delay_bind_dispatch(varName, localName, tracer);
+    if (delay_bind_bool(varName, localName, "clear_on_timeout_", &clear_on_timeout_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "sack_rtx_cthresh_", &sack_rtx_cthresh_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "sack_rtx_bthresh_", &sack_rtx_bthresh_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "sack_rtx_threshmode_", &sack_rtx_threshmode_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "sack_block_size_", &sack_block_size_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "sack_option_size_", &sack_option_size_, tracer)) return TCL_OK;
+    if (delay_bind(varName, localName, "max_sack_blocks_", &max_sack_blocks_, tracer)) return TCL_OK;
+    return FullTcpAgent::delay_bind_dispatch(varName, localName, tracer);
 }
 
 int
 FullTcpAgent::command(int argc, const char*const* argv)
 {
-	// would like to have some "connect" primitive
-	// here, but the problem is that we get called before
-	// the simulation is running and we want to send a SYN.
-	// Because no routing exists yet, this fails.
-	// Instead, see code in advance().
-	//
-	// listen can happen any time because it just changes state_
-	//
-	// close is designed to happen at some point after the
-	// simulation is running (using an ns 'at' command)
-
-	if (argc == 2) {
-		if (strcmp(argv[1], "listen") == 0) {
-			// just a state transition
-			listen();
-			return (TCL_OK);
-		}
-		if (strcmp(argv[1], "close") == 0) {
-			usrclosed();
-			return (TCL_OK);
-		}
-	}
-	if (argc == 3) {
-		if (strcmp(argv[1], "advance") == 0) {
-			advanceby(atoi(argv[2]));
-			return (TCL_OK);
-		}
-		if (strcmp(argv[1], "advanceby") == 0) {
-			advanceby(atoi(argv[2]));
-			return (TCL_OK);
-		}
-		if (strcmp(argv[1], "advance-bytes") == 0) {
-			advance_bytes(atoi(argv[2]));
-			return (TCL_OK);
-		}
-		//Mohammad
-		if (strcmp(argv[1], "get-flow") == 0) {
-		        flow_remaining_ = atoi(argv[2]);
-		        return(TCL_OK);
-		}
-	}
-	if (argc == 4) {
-		if (strcmp(argv[1], "sendmsg") == 0) {
-			sendmsg(atoi(argv[2]), argv[3]);
-			return (TCL_OK);
-		}
-	}
-	return (TcpAgent::command(argc, argv));
+    // would like to have some "connect" primitive
+    // here, but the problem is that we get called before
+    // the simulation is running and we want to send a SYN.
+    // Because no routing exists yet, this fails.
+    // Instead, see code in advance().
+    //
+    // listen can happen any time because it just changes state_
+    //
+    // close is designed to happen at some point after the
+    // simulation is running (using an ns 'at' command)
+
+    if (argc == 2) {
+        if (strcmp(argv[1], "listen") == 0) {
+            // just a state transition
+            listen();
+            return (TCL_OK);
+        }
+        if (strcmp(argv[1], "close") == 0) {
+            usrclosed();
+            return (TCL_OK);
+        }
+    }
+    if (argc == 3) {
+        if (strcmp(argv[1], "advance") == 0) {
+            advanceby(atoi(argv[2]));
+            return (TCL_OK);
+        }
+        if (strcmp(argv[1], "advanceby") == 0) {
+            advanceby(atoi(argv[2]));
+            return (TCL_OK);
+        }
+        if (strcmp(argv[1], "advance-bytes") == 0) {
+            advance_bytes(atoi(argv[2]));
+            return (TCL_OK);
+        }
+        //Mohammad
+        if (strcmp(argv[1], "get-flow") == 0) {
+            flow_remaining_ = atoi(argv[2]);
+            return(TCL_OK);
+        }
+    }
+    if (argc == 4) {
+        if (strcmp(argv[1], "sendmsg") == 0) {
+            sendmsg(atoi(argv[2]), argv[3]);
+            return (TCL_OK);
+        }
+    }
+    return (TcpAgent::command(argc, argv));
 }
 
 /*
@@ -311,15 +311,15 @@ FullTcpAgent::advanceby(int np)
 {
 
 
-// XXX hack:
-	//	because np is in packets and a data source
-	//	may pass a *huge* number as a way to tell us
-	//	and if it's there, pre-divide it
-	if (np >= 0x10000000)
-		np /= maxseg_;
+    // XXX hack:
+    //	because np is in packets and a data source
+    //	may pass a *huge* number as a way to tell us
+    //	and if it's there, pre-divide it
+    if (np >= 0x10000000)
+        np /= maxseg_;
 
-	advance_bytes(np * maxseg_);
-	return;
+    advance_bytes(np * maxseg_);
+    return;
 }
 
 /*
@@ -330,51 +330,49 @@ void
 FullTcpAgent::advance_bytes(int nb)
 {
 
-////Shuang: hardcode
-	cwnd_ = initial_window();
-//	//ssthresh_ = cwnd_;
-
-	//
-	// state-specific operations:
-	//	if CLOSED or LISTEN, reset and try a new active open/connect
-	//	if ESTABLISHED, queue and try to send more
-	//	if SYN_SENT or SYN_RCVD, just queue
-	//	if above ESTABLISHED, we are closing, so don't allow
-	//
-	start_time = now();
-	early_terminated_ = 0;
-  	switch (state_) {
-
-	case TCPS_CLOSED:
-	case TCPS_LISTEN:
-                reset();
-				startseq_ = iss_;
-                curseq_ = iss_ + nb;
-				seq_bound_ = -1;
-		connect();              // initiate new connection
-		break;
-
-	case TCPS_ESTABLISHED:
-	case TCPS_SYN_SENT:
-	case TCPS_SYN_RECEIVED:
-                if (curseq_ < iss_) 
-                        curseq_ = iss_;
-				startseq_ = curseq_;
-				seq_bound_ = -1;
-                curseq_ += nb;
-		break;
-
-	default:
-            if (debug_) 
-	            fprintf(stderr, "%f: FullTcpAgent::advance(%s): cannot advance while in state %s\n",
-		         now(), name(), statestr(state_));
-
-	}
-
-	if (state_ == TCPS_ESTABLISHED)
-		send_much(0, REASON_NORMAL, maxburst_);
-
-  	return;
+    ////Shuang: hardcode
+    cwnd_ = initial_window();
+    //	//ssthresh_ = cwnd_;
+
+    //
+    // state-specific operations:
+    //	if CLOSED or LISTEN, reset and try a new active open/connect
+    //	if ESTABLISHED, queue and try to send more
+    //	if SYN_SENT or SYN_RCVD, just queue
+    //	if above ESTABLISHED, we are closing, so don't allow
+    //
+    start_time = now();
+    early_terminated_ = 0;
+    switch (state_) {
+        case TCPS_CLOSED:
+        case TCPS_LISTEN:
+            reset();
+            startseq_ = iss_;
+            curseq_ = iss_ + nb;
+            seq_bound_ = -1;
+            connect();              // initiate new connection
+            break;
+        case TCPS_ESTABLISHED:
+        case TCPS_SYN_SENT:
+        case TCPS_SYN_RECEIVED:
+            if (curseq_ < iss_){
+                curseq_ = iss_;
+            }
+            startseq_ = curseq_;
+            seq_bound_ = -1;
+            curseq_ += nb;
+            break;
+        default:
+            if (debug_) {
+                fprintf(stderr, "%f: FullTcpAgent::advance(%s): cannot advance while in state %s\n",
+                        now(), name(), statestr(state_));
+            }
+    }
+
+    if (state_ == TCPS_ESTABLISHED) {
+        send_much(0, REASON_NORMAL, maxburst_);
+    }
+    return;
 }
 
 /*
@@ -389,20 +387,20 @@ FullTcpAgent::advance_bytes(int nb)
 void
 FullTcpAgent::sendmsg(int nbytes, const char *flags)
 {
-	if (flags && strcmp(flags, "MSG_EOF") == 0){ 
-		close_on_empty_ = TRUE;	
-printf("setting 2 closeonempty to true for fid= %d\n",fid_);
-        }
-
-	if (flags && strcmp(flags, "DAT_EOF") == 0){ 
-		signal_on_empty_ = TRUE;	
-		printf("setting signalonempty to true for fid= %d\n",fid_);
-	}
-	if (nbytes == -1) {
-		infinite_send_ = TRUE;
-		advance_bytes(0);
-	} else
-		advance_bytes(nbytes);
+    if (flags && strcmp(flags, "MSG_EOF") == 0){
+        close_on_empty_ = TRUE;
+        printf("setting 2 closeonempty to true for fid= %d\n",fid_);
+    }
+
+    if (flags && strcmp(flags, "DAT_EOF") == 0){
+        signal_on_empty_ = TRUE;
+        printf("setting signalonempty to true for fid= %d\n",fid_);
+    }
+    if (nbytes == -1) {
+        infinite_send_ = TRUE;
+        advance_bytes(0);
+    } else
+        advance_bytes(nbytes);
 }
 
 /*
@@ -412,9 +410,9 @@ printf("setting 2 closeonempty to true f
 void
 FullTcpAgent::connect()
 {
-	newstate(TCPS_SYN_SENT);	// sending a SYN now
-	sent(iss_, foutput(iss_, REASON_NORMAL));
-	return;
+    newstate(TCPS_SYN_SENT);	// sending a SYN now
+    sent(iss_, foutput(iss_, REASON_NORMAL));
+    return;
 }
 
 /*
@@ -425,22 +423,22 @@ FullTcpAgent::connect()
 void
 FullTcpAgent::listen()
 {
-	newstate(TCPS_LISTEN);
-	type_ = PT_ACK;	// instead of PT_TCP
+    newstate(TCPS_LISTEN);
+    type_ = PT_ACK;	// instead of PT_TCP
 }
 
 
 /*
-* This function is invoked when the sender buffer is empty. It in turn
-* invokes the Tcl done_data procedure that was registered with TCP.
-*/
- 
+ * This function is invoked when the sender buffer is empty. It in turn
+ * invokes the Tcl done_data procedure that was registered with TCP.
+ */
+
 void
 FullTcpAgent::bufferempty()
 {
-   	signal_on_empty_=FALSE;
-	//printf("flow fid= %d is done\n",fid_);
-	Tcl::instance().evalf("%s done_data", this->name());
+    signal_on_empty_=FALSE;
+    // printf("flow fid= %d is done\n",fid_);
+    Tcl::instance().evalf("%s done_data", this->name());
 }
 
 
@@ -451,50 +449,50 @@ FullTcpAgent::bufferempty()
 void
 FullTcpAgent::usrclosed()
 {
-	curseq_ = maxseq_ - 1;	// now, no more data
-	infinite_send_ = FALSE;	// stop infinite send
-	switch (state_) {
-	case TCPS_CLOSED:
-	case TCPS_LISTEN:
-		cancel_timers();
-		newstate(TCPS_CLOSED);
-		finish();
-		break;
-	case TCPS_SYN_SENT:
-		newstate(TCPS_CLOSED);
-		/* fall through */
-	case TCPS_LAST_ACK:
-		flags_ |= TF_NEEDFIN;
-		send_much(1, REASON_NORMAL, maxburst_);
-		break;
-	case TCPS_SYN_RECEIVED:
-	case TCPS_ESTABLISHED:
-		newstate(TCPS_FIN_WAIT_1);
-		flags_ |= TF_NEEDFIN;
-		send_much(1, REASON_NORMAL, maxburst_);
-		break;
-	case TCPS_CLOSE_WAIT:
-		newstate(TCPS_LAST_ACK);
-		flags_ |= TF_NEEDFIN;
-		send_much(1, REASON_NORMAL, maxburst_);
-		break;
-	case TCPS_FIN_WAIT_1:
-	case TCPS_FIN_WAIT_2:
-	case TCPS_CLOSING:
-		/* usr asked for a close more than once [?] */
-                if (debug_)
-		         fprintf(stderr,
-		           "%f FullTcpAgent(%s): app close in bad state %s\n",
-		           now(), name(), statestr(state_));
-		break;
-	default:
-                if (debug_)
-		        fprintf(stderr,
-		        "%f FullTcpAgent(%s): app close in unknown state %s\n",
-		        now(), name(), statestr(state_));
-	}
+    curseq_ = maxseq_ - 1;	// now, no more data
+    infinite_send_ = FALSE;	// stop infinite send
+    switch (state_) {
+        case TCPS_CLOSED:
+        case TCPS_LISTEN:
+            cancel_timers();
+            newstate(TCPS_CLOSED);
+            finish();
+            break;
+        case TCPS_SYN_SENT:
+            newstate(TCPS_CLOSED);
+            /* fall through */
+        case TCPS_LAST_ACK:
+            flags_ |= TF_NEEDFIN;
+            send_much(1, REASON_NORMAL, maxburst_);
+            break;
+        case TCPS_SYN_RECEIVED:
+        case TCPS_ESTABLISHED:
+            newstate(TCPS_FIN_WAIT_1);
+            flags_ |= TF_NEEDFIN;
+            send_much(1, REASON_NORMAL, maxburst_);
+            break;
+        case TCPS_CLOSE_WAIT:
+            newstate(TCPS_LAST_ACK);
+            flags_ |= TF_NEEDFIN;
+            send_much(1, REASON_NORMAL, maxburst_);
+            break;
+        case TCPS_FIN_WAIT_1:
+        case TCPS_FIN_WAIT_2:
+        case TCPS_CLOSING:
+            /* usr asked for a close more than once [?] */
+            if (debug_)
+                fprintf(stderr,
+                        "%f FullTcpAgent(%s): app close in bad state %s\n",
+                        now(), name(), statestr(state_));
+            break;
+        default:
+            if (debug_)
+                fprintf(stderr,
+                        "%f FullTcpAgent(%s): app close in unknown state %s\n",
+                        now(), name(), statestr(state_));
+    }
 
-	return;
+    return;
 }
 
 /*
@@ -505,91 +503,91 @@ void
 FullTcpAgent::cancel_timers()
 {
 
-	// cancel: rtx, burstsend, delsnd
-	TcpAgent::cancel_timers();      
-	// cancel: delack
-	delack_timer_.force_cancel();
+    // cancel: rtx, burstsend, delsnd
+    TcpAgent::cancel_timers();
+    // cancel: delack
+    delack_timer_.force_cancel();
 }
 
 void
 FullTcpAgent::newstate(int state)
 {
-//printf("%f(%s): state changed from %s to %s\n",
-//now(), name(), statestr(state_), statestr(state));
+    //printf("%f(%s): state changed from %s to %s\n",
+    //now(), name(), statestr(state_), statestr(state));
 
-	state_ = state;
+    state_ = state;
 }
 
 void
 FullTcpAgent::prpkt(Packet *pkt)
 {
-	hdr_tcp *tcph = hdr_tcp::access(pkt);	// TCP header
-	hdr_cmn *th = hdr_cmn::access(pkt);	// common header (size, etc)
-	//hdr_flags *fh = hdr_flags::access(pkt);	// flags (CWR, CE, bits)
-	hdr_ip* iph = hdr_ip::access(pkt);
-	int datalen = th->size() - tcph->hlen(); // # payload bytes
-
-	fprintf(stdout, " [%d:%d.%d>%d.%d] (hlen:%d, dlen:%d, seq:%d, ack:%d, flags:0x%x (%s), salen:%d, reason:0x%x)\n",
-		th->uid(),
-		iph->saddr(), iph->sport(),
-		iph->daddr(), iph->dport(),
-		tcph->hlen(),
-		datalen,
-		tcph->seqno(),
-		tcph->ackno(),
-		tcph->flags(), flagstr(tcph->flags()),
-		tcph->sa_length(),
-		tcph->reason());
+    hdr_tcp *tcph = hdr_tcp::access(pkt);	// TCP header
+    hdr_cmn *th = hdr_cmn::access(pkt);	// common header (size, etc)
+    //hdr_flags *fh = hdr_flags::access(pkt);	// flags (CWR, CE, bits)
+    hdr_ip* iph = hdr_ip::access(pkt);
+    int datalen = th->size() - tcph->hlen(); // # payload bytes
+
+    fprintf(stdout, " [%d:%d.%d>%d.%d] (hlen:%d, dlen:%d, seq:%d, ack:%d, flags:0x%x (%s), salen:%d, reason:0x%x)\n",
+            th->uid(),
+            iph->saddr(), iph->sport(),
+            iph->daddr(), iph->dport(),
+            tcph->hlen(),
+            datalen,
+            tcph->seqno(),
+            tcph->ackno(),
+            tcph->flags(), flagstr(tcph->flags()),
+            tcph->sa_length(),
+            tcph->reason());
 }
 
 char *
 FullTcpAgent::flagstr(int hflags)
 {
-	// update this if tcp header flags change
-	static char *flagstrs[28] = {
-		"<null>", "<FIN>", "<SYN>", "<SYN,FIN>",	// 0-3
-		"<?>", "<?,FIN>", "<?,SYN>", "<?,SYN,FIN>",	// 4-7
-		"<PSH>", "<PSH,FIN>", "<PSH,SYN>", "<PSH,SYN,FIN>", // 0x08-0x0b
-		/* do not use <??, in next line because that's an ANSI trigraph */
-		"<?>", "<?,FIN>", "<?,SYN>", "<?,SYN,FIN>",	    // 0x0c-0x0f
-		"<ACK>", "<ACK,FIN>", "<ACK,SYN>", "<ACK,SYN,FIN>", // 0x10-0x13
-		"<ACK>", "<ACK,FIN>", "<ACK,SYN>", "<ACK,SYN,FIN>", // 0x14-0x17
-		"<PSH,ACK>", "<PSH,ACK,FIN>", "<PSH,ACK,SYN>", "<PSH,ACK,SYN,FIN>", // 0x18-0x1b
-	};
-	if (hflags < 0 || (hflags > 28)) {
-		/* Added strings for CWR and ECE  -M. Weigle 6/27/02 */
-		if (hflags == 72) 
-	 		return ("<ECE,PSH>");
-	 	else if (hflags == 80)
-	 		return ("<ECE,ACK>");
-	 	else if (hflags == 88) 
-	 		return ("<ECE,PSH,ACK>");
-	 	else if (hflags == 152) 
-	 		return ("<CWR,PSH,ACK>");
-		else if (hflags == 153)
-			return ("<CWR,PSH,ACK,FIN>");
-		else
-			return ("<invalid>");
-	}
-	return (flagstrs[hflags]);
+    // update this if tcp header flags change
+    static char *flagstrs[28] = {
+            "<null>", "<FIN>", "<SYN>", "<SYN,FIN>",	// 0-3
+            "<?>", "<?,FIN>", "<?,SYN>", "<?,SYN,FIN>",	// 4-7
+            "<PSH>", "<PSH,FIN>", "<PSH,SYN>", "<PSH,SYN,FIN>", // 0x08-0x0b
+            /* do not use <??, in next line because that's an ANSI trigraph */
+            "<?>", "<?,FIN>", "<?,SYN>", "<?,SYN,FIN>",	    // 0x0c-0x0f
+            "<ACK>", "<ACK,FIN>", "<ACK,SYN>", "<ACK,SYN,FIN>", // 0x10-0x13
+            "<ACK>", "<ACK,FIN>", "<ACK,SYN>", "<ACK,SYN,FIN>", // 0x14-0x17
+            "<PSH,ACK>", "<PSH,ACK,FIN>", "<PSH,ACK,SYN>", "<PSH,ACK,SYN,FIN>", // 0x18-0x1b
+    };
+    if (hflags < 0 || (hflags > 28)) {
+        /* Added strings for CWR and ECE  -M. Weigle 6/27/02 */
+        if (hflags == 72)
+            return ("<ECE,PSH>");
+        else if (hflags == 80)
+            return ("<ECE,ACK>");
+        else if (hflags == 88)
+            return ("<ECE,PSH,ACK>");
+        else if (hflags == 152)
+            return ("<CWR,PSH,ACK>");
+        else if (hflags == 153)
+            return ("<CWR,PSH,ACK,FIN>");
+        else
+            return ("<invalid>");
+    }
+    return (flagstrs[hflags]);
 }
 
 char *
 FullTcpAgent::statestr(int state)
 {
-	static char *statestrs[TCP_NSTATES] = {
-		"CLOSED", "LISTEN", "SYN_SENT", "SYN_RCVD",
-		"ESTABLISHED", "CLOSE_WAIT", "FIN_WAIT_1", "CLOSING",
-		"LAST_ACK", "FIN_WAIT_2"
-	};
-	if (state < 0 || (state >= TCP_NSTATES))
-		return ("INVALID");
-	return (statestrs[state]);
+    static char *statestrs[TCP_NSTATES] = {
+            "CLOSED", "LISTEN", "SYN_SENT", "SYN_RCVD",
+            "ESTABLISHED", "CLOSE_WAIT", "FIN_WAIT_1", "CLOSING",
+            "LAST_ACK", "FIN_WAIT_2"
+    };
+    if (state < 0 || (state >= TCP_NSTATES))
+        return ("INVALID");
+    return (statestrs[state]);
 }
 
 void
 DelAckTimer::expire(Event *) {
-        a_->timeout(TCP_TIMER_DELACK);
+    a_->timeout(TCP_TIMER_DELACK);
 }
 
 /*
@@ -600,40 +598,40 @@ DelAckTimer::expire(Event *) {
 void
 FullTcpAgent::reset()
 {
-	cancel_timers();	// cancel timers first
-      	TcpAgent::reset();	// resets most variables
-	rq_.clear();		// clear reassembly queue
-	rtt_init();		// zero rtt, srtt, backoff       
-	last_ack_sent_ = -1;
-	flow_remaining_ = -1; // Mohammad
-	rcv_nxt_ = -1;
-	pipe_ = 0;
-	rtxbytes_ = 0;
-	flags_ = 0;
-	t_seqno_ = iss_;
-	maxseq_ = -1;
-	irs_ = -1;
-	last_send_time_ = -1.0;
-	if (ts_option_)
-		recent_ = recent_age_ = 0.0;
-	else
-		recent_ = recent_age_ = -1.0;
-
-	fastrecov_ = FALSE;
-
-	closed_ = 0;
-	close_on_empty_ = FALSE;
-
-        if (ecn_syn_)
-                ecn_syn_next_ = 1;
-        else
-                ecn_syn_next_ = 0;
-	//Shuang
-	prob_mode_ = false;
-	prob_count_ = 0;
-	last_sqtotal_ = 0;
-	deadline = 0;
-	early_terminated_ = 0;
+    cancel_timers();	// cancel timers first
+    TcpAgent::reset();	// resets most variables
+    rq_.clear();		// clear reassembly queue
+    rtt_init();		// zero rtt, srtt, backoff
+    last_ack_sent_ = -1;
+    flow_remaining_ = -1; // Mohammad
+    rcv_nxt_ = -1;
+    pipe_ = 0;
+    rtxbytes_ = 0;
+    flags_ = 0;
+    t_seqno_ = iss_;
+    maxseq_ = -1;
+    irs_ = -1;
+    last_send_time_ = -1.0;
+    if (ts_option_)
+        recent_ = recent_age_ = 0.0;
+    else
+        recent_ = recent_age_ = -1.0;
+
+    fastrecov_ = FALSE;
+
+    closed_ = 0;
+    close_on_empty_ = FALSE;
+
+    if (ecn_syn_)
+        ecn_syn_next_ = 1;
+    else
+        ecn_syn_next_ = 0;
+    //Shuang
+    prob_mode_ = false;
+    prob_count_ = 0;
+    last_sqtotal_ = 0;
+    deadline = 0;
+    early_terminated_ = 0;
 }
 
 /*
@@ -645,7 +643,7 @@ FullTcpAgent::reset()
 void
 FullTcpAgent::finish()
 {
-	Tcl::instance().evalf("%s done", this->name());
+    Tcl::instance().evalf("%s done", this->name());
 }
 /*
  * headersize:
@@ -655,17 +653,17 @@ FullTcpAgent::finish()
 int
 FullTcpAgent::headersize()
 {
-	int total = tcpip_base_hdr_size_;
-	if (total < 1) {
-		fprintf(stderr,
-		    "%f: FullTcpAgent(%s): warning: tcpip hdr size is only %d bytes\n",
-			now(), name(), tcpip_base_hdr_size_);
-	}
+    int total = tcpip_base_hdr_size_;
+    if (total < 1) {
+        fprintf(stderr,
+                "%f: FullTcpAgent(%s): warning: tcpip hdr size is only %d bytes\n",
+                now(), name(), tcpip_base_hdr_size_);
+    }
 
-	if (ts_option_)
-		total += ts_option_size_;
+    if (ts_option_)
+        total += ts_option_size_;
 
-	return (total);
+    return (total);
 }
 
 /*
@@ -676,28 +674,28 @@ FullTcpAgent::headersize()
 int
 FullTcpAgent::outflags()
 {
-	// in real TCP an RST is added in the CLOSED state
-	static int tcp_outflags[TCP_NSTATES] = {
-		TH_ACK,          	/* 0, CLOSED */  
-		0,                      /* 1, LISTEN */ 
-		TH_SYN,                 /* 2, SYN_SENT */
-		TH_SYN|TH_ACK,          /* 3, SYN_RECEIVED */
-		TH_ACK,                 /* 4, ESTABLISHED */
-		TH_ACK,                 /* 5, CLOSE_WAIT */
-		TH_FIN|TH_ACK,          /* 6, FIN_WAIT_1 */
-		TH_FIN|TH_ACK,          /* 7, CLOSING */
-		TH_FIN|TH_ACK,          /* 8, LAST_ACK */
-		TH_ACK,                 /* 9, FIN_WAIT_2 */
-		/* 10, TIME_WAIT --- not used in simulator */
-	};
-
-	if (state_ < 0 || (state_ >= TCP_NSTATES)) {
-		fprintf(stderr, "%f FullTcpAgent(%s): invalid state %d\n",
-			now(), name(), state_);
-		return (0x0);
-	}
+    // in real TCP an RST is added in the CLOSED state
+    static int tcp_outflags[TCP_NSTATES] = {
+            TH_ACK,          	/* 0, CLOSED */
+            0,                      /* 1, LISTEN */
+            TH_SYN,                 /* 2, SYN_SENT */
+            TH_SYN|TH_ACK,          /* 3, SYN_RECEIVED */
+            TH_ACK,                 /* 4, ESTABLISHED */
+            TH_ACK,                 /* 5, CLOSE_WAIT */
+            TH_FIN|TH_ACK,          /* 6, FIN_WAIT_1 */
+            TH_FIN|TH_ACK,          /* 7, CLOSING */
+            TH_FIN|TH_ACK,          /* 8, LAST_ACK */
+            TH_ACK,                 /* 9, FIN_WAIT_2 */
+            /* 10, TIME_WAIT --- not used in simulator */
+    };
+
+    if (state_ < 0 || (state_ >= TCP_NSTATES)) {
+        fprintf(stderr, "%f FullTcpAgent(%s): invalid state %d\n",
+                now(), name(), state_);
+        return (0x0);
+    }
 
-	return (tcp_outflags[state_]);
+    return (tcp_outflags[state_]);
 }
 
 /*
@@ -711,47 +709,47 @@ FullTcpAgent::outflags()
 int
 FullTcpAgent::reass(Packet* pkt)
 {  
-        hdr_tcp *tcph =  hdr_tcp::access(pkt);
-        hdr_cmn *th = hdr_cmn::access(pkt);
-   
-        int start = tcph->seqno();
-        int end = start + th->size() - tcph->hlen();
-        int tiflags = tcph->flags();
-	int fillshole = (start == rcv_nxt_);
-	int flags;
-   
-	// end contains the seq of the last byte of
-	// in the packet plus one
-
-	if (start == end && (tiflags & TH_FIN) == 0) {
-		fprintf(stderr, "%f: FullTcpAgent(%s)::reass() -- bad condition - adding non-FIN zero-len seg\n",
-			now(), name());
-		abort();
-	}
-
-	flags = rq_.add(start, end, tiflags, 0);
-
-	//present:
-	//
-	// If we've never received a SYN (unlikely)
-	// or this is an out of order addition, no reason to coalesce
-	//
-
-	if (TCPS_HAVERCVDSYN(state_) == 0 || !fillshole) {
-	 	return (0x00);
-	}
-	//
-	// If we get some data in SYN_RECVD, no need to present to user yet
-	//
-	if (state_ == TCPS_SYN_RECEIVED && (end > start))
-		return (0x00);
+    hdr_tcp *tcph =  hdr_tcp::access(pkt);
+    hdr_cmn *th = hdr_cmn::access(pkt);
+
+    int start = tcph->seqno();
+    int end = start + th->size() - tcph->hlen();
+    int tiflags = tcph->flags();
+    int fillshole = (start == rcv_nxt_);
+    int flags;
+
+    // end contains the seq of the last byte of
+    // in the packet plus one
+
+    if (start == end && (tiflags & TH_FIN) == 0) {
+        fprintf(stderr, "%f: FullTcpAgent(%s)::reass() -- bad condition - adding non-FIN zero-len seg\n",
+                now(), name());
+        abort();
+    }
+
+    flags = rq_.add(start, end, tiflags, 0);
+
+    //present:
+    //
+    // If we've never received a SYN (unlikely)
+    // or this is an out of order addition, no reason to coalesce
+    //
+
+    if (TCPS_HAVERCVDSYN(state_) == 0 || !fillshole) {
+        return (0x00);
+    }
+    //
+    // If we get some data in SYN_RECVD, no need to present to user yet
+    //
+    if (state_ == TCPS_SYN_RECEIVED && (end > start))
+        return (0x00);
 
-	// clear out data that has been passed, up to rcv_nxt_,
-	// collects flags
+    // clear out data that has been passed, up to rcv_nxt_,
+    // collects flags
 
-	flags |= rq_.cleartonxt();
+    flags |= rq_.cleartonxt();
 
-        return (flags);
+    return (flags);
 }
 
 /*
@@ -761,8 +759,8 @@ FullTcpAgent::reass(Packet* pkt)
 int
 FullTcpAgent::rcvseqinit(int seq, int dlen)
 {
-	return (seq + dlen + 1);
-//printf("newww3 fid= %d, rcv_nxt_= %d diff= %d, highest_ack= %d, last_ack_sent= %d diff= %d\n",fid_,(int)rcv_nxt_,((int)rcv_nxt_)-oldrcvnxt,(int)highest_ack_,last_ack_sent_,((int)last_ack_sent_)-oldlastacksent);
+    return (seq + dlen + 1);
+    //printf("newww3 fid= %d, rcv_nxt_= %d diff= %d, highest_ack= %d, last_ack_sent= %d diff= %d\n",fid_,(int)rcv_nxt_,((int)rcv_nxt_)-oldrcvnxt,(int)highest_ack_,last_ack_sent_,((int)last_ack_sent_)-oldlastacksent);
 }
 
 /*
@@ -771,15 +769,15 @@ FullTcpAgent::rcvseqinit(int seq, int dl
 int
 FullTcpAgent::build_options(hdr_tcp* tcph)
 {
-	int total = 0;
-	if (ts_option_) {
-		tcph->ts() = now();
-		tcph->ts_echo() = recent_;
-		total += ts_option_size_;
-	} else {
-		tcph->ts() = tcph->ts_echo() = -1.0;
-	}
-	return (total);
+    int total = 0;
+    if (ts_option_) {
+        tcph->ts() = now();
+        tcph->ts_echo() = recent_;
+        total += ts_option_size_;
+    } else {
+        tcph->ts() = tcph->ts_echo() = -1.0;
+    }
+    return (total);
 }
 
 /*
@@ -789,10 +787,10 @@ FullTcpAgent::build_options(hdr_tcp* tcp
 int
 FullTcpAgent::pack(Packet *pkt)
 {
-	hdr_tcp *tcph = hdr_tcp::access(pkt);
-	/* Added check for fast recovery.  -M. Weigle 5/2/02 */
-	return (fastrecov_ && tcph->ackno() >= highest_ack_ &&
-		tcph->ackno() < recover_);
+    hdr_tcp *tcph = hdr_tcp::access(pkt);
+    /* Added check for fast recovery.  -M. Weigle 5/2/02 */
+    return (fastrecov_ && tcph->ackno() >= highest_ack_ &&
+            tcph->ackno() < recover_);
 }
 
 /*
@@ -802,12 +800,12 @@ FullTcpAgent::pack(Packet *pkt)
 void
 FullTcpAgent::pack_action(Packet*)
 {
-	if (reno_fastrecov_ && fastrecov_ && cwnd_ > double(ssthresh_)) {
-		cwnd_ = double(ssthresh_); // retract window if inflated
-	}
-	fastrecov_ = FALSE;
-//printf("%f: EXITED FAST RECOVERY\n", now());
-	dupacks_ = 0;
+    if (reno_fastrecov_ && fastrecov_ && cwnd_ > double(ssthresh_)) {
+        cwnd_ = double(ssthresh_); // retract window if inflated
+    }
+    fastrecov_ = FALSE;
+    //printf("%f: EXITED FAST RECOVERY\n", now());
+    dupacks_ = 0;
 }
 
 /*
@@ -817,47 +815,47 @@ FullTcpAgent::pack_action(Packet*)
 void
 FullTcpAgent::ack_action(Packet* p)
 {
-	FullTcpAgent::pack_action(p);
+    FullTcpAgent::pack_action(p);
 }
 
 int 
 FullTcpAgent::set_prio(int seq, int maxseq) {
-	int max = 100 * 1460;
-	int prio;
-	if (prio_scheme_ == 0) {
-		if ( seq - startseq_ > max)
-		    prio = max;
-		else
-			prio = seq - startseq_;
-	}
-	if (prio_scheme_ == 1)
-		prio =  maxseq - startseq_;
-	if (prio_scheme_ == 2)
-		prio =  maxseq - seq;
-	if (prio_scheme_ == 3)
-		prio = seq - startseq_;
-
-	if (prio_num_ == 0)
-		return prio;
-	else
-		return calPrio(prio);
+    int max = 100 * 1460;
+    int prio;
+    if (prio_scheme_ == 0) {
+        if ( seq - startseq_ > max)
+            prio = max;
+        else
+            prio = seq - startseq_;
+    }
+    if (prio_scheme_ == 1)
+        prio =  maxseq - startseq_;
+    if (prio_scheme_ == 2)
+        prio =  maxseq - seq;
+    if (prio_scheme_ == 3)
+        prio = seq - startseq_;
+
+    if (prio_num_ == 0)
+        return prio;
+    else
+        return calPrio(prio);
 }
 
 int
 FullTcpAgent::calPrio(int prio) {
-	if (prio_num_ != 2 && prio_num_ != 4 && prio_num_ != 8) {
-		fprintf(stderr, "wrong number or priority class %d\n", prio_num_);
-		return 0;
-	}
-	for (int i = 1; i < prio_num_; i++)	
-		if (prio <= prio_cap_[i * 8 / prio_num_ - 1])
-		{
-			//printf("prio %d cap %d ans %d\n", prio, prio_cap_[i*8/prio_num_ - 1], i - 1);
-			return i - 1;
-		}
+    if (prio_num_ != 2 && prio_num_ != 4 && prio_num_ != 8) {
+        fprintf(stderr, "wrong number or priority class %d\n", prio_num_);
+        return 0;
+    }
+    for (int i = 1; i < prio_num_; i++)
+        if (prio <= prio_cap_[i * 8 / prio_num_ - 1])
+        {
+            //printf("prio %d cap %d ans %d\n", prio, prio_cap_[i*8/prio_num_ - 1], i - 1);
+            return i - 1;
+        }
 
-	//printf("prio %d cap %d ans %d\n", prio, prio_cap_[8/prio_num_ - 1], prio_num_ - 1);
-	return prio_num_ - 1;
+    //printf("prio %d cap %d ans %d\n", prio, prio_cap_[8/prio_num_ - 1], prio_num_ - 1);
+    return prio_num_ - 1;
 }
 
 /*
@@ -874,143 +872,134 @@ FullTcpAgent::calPrio(int prio) {
 void
 FullTcpAgent::sendpacket(int seqno, int ackno, int pflags, int datalen, int reason, Packet *p)
 {
-        if (!p) p = allocpkt();
-        hdr_tcp *tcph = hdr_tcp::access(p);
-	hdr_flags *fh = hdr_flags::access(p);
-	hdr_ip* iph = hdr_ip::access(p);
-
-	/* build basic header w/options */
-
-        tcph->seqno() = seqno;
-        tcph->ackno() = ackno;
-        tcph->flags() = pflags;
-        tcph->reason() |= reason; // make tcph->reason look like ns1 pkt->flags?
-	tcph->sa_length() = 0;    // may be increased by build_options()
-        tcph->hlen() = tcpip_base_hdr_size_;
-	tcph->hlen() += build_options(tcph);
-	//Shuang: reduce header length
-	//tcph->hlen() = 1;
-
-	//iph->prio() = curseq_ - seqno + 10; 
-	/*
-	 * Explicit Congestion Notification (ECN) related:
-	 * Bits in header:
-	 * 	ECT (EC Capable Transport),
-	 * 	ECNECHO (ECHO of ECN Notification generated at router),
-	 * 	CWR (Congestion Window Reduced from RFC 2481)
-	 * States in TCP:
-	 *	ecn_: I am supposed to do ECN if my peer does
-	 *	ect_: I am doing ECN (ecn_ should be T and peer does ECN)
-	 */
-
-	if (datalen > 0 && ecn_ ){
-	        // set ect on data packets 
-		fh->ect() = ect_;	// on after mutual agreement on ECT
-        } else if (ecn_ && ecn_syn_ && ecn_syn_next_ && (pflags & TH_SYN) && (pflags & TH_ACK)) {
-                // set ect on syn/ack packet, if syn packet was negotiating ECT
-               	fh->ect() = ect_;
-	} else {
-		/* Set ect() to 0.  -M. Weigle 1/19/05 */
-		fh->ect() = 0;
-	}
-
-	// Mohammad: for DCTCP, ect should be set on all packets
-            if (ecnhat_)
-                        fh->ect() = ect_;
-	
-	if (ecn_ && ect_ && recent_ce_ ) { 
-		// This is needed here for the ACK in a SYN, SYN/ACK, ACK
-		// sequence.
-		pflags |= TH_ECE;	      
-	        
-	}
-        // fill in CWR and ECE bits which don't actually sit in
-        // the tcp_flags but in hdr_flags
-        if ( pflags & TH_ECE) {
-                fh->ecnecho() = 1;
+    if (!p) { p = allocpkt(); }
+    hdr_tcp *tcph = hdr_tcp::access(p);
+    hdr_flags *fh = hdr_flags::access(p);
+    hdr_ip* iph = hdr_ip::access(p);
+
+    // build basic header w/options
+
+    tcph->seqno() = seqno;
+    tcph->ackno() = ackno;
+    tcph->flags() = pflags;
+    tcph->reason() |= reason; // make tcph->reason look like ns1 pkt->flags?
+    tcph->sa_length() = 0;    // may be increased by build_options()
+    tcph->hlen() = tcpip_base_hdr_size_;
+    tcph->hlen() += build_options(tcph);
+
+    // Explicit Congestion Notification (ECN) related:
+    // Bits in header:
+    // 	ECT (EC Capable Transport),
+    // 	ECNECHO (ECHO of ECN Notification generated at router),
+    // 	CWR (Congestion Window Reduced from RFC 2481)
+    // States in TCP:
+    //	ecn_: I am supposed to do ECN if my peer does
+    //	ect_: I am doing ECN (ecn_ should be T and peer does ECN)
+
+    if (datalen > 0 && ecn_ ){
+        // set ect on data packets
+        fh->ect() = ect_;	// on after mutual agreement on ECT
+    } else if (ecn_ && ecn_syn_ && ecn_syn_next_ && (pflags & TH_SYN) && (pflags & TH_ACK)) {
+        // set ect on syn/ack packet, if syn packet was negotiating ECT
+        fh->ect() = ect_;
+    } else {
+        // Set ect() to 0.  -M. Weigle 1/19/05
+        fh->ect() = 0;
+    }
+
+    // Mohammad: for DCTCP, ect should be set on all packets
+    if (ecnhat_)
+        fh->ect() = ect_;
+
+    if (ecn_ && ect_ && recent_ce_ ) {
+        // This is needed here for the ACK in a SYN, SYN/ACK, ACK
+        // sequence.
+        pflags |= TH_ECE;
+
+    }
+    // fill in CWR and ECE bits which don't actually sit in
+    // the tcp_flags but in hdr_flags
+    if ( pflags & TH_ECE) {
+        fh->ecnecho() = 1;
+    } else {
+        fh->ecnecho() = 0;
+    }
+
+    if ( pflags & TH_CWR ) {
+        fh->cong_action() = 1;
+    }
+    else {
+        // Set cong_action() to 0  -M. Weigle 1/19/05
+        fh->cong_action() = 0;
+    }
+
+    // actual size is data length plus header length
+    hdr_cmn *ch = hdr_cmn::access(p);
+    ch->size() = datalen + tcph->hlen();
+
+    if (datalen <= 0) {
+        ++nackpack_;
+    }
+    else {
+        ++ndatapack_;
+        ndatabytes_ += datalen;
+        last_send_time_ = now();	// time of last data
+    }
+    if (reason == REASON_TIMEOUT || reason == REASON_DUPACK || reason == REASON_SACK) {
+        ++nrexmitpack_;
+        nrexmitbytes_ += datalen;
+    }
+    last_ack_sent_ = ackno;
+
+    //if (state_ != TCPS_ESTABLISHED) {
+    //printf("%f(%s)[state:%s]: sending pkt ", now(), name(), statestr(state_));
+    //prpkt(p);
+    //}
+   if (deadline > 0)
+        iph->prio_type() = 1;
+    if (datalen > 0) {
+        //iph->prio_type() = 0;
+        //iph->prio() = set_prio(seqno, curseq_);
+        // Shuang: prio dropping 
+        if (deadline == 0) {
+            iph->prio() = set_prio(seqno, curseq_);
+            iph->prio_type() = 0;
         } else {
-                fh->ecnecho() = 0;
-        }
-
-
-        if ( pflags & TH_CWR ) {
-                fh->cong_action() = 1;
+            int tleft = deadline - int((now() - start_time) * 1e6);
+            iph->prio_type() = 1;
+            iph->prio() = deadline + int(start_time * 1e6);
+            if (tleft < 0 || byterm() * 8 / 1e4 > tleft) {
+                iph->prio_type() = 0;
+                iph->prio() = (1 << 30);
+            } else {
+                //				iph->prio() = iph->prio() / 40 * 1000 + set_prio(seqno, curseq_) / 1460;
+            }
         }
-	else {
-		/* Set cong_action() to 0  -M. Weigle 1/19/05 */
-		fh->cong_action() = 0;
-	}
 
-	/* actual size is data length plus header length */
+        // Mohammad: this is deprecated
+        // it was for path-aware multipath
+        // congestion control experiments
+        //Shuang: delete it
+        //iph->prio() = fid_;
+
+        // Mohammad: inform pacer (TBF) that
+        // this connection received an EcnEcho.
+        // this is a bit hacky, but necessary
+        // for now since the TBF class doesn't see the
+        // ACKS.
 
-        hdr_cmn *ch = hdr_cmn::access(p);
-        ch->size() = datalen + tcph->hlen();
+        if (informpacer)
+            iph->gotecnecho = 1;
+        else
+            iph->gotecnecho = 0;
 
-        if (datalen <= 0) {
-                ++nackpack_;
-				//Shuang: artifically reduce ack size
-				//ch->size() = 1;
-		}
-        else {
-                ++ndatapack_;
-                ndatabytes_ += datalen;
-		last_send_time_ = now();	// time of last data
-        }
-        if (reason == REASON_TIMEOUT || reason == REASON_DUPACK || reason == REASON_SACK) {
-                ++nrexmitpack_;
-                nrexmitbytes_ += datalen;
-        }
-	last_ack_sent_ = ackno;
-
-//if (state_ != TCPS_ESTABLISHED) {
-//printf("%f(%s)[state:%s]: sending pkt ", now(), name(), statestr(state_));
-//prpkt(p);
-//}
-	if (deadline > 0)
-		iph->prio_type() = 1;
-	if (datalen > 0) {
-		//iph->prio_type() = 0;
-		//iph->prio() = set_prio(seqno, curseq_);
-		/* Shuang: prio dropping */
-		if (deadline == 0) {
-			iph->prio() = set_prio(seqno, curseq_);
-			iph->prio_type() = 0;
-		} else {
-			int tleft = deadline - int((now() - start_time) * 1e6);
-			iph->prio_type() = 1;
-			iph->prio() = deadline + int(start_time * 1e6);
-			if (tleft < 0 || byterm() * 8 / 1e4 > tleft) {
-				iph->prio_type() = 0;
-				iph->prio() = (1 << 30);
-			} else {
-//				iph->prio() = iph->prio() / 40 * 1000 + set_prio(seqno, curseq_) / 1460;
-			}
-		}
-		
-	        /* Mohammad: this is deprecated
-		 * it was for path-aware multipath
-		 * congestion control experiments */
-	        //Shuang: delete it
-			//iph->prio() = fid_;
-	
-		/* Mohammad: inform pacer (TBF) that
-		 * this connection received an EcnEcho.
-		 * this is a bit hacky, but necessary 
-		 * for now since the TBF class doesn't see the
-		 * ACKS. */
-		
-		if (informpacer) 
-		       iph->gotecnecho = 1;
-		else 
-		       iph->gotecnecho = 0;
-        
-		informpacer = 0; 
-		//abd
-	}
-	
-	send(p, 0);
+        informpacer = 0;
+        //abd
+    }
+    
 
-	return;
+    send(p, 0);
+    return;
 }
 
 //
@@ -1022,14 +1011,14 @@ FullTcpAgent::sendpacket(int seqno, int
 void
 FullTcpAgent::reset_rtx_timer(int /* mild */)
 {
-	// cancel old timer, set a new one
-	/* if there is no outstanding data, don't back off rtx timer *
-	 * (Fix from T. Kelly.) */
-	if (!(highest_ack_ == maxseq_ && restart_bugfix_)) {
-        	rtt_backoff();		// double current timeout
-	}
-        set_rtx_timer();	// set new timer
-        rtt_active_ = FALSE;	// no timing during this window
+    // cancel old timer, set a new one
+    /* if there is no outstanding data, don't back off rtx timer *
+     * (Fix from T. Kelly.) */
+    if (!(highest_ack_ == maxseq_ && restart_bugfix_)) {
+        rtt_backoff();		// double current timeout
+    }
+    set_rtx_timer();	// set new timer
+    rtt_active_ = FALSE;	// no timing during this window
 }
 
 /*
@@ -1049,295 +1038,295 @@ FullTcpAgent::reset_rtx_timer(int /* mil
 int
 FullTcpAgent::foutput(int seqno, int reason)
 {
-	// if maxseg_ not set, set it appropriately
-	// Q: how can this happen?
+    // if maxseg_ not set, set it appropriately
+    // Q: how can this happen?
 
-	if (maxseg_ == 0) 
-	       maxseg_ = size_;// Mohammad: changed from size_  - headersize();
-	// Mohamad: commented the else condition 
-	// which is unnecessary and conflates with
-	// tcp.cc
-	//else
-	//	size_ =  maxseg_ + headersize();
-
-	int is_retransmit = (seqno < maxseq_);
-	int quiet = (highest_ack_ == maxseq_);
-	int pflags = outflags();
-	int syn = (seqno == iss_);
-	int emptying_buffer = FALSE;
-	int buffered_bytes = (infinite_send_) ? TCP_MAXSEQ :
-				curseq_ - highest_ack_ + 1;
-//printf("buffered bytes= %d now= %lf fid= %d cwnd= %d\n", buffered_bytes,now(),fid_,(int)cwnd_);
-	int win = window() * maxseg_;	// window (in bytes)
-	if (prob_mode_ && win > 1)
-	  win = 1;
-
-	int off = seqno - highest_ack_;	// offset of seg in window
-	int datalen;
-	//int amtsent = 0;
-
-	// be careful if we have not received any ACK yet
-	if (highest_ack_ < 0) {
-		if (!infinite_send_)
-			buffered_bytes = curseq_ - iss_;;
-		off = seqno - iss_;
-	}
-
-	if (syn && !data_on_syn_)
-		datalen = 0;
-	else if (pipectrl_)
-		datalen = buffered_bytes - off;
-	else
-		datalen = min(buffered_bytes, win) - off;
-	
-//	if (fid_ == 13 || fid_ == 14) {
-//		int tmp = 0;
-//		if (prob_mode_)
-//			tmp = 1;
-//		int tmph = highest_ack_;
-//		printf("%.5lf: FLOW%d: win %d probe: %d buffered bytes %d off %d seqno %d, highestack %d, datalen %d\n", now(), fid_, win, tmp, buffered_bytes, off, seqno, tmph, datalen);
-//		fflush(stdout);
-//	}
-
-//	if (deadline != 0 && !syn) {
-//		double tleft = deadline/1e6 - (now() - start_time);
-//		if (tleft < 0) {
-//			printf("early termination now %.8lf start %.8lf deadline %d\n", now(), start_time, deadline);
-//			fflush(stdout);
-//			buffered_bytes = 0;
-//			datalen = 0;
-//		}
-//    }	
-	if ((signal_on_empty_) && (!buffered_bytes) && (!syn)) {
-	                bufferempty();
-	}
-	//
-	// in real TCP datalen (len) could be < 0 if there was window
-	// shrinkage, or if a FIN has been sent and neither ACKd nor
-	// retransmitted.  Only this 2nd case concerns us here...
-	//
-	if (datalen < 0) {
-		datalen = 0;
-	} else if (datalen > maxseg_) {
-		datalen = maxseg_;
-	}
-       
-
-	//
-	// this is an option that causes us to slow-start if we've
-	// been idle for a "long" time, where long means a rto or longer
-	// the slow-start is a sort that does not set ssthresh
-	//
-
-	if (slow_start_restart_ && quiet && datalen > 0) {
-		if (idle_restart()) {
-			slowdown(CLOSE_CWND_INIT);
-			}
-	}
-
-	//printf("%f %d %d\n", Scheduler::instance().clock(), (int) highest_ack_, (int) maxseq_);
-
-	//
-	// see if sending this packet will empty the send buffer
-	// a dataless SYN packet counts also
-	//
-
-	if (!infinite_send_ && ((seqno + datalen) > curseq_ || 
-	    (syn && datalen == 0))) {
-		emptying_buffer = TRUE;
-		//
-		// if not a retransmission, notify application that 
-		// everything has been sent out at least once.
-		//
-		if (!syn) {
-			idle();
-			if (close_on_empty_ && quiet) {
-				flags_ |= TF_NEEDCLOSE;
-			}
-		}
-		pflags |= TH_PUSH;
-		//
-		// if close_on_empty set, we are finished
-		// with this connection; close it
-		//
-	} else  {
-		/* not emptying buffer, so can't be FIN */
-		pflags &= ~TH_FIN;
-	}
-	if (infinite_send_ && (syn && datalen == 0))
-		pflags |= TH_PUSH;  // set PUSH for dataless SYN
-
-	/* sender SWS avoidance (Nagle) */
-
-	if (datalen > 0) {
-		// if full-sized segment, ok
-		if (datalen == maxseg_)
-			goto send;
-		// if Nagle disabled and buffer clearing, ok
-		if ((quiet || nodelay_)  && emptying_buffer)
-			goto send;
-		// if a retransmission
-		if (is_retransmit)
-			goto send;
-		// if big "enough", ok...
-		//	(this is not a likely case, and would
-		//	only happen for tiny windows)
-		if (datalen >= ((wnd_ * maxseg_) / 2.0))
-			goto send;
-		//Shuang
-		if (datalen == 1 && prob_mode_)
-			goto send;
-	}
-
-	if (need_send()){
-//		if(fid_==2352) printf("before need_send fid= %d, rcv_nxt_= %d highest_ack= %d, last_ack_sent= %d\n",fid_,(int)rcv_nxt_,(int)highest_ack_,last_ack_sent_);
-		goto send;
-	}
-
-	/*
-	 * send now if a control packet or we owe peer an ACK
-	 * TF_ACKNOW can be set during connection establishment and
-	 * to generate acks for out-of-order data
-	 */
-
-	if ((flags_ & (TF_ACKNOW|TF_NEEDCLOSE)) ||
-	    (pflags & (TH_SYN|TH_FIN))) {
-		goto send;
-	}
-
-        /*      
-         * No reason to send a segment, just return.
-         */      
-	return 0;
-
-send:
-
-	// is a syn or fin?
-	//printf("made it to send\n");
-	syn = (pflags & TH_SYN) ? 1 : 0;
-	
-	int fin = (pflags & TH_FIN) ? 1 : 0;
-	
-        /* setup ECN syn and ECN SYN+ACK packet headers */
-        if (ecn_ && syn && !(pflags & TH_ACK)){
-                pflags |= TH_ECE;
-                pflags |= TH_CWR;
-        }
-        if (ecn_ && syn && (pflags & TH_ACK)){
-                pflags |= TH_ECE;
-                pflags &= ~TH_CWR;
-        }
-	else if (ecn_ && ect_ && cong_action_ && 
-	             (!is_retransmit || SetCWRonRetransmit_)) {
-		/* 
-		 * Don't set CWR for a retranmitted SYN+ACK (has ecn_ 
-		 * and cong_action_ set).
-		 * -M. Weigle 6/19/02
-                 *
-                 * SetCWRonRetransmit_ was changed to true,
-                 * allowing CWR on retransmitted data packets.  
-                 * See test ecn_burstyEcn_reno_full 
-                 * in test-suite-ecn-full.tcl.
-		 * - Sally Floyd, 6/5/08.
-		 */
-		/* set CWR if necessary */
-		pflags |= TH_CWR;
-		/* Turn cong_action_ off: Added 6/5/08, Sally Floyd. */
-		cong_action_ = FALSE;
-	}
-
-	/* moved from sendpacket()  -M. Weigle 6/19/02 */
-	//
-	// although CWR bit is ordinarily associated with ECN,
-	// it has utility within the simulator for traces. Thus, set
-	// it even if we aren't doing ECN
-	//
-	if (datalen > 0 && cong_action_ && !is_retransmit) {
-		pflags |= TH_CWR;
-	}
-  
-        /* set ECE if necessary */
-        if (ecn_ && ect_ && recent_ce_ ) {
-		pflags |= TH_ECE;
-	}
-
-        /* 
-         * Tack on the FIN flag to the data segment if close_on_empty_
-         * was previously set-- avoids sending a separate FIN
-         */ 
-        if (flags_ & TF_NEEDCLOSE) {
-                flags_ &= ~TF_NEEDCLOSE;
-                if (state_ <= TCPS_ESTABLISHED && state_ != TCPS_CLOSED)
-                {
-                    pflags |=TH_FIN;
-                    fin = 1;  /* FIN consumes sequence number */
-                    newstate(TCPS_FIN_WAIT_1);
-                }
+    if (maxseg_ == 0)
+        maxseg_ = size_;// Mohammad: changed from size_  - headersize();
+    // Mohamad: commented the else condition
+    // which is unnecessary and conflates with
+    // tcp.cc
+    //else
+    //	size_ =  maxseg_ + headersize();
+
+    int is_retransmit = (seqno < maxseq_);
+    int quiet = (highest_ack_ == maxseq_);
+    int pflags = outflags();
+    int syn = (seqno == iss_);
+    int emptying_buffer = FALSE;
+    int buffered_bytes = (infinite_send_) ? TCP_MAXSEQ :
+            curseq_ - highest_ack_ + 1;
+    //printf("buffered bytes= %d now= %lf fid= %d cwnd= %d\n", buffered_bytes,now(),fid_,(int)cwnd_);
+    int win = window() * maxseg_;	// window (in bytes)
+    if (prob_mode_ && win > 1)
+        win = 1;
+
+    int off = seqno - highest_ack_;	// offset of seg in window
+    int datalen;
+    //int amtsent = 0;
+
+    // be careful if we have not received any ACK yet
+    if (highest_ack_ < 0) {
+        if (!infinite_send_)
+            buffered_bytes = curseq_ - iss_;;
+        off = seqno - iss_;
+    }
+
+    if (syn && !data_on_syn_)
+        datalen = 0;
+    else if (pipectrl_)
+        datalen = buffered_bytes - off;
+    else
+        datalen = min(buffered_bytes, win) - off;
+
+    //	if (fid_ == 13 || fid_ == 14) {
+    //		int tmp = 0;
+    //		if (prob_mode_)
+    //			tmp = 1;
+    //		int tmph = highest_ack_;
+    //		printf("%.5lf: FLOW%d: win %d probe: %d buffered bytes %d off %d seqno %d, highestack %d, datalen %d\n", now(), fid_, win, tmp, buffered_bytes, off, seqno, tmph, datalen);
+    //		fflush(stdout);
+    //	}
+
+    //	if (deadline != 0 && !syn) {
+    //		double tleft = deadline/1e6 - (now() - start_time);
+    //		if (tleft < 0) {
+    //			printf("early termination now %.8lf start %.8lf deadline %d\n", now(), start_time, deadline);
+    //			fflush(stdout);
+    //			buffered_bytes = 0;
+    //			datalen = 0;
+    //		}
+    //    }
+    if ((signal_on_empty_) && (!buffered_bytes) && (!syn)) {
+        bufferempty();
+    }
+    //
+    // in real TCP datalen (len) could be < 0 if there was window
+    // shrinkage, or if a FIN has been sent and neither ACKd nor
+    // retransmitted.  Only this 2nd case concerns us here...
+    //
+    if (datalen < 0) {
+        datalen = 0;
+    } else if (datalen > maxseg_) {
+        datalen = maxseg_;
+    }
+
+
+    //
+    // this is an option that causes us to slow-start if we've
+    // been idle for a "long" time, where long means a rto or longer
+    // the slow-start is a sort that does not set ssthresh
+    //
+
+    if (slow_start_restart_ && quiet && datalen > 0) {
+        if (idle_restart()) {
+            slowdown(CLOSE_CWND_INIT);
         }
-	sendpacket(seqno, rcv_nxt_, pflags, datalen, reason);
+    }
+
+    //printf("%f %d %d\n", Scheduler::instance().clock(), (int) highest_ack_, (int) maxseq_);
 
-        /*      
-         * Data sent (as far as we can tell).
-         * Any pending ACK has now been sent.
-         */      
-	flags_ &= ~(TF_ACKNOW|TF_DELACK);
-	
-	// Mohammad
-	delack_timer_.force_cancel();
-	/*
+    //
+    // see if sending this packet will empty the send buffer
+    // a dataless SYN packet counts also
+    //
+
+    if (!infinite_send_ && ((seqno + datalen) > curseq_ ||
+            (syn && datalen == 0))) {
+        emptying_buffer = TRUE;
+        //
+        // if not a retransmission, notify application that
+        // everything has been sent out at least once.
+        //
+        if (!syn) {
+            idle();
+            if (close_on_empty_ && quiet) {
+                flags_ |= TF_NEEDCLOSE;
+            }
+        }
+        pflags |= TH_PUSH;
+        //
+        // if close_on_empty set, we are finished
+        // with this connection; close it
+        //
+    } else  {
+        /* not emptying buffer, so can't be FIN */
+        pflags &= ~TH_FIN;
+    }
+    if (infinite_send_ && (syn && datalen == 0))
+        pflags |= TH_PUSH;  // set PUSH for dataless SYN
+
+    /* sender SWS avoidance (Nagle) */
+
+    if (datalen > 0) {
+        // if full-sized segment, ok
+        if (datalen == maxseg_)
+            goto send;
+        // if Nagle disabled and buffer clearing, ok
+        if ((quiet || nodelay_)  && emptying_buffer)
+            goto send;
+        // if a retransmission
+        if (is_retransmit)
+            goto send;
+        // if big "enough", ok...
+        //	(this is not a likely case, and would
+        //	only happen for tiny windows)
+        if (datalen >= ((wnd_ * maxseg_) / 2.0))
+            goto send;
+        //Shuang
+        if (datalen == 1 && prob_mode_)
+            goto send;
+    }
+
+    if (need_send()){
+        //		if(fid_==2352) printf("before need_send fid= %d, rcv_nxt_= %d highest_ack= %d, last_ack_sent= %d\n",fid_,(int)rcv_nxt_,(int)highest_ack_,last_ack_sent_);
+        goto send;
+    }
+
+    /*
+     * send now if a control packet or we owe peer an ACK
+     * TF_ACKNOW can be set during connection establishment and
+     * to generate acks for out-of-order data
+     */
+
+    if ((flags_ & (TF_ACKNOW|TF_NEEDCLOSE)) ||
+            (pflags & (TH_SYN|TH_FIN))) {
+        goto send;
+    }
+
+    /*
+     * No reason to send a segment, just return.
+     */
+    return 0;
+
+    send:
+
+    // is a syn or fin?
+    //printf("made it to send\n");
+    syn = (pflags & TH_SYN) ? 1 : 0;
+
+    int fin = (pflags & TH_FIN) ? 1 : 0;
+
+    /* setup ECN syn and ECN SYN+ACK packet headers */
+    if (ecn_ && syn && !(pflags & TH_ACK)){
+        pflags |= TH_ECE;
+        pflags |= TH_CWR;
+    }
+    if (ecn_ && syn && (pflags & TH_ACK)){
+        pflags |= TH_ECE;
+        pflags &= ~TH_CWR;
+    }
+    else if (ecn_ && ect_ && cong_action_ &&
+            (!is_retransmit || SetCWRonRetransmit_)) {
+        /*
+         * Don't set CWR for a retranmitted SYN+ACK (has ecn_
+         * and cong_action_ set).
+         * -M. Weigle 6/19/02
+         *
+         * SetCWRonRetransmit_ was changed to true,
+         * allowing CWR on retransmitted data packets.
+         * See test ecn_burstyEcn_reno_full
+         * in test-suite-ecn-full.tcl.
+         * - Sally Floyd, 6/5/08.
+         */
+        /* set CWR if necessary */
+        pflags |= TH_CWR;
+        /* Turn cong_action_ off: Added 6/5/08, Sally Floyd. */
+        cong_action_ = FALSE;
+    }
+
+    /* moved from sendpacket()  -M. Weigle 6/19/02 */
+    //
+    // although CWR bit is ordinarily associated with ECN,
+    // it has utility within the simulator for traces. Thus, set
+    // it even if we aren't doing ECN
+    //
+    if (datalen > 0 && cong_action_ && !is_retransmit) {
+        pflags |= TH_CWR;
+    }
+
+    /* set ECE if necessary */
+    if (ecn_ && ect_ && recent_ce_ ) {
+        pflags |= TH_ECE;
+    }
+
+    /*
+     * Tack on the FIN flag to the data segment if close_on_empty_
+     * was previously set-- avoids sending a separate FIN
+     */
+    if (flags_ & TF_NEEDCLOSE) {
+        flags_ &= ~TF_NEEDCLOSE;
+        if (state_ <= TCPS_ESTABLISHED && state_ != TCPS_CLOSED)
+        {
+            pflags |=TH_FIN;
+            fin = 1;  /* FIN consumes sequence number */
+            newstate(TCPS_FIN_WAIT_1);
+        }
+    }
+    sendpacket(seqno, rcv_nxt_, pflags, datalen, reason);
+
+    /*
+     * Data sent (as far as we can tell).
+     * Any pending ACK has now been sent.
+     */
+    flags_ &= ~(TF_ACKNOW|TF_DELACK);
+
+    // Mohammad
+    delack_timer_.force_cancel();
+    /*
 	if (datalen == 0)
 	        printf("%f -- %s sent ACK for %d, canceled delack\n", this->name(), Scheduler::instance().clock(), rcv_nxt_);
-	*/
+     */
 
-	/*
-	 * if we have reacted to congestion recently, the
-	 * slowdown() procedure will have set cong_action_ and
-	 * sendpacket will have copied that to the outgoing pkt
-	 * CWR field. If that packet contains data, then
-	 * it will be reliably delivered, so we are free to turn off the
-	 * cong_action_ state now  If only a pure ACK, we keep the state
-	 * around until we actually send a segment
-	 */
-
-	int reliable = datalen + syn + fin; // seq #'s reliably sent
-	/* 
-	 * Don't reset cong_action_ until we send new data.
-	 * -M. Weigle 6/19/02
-	 */
-	if (cong_action_ && reliable > 0 && !is_retransmit)
-		cong_action_ = FALSE;
-
-	// highest: greatest sequence number sent + 1
-	//	and adjusted for SYNs and FINs which use up one number
-
-	int highest = seqno + reliable;
-	if (highest > ecnhat_maxseq) 
-		ecnhat_maxseq = highest;
-	if (highest > maxseq_) {
-		maxseq_ = highest;
-		//
-		// if we are using conventional RTT estimation,
-		// establish timing on this segment
-		//
-		if (!ts_option_ && rtt_active_ == FALSE) {
-			rtt_active_ = TRUE;	// set timer
-			rtt_seq_ = seqno; 	// timed seq #
-			rtt_ts_ = now();	// when set
-		}
-	}
-
-	/*
-	 * Set retransmit timer if not currently set,
-	 * and not doing an ack or a keep-alive probe.
-	 * Initial value for retransmit timer is smoothed
-	 * round-trip time + 2 * round-trip time variance.
-	 * Future values are rtt + 4 * rttvar.
-	 */
-	if (rtx_timer_.status() != TIMER_PENDING && reliable) {
-		set_rtx_timer();  // no timer pending, schedule one
-	}
+    /*
+     * if we have reacted to congestion recently, the
+     * slowdown() procedure will have set cong_action_ and
+     * sendpacket will have copied that to the outgoing pkt
+     * CWR field. If that packet contains data, then
+     * it will be reliably delivered, so we are free to turn off the
+     * cong_action_ state now  If only a pure ACK, we keep the state
+     * around until we actually send a segment
+     */
+
+    int reliable = datalen + syn + fin; // seq #'s reliably sent
+    /*
+     * Don't reset cong_action_ until we send new data.
+     * -M. Weigle 6/19/02
+     */
+    if (cong_action_ && reliable > 0 && !is_retransmit)
+        cong_action_ = FALSE;
+
+    // highest: greatest sequence number sent + 1
+    //	and adjusted for SYNs and FINs which use up one number
+
+    int highest = seqno + reliable;
+    if (highest > ecnhat_maxseq)
+        ecnhat_maxseq = highest;
+    if (highest > maxseq_) {
+        maxseq_ = highest;
+        //
+        // if we are using conventional RTT estimation,
+        // establish timing on this segment
+        //
+        if (!ts_option_ && rtt_active_ == FALSE) {
+            rtt_active_ = TRUE;	// set timer
+            rtt_seq_ = seqno; 	// timed seq #
+            rtt_ts_ = now();	// when set
+        }
+    }
 
-	return (reliable);
+    /*
+     * Set retransmit timer if not currently set,
+     * and not doing an ack or a keep-alive probe.
+     * Initial value for retransmit timer is smoothed
+     * round-trip time + 2 * round-trip time variance.
+     * Future values are rtt + 4 * rttvar.
+     */
+    if (rtx_timer_.status() != TIMER_PENDING && reliable) {
+        set_rtx_timer();  // no timer pending, schedule one
+    }
+
+    return (reliable);
 }
 
 /*
@@ -1351,53 +1340,53 @@ send:
  * do not overshoot the receiver's advertised window if we are
  * in (pipectrl_ == TRUE) mode.
  */
-  
+
 void
 FullTcpAgent::send_much(int force, int reason, int maxburst)
 {
-	int npackets = 0;	// sent so far
+    int npackets = 0;	// sent so far
 
-	//if ((int(t_seqno_)) > 1)
-	//printf("%f: send_much(f:%d, win:%d, pipectrl:%d, pipe:%d, t_seqno:%d, topwin:%d, maxseq_:%d\n",
-	//now(), force, win, pipectrl_, pipe_, int(t_seqno_), topwin, int(maxseq_));
-        	
-	if (!force && (delsnd_timer_.status() == TIMER_PENDING))
-		return;
-
-	while (1) {
-
-		/*
-		 * note that if output decides to not actually send
-		 * (e.g. because of Nagle), then if we don't break out
-		 * of this loop, we can loop forever at the same
-		 * simulated time instant
-		 */
-		int amt;
-		int seq = nxt_tseq();
-		
-		
-		if (!force && !send_allowed(seq))
-			break;
-		// Q: does this need to be here too?
-		if (!force && overhead_ != 0 &&
-		    (delsnd_timer_.status() != TIMER_PENDING)) {
-			delsnd_timer_.resched(Random::uniform(overhead_));
-			return;
-		}
-		if ((amt = foutput(seq, reason)) <= 0) {
-		  //printf("made call to foutput: returned %d\n", amt);
-		        break;
-		}
-		if ((outflags() & TH_FIN))
-			--amt;	// don't count FINs
-		sent(seq, amt);
-		force = 0;
-
-		if ((outflags() & (TH_SYN|TH_FIN)) ||
-		    (maxburst && ++npackets >= maxburst))
-			break;
-	}
-	return;
+    //if ((int(t_seqno_)) > 1)
+    //printf("%f: send_much(f:%d, win:%d, pipectrl:%d, pipe:%d, t_seqno:%d, topwin:%d, maxseq_:%d\n",
+    //now(), force, win, pipectrl_, pipe_, int(t_seqno_), topwin, int(maxseq_));
+
+    if (!force && (delsnd_timer_.status() == TIMER_PENDING))
+        return;
+
+    while (1) {
+
+        /*
+         * note that if output decides to not actually send
+         * (e.g. because of Nagle), then if we don't break out
+         * of this loop, we can loop forever at the same
+         * simulated time instant
+         */
+        int amt;
+        int seq = nxt_tseq();
+
+
+        if (!force && !send_allowed(seq))
+            break;
+        // Q: does this need to be here too?
+        if (!force && overhead_ != 0 &&
+                (delsnd_timer_.status() != TIMER_PENDING)) {
+            delsnd_timer_.resched(Random::uniform(overhead_));
+            return;
+        }
+        if ((amt = foutput(seq, reason)) <= 0) {
+            //printf("made call to foutput: returned %d\n", amt);
+            break;
+        }
+        if ((outflags() & TH_FIN))
+            --amt;	// don't count FINs
+        sent(seq, amt);
+        force = 0;
+
+        if ((outflags() & (TH_SYN|TH_FIN)) ||
+                (maxburst && ++npackets >= maxburst))
+            break;
+    }
+    return;
 }
 
 /*
@@ -1407,20 +1396,20 @@ FullTcpAgent::send_much(int force, int r
 int
 FullTcpAgent::send_allowed(int seq)
 {
-        int win = window() * maxseg_;
-		//Shuang: probe_mode
-		if (prob_mode_ && win > 1)
-			win = 1;
-        int topwin = curseq_; // 1 seq number past the last byte we can send
-
-        if ((topwin > highest_ack_ + win) || infinite_send_)
-                topwin = highest_ack_ + win;
-	
-//	if (seq >= topwin) {
-//		printf("%.5lf: fid %d send not allowed\n", now(), fid_);
-//		fflush(stdout);
-//	}
-	return (seq < topwin);
+    int win = window() * maxseg_;
+    //Shuang: probe_mode
+    if (prob_mode_ && win > 1)
+        win = 1;
+    int topwin = curseq_; // 1 seq number past the last byte we can send
+
+    if ((topwin > highest_ack_ + win) || infinite_send_)
+        topwin = highest_ack_ + win;
+
+    //	if (seq >= topwin) {
+    //		printf("%.5lf: fid %d send not allowed\n", now(), fid_);
+    //		fflush(stdout);
+    //	}
+    return (seq < topwin);
 }
 /*
  * Process an ACK
@@ -1439,78 +1428,78 @@ void
 FullTcpAgent::newack(Packet* pkt)
 {
 
-   	//Shuang: cancel prob_mode_ when receiving an ack
+    //Shuang: cancel prob_mode_ when receiving an ack
     prob_mode_ = false;
     prob_count_ = 0;
-	
-	hdr_tcp *tcph = hdr_tcp::access(pkt);
-
-	register int ackno = tcph->ackno();
-	int progress = (ackno > highest_ack_);
-	
-	//printf("NEWACK cur %d last %d ackno %d highest %d\n", cur_sqtotal_, last_sqtotal_,int(ackno), int(highest_ack_));
-	if (ackno == maxseq_) {
-		cancel_rtx_timer();	// all data ACKd
-	} else if (progress) {
-		set_rtx_timer();
-	}
-
-	// advance the ack number if this is for new data
-	if (progress) {
-		highest_ack_ = ackno;
-	}
-
-	// if we have suffered a retransmit timeout, t_seqno_
-	// will have been reset to highest_ ack.  If the
-	// receiver has cached some data above t_seqno_, the
-	// new-ack value could (should) jump forward.  We must
-	// update t_seqno_ here, otherwise we would be doing
-	// go-back-n.
 
-	if (t_seqno_ < highest_ack_)
-		t_seqno_ = highest_ack_; // seq# to send next
+    hdr_tcp *tcph = hdr_tcp::access(pkt);
 
-        /*
-         * Update RTT only if it's OK to do so from info in the flags header.
-         * This is needed for protocols in which intermediate agents
-
-         * in the network intersperse acks (e.g., ack-reconstructors) for
-         * various reasons (without violating e2e semantics).
-         */
-        hdr_flags *fh = hdr_flags::access(pkt);
-
-	if (!fh->no_ts_) {
-                if (ts_option_) {
-			recent_age_ = now();
-			recent_ = tcph->ts();
-			rtt_update(now() - tcph->ts_echo());
-			if (ts_resetRTO_ && (!ect_ || !ecn_backoff_ ||
-		           !hdr_flags::access(pkt)->ecnecho())) { 
-				// From Andrei Gurtov
-				//
-                         	// Don't end backoff if still in ECN-Echo with
-                         	// a congestion window of 1 packet.
-				t_backoff_ = 1;
-			}
-		} else if (rtt_active_ && ackno > rtt_seq_) {
-			// got an RTT sample, record it
-			// "t_backoff_ = 1;" deleted by T. Kelly.
-			rtt_active_ = FALSE;
-			rtt_update(now() - rtt_ts_);
-                }
-		if (!ect_ || !ecn_backoff_ ||
-		    !hdr_flags::access(pkt)->ecnecho()) {
-			/*
-			 * Don't end backoff if still in ECN-Echo with
-			 * a congestion window of 1 packet.
-			 * Fix from T. Kelly.
-			 */
-			t_backoff_ = 1;
-			ecn_backoff_ = 0;
-		}
+    register int ackno = tcph->ackno();
+    int progress = (ackno > highest_ack_);
 
+    //printf("NEWACK cur %d last %d ackno %d highest %d\n", cur_sqtotal_, last_sqtotal_,int(ackno), int(highest_ack_));
+    if (ackno == maxseq_) {
+        cancel_rtx_timer();	// all data ACKd
+    } else if (progress) {
+        set_rtx_timer();
+    }
+
+    // advance the ack number if this is for new data
+    if (progress) {
+        highest_ack_ = ackno;
+    }
+
+    // if we have suffered a retransmit timeout, t_seqno_
+    // will have been reset to highest_ ack.  If the
+    // receiver has cached some data above t_seqno_, the
+    // new-ack value could (should) jump forward.  We must
+    // update t_seqno_ here, otherwise we would be doing
+    // go-back-n.
+
+    if (t_seqno_ < highest_ack_)
+        t_seqno_ = highest_ack_; // seq# to send next
+
+    /*
+     * Update RTT only if it's OK to do so from info in the flags header.
+     * This is needed for protocols in which intermediate agents
+
+     * in the network intersperse acks (e.g., ack-reconstructors) for
+     * various reasons (without violating e2e semantics).
+     */
+    hdr_flags *fh = hdr_flags::access(pkt);
+
+    if (!fh->no_ts_) {
+        if (ts_option_) {
+            recent_age_ = now();
+            recent_ = tcph->ts();
+            rtt_update(now() - tcph->ts_echo());
+            if (ts_resetRTO_ && (!ect_ || !ecn_backoff_ ||
+                    !hdr_flags::access(pkt)->ecnecho())) {
+                // From Andrei Gurtov
+                //
+                // Don't end backoff if still in ECN-Echo with
+                // a congestion window of 1 packet.
+                t_backoff_ = 1;
+            }
+        } else if (rtt_active_ && ackno > rtt_seq_) {
+            // got an RTT sample, record it
+            // "t_backoff_ = 1;" deleted by T. Kelly.
+            rtt_active_ = FALSE;
+            rtt_update(now() - rtt_ts_);
+        }
+        if (!ect_ || !ecn_backoff_ ||
+                !hdr_flags::access(pkt)->ecnecho()) {
+            /*
+             * Don't end backoff if still in ECN-Echo with
+             * a congestion window of 1 packet.
+             * Fix from T. Kelly.
+             */
+            t_backoff_ = 1;
+            ecn_backoff_ = 0;
         }
-	return;
+
+    }
+    return;
 }
 
 
@@ -1543,21 +1532,21 @@ FullTcpAgent::newack(Packet* pkt)
 int
 FullTcpAgent::predict_ok(Packet* pkt)
 {
-	hdr_tcp *tcph = hdr_tcp::access(pkt);
-        hdr_flags *fh = hdr_flags::access(pkt);
+    hdr_tcp *tcph = hdr_tcp::access(pkt);
+    hdr_flags *fh = hdr_flags::access(pkt);
 
-	/* not the fastest way to do this, but perhaps clearest */
+    /* not the fastest way to do this, but perhaps clearest */
 
-	int p1 = (state_ == TCPS_ESTABLISHED);		// ready
-	int p2 = ((tcph->flags() & (TH_SYN|TH_FIN|TH_ACK)) == TH_ACK); // ACK
-	int p3 = ((flags_ & TF_NEEDFIN) == 0);		// don't need fin
-	int p4 = (!ts_option_ || fh->no_ts_ || (tcph->ts() >= recent_)); // tsok
-	int p5 = (tcph->seqno() == rcv_nxt_);		// in-order data
-	int p6 = (t_seqno_ == maxseq_);			// not re-xmit
-	int p7 = (!ecn_ || fh->ecnecho() == 0);		// no ECN
-	int p8 = (tcph->sa_length() == 0);		// no SACK info
+    int p1 = (state_ == TCPS_ESTABLISHED);		// ready
+    int p2 = ((tcph->flags() & (TH_SYN|TH_FIN|TH_ACK)) == TH_ACK); // ACK
+    int p3 = ((flags_ & TF_NEEDFIN) == 0);		// don't need fin
+    int p4 = (!ts_option_ || fh->no_ts_ || (tcph->ts() >= recent_)); // tsok
+    int p5 = (tcph->seqno() == rcv_nxt_);		// in-order data
+    int p6 = (t_seqno_ == maxseq_);			// not re-xmit
+    int p7 = (!ecn_ || fh->ecnecho() == 0);		// no ECN
+    int p8 = (tcph->sa_length() == 0);		// no SACK info
 
-	return (p1 && p2 && p3 && p4 && p5 && p6 && p7 && p8);
+    return (p1 && p2 && p3 && p4 && p5 && p6 && p7 && p8);
 }
 
 /*
@@ -1568,12 +1557,12 @@ FullTcpAgent::predict_ok(Packet* pkt)
 int
 FullTcpAgent::fast_retransmit(int seq)
 {
-	// we are now going to fast-retransmit and willtrace that event
-	trace_event("FAST_RETX");
-	printf("%f: fid %d did a fast retransmit - dupacks = %d\n", now(), fid_, (int)dupacks_);                
-	recover_ = maxseq_;	// recovery target
-	last_cwnd_action_ = CWND_ACTION_DUPACK;
-	return(foutput(seq, REASON_DUPACK));	// send one pkt
+    // we are now going to fast-retransmit and willtrace that event
+    trace_event("FAST_RETX");
+    printf("%f: fid %d did a fast retransmit - dupacks = %d\n", now(), fid_, (int)dupacks_);
+    recover_ = maxseq_;	// recovery target
+    last_cwnd_action_ = CWND_ACTION_DUPACK;
+    return(foutput(seq, REASON_DUPACK));	// send one pkt
 }
 
 /*
@@ -1593,14 +1582,14 @@ FullTcpAgent::fast_retransmit(int seq)
 int
 FullTcpAgent::need_send()
 {
-	if (flags_ & TF_ACKNOW)
-		return TRUE;
+    if (flags_ & TF_ACKNOW)
+        return TRUE;
 
-	int spa = (spa_thresh_ > 0 && ((rcv_nxt_ - irs_)  < spa_thresh_)) ?
-		1 : segs_per_ack_;
-	//Shuang
-		return ((rcv_nxt_ - last_ack_sent_) > 0);
-	//return ((rcv_nxt_ - last_ack_sent_) >= spa * maxseg_);
+    int spa = (spa_thresh_ > 0 && ((rcv_nxt_ - irs_)  < spa_thresh_)) ?
+            1 : segs_per_ack_;
+    //Shuang
+    return ((rcv_nxt_ - last_ack_sent_) > 0);
+    //return ((rcv_nxt_ - last_ack_sent_) >= spa * maxseg_);
 
 }
 
@@ -1614,21 +1603,21 @@ FullTcpAgent::need_send()
 int
 FullTcpAgent::idle_restart()
 {
-	if (last_send_time_ < 0.0) {
-		// last_send_time_ isn't set up yet, we shouldn't
-		// do the idle_restart
-		return (0);
-	}
-
-	double tao = now() - last_send_time_;
-	if (!ts_option_) {
-                double tickoff = fmod(last_send_time_ + boot_time_,
-			tcp_tick_);
-                tao = int((tao + tickoff) / tcp_tick_) * tcp_tick_;
-	}
+    if (last_send_time_ < 0.0) {
+        // last_send_time_ isn't set up yet, we shouldn't
+        // do the idle_restart
+        return (0);
+    }
+
+    double tao = now() - last_send_time_;
+    if (!ts_option_) {
+        double tickoff = fmod(last_send_time_ + boot_time_,
+                tcp_tick_);
+        tao = int((tao + tickoff) / tcp_tick_) * tcp_tick_;
+    }
 
-	return (tao > t_rtxcur_);  // verify this CHECKME
-	//return (tao > (int(t_srtt_) >> T_SRTT_BITS)*tcp_tick_); //Mohammad
+    return (tao > t_rtxcur_);  // verify this CHECKME
+    //return (tao > (int(t_srtt_) >> T_SRTT_BITS)*tcp_tick_); //Mohammad
 
 }
 
@@ -1639,8 +1628,8 @@ FullTcpAgent::idle_restart()
 void
 FullTcpAgent::set_initial_window()
 {
-	syn_ = TRUE;	// full-tcp always models SYN exchange
-	TcpAgent::set_initial_window();
+    syn_ = TRUE;	// full-tcp always models SYN exchange
+    TcpAgent::set_initial_window();
 }       
 
 /*
@@ -1665,1208 +1654,1208 @@ FullTcpAgent::set_initial_window()
 void
 FullTcpAgent::recv(Packet *pkt, Handler*)
 {
-	//Shuang: cancel probe mode
-		prob_mode_ = false;
-		prob_count_ = 0;
-
-	hdr_tcp *tcph = hdr_tcp::access(pkt);	// TCP header
-	hdr_cmn *th = hdr_cmn::access(pkt);	// common header (size, etc)
-	hdr_flags *fh = hdr_flags::access(pkt);	// flags (CWR, CE, bits)
-
-	int needoutput = FALSE;
-	int ourfinisacked = FALSE;
-	int dupseg = FALSE;			// recv'd dup data segment
-	int todrop = 0;				// duplicate DATA cnt in seg
-
-	last_state_ = state_;
-
-	int datalen = th->size() - tcph->hlen(); // # payload bytes
-//printf("fid2= %d datalen= %d\n",fid_,datalen);
-	int ackno = tcph->ackno();		 // ack # from packet
-	int tiflags = tcph->flags() ; 		 // tcp flags from packet
-
-//if (state_ != TCPS_ESTABLISHED || (tiflags&(TH_SYN|TH_FIN))) {
-//fprintf(stdout, "%f(%s)in state %s recv'd this packet: ", now(), name(), statestr(state_));
-//prpkt(pkt);
-//}
-	/* 
-	 * Acknowledge FIN from passive closer even in TCPS_CLOSED state
-	 * (since we lack TIME_WAIT state and RST packets,
-	 * the loss of the FIN packet from the passive closer will make that
-	 * endpoint retransmit the FIN forever)
-	 * -F. Hernandez-Campos 8/6/00
-	 */
-	if ( (state_ == TCPS_CLOSED) && (tiflags & TH_FIN) ) {
-		goto dropafterack;
-	}
-
-	/*
-	 * Don't expect to see anything while closed
-	 */
-
-	if (state_ == TCPS_CLOSED) {
-                if (debug_) {
-		        fprintf(stderr, "%f: FullTcp(%s): recv'd pkt in CLOSED state: ",
-			    now(), name());
-		        prpkt(pkt);
-                }
-		goto drop;
-	}
-
-	/*
-	 *  Shuang: if fid does not match, drop packets
-	 */
-	if (fid_ != hdr_ip::access(pkt)->fid_) {
-		//printf("extra!%d %d\n", fid_, hdr_ip::access(pkt)->fid_);
-		goto drop;
-	}
+    //Shuang: cancel probe mode
+    prob_mode_ = false;
+    prob_count_ = 0;
 
-        /*
-         * Process options if not in LISTEN state,
-         * else do it below
-         */
-	if (state_ != TCPS_LISTEN)
-		dooptions(pkt);
+    hdr_tcp *tcph = hdr_tcp::access(pkt);	// TCP header
+    hdr_cmn *th = hdr_cmn::access(pkt);	// common header (size, etc)
+    hdr_flags *fh = hdr_flags::access(pkt);	// flags (CWR, CE, bits)
+
+    int needoutput = FALSE;
+    int ourfinisacked = FALSE;
+    int dupseg = FALSE;			// recv'd dup data segment
+    int todrop = 0;				// duplicate DATA cnt in seg
+
+    last_state_ = state_;
+
+    int datalen = th->size() - tcph->hlen(); // # payload bytes
+    //printf("fid2= %d datalen= %d\n",fid_,datalen);
+    int ackno = tcph->ackno();		 // ack # from packet
+    int tiflags = tcph->flags() ; 		 // tcp flags from packet
+
+    //if (state_ != TCPS_ESTABLISHED || (tiflags&(TH_SYN|TH_FIN))) {
+    //fprintf(stdout, "%f(%s)in state %s recv'd this packet: ", now(), name(), statestr(state_));
+    //prpkt(pkt);
+    //}
+    /*
+     * Acknowledge FIN from passive closer even in TCPS_CLOSED state
+     * (since we lack TIME_WAIT state and RST packets,
+     * the loss of the FIN packet from the passive closer will make that
+     * endpoint retransmit the FIN forever)
+     * -F. Hernandez-Campos 8/6/00
+     */
+    if ( (state_ == TCPS_CLOSED) && (tiflags & TH_FIN) ) {
+        goto dropafterack;
+    }
+
+    /*
+     * Don't expect to see anything while closed
+     */
+
+    if (state_ == TCPS_CLOSED) {
+        if (debug_) {
+            fprintf(stderr, "%f: FullTcp(%s): recv'd pkt in CLOSED state: ",
+                    now(), name());
+            prpkt(pkt);
+        }
+        goto drop;
+    }
 
-	/*
-	 * if we are using delayed-ACK timers and
-	 * no delayed-ACK timer is set, set one.
-	 * They are set to fire every 'interval_' secs, starting
-	 * at time t0 = (0.0 + k * interval_) for some k such
-	 * that t0 > now
-	 */ 
-	/* 
-	 *Mohammad: commented this out for more efficient 
-	 * delayed ack generation
-	 */
-	/*if (delack_interval_ > 0.0 &&
+    /*
+     *  Shuang: if fid does not match, drop packets
+     */
+    if (fid_ != hdr_ip::access(pkt)->fid_) {
+        //printf("extra!%d %d\n", fid_, hdr_ip::access(pkt)->fid_);
+        goto drop;
+    }
+
+    /*
+     * Process options if not in LISTEN state,
+     * else do it below
+     */
+    if (state_ != TCPS_LISTEN)
+        dooptions(pkt);
+
+    /*
+     * if we are using delayed-ACK timers and
+     * no delayed-ACK timer is set, set one.
+     * They are set to fire every 'interval_' secs, starting
+     * at time t0 = (0.0 + k * interval_) for some k such
+     * that t0 > now
+     */
+    /*
+     *Mohammad: commented this out for more efficient
+     * delayed ack generation
+     */
+    /*if (delack_interval_ > 0.0 &&
 	    (delack_timer_.status() != TIMER_PENDING)) {
 		int last = int(now() / delack_interval_);
 		delack_timer_.resched(delack_interval_ * (last + 1.0) - now());
 		}*/
-	
 
-	// Mohammad
-	if (ecnhat_) 
-		update_ecnhat_alpha(pkt);
-
-	/* Mohammad: check if we need to inform
-	 * pacer of ecnecho.
-	 */
-	if (!(tiflags & TH_SYN) && fh->ecnecho())
-	        informpacer = 1;
 
-	/*if (datalen > 0)
+    // Mohammad
+    if (ecnhat_)
+        update_ecnhat_alpha(pkt);
+
+    /* Mohammad: check if we need to inform
+     * pacer of ecnecho.
+     */
+    if (!(tiflags & TH_SYN) && fh->ecnecho())
+        informpacer = 1;
+
+    /*if (datalen > 0)
 	  printf("received data: datalen = %d seqno = %d, ackno = %d, ce = %d, ecn-echo = %d\n", datalen, tcph->seqno(), ackno, fh->ce(), fh->ecnecho());
 	else 
 	  printf("received ack : datalen = %d seqno = %d, ackno = %d, ce = %d, ecn-echo = %d\n", datalen, tcph->seqno(), ackno, fh->ce(), fh->ecnecho());
-	*/
+     */
 
-	/*
-	 * Try header prediction: in seq data or in seq pure ACK
-	 *	with no funny business
-	 */
-	if (!nopredict_ && predict_ok(pkt)) {
-                /*
-                 * If last ACK falls within this segment's sequence numbers,
-                 * record the timestamp.
-		 * See RFC1323 (now RFC1323 bis)
-                 */
-                if (ts_option_ && !fh->no_ts_ &&
-		    tcph->seqno() <= last_ack_sent_) {
-			/*
-			 * this is the case where the ts value is newer than
-			 * the last one we've seen, and the seq # is the one
-			 * we expect [seqno == last_ack_sent_] or older
-			 */
-			recent_age_ = now();
-			recent_ = tcph->ts();
-                }
-
-		//
-		// generate a stream of ecnecho bits until we see a true
-		// cong_action bit
-		//
-
-	    	if (ecn_) { 
-		  if (ecnhat_) { // Mohammad		       
-	    		if (fh->ce() && fh->ect()) {
-	    			// no CWR from peer yet... arrange to
-	    			// keep sending ECNECHO
-			        if (recent_ce_ == FALSE) {
-				     ce_transition_ = 1;
-				     recent_ce_ = TRUE;
-				} else {
-				     ce_transition_ = 0;
-				}
-	    		} else if (datalen > 0 && !fh->ce() && fh->ect()){
-			        if (recent_ce_ == TRUE) {
-				     ce_transition_ = 1;
-				     recent_ce_ = FALSE;
-				} else {
-				      ce_transition_ = 0;
-				}
-			}  
-		  } else {
-		           if (fh->ce() && fh->ect()) {
-	    			// no CWR from peer yet... arrange to
-	    			// keep sending ECNECHO
-	    			recent_ce_ = TRUE;
-			   } else if (fh->cwr()) { 
-		                // got CWR response from peer.. stop
-	    			// sending ECNECHO bits
-			        recent_ce_ = FALSE;
-		           }		    
-		  }
-	    	}
-
-		// Header predication basically looks to see
-		// if the incoming packet is an expected pure ACK
-		// or an expected data segment
-
-		if (datalen == 0) {
-			// check for a received pure ACK in the correct range..
-			// also checks to see if we are wnd_ limited
-			// (we don't change cwnd at all below), plus
-			// not being in fast recovery and not a partial ack.
-			// If we are in fast
-			// recovery, go below so we can remember to deflate
-			// the window if we need to
-			if (ackno > highest_ack_ && ackno < maxseq_ &&
-			    cwnd_ >= wnd_ && !fastrecov_) {
-				newack(pkt);	// update timers,  highest_ack_
-				send_much(0, REASON_NORMAL, maxburst_);
-				Packet::free(pkt);
-				return;
-			}
-		} else if (ackno == highest_ack_ && rq_.empty()) {
-			// check for pure incoming segment
-			// the next data segment we're awaiting, and
-			// that there's nothing sitting in the reassem-
-			// bly queue
-			// 	give to "application" here
-			//	note: DELACK is inspected only by
-			//	tcp_fasttimo() in real tcp.  Every 200 ms
-			//	this routine scans all tcpcb's looking for
-			//	DELACK segments and when it finds them
-			//	changes DELACK to ACKNOW and calls tcp_output()
-			
-		        /* Mohammad: For DCTCP state machine */
-		        if (ecnhat_ && ce_transition_ && ((rcv_nxt_ - last_ack_sent_) > 0)) {
-			  // Must send an immediate ACK with with previous ECN state 
-			  // before transitioning to new state
-			  flags_ |= TF_ACKNOW;
-			  recent_ce_ = !recent_ce_;
-			  // printf("should be acking %d with recent_ce_ = %d\n", rcv_nxt_, recent_ce_);
-			  send_much(1, REASON_NORMAL, maxburst_);
-			  recent_ce_ = !recent_ce_;			  
-			} 
-
-		        rcv_nxt_ += datalen;
-
-			flags_ |= TF_DELACK;
-			// Mohammad
-			delack_timer_.resched(delack_interval_);
-		
-			// printf("%f: receving data %d, rescheduling delayed ack\n", Scheduler::instance().clock(), rcv_nxt_);
-
-			recvBytes(datalen); // notify application of "delivery"
-			
-			//printf("flow_remaining before dec = %d\n" , flow_remaining_);
-			if (flow_remaining_ > 0)
-			        flow_remaining_ -= datalen; // Mohammad
-		
-			if (flow_remaining_ == 0) {			       
-			        flags_ |= TF_ACKNOW;
-				flow_remaining_ = -1;
-			}
-			//printf("flow_remaining after dec = %d\n" , flow_remaining_);
-			
-			//
-			// special code here to simulate the operation
-			// of a receiver who always consumes data,
-			// resulting in a call to tcp_output
-			Packet::free(pkt);
-			if (need_send()){
-				send_much(1, REASON_NORMAL, maxburst_);
-//				if(fid_==2352) printf("before2 need_send fid= %d, rcv_nxt_= %d highest_ack= %d, last_ack_sent= %d\n",fid_,(int)rcv_nxt_,(int)highest_ack_,last_ack_sent_);
-			}
-			return;
-		}
-	} /* header prediction */
-
-
-	//
-	// header prediction failed
-	// (e.g. pure ACK out of valid range, SACK present, etc)...
-	// do slow path processing
-
-	//
-	// the following switch does special things for these states:
-	//	TCPS_LISTEN, TCPS_SYN_SENT
-	//
+    /*
+     * Try header prediction: in seq data or in seq pure ACK
+     *	with no funny business
+     */
+    if (!nopredict_ && predict_ok(pkt)) {
+        /*
+         * If last ACK falls within this segment's sequence numbers,
+         * record the timestamp.
+         * See RFC1323 (now RFC1323 bis)
+         */
+        if (ts_option_ && !fh->no_ts_ &&
+                tcph->seqno() <= last_ack_sent_) {
+            /*
+             * this is the case where the ts value is newer than
+             * the last one we've seen, and the seq # is the one
+             * we expect [seqno == last_ack_sent_] or older
+             */
+            recent_age_ = now();
+            recent_ = tcph->ts();
+        }
+
+        //
+        // generate a stream of ecnecho bits until we see a true
+        // cong_action bit
+        //
+
+        if (ecn_) {
+            if (ecnhat_) { // Mohammad
+                if (fh->ce() && fh->ect()) {
+                    // no CWR from peer yet... arrange to
+                    // keep sending ECNECHO
+                    if (recent_ce_ == FALSE) {
+                        ce_transition_ = 1;
+                        recent_ce_ = TRUE;
+                    } else {
+                        ce_transition_ = 0;
+                    }
+                } else if (datalen > 0 && !fh->ce() && fh->ect()){
+                    if (recent_ce_ == TRUE) {
+                        ce_transition_ = 1;
+                        recent_ce_ = FALSE;
+                    } else {
+                        ce_transition_ = 0;
+                    }
+                }
+            } else {
+                if (fh->ce() && fh->ect()) {
+                    // no CWR from peer yet... arrange to
+                    // keep sending ECNECHO
+                    recent_ce_ = TRUE;
+                } else if (fh->cwr()) {
+                    // got CWR response from peer.. stop
+                    // sending ECNECHO bits
+                    recent_ce_ = FALSE;
+                }
+            }
+        }
+
+        // Header predication basically looks to see
+        // if the incoming packet is an expected pure ACK
+        // or an expected data segment
+
+        if (datalen == 0) {
+            // check for a received pure ACK in the correct range..
+            // also checks to see if we are wnd_ limited
+            // (we don't change cwnd at all below), plus
+            // not being in fast recovery and not a partial ack.
+            // If we are in fast
+            // recovery, go below so we can remember to deflate
+            // the window if we need to
+            if (ackno > highest_ack_ && ackno < maxseq_ &&
+                    cwnd_ >= wnd_ && !fastrecov_) {
+                newack(pkt);	// update timers,  highest_ack_
+                send_much(0, REASON_NORMAL, maxburst_);
+                Packet::free(pkt);
+                return;
+            }
+        } else if (ackno == highest_ack_ && rq_.empty()) {
+            // check for pure incoming segment
+            // the next data segment we're awaiting, and
+            // that there's nothing sitting in the reassem-
+            // bly queue
+            // 	give to "application" here
+            //	note: DELACK is inspected only by
+            //	tcp_fasttimo() in real tcp.  Every 200 ms
+            //	this routine scans all tcpcb's looking for
+            //	DELACK segments and when it finds them
+            //	changes DELACK to ACKNOW and calls tcp_output()
+
+            /* Mohammad: For DCTCP state machine */
+            if (ecnhat_ && ce_transition_ && ((rcv_nxt_ - last_ack_sent_) > 0)) {
+                // Must send an immediate ACK with with previous ECN state
+                // before transitioning to new state
+                flags_ |= TF_ACKNOW;
+                recent_ce_ = !recent_ce_;
+                // printf("should be acking %d with recent_ce_ = %d\n", rcv_nxt_, recent_ce_);
+                send_much(1, REASON_NORMAL, maxburst_);
+                recent_ce_ = !recent_ce_;
+            }
+
+            rcv_nxt_ += datalen;
+
+            flags_ |= TF_DELACK;
+            // Mohammad
+            delack_timer_.resched(delack_interval_);
+
+            // printf("%f: receving data %d, rescheduling delayed ack\n", Scheduler::instance().clock(), rcv_nxt_);
+
+            recvBytes(datalen); // notify application of "delivery"
+
+            //printf("flow_remaining before dec = %d\n" , flow_remaining_);
+            if (flow_remaining_ > 0)
+                flow_remaining_ -= datalen; // Mohammad
+
+            if (flow_remaining_ == 0) {
+                flags_ |= TF_ACKNOW;
+                flow_remaining_ = -1;
+            }
+            //printf("flow_remaining after dec = %d\n" , flow_remaining_);
+
+            //
+            // special code here to simulate the operation
+            // of a receiver who always consumes data,
+            // resulting in a call to tcp_output
+            Packet::free(pkt);
+            if (need_send()){
+                send_much(1, REASON_NORMAL, maxburst_);
+                //				if(fid_==2352) printf("before2 need_send fid= %d, rcv_nxt_= %d highest_ack= %d, last_ack_sent= %d\n",fid_,(int)rcv_nxt_,(int)highest_ack_,last_ack_sent_);
+            }
+            return;
+        }
+    } /* header prediction */
+
+
+    //
+    // header prediction failed
+    // (e.g. pure ACK out of valid range, SACK present, etc)...
+    // do slow path processing
 
-	switch (state_) {
+    //
+    // the following switch does special things for these states:
+    //	TCPS_LISTEN, TCPS_SYN_SENT
+    //
+
+    switch (state_) {
 
         /*
          * If the segment contains an ACK then it is bad and do reset.
          * If it does not contain a SYN then it is not interesting; drop it.
          * Otherwise initialize tp->rcv_nxt, and tp->irs, iss is already
-	 * selected, and send a segment:
+         * selected, and send a segment:
          *     <SEQ=ISS><ACK=RCV_NXT><CTL=SYN,ACK>
          * Initialize tp->snd_nxt to tp->iss.
          * Enter SYN_RECEIVED state, and process any other fields of this
          * segment in this state.
          */
 
-	case TCPS_LISTEN:	/* awaiting peer's SYN */
-
-		if (tiflags & TH_ACK) {
-                        if (debug_) {
-		    	        fprintf(stderr,
-		    		"%f: FullTcpAgent(%s): warning: recv'd ACK while in LISTEN: ",
-				    now(), name());
-			        prpkt(pkt);
-                        }
-			// don't want ACKs in LISTEN
-			goto dropwithreset;
-		}
-		if ((tiflags & TH_SYN) == 0) {
-                        if (debug_) {
-		    	        fprintf(stderr, "%f: FullTcpAgent(%s): warning: recv'd NON-SYN while in LISTEN\n",
-				now(), name());
-			        prpkt(pkt);
-                        }
-			// any non-SYN is discarded
-			goto drop;
-		}
-
-		/*
-		 * must by a SYN (no ACK) at this point...
-		 * in real tcp we would bump the iss counter here also
-		 */
-		dooptions(pkt);
-		irs_ = tcph->seqno();
-		t_seqno_ = iss_; /* tcp_sendseqinit() macro in real tcp */
-		rcv_nxt_ = rcvseqinit(irs_, datalen);
-		flags_ |= TF_ACKNOW;
-		// check for a ECN-SYN with ECE|CWR
-		if (ecn_ && fh->ecnecho() && fh->cong_action()) {
-			ect_ = TRUE;
-		}
-
-
-		if (fid_ == 0) {
-			// XXX: sort of hack... If we do not
-			// have a special flow ID, pick up that
-			// of the sender (active opener)
-			hdr_ip* iph = hdr_ip::access(pkt);
-			fid_ = iph->flowid();
-		}
-
-		newstate(TCPS_SYN_RECEIVED);
-		goto trimthenstep6;
-
-        /*
-         * If the state is SYN_SENT:
-         *      if seg contains an ACK, but not for our SYN, drop the input.
-         *      if seg does not contain SYN, then drop it.
-         * Otherwise this is an acceptable SYN segment
-         *      initialize tp->rcv_nxt and tp->irs
-         *      if seg contains ack then advance tp->snd_una
-         *      if SYN has been acked change to ESTABLISHED else SYN_RCVD state
-         *      arrange for segment to be acked (eventually)
-         *      continue processing rest of data/controls, beginning with URG
-         */
-
-	case TCPS_SYN_SENT:	/* we sent SYN, expecting SYN+ACK (or SYN) */
+        case TCPS_LISTEN:	/* awaiting peer's SYN */
 
-		/* drop if it's a SYN+ACK and the ack field is bad */
-		if ((tiflags & TH_ACK) &&
-			((ackno <= iss_) || (ackno > maxseq_))) {
-			// not an ACK for our SYN, discard
-                        if (debug_) {
-			       fprintf(stderr, "%f: FullTcpAgent::recv(%s): bad ACK for our SYN: ",
-			        now(), name());
-			        prpkt(pkt);
-                        }
-			goto dropwithreset;
-		}
+            if (tiflags & TH_ACK) {
+                if (debug_) {
+                    fprintf(stderr,
+                            "%f: FullTcpAgent(%s): warning: recv'd ACK while in LISTEN: ",
+                            now(), name());
+                    prpkt(pkt);
+                }
+                // don't want ACKs in LISTEN
+                goto dropwithreset;
+            }
+            if ((tiflags & TH_SYN) == 0) {
+                if (debug_) {
+                    fprintf(stderr, "%f: FullTcpAgent(%s): warning: recv'd NON-SYN while in LISTEN\n",
+                            now(), name());
+                    prpkt(pkt);
+                }
+                // any non-SYN is discarded
+                goto drop;
+            }
+
+            /*
+             * must by a SYN (no ACK) at this point...
+             * in real tcp we would bump the iss counter here also
+             */
+            dooptions(pkt);
+            irs_ = tcph->seqno();
+            t_seqno_ = iss_; /* tcp_sendseqinit() macro in real tcp */
+            rcv_nxt_ = rcvseqinit(irs_, datalen);
+            flags_ |= TF_ACKNOW;
+            // check for a ECN-SYN with ECE|CWR
+            if (ecn_ && fh->ecnecho() && fh->cong_action()) {
+                ect_ = TRUE;
+            }
+
+
+            if (fid_ == 0) {
+                // XXX: sort of hack... If we do not
+                // have a special flow ID, pick up that
+                // of the sender (active opener)
+                hdr_ip* iph = hdr_ip::access(pkt);
+                fid_ = iph->flowid();
+            }
+
+            newstate(TCPS_SYN_RECEIVED);
+            goto trimthenstep6;
+
+            /*
+             * If the state is SYN_SENT:
+             *      if seg contains an ACK, but not for our SYN, drop the input.
+             *      if seg does not contain SYN, then drop it.
+             * Otherwise this is an acceptable SYN segment
+             *      initialize tp->rcv_nxt and tp->irs
+             *      if seg contains ack then advance tp->snd_una
+             *      if SYN has been acked change to ESTABLISHED else SYN_RCVD state
+             *      arrange for segment to be acked (eventually)
+             *      continue processing rest of data/controls, beginning with URG
+             */
+
+        case TCPS_SYN_SENT:	/* we sent SYN, expecting SYN+ACK (or SYN) */
+
+            /* drop if it's a SYN+ACK and the ack field is bad */
+            if ((tiflags & TH_ACK) &&
+                    ((ackno <= iss_) || (ackno > maxseq_))) {
+                // not an ACK for our SYN, discard
+                if (debug_) {
+                    fprintf(stderr, "%f: FullTcpAgent::recv(%s): bad ACK for our SYN: ",
+                            now(), name());
+                    prpkt(pkt);
+                }
+                goto dropwithreset;
+            }
 
-		if ((tiflags & TH_SYN) == 0) {
-                        if (debug_) {
-			        fprintf(stderr, "%f: FullTcpAgent::recv(%s): no SYN for our SYN: ",
-			        now(), name());
-			        prpkt(pkt);
-                        }
-			goto drop;
-		}
+            if ((tiflags & TH_SYN) == 0) {
+                if (debug_) {
+                    fprintf(stderr, "%f: FullTcpAgent::recv(%s): no SYN for our SYN: ",
+                            now(), name());
+                    prpkt(pkt);
+                }
+                goto drop;
+            }
 
-		/* looks like an ok SYN or SYN+ACK */
-                // If ecn_syn_wait is set to 2:
-		// Check if CE-marked SYN/ACK packet, then just send an ACK
-                //  packet with ECE set, and drop the SYN/ACK packet.
-                //  Don't update TCP state. 
-		if (tiflags & TH_ACK) 
-		{
-                        if (ecn_ && fh->ecnecho() && !fh->cong_action() && ecn_syn_wait_ == 2) 
-                        // if SYN/ACK packet and ecn_syn_wait_ == 2
-			{
-	    		        if ( fh->ce() ) 
-                                // If SYN/ACK packet is CE-marked
-				{
-					//cancel_rtx_timer();
-					//newack(pkt);
-					set_rtx_timer();
-					sendpacket(t_seqno_, rcv_nxt_, TH_ACK|TH_ECE, 0, 0);
-					goto drop;
-				}
-	    		}
-		}
+            /* looks like an ok SYN or SYN+ACK */
+            // If ecn_syn_wait is set to 2:
+            // Check if CE-marked SYN/ACK packet, then just send an ACK
+            //  packet with ECE set, and drop the SYN/ACK packet.
+            //  Don't update TCP state.
+            if (tiflags & TH_ACK)
+            {
+                if (ecn_ && fh->ecnecho() && !fh->cong_action() && ecn_syn_wait_ == 2)
+                    // if SYN/ACK packet and ecn_syn_wait_ == 2
+                {
+                    if ( fh->ce() )
+                        // If SYN/ACK packet is CE-marked
+                    {
+                        //cancel_rtx_timer();
+                        //newack(pkt);
+                        set_rtx_timer();
+                        sendpacket(t_seqno_, rcv_nxt_, TH_ACK|TH_ECE, 0, 0);
+                        goto drop;
+                    }
+                }
+            }
 
 
 #ifdef notdef
-cancel_rtx_timer();	// cancel timer on our 1st SYN [does this belong!?]
+            cancel_rtx_timer();	// cancel timer on our 1st SYN [does this belong!?]
 #endif
-		irs_ = tcph->seqno();	// get initial recv'd seq #
-		rcv_nxt_ = rcvseqinit(irs_, datalen);
+            irs_ = tcph->seqno();	// get initial recv'd seq #
+            rcv_nxt_ = rcvseqinit(irs_, datalen);
 
-		if (tiflags & TH_ACK) {
-			// SYN+ACK (our SYN was acked)
-                        if (ecn_ && fh->ecnecho() && !fh->cong_action()) {
-                                ect_ = TRUE;
-	    		        if ( fh->ce() ) 
-	    				recent_ce_ = TRUE;
-	    		}
-			highest_ack_ = ackno;
-			cwnd_ = initial_window();
+            if (tiflags & TH_ACK) {
+                // SYN+ACK (our SYN was acked)
+                if (ecn_ && fh->ecnecho() && !fh->cong_action()) {
+                    ect_ = TRUE;
+                    if ( fh->ce() )
+                        recent_ce_ = TRUE;
+                }
+                highest_ack_ = ackno;
+                cwnd_ = initial_window();
 
 #ifdef notdef
-/*
- * if we didn't have to retransmit the SYN,
- * use its rtt as our initial srtt & rtt var.
- */
-if (t_rtt_) {
-	double tao = now() - tcph->ts();
-	rtt_update(tao);
-}
+                /*
+                 * if we didn't have to retransmit the SYN,
+                 * use its rtt as our initial srtt & rtt var.
+                 */
+                if (t_rtt_) {
+                    double tao = now() - tcph->ts();
+                    rtt_update(tao);
+                }
 #endif
 
-			/*
-			 * if there's data, delay ACK; if there's also a FIN
-			 * ACKNOW will be turned on later.
-			 */
-			if (datalen > 0) {
-				flags_ |= TF_DELACK;	// data there: wait
-				// Mohammad
-				delack_timer_.resched(delack_interval_);	       
-			} else {
-				flags_ |= TF_ACKNOW;	// ACK peer's SYN
-			}
-
-                        /*
-                         * Received <SYN,ACK> in SYN_SENT[*] state.
-                         * Transitions:
-                         *      SYN_SENT  --> ESTABLISHED
-                         *      SYN_SENT* --> FIN_WAIT_1
-                         */
-
-			if (flags_ & TF_NEEDFIN) {
-				newstate(TCPS_FIN_WAIT_1);
-				flags_ &= ~TF_NEEDFIN;
-				tiflags &= ~TH_SYN;
-			} else {
-				newstate(TCPS_ESTABLISHED);
-			}
-
-			// special to ns:
-			//  generate pure ACK here.
-			//  this simulates the ordinary connection establishment
-			//  where the ACK of the peer's SYN+ACK contains
-			//  no data.  This is typically caused by the way
-			//  the connect() socket call works in which the
-			//  entire 3-way handshake occurs prior to the app
-			//  being able to issue a write() [which actually
-			//  causes the segment to be sent].
-			sendpacket(t_seqno_, rcv_nxt_, TH_ACK, 0, 0);
-		} else {
-			// Check ECN-SYN packet
-                        if (ecn_ && fh->ecnecho() && fh->cong_action())
-                                ect_ = TRUE;
-
-			// SYN (no ACK) (simultaneous active opens)
-			flags_ |= TF_ACKNOW;
-			cancel_rtx_timer();
-			newstate(TCPS_SYN_RECEIVED);
-			/*
-			 * decrement t_seqno_: we are sending a
-			 * 2nd SYN (this time in the form of a
-			 * SYN+ACK, so t_seqno_ will have been
-			 * advanced to 2... reduce this
-			 */
-			t_seqno_--;	// CHECKME
-		}
-
-trimthenstep6:
-		/*
-		 * advance the seq# to correspond to first data byte
-		 */
-		tcph->seqno()++;
-
-		if (tiflags & TH_ACK)
-			goto process_ACK;
-
-		goto step6;
-
-	case TCPS_LAST_ACK:
-		/* 
-		 * The only way we're in LAST_ACK is if we've already
-		 * received a FIN, so ignore all retranmitted FINS.
-		 * -M. Weigle 7/23/02
-		 */
-		if (tiflags & TH_FIN) {
-			goto drop;
-		}
-		break;
-	case TCPS_CLOSING:
-		break;
-	} /* end switch(state_) */
-
-        /*
-         * States other than LISTEN or SYN_SENT.
-         * First check timestamp, if present.
-         * Then check that at least some bytes of segment are within
-         * receive window.  If segment begins before rcv_nxt,
-         * drop leading data (and SYN); if nothing left, just ack.
-         *
-         * RFC 1323 PAWS: If we have a timestamp reply on this segment
-         * and it's less than ts_recent, drop it.
-         */
-
-	if (ts_option_ && !fh->no_ts_ && recent_ && tcph->ts() < recent_) {
-		if ((now() - recent_age_) > TCP_PAWS_IDLE) {
-			/*
-			 * this is basically impossible in the simulator,
-			 * but here it is...
-			 */
-                        /*
-                         * Invalidate ts_recent.  If this segment updates
-                         * ts_recent, the age will be reset later and ts_recent
-                         * will get a valid value.  If it does not, setting
-                         * ts_recent to zero will at least satisfy the
-                         * requirement that zero be placed in the timestamp
-                         * echo reply when ts_recent isn't valid.  The
-                         * age isn't reset until we get a valid ts_recent
-                         * because we don't want out-of-order segments to be
-                         * dropped when ts_recent is old.
-                         */
-			recent_ = 0.0;
-		} else {
-			fprintf(stderr, "%f: FullTcpAgent(%s): dropped pkt due to bad ts\n",
-				now(), name());
-			goto dropafterack;
-		}
-	}
-
-	// check for redundant data at head/tail of segment
-	//	note that the 4.4bsd [Net/3] code has
-	//	a bug here which can cause us to ignore the
-	//	perfectly good ACKs on duplicate segments.  The
-	//	fix is described in (Stevens, Vol2, p. 959-960).
-	//	This code is based on that correction.
-	//
-	// In addition, it has a modification so that duplicate segments
-	// with dup acks don't trigger a fast retransmit when dupseg_fix_
-	// is enabled.
-	//
-	// Yet one more modification: make sure that if the received
-	//	segment had datalen=0 and wasn't a SYN or FIN that
-	//	we don't turn on the ACKNOW status bit.  If we were to
-	//	allow ACKNOW to be turned on, normal pure ACKs that happen
-	//	to have seq #s below rcv_nxt can trigger an ACK war by
-	//	forcing us to ACK the pure ACKs
-	//
-	// Update: if we have a dataless FIN, don't really want to
-	// do anything with it.  In particular, would like to
-	// avoid ACKing an incoming FIN+ACK while in CLOSING
-	//
-	todrop = rcv_nxt_ - tcph->seqno();  // how much overlap?
-
-	if (todrop > 0 && ((tiflags & (TH_SYN)) || datalen > 0)) {
-//printf("%f(%s): trim 1..todrop:%d, dlen:%d\n",now(), name(), todrop, datalen);
-		if (tiflags & TH_SYN) {
-			tiflags &= ~TH_SYN;
-			tcph->seqno()++;
-			th->size()--;	// XXX Must decrease packet size too!!
-					// Q: Why?.. this is only a SYN
-			todrop--;
-		}
-		//
-		// see Stevens, vol 2, p. 960 for this check;
-		// this check is to see if we are dropping
-		// more than this segment (i.e. the whole pkt + a FIN),
-		// or just the whole packet (no FIN)
-		//
-		if ((todrop > datalen) ||
-		    (todrop == datalen && ((tiflags & TH_FIN) == 0))) {
-//printf("%f(%s): trim 2..todrop:%d, dlen:%d\n",now(), name(), todrop, datalen);
-                        /*
-                         * Any valid FIN must be to the left of the window.
-                         * At this point the FIN must be a duplicate or out
-                         * of sequence; drop it.
-                         */
-
-			tiflags &= ~TH_FIN;
-
-			/*
-			 * Send an ACK to resynchronize and drop any data.
-			 * But keep on processing for RST or ACK.
-			 */
-
-			flags_ |= TF_ACKNOW;
-			todrop = datalen;
-			dupseg = TRUE;	// *completely* duplicate
-
-		}
-
-		/*
-		 * Trim duplicate data from the front of the packet
-		 */
-
-		tcph->seqno() += todrop;
-		th->size() -= todrop;	// XXX Must decrease size too!!
-					// why? [kf]..prob when put in RQ
-		datalen -= todrop;
-
-	} /* data trim */
-
-	/*
-	 * If we are doing timstamps and this packet has one, and
-	 * If last ACK falls within this segment's sequence numbers,
-	 * record the timestamp.
-	 * See RFC1323 (now RFC1323 bis)
-	 */
-	if (ts_option_ && !fh->no_ts_ && tcph->seqno() <= last_ack_sent_) {
-		/*
-		 * this is the case where the ts value is newer than
-		 * the last one we've seen, and the seq # is the one we expect
-		 * [seqno == last_ack_sent_] or older
-		 */
-		recent_age_ = now();
-		recent_ = tcph->ts();
-	}
-
-	if (tiflags & TH_SYN) {
-                if (debug_) {
-		        fprintf(stderr, "%f: FullTcpAgent::recv(%s) received unexpected SYN (state:%d): ",
-		        now(), name(), state_);
-		        prpkt(pkt);
-                }
-		goto dropwithreset;
-	}
-
-	if ((tiflags & TH_ACK) == 0) {
-		/*
-		 * Added check for state != SYN_RECEIVED.  We will receive a 
-		 * duplicate SYN in SYN_RECEIVED when our SYN/ACK was dropped.
-		 * We should just ignore the duplicate SYN (our timeout for 
-		 * resending the SYN/ACK is about the same as the client's 
-		 * timeout for resending the SYN), but give no error message. 
-		 * -M. Weigle 07/24/01
-		 */
-		if (state_ != TCPS_SYN_RECEIVED) {
-                        if (debug_) {
-			        fprintf(stderr, "%f: FullTcpAgent::recv(%s) got packet lacking ACK (state:%d): ",
-				now(), name(), state_);
-			        prpkt(pkt);
-                        }
-		}
-		goto drop;
-	}
-
-	/*
-	 * Ack processing.
-	 */
-
-	switch (state_) {
-	case TCPS_SYN_RECEIVED:	/* want ACK for our SYN+ACK */
-		if (ackno < highest_ack_ || ackno > maxseq_) {
-			// not in useful range
-                        if (debug_) {
-		    	        fprintf(stderr, "%f: FullTcpAgent(%s): ack(%d) not in range while in SYN_RECEIVED: ",
-			 	now(), name(), ackno);
-			        prpkt(pkt);
-                        }
-			goto dropwithreset;
-		}
+                /*
+                 * if there's data, delay ACK; if there's also a FIN
+                 * ACKNOW will be turned on later.
+                 */
+                if (datalen > 0) {
+                    flags_ |= TF_DELACK;	// data there: wait
+                    // Mohammad
+                    delack_timer_.resched(delack_interval_);
+                } else {
+                    flags_ |= TF_ACKNOW;	// ACK peer's SYN
+                }
 
-		if (ecn_ && ect_ && ecn_syn_ && fh->ecnecho() && ecn_syn_wait_ == 2) 
-		{
-		// The SYN/ACK packet was ECN-marked.
-		// Reset the rtx timer, send another SYN/ACK packet
-                //  immediately, and drop the ACK packet.
-                // Do not move to TCPS_ESTB state or update TCP variables.
-			cancel_rtx_timer();
-			ecn_syn_next_ = 0;
-			foutput(iss_, REASON_NORMAL);
-			wnd_init_option_ = 1;
-                        wnd_init_ = 1;
-			goto drop;
-		} 
-		if (ecn_ && ect_ && ecn_syn_ && fh->ecnecho() && ecn_syn_wait_ < 2) {
-		// The SYN/ACK packet was ECN-marked.
-			if (ecn_syn_wait_ == 1) {
-				// A timer will be called in ecn().
-				cwnd_ = 1;
-				use_rtt_ = 1; //KK, wait for timeout() period
-			} else {
-			        // Congestion window will be halved in ecn().
-				cwnd_ = 2;
-			}
-		} else  {
-			cwnd_ = initial_window();
-		}
-	
                 /*
-                 * Make transitions:
-                 *      SYN-RECEIVED  -> ESTABLISHED
-                 *      SYN-RECEIVED* -> FIN-WAIT-1
+                 * Received <SYN,ACK> in SYN_SENT[*] state.
+                 * Transitions:
+                 *      SYN_SENT  --> ESTABLISHED
+                 *      SYN_SENT* --> FIN_WAIT_1
                  */
+
                 if (flags_ & TF_NEEDFIN) {
-			newstate(TCPS_FIN_WAIT_1);
-                        flags_ &= ~TF_NEEDFIN;
+                    newstate(TCPS_FIN_WAIT_1);
+                    flags_ &= ~TF_NEEDFIN;
+                    tiflags &= ~TH_SYN;
                 } else {
-                        newstate(TCPS_ESTABLISHED);
+                    newstate(TCPS_ESTABLISHED);
                 }
 
-		/* fall into ... */
+                // special to ns:
+                //  generate pure ACK here.
+                //  this simulates the ordinary connection establishment
+                //  where the ACK of the peer's SYN+ACK contains
+                //  no data.  This is typically caused by the way
+                //  the connect() socket call works in which the
+                //  entire 3-way handshake occurs prior to the app
+                //  being able to issue a write() [which actually
+                //  causes the segment to be sent].
+                sendpacket(t_seqno_, rcv_nxt_, TH_ACK, 0, 0);
+            } else {
+                // Check ECN-SYN packet
+                if (ecn_ && fh->ecnecho() && fh->cong_action())
+                    ect_ = TRUE;
+
+                // SYN (no ACK) (simultaneous active opens)
+                flags_ |= TF_ACKNOW;
+                cancel_rtx_timer();
+                newstate(TCPS_SYN_RECEIVED);
+                /*
+                 * decrement t_seqno_: we are sending a
+                 * 2nd SYN (this time in the form of a
+                 * SYN+ACK, so t_seqno_ will have been
+                 * advanced to 2... reduce this
+                 */
+                t_seqno_--;	// CHECKME
+            }
+
+            trimthenstep6:
+            /*
+             * advance the seq# to correspond to first data byte
+             */
+            tcph->seqno()++;
+
+            if (tiflags & TH_ACK)
+                goto process_ACK;
 
+            goto step6;
+
+        case TCPS_LAST_ACK:
+            /*
+             * The only way we're in LAST_ACK is if we've already
+             * received a FIN, so ignore all retranmitted FINS.
+             * -M. Weigle 7/23/02
+             */
+            if (tiflags & TH_FIN) {
+                goto drop;
+            }
+            break;
+        case TCPS_CLOSING:
+            break;
+    } /* end switch(state_) */
+
+    /*
+     * States other than LISTEN or SYN_SENT.
+     * First check timestamp, if present.
+     * Then check that at least some bytes of segment are within
+     * receive window.  If segment begins before rcv_nxt,
+     * drop leading data (and SYN); if nothing left, just ack.
+     *
+     * RFC 1323 PAWS: If we have a timestamp reply on this segment
+     * and it's less than ts_recent, drop it.
+     */
+
+    if (ts_option_ && !fh->no_ts_ && recent_ && tcph->ts() < recent_) {
+        if ((now() - recent_age_) > TCP_PAWS_IDLE) {
+            /*
+             * this is basically impossible in the simulator,
+             * but here it is...
+             */
+            /*
+             * Invalidate ts_recent.  If this segment updates
+             * ts_recent, the age will be reset later and ts_recent
+             * will get a valid value.  If it does not, setting
+             * ts_recent to zero will at least satisfy the
+             * requirement that zero be placed in the timestamp
+             * echo reply when ts_recent isn't valid.  The
+             * age isn't reset until we get a valid ts_recent
+             * because we don't want out-of-order segments to be
+             * dropped when ts_recent is old.
+             */
+            recent_ = 0.0;
+        } else {
+            fprintf(stderr, "%f: FullTcpAgent(%s): dropped pkt due to bad ts\n",
+                    now(), name());
+            goto dropafterack;
+        }
+    }
+
+    // check for redundant data at head/tail of segment
+    //	note that the 4.4bsd [Net/3] code has
+    //	a bug here which can cause us to ignore the
+    //	perfectly good ACKs on duplicate segments.  The
+    //	fix is described in (Stevens, Vol2, p. 959-960).
+    //	This code is based on that correction.
+    //
+    // In addition, it has a modification so that duplicate segments
+    // with dup acks don't trigger a fast retransmit when dupseg_fix_
+    // is enabled.
+    //
+    // Yet one more modification: make sure that if the received
+    //	segment had datalen=0 and wasn't a SYN or FIN that
+    //	we don't turn on the ACKNOW status bit.  If we were to
+    //	allow ACKNOW to be turned on, normal pure ACKs that happen
+    //	to have seq #s below rcv_nxt can trigger an ACK war by
+    //	forcing us to ACK the pure ACKs
+    //
+    // Update: if we have a dataless FIN, don't really want to
+    // do anything with it.  In particular, would like to
+    // avoid ACKing an incoming FIN+ACK while in CLOSING
+    //
+    todrop = rcv_nxt_ - tcph->seqno();  // how much overlap?
+
+    if (todrop > 0 && ((tiflags & (TH_SYN)) || datalen > 0)) {
+        //printf("%f(%s): trim 1..todrop:%d, dlen:%d\n",now(), name(), todrop, datalen);
+        if (tiflags & TH_SYN) {
+            tiflags &= ~TH_SYN;
+            tcph->seqno()++;
+            th->size()--;	// XXX Must decrease packet size too!!
+            // Q: Why?.. this is only a SYN
+            todrop--;
+        }
+        //
+        // see Stevens, vol 2, p. 960 for this check;
+        // this check is to see if we are dropping
+        // more than this segment (i.e. the whole pkt + a FIN),
+        // or just the whole packet (no FIN)
+        //
+        if ((todrop > datalen) ||
+                (todrop == datalen && ((tiflags & TH_FIN) == 0))) {
+            //printf("%f(%s): trim 2..todrop:%d, dlen:%d\n",now(), name(), todrop, datalen);
+            /*
+             * Any valid FIN must be to the left of the window.
+             * At this point the FIN must be a duplicate or out
+             * of sequence; drop it.
+             */
+
+            tiflags &= ~TH_FIN;
+
+            /*
+             * Send an ACK to resynchronize and drop any data.
+             * But keep on processing for RST or ACK.
+             */
+
+            flags_ |= TF_ACKNOW;
+            todrop = datalen;
+            dupseg = TRUE;	// *completely* duplicate
+
+        }
 
         /*
-         * In ESTABLISHED state: drop duplicate ACKs; ACK out of range
-         * ACKs.  If the ack is in the range
-         *      tp->snd_una < ti->ti_ack <= tp->snd_max
-         * then advance tp->snd_una to ti->ti_ack and drop
-         * data from the retransmission queue.
-	 *
-	 * note that state TIME_WAIT isn't used
-	 * in the simulator
+         * Trim duplicate data from the front of the packet
          */
 
+        tcph->seqno() += todrop;
+        th->size() -= todrop;	// XXX Must decrease size too!!
+        // why? [kf]..prob when put in RQ
+        datalen -= todrop;
+
+    } /* data trim */
+
+    /*
+     * If we are doing timstamps and this packet has one, and
+     * If last ACK falls within this segment's sequence numbers,
+     * record the timestamp.
+     * See RFC1323 (now RFC1323 bis)
+     */
+    if (ts_option_ && !fh->no_ts_ && tcph->seqno() <= last_ack_sent_) {
+        /*
+         * this is the case where the ts value is newer than
+         * the last one we've seen, and the seq # is the one we expect
+         * [seqno == last_ack_sent_] or older
+         */
+        recent_age_ = now();
+        recent_ = tcph->ts();
+    }
+
+    if (tiflags & TH_SYN) {
+        if (debug_) {
+            fprintf(stderr, "%f: FullTcpAgent::recv(%s) received unexpected SYN (state:%d): ",
+                    now(), name(), state_);
+            prpkt(pkt);
+        }
+        goto dropwithreset;
+    }
+
+    if ((tiflags & TH_ACK) == 0) {
+        /*
+         * Added check for state != SYN_RECEIVED.  We will receive a
+         * duplicate SYN in SYN_RECEIVED when our SYN/ACK was dropped.
+         * We should just ignore the duplicate SYN (our timeout for
+         * resending the SYN/ACK is about the same as the client's
+         * timeout for resending the SYN), but give no error message.
+         * -M. Weigle 07/24/01
+         */
+        if (state_ != TCPS_SYN_RECEIVED) {
+            if (debug_) {
+                fprintf(stderr, "%f: FullTcpAgent::recv(%s) got packet lacking ACK (state:%d): ",
+                        now(), name(), state_);
+                prpkt(pkt);
+            }
+        }
+        goto drop;
+    }
+
+    /*
+     * Ack processing.
+     */
+
+    switch (state_) {
+        case TCPS_SYN_RECEIVED:	/* want ACK for our SYN+ACK */
+            if (ackno < highest_ack_ || ackno > maxseq_) {
+                // not in useful range
+                if (debug_) {
+                    fprintf(stderr, "%f: FullTcpAgent(%s): ack(%d) not in range while in SYN_RECEIVED: ",
+                            now(), name(), ackno);
+                    prpkt(pkt);
+                }
+                goto dropwithreset;
+            }
+
+            if (ecn_ && ect_ && ecn_syn_ && fh->ecnecho() && ecn_syn_wait_ == 2)
+            {
+                // The SYN/ACK packet was ECN-marked.
+                // Reset the rtx timer, send another SYN/ACK packet
+                //  immediately, and drop the ACK packet.
+                // Do not move to TCPS_ESTB state or update TCP variables.
+                cancel_rtx_timer();
+                ecn_syn_next_ = 0;
+                foutput(iss_, REASON_NORMAL);
+                wnd_init_option_ = 1;
+                wnd_init_ = 1;
+                goto drop;
+            }
+            if (ecn_ && ect_ && ecn_syn_ && fh->ecnecho() && ecn_syn_wait_ < 2) {
+                // The SYN/ACK packet was ECN-marked.
+                if (ecn_syn_wait_ == 1) {
+                    // A timer will be called in ecn().
+                    cwnd_ = 1;
+                    use_rtt_ = 1; //KK, wait for timeout() period
+                } else {
+                    // Congestion window will be halved in ecn().
+                    cwnd_ = 2;
+                }
+            } else  {
+                cwnd_ = initial_window();
+            }
+
+            /*
+             * Make transitions:
+             *      SYN-RECEIVED  -> ESTABLISHED
+             *      SYN-RECEIVED* -> FIN-WAIT-1
+             */
+            if (flags_ & TF_NEEDFIN) {
+                newstate(TCPS_FIN_WAIT_1);
+                flags_ &= ~TF_NEEDFIN;
+            } else {
+                newstate(TCPS_ESTABLISHED);
+            }
+
+            /* fall into ... */
+
+
+            /*
+             * In ESTABLISHED state: drop duplicate ACKs; ACK out of range
+             * ACKs.  If the ack is in the range
+             *      tp->snd_una < ti->ti_ack <= tp->snd_max
+             * then advance tp->snd_una to ti->ti_ack and drop
+             * data from the retransmission queue.
+             *
+             * note that state TIME_WAIT isn't used
+             * in the simulator
+             */
+
         case TCPS_ESTABLISHED:
         case TCPS_FIN_WAIT_1:
         case TCPS_FIN_WAIT_2:
-	case TCPS_CLOSE_WAIT:
+        case TCPS_CLOSE_WAIT:
         case TCPS_CLOSING:
         case TCPS_LAST_ACK:
 
-		//
-		// look for ECNs in ACKs, react as necessary
-		//
-
-		if (fh->ecnecho() && (!ecn_ || !ect_)) {
-			fprintf(stderr,
-			    "%f: FullTcp(%s): warning, recvd ecnecho but I am not ECN capable! %d %d\n",
-				now(), name(), ecn_);
-		}
-
-		//
-		// generate a stream of ecnecho bits until we see a true
-		// cong_action bit
-		//
-
-	    	if (ecn_) { 
-		  if (ecnhat_) { // Mohammad		       
-		    	if (fh->ce() && fh->ect()) {
-	    			// no CWR from peer yet... arrange to
-	    			// keep sending ECNECHO
-			        if (recent_ce_ == FALSE) {
-				     ce_transition_ = 1;
-				     recent_ce_ = TRUE;
-				} else {
-				     ce_transition_ = 0;
-				}
-      	    		} else if (datalen > 0 && !fh->ce() && fh->ect()){
-			        if (recent_ce_ == TRUE) {
-				     ce_transition_ = 1;
-				     recent_ce_ = FALSE;
-				} else {
-				      ce_transition_ = 0;
-				}
-			}
-		   
-		  } else {
-		           if (fh->ce() && fh->ect()) {
-	    			// no CWR from peer yet... arrange to
-	    			// keep sending ECNECHO
-	    			recent_ce_ = TRUE;
-			   } else if (fh->cwr()) { 
-		                // got CWR response from peer.. stop
-	    			// sending ECNECHO bits
-			        recent_ce_ = FALSE;
-		           }		    
-		  }
-	    	}
-
- 
-		//
-		// If ESTABLISHED or starting to close, process SACKS
-		//
-
-		if (state_ >= TCPS_ESTABLISHED && tcph->sa_length() > 0) {
-			process_sack(tcph);
-		}
-
-		//
-		// ACK indicates packet left the network
-		//	try not to be fooled by data
-		//
-
-		if (fastrecov_ && (datalen == 0 || ackno > highest_ack_))
-			pipe_ -= maxseg_;
-
-		// look for dup ACKs (dup ack numbers, no data)
-		//
-		// do fast retransmit/recovery if at/past thresh
-//if (ackno <= highest_ack_) printf("dupi= %d\n",(int)dupacks_);
-//else printf("in fully\n");
-		//Shuang:
-//		if (ackno <= highest_ack_ && cur_sqtotal_ <= last_sqtotal_) {
-		if (ackno <= highest_ack_) {
-			// a pure ACK which doesn't advance highest_ack_
-//printf("dupi= %d\n",dupacks_);
-			if (datalen == 0 && (!dupseg_fix_ || !dupseg)) {
-
-			        //Mohammad: check for dynamic dupack mode.
-			         if (dynamic_dupack_ > 0.0) {
-				        tcprexmtthresh_ = int(dynamic_dupack_ * window());
-					if (tcprexmtthresh_ < 3)
-					       tcprexmtthresh_ = 3;
-				 }
-				  /*
-                                 * If we have outstanding data
-                                 * this is a completely
-                                 * duplicate ack,
-                                 * the ack is the biggest we've
-                                 * seen and we've seen exactly our rexmt
-                                 * threshhold of them, assume a packet
-                                 * has been dropped and retransmit it.
-                                 *
-                                 * We know we're losing at the current
-                                 * window size so do congestion avoidance.
-                                 *
-                                 * Dup acks mean that packets have left the
-                                 * network (they're now cached at the receiver)
-                                 * so bump cwnd by the amount in the receiver
-                                 * to keep a constant cwnd packets in the
-                                 * network.
-                                 */
-
-				if ((rtx_timer_.status() != TIMER_PENDING) ||
-				    ackno < highest_ack_) {
-					// Q: significance of timer not pending?
-					// ACK below highest_ack_
-					oldack();
-				} else if (++dupacks_ == tcprexmtthresh_) {
-					// ACK at highest_ack_ AND meets threshold
-					//trace_event("FAST_RECOVERY");
-					//Shuang: dupack_action
-					dupack_action(); // maybe fast rexmt
-					goto drop;
-
-				} else if (dupacks_ > tcprexmtthresh_) {
-					// ACK at highest_ack_ AND above threshole
-					//trace_event("FAST_RECOVERY");
-					extra_ack();
-
-					// send whatever window allows
-					send_much(0, REASON_DUPACK, maxburst_);
-					goto drop;
-				}
-			} else {
-				// non zero-length [dataful] segment
-				// with a dup ack (normal for dataful segs)
-				// (or window changed in real TCP).
-				if (dupack_reset_) {
-					dupacks_ = 0;
-					fastrecov_ = FALSE;
-				}
-			}
-			break;	/* take us to "step6" */
-		} /* end of dup/old acks */
-
-		/*
-		 * we've finished the fast retransmit/recovery period
-		 * (i.e. received an ACK which advances highest_ack_)
-		 * The ACK may be "good" or "partial"
-		 */
+            //
+            // look for ECNs in ACKs, react as necessary
+            //
+
+            if (fh->ecnecho() && (!ecn_ || !ect_)) {
+                fprintf(stderr,
+                        "%f: FullTcp(%s): warning, recvd ecnecho but I am not ECN capable! %d %d\n",
+                        now(), name(), ecn_);
+            }
+
+            //
+            // generate a stream of ecnecho bits until we see a true
+            // cong_action bit
+            //
+
+            if (ecn_) {
+                if (ecnhat_) { // Mohammad
+                    if (fh->ce() && fh->ect()) {
+                        // no CWR from peer yet... arrange to
+                        // keep sending ECNECHO
+                        if (recent_ce_ == FALSE) {
+                            ce_transition_ = 1;
+                            recent_ce_ = TRUE;
+                        } else {
+                            ce_transition_ = 0;
+                        }
+                    } else if (datalen > 0 && !fh->ce() && fh->ect()){
+                        if (recent_ce_ == TRUE) {
+                            ce_transition_ = 1;
+                            recent_ce_ = FALSE;
+                        } else {
+                            ce_transition_ = 0;
+                        }
+                    }
 
-process_ACK:
+                } else {
+                    if (fh->ce() && fh->ect()) {
+                        // no CWR from peer yet... arrange to
+                        // keep sending ECNECHO
+                        recent_ce_ = TRUE;
+                    } else if (fh->cwr()) {
+                        // got CWR response from peer.. stop
+                        // sending ECNECHO bits
+                        recent_ce_ = FALSE;
+                    }
+                }
+            }
 
-		if (ackno > maxseq_) {
-			// ack more than we sent(!?)
-                        if (debug_) {
-			        fprintf(stderr, "%f: FullTcpAgent::recv(%s) too-big ACK (maxseq:%d): ",
-				now(), name(), int(maxseq_));
-			        prpkt(pkt);
-                        }
-			goto dropafterack;
-		}
 
-                /*
-                 * If we have a timestamp reply, update smoothed
-                 * round trip time.  If no timestamp is present but
-                 * transmit timer is running and timed sequence
-                 * number was acked, update smoothed round trip time.
-                 * Since we now have an rtt measurement, cancel the
-                 * timer backoff (cf., Phil Karn's retransmit alg.).
-                 * Recompute the initial retransmit timer.
-		 *
-                 * If all outstanding data is acked, stop retransmit
-                 * If there is more data to be acked, restart retransmit
-                 * timer, using current (possibly backed-off) value.
-                 */
-		newack(pkt);	// handle timers, update highest_ack_
+            //
+            // If ESTABLISHED or starting to close, process SACKS
+            //
+
+            if (state_ >= TCPS_ESTABLISHED && tcph->sa_length() > 0) {
+                process_sack(tcph);
+            }
+
+            //
+            // ACK indicates packet left the network
+            //	try not to be fooled by data
+            //
+
+            if (fastrecov_ && (datalen == 0 || ackno > highest_ack_))
+                pipe_ -= maxseg_;
+
+            // look for dup ACKs (dup ack numbers, no data)
+            //
+            // do fast retransmit/recovery if at/past thresh
+            //if (ackno <= highest_ack_) printf("dupi= %d\n",(int)dupacks_);
+            //else printf("in fully\n");
+            //Shuang:
+            //		if (ackno <= highest_ack_ && cur_sqtotal_ <= last_sqtotal_) {
+            if (ackno <= highest_ack_) {
+                // a pure ACK which doesn't advance highest_ack_
+                //printf("dupi= %d\n",dupacks_);
+                if (datalen == 0 && (!dupseg_fix_ || !dupseg)) {
+
+                    //Mohammad: check for dynamic dupack mode.
+                    if (dynamic_dupack_ > 0.0) {
+                        tcprexmtthresh_ = int(dynamic_dupack_ * window());
+                        if (tcprexmtthresh_ < 3)
+                            tcprexmtthresh_ = 3;
+                    }
+                    /*
+                     * If we have outstanding data
+                     * this is a completely
+                     * duplicate ack,
+                     * the ack is the biggest we've
+                     * seen and we've seen exactly our rexmt
+                     * threshhold of them, assume a packet
+                     * has been dropped and retransmit it.
+                     *
+                     * We know we're losing at the current
+                     * window size so do congestion avoidance.
+                     *
+                     * Dup acks mean that packets have left the
+                     * network (they're now cached at the receiver)
+                     * so bump cwnd by the amount in the receiver
+                     * to keep a constant cwnd packets in the
+                     * network.
+                     */
+
+                    if ((rtx_timer_.status() != TIMER_PENDING) ||
+                            ackno < highest_ack_) {
+                        // Q: significance of timer not pending?
+                        // ACK below highest_ack_
+                        oldack();
+                    } else if (++dupacks_ == tcprexmtthresh_) {
+                        // ACK at highest_ack_ AND meets threshold
+                        //trace_event("FAST_RECOVERY");
+                        //Shuang: dupack_action
+                        dupack_action(); // maybe fast rexmt
+                        goto drop;
+
+                    } else if (dupacks_ > tcprexmtthresh_) {
+                        // ACK at highest_ack_ AND above threshole
+                        //trace_event("FAST_RECOVERY");
+                        extra_ack();
+
+                        // send whatever window allows
+                        send_much(0, REASON_DUPACK, maxburst_);
+                        goto drop;
+                    }
+                } else {
+                    // non zero-length [dataful] segment
+                    // with a dup ack (normal for dataful segs)
+                    // (or window changed in real TCP).
+                    if (dupack_reset_) {
+                        dupacks_ = 0;
+                        fastrecov_ = FALSE;
+                    }
+                }
+                break;	/* take us to "step6" */
+            } /* end of dup/old acks */
 
-		/*
-		 * if this is a partial ACK, invoke whatever we should
-		 * note that newack() must be called before the action
-		 * functions, as some of them depend on side-effects
-		 * of newack()
-		 */
-
-		int partial = pack(pkt);
-
-		if (partial)
-			pack_action(pkt);
-		else
-			ack_action(pkt);
-
-		/*
-		 * if this is an ACK with an ECN indication, handle this
-		 * but not if it is a syn packet
-		 */
-		if (fh->ecnecho() && !(tiflags&TH_SYN) )
-		  if (fh->ecnecho()) {
-			// Note from Sally: In one-way TCP,
-			// ecn() is called before newack()...
-			ecn(highest_ack_);  // updated by newack(), above
-			// "set_rtx_timer();" from T. Kelly.
-			if (cwnd_ < 1)
-			 	set_rtx_timer();
-		  }
+            /*
+             * we've finished the fast retransmit/recovery period
+             * (i.e. received an ACK which advances highest_ack_)
+             * The ACK may be "good" or "partial"
+             */
+
+            process_ACK:
+
+            if (ackno > maxseq_) {
+                // ack more than we sent(!?)
+                if (debug_) {
+                    fprintf(stderr, "%f: FullTcpAgent::recv(%s) too-big ACK (maxseq:%d): ",
+                            now(), name(), int(maxseq_));
+                    prpkt(pkt);
+                }
+                goto dropafterack;
+            }
+
+            /*
+             * If we have a timestamp reply, update smoothed
+             * round trip time.  If no timestamp is present but
+             * transmit timer is running and timed sequence
+             * number was acked, update smoothed round trip time.
+             * Since we now have an rtt measurement, cancel the
+             * timer backoff (cf., Phil Karn's retransmit alg.).
+             * Recompute the initial retransmit timer.
+             *
+             * If all outstanding data is acked, stop retransmit
+             * If there is more data to be acked, restart retransmit
+             * timer, using current (possibly backed-off) value.
+             */
+            newack(pkt);	// handle timers, update highest_ack_
+
+            /*
+             * if this is a partial ACK, invoke whatever we should
+             * note that newack() must be called before the action
+             * functions, as some of them depend on side-effects
+             * of newack()
+             */
+
+            int partial = pack(pkt);
+
+            if (partial)
+                pack_action(pkt);
+            else
+                ack_action(pkt);
+
+            /*
+             * if this is an ACK with an ECN indication, handle this
+             * but not if it is a syn packet
+             */
+            if (fh->ecnecho() && !(tiflags&TH_SYN) )
+                if (fh->ecnecho()) {
+                    // Note from Sally: In one-way TCP,
+                    // ecn() is called before newack()...
+                    ecn(highest_ack_);  // updated by newack(), above
+                    // "set_rtx_timer();" from T. Kelly.
+                    if (cwnd_ < 1)
+                        set_rtx_timer();
+                }
 
-		// Mohammad
-		/*if (Random::uniform(1) < ecnhat_alpha_ && !(tiflags&TH_SYN) ) {
+            // Mohammad
+            /*if (Random::uniform(1) < ecnhat_alpha_ && !(tiflags&TH_SYN) ) {
 			ecn(highest_ack_);
 			if (cwnd_ < 1)
 			 	set_rtx_timer();
 				}*/
 
-		// CHECKME: handling of rtx timer
-		if (ackno == maxseq_) {
-			needoutput = TRUE;
-		}
-
-		/*
-		 * If no data (only SYN) was ACK'd,
-		 *    skip rest of ACK processing.
-		 */
-		if (ackno == (highest_ack_ + 1))
-			goto step6;
-
-		// if we are delaying initial cwnd growth (probably due to
-		// large initial windows), then only open cwnd if data has
-		// been received
-		// Q: check when this happens
-                /*
-                 * When new data is acked, open the congestion window.
-                 * If the window gives us less than ssthresh packets
-                 * in flight, open exponentially (maxseg per packet).
-                 * Otherwise open about linearly: maxseg per window
-                 * (maxseg^2 / cwnd per packet).
-                 */
-		if ((!delay_growth_ || (rcv_nxt_ > 0)) &&
-		    last_state_ == TCPS_ESTABLISHED) {
-			if (!partial || open_cwnd_on_pack_) {
-				if (!ect_ || !hdr_flags::access(pkt)->ecnecho() || ecn_burst_)
-				  opencwnd();
-                        }
-		}
+            // CHECKME: handling of rtx timer
+            if (ackno == maxseq_) {
+                needoutput = TRUE;
+            }
+
+            /*
+             * If no data (only SYN) was ACK'd,
+             *    skip rest of ACK processing.
+             */
+            if (ackno == (highest_ack_ + 1))
+                goto step6;
+
+            // if we are delaying initial cwnd growth (probably due to
+            // large initial windows), then only open cwnd if data has
+            // been received
+            // Q: check when this happens
+            /*
+             * When new data is acked, open the congestion window.
+             * If the window gives us less than ssthresh packets
+             * in flight, open exponentially (maxseg per packet).
+             * Otherwise open about linearly: maxseg per window
+             * (maxseg^2 / cwnd per packet).
+             */
+            if ((!delay_growth_ || (rcv_nxt_ > 0)) &&
+                    last_state_ == TCPS_ESTABLISHED) {
+                if (!partial || open_cwnd_on_pack_) {
+                    if (!ect_ || !hdr_flags::access(pkt)->ecnecho() || ecn_burst_)
+                        opencwnd();
+                }
+            }
 
-		// Mohammad
-		if (ect_) {
-			if (!ecn_burst_ && hdr_flags::access(pkt)->ecnecho())
-				ecn_burst_ = TRUE;
-			else if (ecn_burst_ && ! hdr_flags::access(pkt)->ecnecho())
-				ecn_burst_ = FALSE;
-		}
-
-		if ((state_ >= TCPS_FIN_WAIT_1) && (ackno == maxseq_)) {
-			ourfinisacked = TRUE;
-		}
-
-		//
-		// special additional processing when our state
-		// is one of the closing states:
-		//	FIN_WAIT_1, CLOSING, LAST_ACK
+            // Mohammad
+            if (ect_) {
+                if (!ecn_burst_ && hdr_flags::access(pkt)->ecnecho())
+                    ecn_burst_ = TRUE;
+                else if (ecn_burst_ && ! hdr_flags::access(pkt)->ecnecho())
+                    ecn_burst_ = FALSE;
+            }
+
+            if ((state_ >= TCPS_FIN_WAIT_1) && (ackno == maxseq_)) {
+                ourfinisacked = TRUE;
+            }
+
+            //
+            // special additional processing when our state
+            // is one of the closing states:
+            //	FIN_WAIT_1, CLOSING, LAST_ACK
 
-		switch (state_) {
+            switch (state_) {
                 /*
                  * In FIN_WAIT_1 STATE in addition to the processing
                  * for the ESTABLISHED state if our FIN is now acknowledged
                  * then enter FIN_WAIT_2.
                  */
-		case TCPS_FIN_WAIT_1:	/* doing active close */
-			if (ourfinisacked) {
-				// got the ACK, now await incoming FIN
-				newstate(TCPS_FIN_WAIT_2);
-				cancel_timers();
-				needoutput = FALSE;
-			}
-			break;
-
-                /*
-                 * In CLOSING STATE in addition to the processing for
-                 * the ESTABLISHED state if the ACK acknowledges our FIN
-                 * then enter the TIME-WAIT state, otherwise ignore
-                 * the segment.
-                 */
-		case TCPS_CLOSING:	/* simultaneous active close */;
-			if (ourfinisacked) {
-				newstate(TCPS_CLOSED);
-				cancel_timers();
-			}
-			break;
+                case TCPS_FIN_WAIT_1:	/* doing active close */
+                    if (ourfinisacked) {
+                        // got the ACK, now await incoming FIN
+                        newstate(TCPS_FIN_WAIT_2);
+                        cancel_timers();
+                        needoutput = FALSE;
+                    }
+                    break;
+
+                    /*
+                     * In CLOSING STATE in addition to the processing for
+                     * the ESTABLISHED state if the ACK acknowledges our FIN
+                     * then enter the TIME-WAIT state, otherwise ignore
+                     * the segment.
+                     */
+                case TCPS_CLOSING:	/* simultaneous active close */;
+                if (ourfinisacked) {
+                    newstate(TCPS_CLOSED);
+                    cancel_timers();
+                }
+                break;
                 /*
                  * In LAST_ACK, we may still be waiting for data to drain
                  * and/or to be acked, as well as for the ack of our FIN.
                  * If our FIN is now acknowledged,
                  * enter the closed state and return.
                  */
-		case TCPS_LAST_ACK:	/* passive close */
-			// K: added state change here
-			if (ourfinisacked) {
-				newstate(TCPS_CLOSED);
-				finish(); // cancels timers, erc
-				reset(); // for connection re-use (bug fix from ns-users list)
-				goto drop;
-			} else {
-				// should be a FIN we've seen
-                                if (debug_) {
-                                        fprintf(stderr, "%f: FullTcpAgent(%s)::received non-ACK (state:%d): ",
-                                        now(), name(), state_);
-				        prpkt(pkt);
-                                }
+                case TCPS_LAST_ACK:	/* passive close */
+                    // K: added state change here
+                    if (ourfinisacked) {
+                        newstate(TCPS_CLOSED);
+                        finish(); // cancels timers, erc
+                        reset(); // for connection re-use (bug fix from ns-users list)
+                        goto drop;
+                    } else {
+                        // should be a FIN we've seen
+                        if (debug_) {
+                            fprintf(stderr, "%f: FullTcpAgent(%s)::received non-ACK (state:%d): ",
+                                    now(), name(), state_);
+                            prpkt(pkt);
                         }
-			break;
+                    }
+                    break;
 
-		/* no case for TIME_WAIT in simulator */
-		}  // inner state_ switch (closing states)
-	} // outer state_ switch (ack processing)
-
-step6:
-
-	/*
-	 * Processing of incoming DATAful segments.
-	 * 	Code above has already trimmed redundant data.
-	 *
-	 * real TCP handles window updates and URG data here also
-	 */
-
-/* dodata: this label is in the "real" code.. here only for reference */
-
-	if ((datalen > 0 || (tiflags & TH_FIN)) &&
-	    TCPS_HAVERCVDFIN(state_) == 0) {
-
-		//
-		// the following 'if' implements the "real" TCP
-		// TCP_REASS macro
-		//
-
-		if (tcph->seqno() == rcv_nxt_ && rq_.empty()) {
-			// got the in-order packet we were looking
-			// for, nobody is in the reassembly queue,
-			// so this is the common case...
-			// note: in "real" TCP we must also be in
-			// ESTABLISHED state to come here, because
-			// data arriving before ESTABLISHED is
-			// queued in the reassembly queue.  Since we
-			// don't really have a process anyhow, just
-			// accept the data here as-is (i.e. don't
-			// require being in ESTABLISHED state)
-			
-		        /* Mohammad: For DCTCP state machine */
-		        if (ecnhat_ && ce_transition_ && ((rcv_nxt_ - last_ack_sent_) > 0)) {
-			  // Must send an immediate ACK with with previous ECN state 
-			  // before transitioning to new state
-			  flags_ |= TF_ACKNOW;
-			  recent_ce_ = !recent_ce_;
-			  //printf("should be acking %d with recent_ce_ = %d\n", rcv_nxt_, recent_ce_);
-			  send_much(1, REASON_NORMAL, maxburst_);
-			  recent_ce_ = !recent_ce_;			  
-                        }
-		        
-		        flags_ |= TF_DELACK;
-			// Mohammad
-			delack_timer_.resched(delack_interval_);			
-			rcv_nxt_ += datalen;
-
-			// printf("%f: receving data %d, rescheduling delayed ack\n", Scheduler::instance().clock(), rcv_nxt_);
-
-			tiflags = tcph->flags() & TH_FIN;
-
-			// give to "application" here
-			// in "real" TCP, this is sbappend() + sorwakeup()
-			if (datalen) {
-				recvBytes(datalen); // notify app. of "delivery"
-
-				//printf("flow_remaining before dec = %d\n" , flow_remaining_);
-				if (flow_remaining_ > 0)
-				      flow_remaining_ -= datalen; // Mohammad
-				if (flow_remaining_ == 0) {		       
-				      flags_ |= TF_ACKNOW;
-				      flow_remaining_ = -1;
-				}
-				//printf("flow_remaining after dec = %d\n" , flow_remaining_);			
-       			}
-
-			needoutput = need_send();
-		} else {
-			// see the "tcp_reass" function:
-			// not the one we want next (or it
-			// is but there's stuff on the reass queue);
-			// do whatever we need to do for out-of-order
-			// segments or hole-fills.  Also,
-			// send an ACK (or SACK) to the other side right now.
-			// Note that we may have just a FIN here (datalen = 0)
-		  
-		        /* Mohammad: the DCTCP receiver conveys the ECN-CE 
+                    /* no case for TIME_WAIT in simulator */
+            }  // inner state_ switch (closing states)
+    } // outer state_ switch (ack processing)
+
+    step6:
+
+    /*
+     * Processing of incoming DATAful segments.
+     * 	Code above has already trimmed redundant data.
+     *
+     * real TCP handles window updates and URG data here also
+     */
+
+    /* dodata: this label is in the "real" code.. here only for reference */
+
+    if ((datalen > 0 || (tiflags & TH_FIN)) &&
+            TCPS_HAVERCVDFIN(state_) == 0) {
+
+        //
+        // the following 'if' implements the "real" TCP
+        // TCP_REASS macro
+        //
+
+        if (tcph->seqno() == rcv_nxt_ && rq_.empty()) {
+            // got the in-order packet we were looking
+            // for, nobody is in the reassembly queue,
+            // so this is the common case...
+            // note: in "real" TCP we must also be in
+            // ESTABLISHED state to come here, because
+            // data arriving before ESTABLISHED is
+            // queued in the reassembly queue.  Since we
+            // don't really have a process anyhow, just
+            // accept the data here as-is (i.e. don't
+            // require being in ESTABLISHED state)
+
+            /* Mohammad: For DCTCP state machine */
+            if (ecnhat_ && ce_transition_ && ((rcv_nxt_ - last_ack_sent_) > 0)) {
+                // Must send an immediate ACK with with previous ECN state
+                // before transitioning to new state
+                flags_ |= TF_ACKNOW;
+                recent_ce_ = !recent_ce_;
+                //printf("should be acking %d with recent_ce_ = %d\n", rcv_nxt_, recent_ce_);
+                send_much(1, REASON_NORMAL, maxburst_);
+                recent_ce_ = !recent_ce_;
+            }
+
+            flags_ |= TF_DELACK;
+            // Mohammad
+            delack_timer_.resched(delack_interval_);
+            rcv_nxt_ += datalen;
+
+            // printf("%f: receving data %d, rescheduling delayed ack\n", Scheduler::instance().clock(), rcv_nxt_);
+
+            tiflags = tcph->flags() & TH_FIN;
+
+            // give to "application" here
+            // in "real" TCP, this is sbappend() + sorwakeup()
+            if (datalen) {
+                recvBytes(datalen); // notify app. of "delivery"
+
+                //printf("flow_remaining before dec = %d\n" , flow_remaining_);
+                if (flow_remaining_ > 0)
+                    flow_remaining_ -= datalen; // Mohammad
+                if (flow_remaining_ == 0) {
+                    flags_ |= TF_ACKNOW;
+                    flow_remaining_ = -1;
+                }
+                //printf("flow_remaining after dec = %d\n" , flow_remaining_);
+            }
+
+            needoutput = need_send();
+        } else {
+            // see the "tcp_reass" function:
+            // not the one we want next (or it
+            // is but there's stuff on the reass queue);
+            // do whatever we need to do for out-of-order
+            // segments or hole-fills.  Also,
+            // send an ACK (or SACK) to the other side right now.
+            // Note that we may have just a FIN here (datalen = 0)
+
+            /* Mohammad: the DCTCP receiver conveys the ECN-CE
 			   received on each out-of-order data packet */
 
-		        int rcv_nxt_old_ = rcv_nxt_; // notify app. if changes
-			tiflags = reass(pkt);
-			if (rcv_nxt_ > rcv_nxt_old_) {
-				// if rcv_nxt_ has advanced, must have
-				// been a hole fill.  In this case, there
-				// is something to give to application		       
-			        recvBytes(rcv_nxt_ - rcv_nxt_old_);
-
-				//printf("flow_remaining before dec = %d\n" , flow_remaining_);
-				if (flow_remaining_ > 0) 
-				       flow_remaining_ -= datalen; // Mohammad
-							
-				if (flow_remaining_ == 0) {		       
-				       flags_ |= TF_ACKNOW;
-				       flow_remaining_ = -1;
-				}
-			
-				//printf("flow_remaining after dec = %d\n" , flow_remaining_);
-			
-			}
-			flags_ |= TF_ACKNOW;
-
-			if (tiflags & TH_PUSH) {
-				//
-				// ???: does this belong here
-				// K: APPLICATION recv
-				needoutput = need_send();
-			}
-		}
-	} else {
-		/*
-		 * we're closing down or this is a pure ACK that
-		 * wasn't handled by the header prediction part above
-		 * (e.g. because cwnd < wnd)
-		 */
-		// K: this is deleted
-		tiflags &= ~TH_FIN;
-	}
-
-	/*
-	 * if FIN is received, ACK the FIN
-	 * (let user know if we could do so)
-	 */
-
-	if (tiflags & TH_FIN) {
-		if (TCPS_HAVERCVDFIN(state_) == 0) {
-			flags_ |= TF_ACKNOW;
- 			rcv_nxt_++;
-		}
-		switch (state_) {
-                /*
-                 * In SYN_RECEIVED and ESTABLISHED STATES
-                 * enter the CLOSE_WAIT state.
-		 * (passive close)
-                 */
-                case TCPS_SYN_RECEIVED:
-                case TCPS_ESTABLISHED:
-			newstate(TCPS_CLOSE_WAIT);
-                        break;
+            int rcv_nxt_old_ = rcv_nxt_; // notify app. if changes
+            tiflags = reass(pkt);
+            if (rcv_nxt_ > rcv_nxt_old_) {
+                // if rcv_nxt_ has advanced, must have
+                // been a hole fill.  In this case, there
+                // is something to give to application
+                recvBytes(rcv_nxt_ - rcv_nxt_old_);
+
+                //printf("flow_remaining before dec = %d\n" , flow_remaining_);
+                if (flow_remaining_ > 0)
+                    flow_remaining_ -= datalen; // Mohammad
+
+                if (flow_remaining_ == 0) {
+                    flags_ |= TF_ACKNOW;
+                    flow_remaining_ = -1;
+                }
+
+                //printf("flow_remaining after dec = %d\n" , flow_remaining_);
+
+            }
+            flags_ |= TF_ACKNOW;
+
+            if (tiflags & TH_PUSH) {
+                //
+                // ???: does this belong here
+                // K: APPLICATION recv
+                needoutput = need_send();
+            }
+        }
+    } else {
+        /*
+         * we're closing down or this is a pure ACK that
+         * wasn't handled by the header prediction part above
+         * (e.g. because cwnd < wnd)
+         */
+        // K: this is deleted
+        tiflags &= ~TH_FIN;
+    }
+
+    /*
+     * if FIN is received, ACK the FIN
+     * (let user know if we could do so)
+     */
+
+    if (tiflags & TH_FIN) {
+        if (TCPS_HAVERCVDFIN(state_) == 0) {
+            flags_ |= TF_ACKNOW;
+            rcv_nxt_++;
+        }
+        switch (state_) {
+            /*
+             * In SYN_RECEIVED and ESTABLISHED STATES
+             * enter the CLOSE_WAIT state.
+             * (passive close)
+             */
+            case TCPS_SYN_RECEIVED:
+            case TCPS_ESTABLISHED:
+                newstate(TCPS_CLOSE_WAIT);
+                break;
 
                 /*
                  * If still in FIN_WAIT_1 STATE FIN has not been acked so
                  * enter the CLOSING state.
-		 * (simultaneous close)
+                 * (simultaneous close)
                  */
-                case TCPS_FIN_WAIT_1:
-			newstate(TCPS_CLOSING);
-                        break;
+            case TCPS_FIN_WAIT_1:
+                newstate(TCPS_CLOSING);
+                break;
                 /*
                  * In FIN_WAIT_2 state enter the TIME_WAIT state,
                  * starting the time-wait timer, turning off the other
                  * standard timers.
-		 * (in the simulator, just go to CLOSED)
-		 * (completion of active close)
+                 * (in the simulator, just go to CLOSED)
+                 * (completion of active close)
                  */
-                case TCPS_FIN_WAIT_2:
-                        newstate(TCPS_CLOSED);
-			cancel_timers();
-                        break;
-		}
-	} /* end of if FIN bit on */
-
-	if (needoutput || (flags_ & TF_ACKNOW))
-		send_much(1, REASON_NORMAL, maxburst_);
-	else if (curseq_ >= highest_ack_ || infinite_send_)
-		send_much(0, REASON_NORMAL, maxburst_);
-	// K: which state to return to when nothing left?
-
-	if (!halfclose_ && state_ == TCPS_CLOSE_WAIT && highest_ack_ == maxseq_)
-		usrclosed();
-
-	Packet::free(pkt);
-
-	// haoboy: Is here the place for done{} of active close? 
-	// It cannot be put in the switch above because we might need to do
-	// send_much() (an ACK)
-	if (state_ == TCPS_CLOSED) 
-		Tcl::instance().evalf("%s done", this->name());
-
-	return;
-
-	//
-	// various ways of dropping (some also ACK, some also RST)
-	//
-
-dropafterack:
-	flags_ |= TF_ACKNOW;
-	send_much(1, REASON_NORMAL, maxburst_);
-	goto drop;
-
-dropwithreset:
-	/* we should be sending an RST here, but can't in simulator */
-	if (tiflags & TH_ACK) {
-		sendpacket(ackno, 0, 0x0, 0, REASON_NORMAL);
-	} else {
-		int ack = tcph->seqno() + datalen;
-		if (tiflags & TH_SYN)
-			ack--;
-		sendpacket(0, ack, TH_ACK, 0, REASON_NORMAL);
-	}
-drop:
-   	Packet::free(pkt);
-	return;
+            case TCPS_FIN_WAIT_2:
+                newstate(TCPS_CLOSED);
+                cancel_timers();
+                break;
+        }
+    } /* end of if FIN bit on */
+
+    if (needoutput || (flags_ & TF_ACKNOW))
+        send_much(1, REASON_NORMAL, maxburst_);
+    else if (curseq_ >= highest_ack_ || infinite_send_)
+        send_much(0, REASON_NORMAL, maxburst_);
+    // K: which state to return to when nothing left?
+
+    if (!halfclose_ && state_ == TCPS_CLOSE_WAIT && highest_ack_ == maxseq_)
+        usrclosed();
+
+    Packet::free(pkt);
+
+    // haoboy: Is here the place for done{} of active close?
+    // It cannot be put in the switch above because we might need to do
+    // send_much() (an ACK)
+    if (state_ == TCPS_CLOSED)
+        Tcl::instance().evalf("%s done", this->name());
+
+    return;
+
+    //
+    // various ways of dropping (some also ACK, some also RST)
+    //
+
+    dropafterack:
+    flags_ |= TF_ACKNOW;
+    send_much(1, REASON_NORMAL, maxburst_);
+    goto drop;
+
+    dropwithreset:
+    /* we should be sending an RST here, but can't in simulator */
+    if (tiflags & TH_ACK) {
+        sendpacket(ackno, 0, 0x0, 0, REASON_NORMAL);
+    } else {
+        int ack = tcph->seqno() + datalen;
+        if (tiflags & TH_SYN)
+            ack--;
+        sendpacket(0, ack, TH_ACK, 0, REASON_NORMAL);
+    }
+    drop:
+    Packet::free(pkt);
+    return;
 }
 
 /*  
@@ -2885,84 +2874,84 @@ drop:
  *      1       1       0                       nothing 
  *      1       1       1                       1/2 window, return
  */ 
-    
+
 void
 FullTcpAgent::dupack_action()
 {   
 
-        int recovered = (highest_ack_ > recover_);
+    int recovered = (highest_ack_ > recover_);
 
-	fastrecov_ = TRUE;
-	rtxbytes_ = 0;
+    fastrecov_ = TRUE;
+    rtxbytes_ = 0;
 
-        if (recovered || (!bug_fix_ && !ecn_) 
+    if (recovered || (!bug_fix_ && !ecn_)
             || (last_cwnd_action_ == CWND_ACTION_DUPACK)
             || ( highest_ack_ == 0)) {
-                goto full_reno_action;
-        }       
-    
-        if (ecn_ && last_cwnd_action_ == CWND_ACTION_ECN) {
-                slowdown(CLOSE_CWND_HALF);
-		cancel_rtx_timer();
-		rtt_active_ = FALSE;
-		(void)fast_retransmit(highest_ack_);
-		return; 
-        }      
-    
-        if (bug_fix_) {
-                 // The line below, for "bug_fix_" true, avoids
-                 // problems with multiple fast retransmits in one
-                 // window of data.
-                return;  
-        }
-    
-full_reno_action:    
-        slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_HALF);
-	cancel_rtx_timer();
-	rtt_active_ = FALSE;
-	recover_ = maxseq_;
-	(void)fast_retransmit(highest_ack_);
-	// we measure cwnd in packets,
-	// so don't scale by maxseg_
-	// as real TCP does
-	cwnd_ = double(ssthresh_) + double(dupacks_);
-       return;
-  
+        goto full_reno_action;
+    }
+
+    if (ecn_ && last_cwnd_action_ == CWND_ACTION_ECN) {
+        slowdown(CLOSE_CWND_HALF);
+        cancel_rtx_timer();
+        rtt_active_ = FALSE;
+        (void)fast_retransmit(highest_ack_);
+        return;
+    }
+
+    if (bug_fix_) {
+        // The line below, for "bug_fix_" true, avoids
+        // problems with multiple fast retransmits in one
+        // window of data.
+        return;
+    }
+
+    full_reno_action:
+    slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_HALF);
+    cancel_rtx_timer();
+    rtt_active_ = FALSE;
+    recover_ = maxseq_;
+    (void)fast_retransmit(highest_ack_);
+    // we measure cwnd in packets,
+    // so don't scale by maxseg_
+    // as real TCP does
+    cwnd_ = double(ssthresh_) + double(dupacks_);
+    return;
+
 }
 
 void
 FullTcpAgent::timeout_action()
 {
-	recover_ = maxseq_;
+    recover_ = maxseq_;
 
-//	cwnd_ = 0.5 * cwnd_; 
-//Shuang: comment all below
-	if (cwnd_ < 1.0) {
-                if (debug_) {
-	            fprintf(stderr, "%f: FullTcpAgent(%s):: resetting cwnd from %f to 1\n",
-		    now(), name(), double(cwnd_));
-                }
-		cwnd_ = 1.0;
-	}
-
-	if (last_cwnd_action_ == CWND_ACTION_ECN) {
-		slowdown(CLOSE_CWND_ONE);
-	} else {
-		slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_RESTART);
-		last_cwnd_action_ = CWND_ACTION_TIMEOUT;
-	}
-
-	//cwnd_ = initial_window();
-//	ssthresh_ = cwnd_;
+    //	cwnd_ = 0.5 * cwnd_;
+    //Shuang: comment all below
+    if (cwnd_ < 1.0) {
+        if (debug_) {
+            fprintf(stderr, "%f: FullTcpAgent(%s):: resetting cwnd from %f to 1\n",
+                    now(), name(), double(cwnd_));
+        }
+        cwnd_ = 1.0;
+    }
 
-	reset_rtx_timer(1);
-	t_seqno_ = (highest_ack_ < 0) ? iss_ : int(highest_ack_);
-	ecnhat_recalc_seq = t_seqno_;
-	ecnhat_maxseq = ecnhat_recalc_seq;
-	
-	//printf("%f, fid %d took timeout, cwnd_ = %f\n", now(), fid_, (double)cwnd_);
-	fastrecov_ = FALSE;
-	dupacks_ = 0;
+    if (last_cwnd_action_ == CWND_ACTION_ECN) {
+        slowdown(CLOSE_CWND_ONE);
+    } else {
+        slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_RESTART);
+        last_cwnd_action_ = CWND_ACTION_TIMEOUT;
+    }
+
+    //cwnd_ = initial_window();
+    //	ssthresh_ = cwnd_;
+
+    reset_rtx_timer(1);
+    t_seqno_ = (highest_ack_ < 0) ? iss_ : int(highest_ack_);
+    ecnhat_recalc_seq = t_seqno_;
+    ecnhat_maxseq = ecnhat_recalc_seq;
+
+    //printf("%f, fid %d took timeout, cwnd_ = %f\n", now(), fid_, (double)cwnd_);
+    fastrecov_ = FALSE;
+    dupacks_ = 0;
 }
 /*
  * deal with timers going off.
@@ -2984,69 +2973,69 @@ void
 FullTcpAgent::timeout(int tno)
 {
 
-	/*
-	 * Due to F. Hernandez-Campos' fix in recv(), we may send an ACK
-	 * while in the CLOSED state.  -M. Weigle 7/24/01
-	 */
-	if (state_ == TCPS_LISTEN) {
-	 	// shouldn't be getting timeouts here
-                if (debug_) {
-		        fprintf(stderr, "%f: FullTcpAgent(%s): unexpected timeout %d in state %s\n",
-			now(), name(), tno, statestr(state_));
-                }
-		return;
-	}
+    /*
+     * Due to F. Hernandez-Campos' fix in recv(), we may send an ACK
+     * while in the CLOSED state.  -M. Weigle 7/24/01
+     */
+    if (state_ == TCPS_LISTEN) {
+        // shouldn't be getting timeouts here
+        if (debug_) {
+            fprintf(stderr, "%f: FullTcpAgent(%s): unexpected timeout %d in state %s\n",
+                    now(), name(), tno, statestr(state_));
+        }
+        return;
+    }
 
-	switch (tno) {
+    switch (tno) {
 
-	case TCP_TIMER_RTX:
-                /* retransmit timer */
-                ++nrexmit_;
-                timeout_action();
-		/* fall thru */
-	case TCP_TIMER_DELSND:
-		/* for phase effects */
-                send_much(1, PF_TIMEOUT, maxburst_);
-		break;
-
-	case TCP_TIMER_DELACK:
-                if (flags_ & TF_DELACK) {
-                        flags_ &= ~TF_DELACK;
-                        flags_ |= TF_ACKNOW;
-                        send_much(1, REASON_NORMAL, 0);
-                }
-		// Mohammad
-                //delack_timer_.resched(delack_interval_);
-		break;
-	default:
-		fprintf(stderr, "%f: FullTcpAgent(%s) Unknown Timeout type %d\n",
-			now(), name(), tno);
-	}
-	return;
+        case TCP_TIMER_RTX:
+            /* retransmit timer */
+            ++nrexmit_;
+            timeout_action();
+            /* fall thru */
+        case TCP_TIMER_DELSND:
+            /* for phase effects */
+            send_much(1, PF_TIMEOUT, maxburst_);
+            break;
+
+        case TCP_TIMER_DELACK:
+            if (flags_ & TF_DELACK) {
+                flags_ &= ~TF_DELACK;
+                flags_ |= TF_ACKNOW;
+                send_much(1, REASON_NORMAL, 0);
+            }
+            // Mohammad
+            //delack_timer_.resched(delack_interval_);
+            break;
+        default:
+            fprintf(stderr, "%f: FullTcpAgent(%s) Unknown Timeout type %d\n",
+                    now(), name(), tno);
+    }
+    return;
 }
 
 void
 FullTcpAgent::dooptions(Packet* pkt)
 {
-	// interesting options: timestamps (here),
-	//	CC, CCNEW, CCECHO (future work perhaps?)
+    // interesting options: timestamps (here),
+    //	CC, CCNEW, CCECHO (future work perhaps?)
 
-        hdr_flags *fh = hdr_flags::access(pkt);
-	hdr_tcp *tcph = hdr_tcp::access(pkt);
+    hdr_flags *fh = hdr_flags::access(pkt);
+    hdr_tcp *tcph = hdr_tcp::access(pkt);
 
-	if (ts_option_ && !fh->no_ts_) {
-		if (tcph->ts() < 0.0) {
-			fprintf(stderr,
-			    "%f: FullTcpAgent(%s) warning: ts_option enabled in this TCP, but appears to be disabled in peer\n",
-				now(), name());
-		} else if (tcph->flags() & TH_SYN) {
-			flags_ |= TF_RCVD_TSTMP;
-			recent_ = tcph->ts();
-			recent_age_ = now();
-		}
-	}
+    if (ts_option_ && !fh->no_ts_) {
+        if (tcph->ts() < 0.0) {
+            fprintf(stderr,
+                    "%f: FullTcpAgent(%s) warning: ts_option enabled in this TCP, but appears to be disabled in peer\n",
+                    now(), name());
+        } else if (tcph->flags() & TH_SYN) {
+            flags_ |= TF_RCVD_TSTMP;
+            recent_ = tcph->ts();
+            recent_age_ = now();
+        }
+    }
 
-	return;
+    return;
 }
 
 //
@@ -3055,14 +3044,14 @@ FullTcpAgent::dooptions(Packet* pkt)
 void
 FullTcpAgent::process_sack(hdr_tcp*)
 {
-	fprintf(stderr, "%f: FullTcpAgent(%s) Non-SACK capable FullTcpAgent received a SACK\n",
-		now(), name());
-	return;
+    fprintf(stderr, "%f: FullTcpAgent(%s) Non-SACK capable FullTcpAgent received a SACK\n",
+            now(), name());
+    return;
 }
 
 int
 FullTcpAgent::byterm() {
-	return curseq_ - int(highest_ack_) - window() * maxseg_;
+    return curseq_ - int(highest_ack_) - window() * maxseg_;
 }
 
 
@@ -3097,45 +3086,45 @@ FullTcpAgent::byterm() {
 void
 TahoeFullTcpAgent::dupack_action()
 {  
-        int recovered = (highest_ack_ > recover_);
+    int recovered = (highest_ack_ > recover_);
 
-	fastrecov_ = TRUE;
-	rtxbytes_ = 0;
+    fastrecov_ = TRUE;
+    rtxbytes_ = 0;
 
-        if (recovered || (!bug_fix_ && !ecn_) || highest_ack_ == 0) {
-                goto full_tahoe_action;
-        }
-   
-        if (ecn_ && last_cwnd_action_ == CWND_ACTION_ECN) {
-		// slow start on ECN
-		last_cwnd_action_ = CWND_ACTION_DUPACK;
-                slowdown(CLOSE_CWND_ONE);
-		set_rtx_timer();
-                rtt_active_ = FALSE;
-		t_seqno_ = highest_ack_;
-                return; 
-        }
-   
-        if (bug_fix_) {
-                /*
-                 * The line below, for "bug_fix_" true, avoids
-                 * problems with multiple fast retransmits in one
-                 * window of data.
-                 */      
-                return;  
-        }
-   
-full_tahoe_action:
-	// slow-start and reset ssthresh
-	trace_event("FAST_RETX");
-	recover_ = maxseq_;
-	last_cwnd_action_ = CWND_ACTION_DUPACK;
-        slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_ONE);	// cwnd->1
-	set_rtx_timer();
+    if (recovered || (!bug_fix_ && !ecn_) || highest_ack_ == 0) {
+        goto full_tahoe_action;
+    }
+
+    if (ecn_ && last_cwnd_action_ == CWND_ACTION_ECN) {
+        // slow start on ECN
+        last_cwnd_action_ = CWND_ACTION_DUPACK;
+        slowdown(CLOSE_CWND_ONE);
+        set_rtx_timer();
         rtt_active_ = FALSE;
-	t_seqno_ = highest_ack_;
-	send_much(0, REASON_NORMAL, 0);
+        t_seqno_ = highest_ack_;
         return; 
+    }
+
+    if (bug_fix_) {
+        /*
+         * The line below, for "bug_fix_" true, avoids
+         * problems with multiple fast retransmits in one
+         * window of data.
+         */
+        return;
+    }
+
+    full_tahoe_action:
+    // slow-start and reset ssthresh
+    trace_event("FAST_RETX");
+    recover_ = maxseq_;
+    last_cwnd_action_ = CWND_ACTION_DUPACK;
+    slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_ONE);	// cwnd->1
+    set_rtx_timer();
+    rtt_active_ = FALSE;
+    t_seqno_ = highest_ack_;
+    send_much(0, REASON_NORMAL, 0);
+    return;
 }  
 
 /*
@@ -3150,30 +3139,30 @@ full_tahoe_action:
 
 NewRenoFullTcpAgent::NewRenoFullTcpAgent() : save_maxburst_(-1)
 {
-	bind("recov_maxburst_", &recov_maxburst_);
+    bind("recov_maxburst_", &recov_maxburst_);
 }
 
 void
 NewRenoFullTcpAgent::pack_action(Packet*)
 {
-	(void)fast_retransmit(highest_ack_);
-	cwnd_ = double(ssthresh_);
-	if (save_maxburst_ < 0) {
-		save_maxburst_ = maxburst_;
-		maxburst_ = recov_maxburst_;
-	}
-	return;
+    (void)fast_retransmit(highest_ack_);
+    cwnd_ = double(ssthresh_);
+    if (save_maxburst_ < 0) {
+        save_maxburst_ = maxburst_;
+        maxburst_ = recov_maxburst_;
+    }
+    return;
 }
 
 void
 NewRenoFullTcpAgent::ack_action(Packet* p)
 {
-	if (save_maxburst_ >= 0) {
-		maxburst_ = save_maxburst_;
-		save_maxburst_ = -1;
-	}
-	FullTcpAgent::ack_action(p);
-	return;
+    if (save_maxburst_ >= 0) {
+        maxburst_ = save_maxburst_;
+        save_maxburst_ = -1;
+    }
+    FullTcpAgent::ack_action(p);
+    return;
 }
 
 /*
@@ -3189,173 +3178,173 @@ NewRenoFullTcpAgent::ack_action(Packet*
 
 int
 SackFullTcpAgent::set_prio(int seq, int maxseq) {
-	int max = 100 * 1460;
-	int prio;
-	if (prio_scheme_ == 0) {
-		if ( seq - startseq_ > max)
-			prio =  max;
-		else
-			prio =  seq - startseq_;
-	}
-	if (prio_scheme_ == 1)
-		prio =  maxseq - startseq_;
-	if (prio_scheme_ == 2) {
-			//printf("%d %d\n", maxseq, int(highest_ack_));
-			//printf("%d %d %d %d\n", maxseq, int(highest_ack_), sq_.total(), maxseq - int(highest_ack_) - sq_.total() + 10);
-			//fflush(stdout);
-			if (maxseq - int(highest_ack_) - sq_.total() + 10 < 0)
-				prio = 0;
-			else
-				prio = maxseq - int(highest_ack_) - sq_.total() + 10;
-			//return maxseq - seq;
-		}
-	if (prio_scheme_ == 3) {
-		//printf("3??\n");
-		prio =  seq - startseq_;
-	}
-	if (prio_scheme_ == 4) { //in batch
-		if (int(highest_ack_) >= seq_bound_) {
-			seq_bound_ = maxseq_;
-			if (maxseq - int(highest_ack_) - sq_.total() + 10 < 0)
-				last_prio_ = 0;
-			else
-				last_prio_ = maxseq - int(highest_ack_) - sq_.total() + 10;
-		}
-		//printf("prio scheme 4: highest ack %d maxseq_ %d seq %d prio %d\n", int(highest_ack_), int(maxseq_), seq, last_prio_);
-		prio = last_prio_;
-	}
-
-	if (prio_num_ == 0)
-		return prio;
-	else
-		return calPrio(prio);
+    int max = 100 * 1460;
+    int prio;
+    if (prio_scheme_ == 0) {
+        if ( seq - startseq_ > max)
+            prio =  max;
+        else
+            prio =  seq - startseq_;
+    }
+    if (prio_scheme_ == 1)
+        prio =  maxseq - startseq_;
+    if (prio_scheme_ == 2) {
+        //printf("%d %d\n", maxseq, int(highest_ack_));
+        //printf("%d %d %d %d\n", maxseq, int(highest_ack_), sq_.total(), maxseq - int(highest_ack_) - sq_.total() + 10);
+        //fflush(stdout);
+        if (maxseq - int(highest_ack_) - sq_.total() + 10 < 0)
+            prio = 0;
+        else
+            prio = maxseq - int(highest_ack_) - sq_.total() + 10;
+        //return maxseq - seq;
+    }
+    if (prio_scheme_ == 3) {
+        //printf("3??\n");
+        prio =  seq - startseq_;
+    }
+    if (prio_scheme_ == 4) { //in batch
+        if (int(highest_ack_) >= seq_bound_) {
+            seq_bound_ = maxseq_;
+            if (maxseq - int(highest_ack_) - sq_.total() + 10 < 0)
+                last_prio_ = 0;
+            else
+                last_prio_ = maxseq - int(highest_ack_) - sq_.total() + 10;
+        }
+        //printf("prio scheme 4: highest ack %d maxseq_ %d seq %d prio %d\n", int(highest_ack_), int(maxseq_), seq, last_prio_);
+        prio = last_prio_;
+    }
+
+    if (prio_num_ == 0)
+        return prio;
+    else
+        return calPrio(prio);
 }
 
 
 void
 SackFullTcpAgent::reset()
 {
-	sq_.clear();			// no SACK blocks
-	/* Fixed typo.  -M. Weigle 6/17/02 */
-	sack_min_ = h_seqno_ = -1;	// no left edge of SACK blocks
-	FullTcpAgent::reset();
+    sq_.clear();			// no SACK blocks
+    /* Fixed typo.  -M. Weigle 6/17/02 */
+    sack_min_ = h_seqno_ = -1;	// no left edge of SACK blocks
+    FullTcpAgent::reset();
 }
 
 
 int
 SackFullTcpAgent::hdrsize(int nsackblocks)
 {
-	int total = FullTcpAgent::headersize();
-	// use base header size plus SACK option size
-        if (nsackblocks > 0) {
-                total += ((nsackblocks * sack_block_size_)
-                        + sack_option_size_);
-	}
-	return (total);
+    int total = FullTcpAgent::headersize();
+    // use base header size plus SACK option size
+    if (nsackblocks > 0) {
+        total += ((nsackblocks * sack_block_size_)
+                + sack_option_size_);
+    }
+    return (total);
 }
 
 void
 SackFullTcpAgent::dupack_action()
 {
 
-        int recovered = (highest_ack_ > recover_);
+    int recovered = (highest_ack_ > recover_);
+
+    fastrecov_ = TRUE;
+    rtxbytes_ = 0;
+    pipe_ = maxseq_ - highest_ack_ - sq_.total();
+
+    //printf("%f: SACK DUPACK-ACTION:pipe_:%d, sq-total:%d, bugfix:%d, cwnd:%d, highest_ack:%d, recover_:%d\n",
+    //now(), pipe_, sq_.total(), bug_fix_, int(cwnd_), int(highest_ack_), recover_);
+
+    if (recovered || (!bug_fix_ && !ecn_)) {
+        goto full_sack_action;
+    }
 
-	fastrecov_ = TRUE;
-	rtxbytes_ = 0;
-	pipe_ = maxseq_ - highest_ack_ - sq_.total();
-
-//printf("%f: SACK DUPACK-ACTION:pipe_:%d, sq-total:%d, bugfix:%d, cwnd:%d, highest_ack:%d, recover_:%d\n",
-//now(), pipe_, sq_.total(), bug_fix_, int(cwnd_), int(highest_ack_), recover_);
-
-        if (recovered || (!bug_fix_ && !ecn_)) {
-                goto full_sack_action;
-        }           
-
-        if (ecn_ && last_cwnd_action_ == CWND_ACTION_ECN) {
-		/* 
-		 * Received ECN notification and 3 DUPACKs in same 
-		 * window. Don't cut cwnd again, but retransmit lost
-		 * packet.   -M. Weigle  6/19/02
-		 */
-		last_cwnd_action_ = CWND_ACTION_DUPACK;
-		/* Mohammad: cut window by half when we have 3 dup ack */
-		if (ecnhat_) 
-			slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_HALF); 
-		cancel_rtx_timer();
-		rtt_active_ = FALSE;
-		int amt = fast_retransmit(highest_ack_);
-		pipectrl_ = TRUE;
-		h_seqno_ = highest_ack_ + amt;
-		send_much(0, REASON_DUPACK, maxburst_);
-		return; 
-	}
-   
-        if (bug_fix_) {
-                /*                              
-                 * The line below, for "bug_fix_" true, avoids
-                 * problems with multiple fast retransmits in one
-                 * window of data.
-                 */      
-
-//printf("%f: SACK DUPACK-ACTION BUGFIX RETURN:pipe_:%d, sq-total:%d, bugfix:%d, cwnd:%d\n",
-//now(), pipe_, sq_.total(), bug_fix_, int(cwnd_));
-                return;  
-        }
-   
-full_sack_action:                               
-	trace_event("FAST_RECOVERY");
-        slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_HALF);
+    if (ecn_ && last_cwnd_action_ == CWND_ACTION_ECN) {
+        /*
+         * Received ECN notification and 3 DUPACKs in same
+         * window. Don't cut cwnd again, but retransmit lost
+         * packet.   -M. Weigle  6/19/02
+         */
+        last_cwnd_action_ = CWND_ACTION_DUPACK;
+        /* Mohammad: cut window by half when we have 3 dup ack */
+        if (ecnhat_)
+            slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_HALF);
         cancel_rtx_timer();
         rtt_active_ = FALSE;
+        int amt = fast_retransmit(highest_ack_);
+        pipectrl_ = TRUE;
+        h_seqno_ = highest_ack_ + amt;
+        send_much(0, REASON_DUPACK, maxburst_);
+        return;
+    }
 
-	// these initiate SACK-style "pipe" recovery
-	pipectrl_ = TRUE;
-	recover_ = maxseq_;	// where I am when recovery starts
+    if (bug_fix_) {
+        /*
+         * The line below, for "bug_fix_" true, avoids
+         * problems with multiple fast retransmits in one
+         * window of data.
+         */
 
-	int amt = fast_retransmit(highest_ack_);
-	h_seqno_ = highest_ack_ + amt;
+        //printf("%f: SACK DUPACK-ACTION BUGFIX RETURN:pipe_:%d, sq-total:%d, bugfix:%d, cwnd:%d\n",
+        //now(), pipe_, sq_.total(), bug_fix_, int(cwnd_));
+        return;
+    }
 
-//printf("%f: FAST-RTX seq:%d, h_seqno_ is now:%d, pipe:%d, cwnd:%d, recover:%d\n",
-//now(), int(highest_ack_), h_seqno_, pipe_, int(cwnd_), recover_);
+    full_sack_action:
+    trace_event("FAST_RECOVERY");
+    slowdown(CLOSE_SSTHRESH_HALF|CLOSE_CWND_HALF);
+    cancel_rtx_timer();
+    rtt_active_ = FALSE;
 
-	send_much(0, REASON_DUPACK, maxburst_);
+    // these initiate SACK-style "pipe" recovery
+    pipectrl_ = TRUE;
+    recover_ = maxseq_;	// where I am when recovery starts
 
-        return;
+    int amt = fast_retransmit(highest_ack_);
+    h_seqno_ = highest_ack_ + amt;
+
+    //printf("%f: FAST-RTX seq:%d, h_seqno_ is now:%d, pipe:%d, cwnd:%d, recover:%d\n",
+    //now(), int(highest_ack_), h_seqno_, pipe_, int(cwnd_), recover_);
+
+    send_much(0, REASON_DUPACK, maxburst_);
+
+    return;
 }
 
 void
 SackFullTcpAgent::pack_action(Packet* p)
 {
-	if (!sq_.empty() && sack_min_ < highest_ack_) {
-		sack_min_ = highest_ack_;
-		sq_.cleartonxt();
-	}
-	pipe_ -= maxseg_;	// see comment in tcp-sack1.cc
-	if (h_seqno_ < highest_ack_)
-		h_seqno_ = highest_ack_;
+    if (!sq_.empty() && sack_min_ < highest_ack_) {
+        sack_min_ = highest_ack_;
+        sq_.cleartonxt();
+    }
+    pipe_ -= maxseg_;	// see comment in tcp-sack1.cc
+    if (h_seqno_ < highest_ack_)
+        h_seqno_ = highest_ack_;
 }
 
 void
 SackFullTcpAgent::ack_action(Packet* p)
 {
-//printf("%f: EXITING fast recovery, recover:%d\n",
-//now(), recover_);
+    //printf("%f: EXITING fast recovery, recover:%d\n",
+    //now(), recover_);
 
-	//Shuang: not set pipectrol_ = false
-	fastrecov_ = pipectrl_ = FALSE;
-	fastrecov_ = FALSE;
-        if (!sq_.empty() && sack_min_ < highest_ack_) {
-                sack_min_ = highest_ack_;
-                sq_.cleartonxt();
-        }
-	dupacks_ = 0;
-
-	/* 
-	 * Update h_seqno_ on new ACK (same as for partial ACKS)
-	 * -M. Weigle 6/3/05
-	 */
-	if (h_seqno_ < highest_ack_)
-		h_seqno_ = highest_ack_;
+    //Shuang: not set pipectrol_ = false
+    fastrecov_ = pipectrl_ = FALSE;
+    fastrecov_ = FALSE;
+    if (!sq_.empty() && sack_min_ < highest_ack_) {
+        sack_min_ = highest_ack_;
+        sq_.cleartonxt();
+    }
+    dupacks_ = 0;
+
+    /*
+     * Update h_seqno_ on new ACK (same as for partial ACKS)
+     * -M. Weigle 6/3/05
+     */
+    if (h_seqno_ < highest_ack_)
+        h_seqno_ = highest_ack_;
 }
 
 //
@@ -3365,26 +3354,26 @@ SackFullTcpAgent::ack_action(Packet* p)
 int
 SackFullTcpAgent::build_options(hdr_tcp* tcph)
 {
-	int total = FullTcpAgent::build_options(tcph);
+    int total = FullTcpAgent::build_options(tcph);
 
-        if (!rq_.empty()) {
-                int nblk = rq_.gensack(&tcph->sa_left(0), max_sack_blocks_);
-                tcph->sa_length() = nblk;
-		total += (nblk * sack_block_size_) + sack_option_size_;
-        } else {
-                tcph->sa_length() = 0;
-        }
-	//Shuang: reduce ack size
-	//return 0;
-	return (total);
+    if (!rq_.empty()) {
+        int nblk = rq_.gensack(&tcph->sa_left(0), max_sack_blocks_);
+        tcph->sa_length() = nblk;
+        total += (nblk * sack_block_size_) + sack_option_size_;
+    } else {
+        tcph->sa_length() = 0;
+    }
+    //Shuang: reduce ack size
+    //return 0;
+    return (total);
 }
 
 void
 SackFullTcpAgent::timeout_action()
 {
-	FullTcpAgent::timeout_action();
+    FullTcpAgent::timeout_action();
 
-	/*recover_ = maxseq_;
+    /*recover_ = maxseq_;
 
 	int progress = curseq_ - int(highest_ack_) - sq_.total();
 	cwnd_ = min((last_timeout_progress_ - progress) / 1460 + 1, maxcwnd_);
@@ -3396,92 +3385,92 @@ SackFullTcpAgent::timeout_action()
 	t_seqno_ = (highest_ack_ < 0) ? iss_ : int(highest_ack_);
 	ecnhat_recalc_seq = t_seqno_;
 	ecnhat_maxseq = ecnhat_recalc_seq;
-	
+
 	printf("%f, fid %d took timeout, cwnd_ = %f\n", now(), fid_, (double)cwnd_);
 	fastrecov_ = FALSE;
 	dupacks_ = 0;*/
 
-	//
-	// original SACK spec says the sender is
-	// supposed to clear out its knowledge of what
-	// the receiver has in the case of a timeout
-	// (on the chance the receiver has renig'd).
-	// Here, this happens when clear_on_timeout_ is
-	// enabled.
-	//
-
-	if (clear_on_timeout_ ) {
-		sq_.clear();
-		sack_min_ = highest_ack_;
-	}
+    //
+    // original SACK spec says the sender is
+    // supposed to clear out its knowledge of what
+    // the receiver has in the case of a timeout
+    // (on the chance the receiver has renig'd).
+    // Here, this happens when clear_on_timeout_ is
+    // enabled.
+    //
+
+    if (clear_on_timeout_ ) {
+        sq_.clear();
+        sack_min_ = highest_ack_;
+    }
 
-	return;
+    return;
 }
 
 void
 SackFullTcpAgent::process_sack(hdr_tcp* tcph)
 {
-	//
-	// Figure out how many sack blocks are
-	// in the pkt.  Insert each block range
-	// into the scoreboard
-	//
-	last_sqtotal_ = sq_.total();
-
-	if (max_sack_blocks_ <= 0) {
-		fprintf(stderr,
-		    "%f: FullTcpAgent(%s) warning: received SACK block but I am not SACK enabled\n",
-			now(), name());
-		return;
-	}	
-
-	int slen = tcph->sa_length(), i;
-	for (i = 0; i < slen; ++i) {
-		/* Added check for FIN   -M. Weigle 5/21/02 */
-		if ((tcph->flags() & TH_FIN == 0) && 
-		    tcph->sa_left(i) >= tcph->sa_right(i)) {
-			fprintf(stderr,
-			    "%f: FullTcpAgent(%s) warning: received illegal SACK block [%d,%d]\n",
-				now(), name(), tcph->sa_left(i), tcph->sa_right(i));
-			continue;
-		}
-		sq_.add(tcph->sa_left(i), tcph->sa_right(i), 0);  
-	}
-	
-	cur_sqtotal_ = sq_.total();
-	return;
+    //
+    // Figure out how many sack blocks are
+    // in the pkt.  Insert each block range
+    // into the scoreboard
+    //
+    last_sqtotal_ = sq_.total();
+
+    if (max_sack_blocks_ <= 0) {
+        fprintf(stderr,
+                "%f: FullTcpAgent(%s) warning: received SACK block but I am not SACK enabled\n",
+                now(), name());
+        return;
+    }
+
+    int slen = tcph->sa_length(), i;
+    for (i = 0; i < slen; ++i) {
+        /* Added check for FIN   -M. Weigle 5/21/02 */
+        if ((tcph->flags() & TH_FIN == 0) &&
+                tcph->sa_left(i) >= tcph->sa_right(i)) {
+            fprintf(stderr,
+                    "%f: FullTcpAgent(%s) warning: received illegal SACK block [%d,%d]\n",
+                    now(), name(), tcph->sa_left(i), tcph->sa_right(i));
+            continue;
+        }
+        sq_.add(tcph->sa_left(i), tcph->sa_right(i), 0);
+    }
+
+    cur_sqtotal_ = sq_.total();
+    return;
 }
 
 int
 SackFullTcpAgent::send_allowed(int seq)
 {
-	//Shuang: always pipe control and simple pipe function
-	//pipectrl_ = true;
-	//pipe_ = maxseq_ - highest_ack_ - sq_.total();
-
-	// not in pipe control, so use regular control
-	if (!pipectrl_)
-		return (FullTcpAgent::send_allowed(seq));
-
-	// don't overshoot receiver's advertised window
-	int topawin = highest_ack_ + int(wnd_) * maxseg_;
-//	printf("%f: PIPECTRL: SEND(%d) AWIN:%d, pipe:%d, cwnd:%d highest_ack:%d sqtotal:%d\n",
-	//now(), seq, topawin, pipe_, int(cwnd_), int(highest_ack_), sq_.total());
-
-	if (seq >= topawin) {
-		return FALSE;
-	}
-
-	/*
-	 * If not in ESTABLISHED, don't send anything we don't have
-	 *   -M. Weigle 7/18/02
-	 */
-	if (state_ != TCPS_ESTABLISHED && seq > curseq_)
-		return FALSE;
-
-	// don't overshoot cwnd_
-	int cwin = int(cwnd_) * maxseg_;
-	return (pipe_ < cwin);
+    //Shuang: always pipe control and simple pipe function
+    //pipectrl_ = true;
+    //pipe_ = maxseq_ - highest_ack_ - sq_.total();
+
+    // not in pipe control, so use regular control
+    if (!pipectrl_)
+        return (FullTcpAgent::send_allowed(seq));
+
+    // don't overshoot receiver's advertised window
+    int topawin = highest_ack_ + int(wnd_) * maxseg_;
+    //	printf("%f: PIPECTRL: SEND(%d) AWIN:%d, pipe:%d, cwnd:%d highest_ack:%d sqtotal:%d\n",
+    //now(), seq, topawin, pipe_, int(cwnd_), int(highest_ack_), sq_.total());
+
+    if (seq >= topawin) {
+        return FALSE;
+    }
+
+    /*
+     * If not in ESTABLISHED, don't send anything we don't have
+     *   -M. Weigle 7/18/02
+     */
+    if (state_ != TCPS_ESTABLISHED && seq > curseq_)
+        return FALSE;
+
+    // don't overshoot cwnd_
+    int cwin = int(cwnd_) * maxseg_;
+    return (pipe_ < cwin);
 }
 
 
@@ -3495,87 +3484,87 @@ int
 SackFullTcpAgent::nxt_tseq()
 {
 
-	int in_recovery = (highest_ack_ < recover_);
-	int seq = h_seqno_;
+    int in_recovery = (highest_ack_ < recover_);
+    int seq = h_seqno_;
 
-	if (!in_recovery) {
-//if (int(t_seqno_) > 1)
-//printf("%f: non-recovery nxt_tseq called w/t_seqno:%d\n",
-//now(), int(t_seqno_));
-//sq_.dumplist();
-		return (t_seqno_);
-	}
-
-	int fcnt;	// following count-- the
-			// count field in the block
-			// after the seq# we are about
-			// to send
-	int fbytes;	// fcnt in bytes
-
-//if (int(t_seqno_) > 1)
-//printf("%f: recovery nxt_tseq called w/t_seqno:%d, seq:%d, mode:%d\n",
-//now(), int(t_seqno_), seq, sack_rtx_threshmode_);
-//sq_.dumplist();
-
-	while ((seq = sq_.nexthole(seq, fcnt, fbytes)) > 0) {
-		// if we have a following block
-		// with a large enough count
-		// we should use the seq# we get
-		// from nexthole()
-		if (sack_rtx_threshmode_ == 0 ||
-		    (sack_rtx_threshmode_ == 1 && fcnt >= sack_rtx_cthresh_) ||
-		    (sack_rtx_threshmode_ == 2 && fbytes >= sack_rtx_bthresh_) ||
-		    (sack_rtx_threshmode_ == 3 && (fcnt >= sack_rtx_cthresh_ || fbytes >= sack_rtx_bthresh_)) ||
-		    (sack_rtx_threshmode_ == 4 && (fcnt >= sack_rtx_cthresh_ && fbytes >= sack_rtx_bthresh_))) {
-
-//if (int(t_seqno_) > 1)
-//printf("%f: nxt_tseq<hole> returning %d\n",
-//now(), int(seq));
-			// adjust h_seqno, as we may have
-			// been "jumped ahead" by learning
-			// about a filled hole
-			if (seq > h_seqno_)
-				h_seqno_ = seq;
-			return (seq);
-		} else if (fcnt <= 0)
-			break;
-		else {
-		//Shuang; probe
-			if (prob_cap_ != 0) {
-				seq ++;
-			} else
-			seq += maxseg_;
-		}
-	}
-//if (int(t_seqno_) > 1)
-//printf("%f: nxt_tseq<top> returning %d\n",
-//now(), int(t_seqno_));
-	return (t_seqno_);
+    if (!in_recovery) {
+        //if (int(t_seqno_) > 1)
+        //printf("%f: non-recovery nxt_tseq called w/t_seqno:%d\n",
+        //now(), int(t_seqno_));
+        //sq_.dumplist();
+        return (t_seqno_);
+    }
+
+    int fcnt;	// following count-- the
+    // count field in the block
+    // after the seq# we are about
+    // to send
+    int fbytes;	// fcnt in bytes
+
+    //if (int(t_seqno_) > 1)
+    //printf("%f: recovery nxt_tseq called w/t_seqno:%d, seq:%d, mode:%d\n",
+    //now(), int(t_seqno_), seq, sack_rtx_threshmode_);
+    //sq_.dumplist();
+
+    while ((seq = sq_.nexthole(seq, fcnt, fbytes)) > 0) {
+        // if we have a following block
+        // with a large enough count
+        // we should use the seq# we get
+        // from nexthole()
+        if (sack_rtx_threshmode_ == 0 ||
+                (sack_rtx_threshmode_ == 1 && fcnt >= sack_rtx_cthresh_) ||
+                (sack_rtx_threshmode_ == 2 && fbytes >= sack_rtx_bthresh_) ||
+                (sack_rtx_threshmode_ == 3 && (fcnt >= sack_rtx_cthresh_ || fbytes >= sack_rtx_bthresh_)) ||
+                (sack_rtx_threshmode_ == 4 && (fcnt >= sack_rtx_cthresh_ && fbytes >= sack_rtx_bthresh_))) {
+
+            //if (int(t_seqno_) > 1)
+            //printf("%f: nxt_tseq<hole> returning %d\n",
+            //now(), int(seq));
+            // adjust h_seqno, as we may have
+            // been "jumped ahead" by learning
+            // about a filled hole
+            if (seq > h_seqno_)
+                h_seqno_ = seq;
+            return (seq);
+        } else if (fcnt <= 0)
+            break;
+        else {
+            //Shuang; probe
+            if (prob_cap_ != 0) {
+                seq ++;
+            } else
+                seq += maxseg_;
+        }
+    }
+    //if (int(t_seqno_) > 1)
+    //printf("%f: nxt_tseq<top> returning %d\n",
+    //now(), int(t_seqno_));
+    return (t_seqno_);
 }
 
 int
 SackFullTcpAgent::byterm() {
-	return curseq_ - int(highest_ack_) - sq_.total() - window() * maxseg_;
+    return curseq_ - int(highest_ack_) - sq_.total() - window() * maxseg_;
 }
 void
 MinTcpAgent::timeout_action() {
-//Shuang: prob count when cwnd=1
-	if (prob_cap_ != 0) {
-		prob_count_ ++;
-		if (prob_count_ == prob_cap_) {
-			prob_mode_ = true;
-		}
-		//Shuang: h_seqno_?
-		h_seqno_ = highest_ack_;
-	}
+    //Shuang: prob count when cwnd=1
+    if (prob_cap_ != 0) {
+        prob_count_ ++;
+        if (prob_count_ == prob_cap_) {
+            prob_mode_ = true;
+        }
+        //Shuang: h_seqno_?
+        h_seqno_ = highest_ack_;
+    }
 
-	
-	SackFullTcpAgent::timeout_action();
+
+    SackFullTcpAgent::timeout_action();
 }
 
 double
 MinTcpAgent::rtt_timeout() {
-	return minrto_;
+    return minrto_;
 }
 
 //void
@@ -3586,183 +3575,183 @@ MinTcpAgent::rtt_timeout() {
 void
 DDTcpAgent::slowdown(int how) {
 
-	double decrease;  /* added for highspeed - sylvia */
-	double win, halfwin, decreasewin;
-	int slowstart = 0;
-	++ncwndcuts_;
-	if (!(how & TCP_IDLE) && !(how & NO_OUTSTANDING_DATA)){
-		++ncwndcuts1_; 
-	}
-
-	//Shuang: deadline-aware
-	double penalty = ecnhat_alpha_;
-	if (deadline != 0) {
-		double tleft = deadline/1e6 - (now() - start_time);
-
-		//if (tleft < 0 && now() < 3) {
-		//	cwnd_ = 1;
-		//	printf("early termination now %.8lf start %.8lf deadline %d\n", now(), start_time, deadline);
-		//	fflush(stdout);
-   		//	if (signal_on_empty_);
-		//		bufferempty();
-	    //		return;
-		//} else 
-		if (tleft < 0) {
-			tleft = 1e10;	
-		}
-		double rtt = int(t_srtt_ >> T_SRTT_BITS) * tcp_tick_;
-		double Tc = byterm() / (0.75 * cwnd_ * maxseg_) * rtt;
-		double d = Tc/tleft;
-		if (d > 2) d = 2;
-		if (d < 0.5) d = 0.5;
-		if (d >= 0)
-			penalty = pow(penalty, d);
-  		//printf("deadline left %.6lf d-factor %f Tc %f start %f rm %d cwnd %f\n", tleft, Tc/tleft, Tc, start_time, byterm(), double(cwnd_));
-		//fflush(stdout);
-	} else if (penalty > 0) {
-		//non-deadline->TCP
-		penalty = 1;
-	}
-
-	//ecnhat_alpha_ = 0.07;
-	// we are in slowstart for sure if cwnd < ssthresh
-	if (cwnd_ < ssthresh_) 
-		slowstart = 1;
-        if (precision_reduce_) {
-		halfwin = windowd() / 2;
-                if (wnd_option_ == 6) {         
-                        /* binomial controls */
-                        decreasewin = windowd() - (1.0-decrease_num_)*pow(windowd(),l_parameter_);
-                } else if (wnd_option_ == 8 && (cwnd_ > low_window_)) { 
-                        /* experimental highspeed TCP */
-			decrease = decrease_param();
-			//if (decrease < 0.1) 
-			//	decrease = 0.1;
-			decrease_num_ = decrease;
-                        decreasewin = windowd() - (decrease * windowd());
-                } else {
-	 		decreasewin = decrease_num_ * windowd();
-		}
-		win = windowd();
-		//printf("decrease param = %f window = %f decwin = %f\n", decrease_num_, win, decreasewin);
-	} else  {
-		int temp;
-		temp = (int)(window() / 2);
-		halfwin = (double) temp;
-                if (wnd_option_ == 6) {
-                        /* binomial controls */
-                        temp = (int)(window() - (1.0-decrease_num_)*pow(window(),l_parameter_));
-                } else if ((wnd_option_ == 8) && (cwnd_ > low_window_)) { 
-                        /* experimental highspeed TCP */
-			decrease = decrease_param();
-			//if (decrease < 0.1)
-                        //       decrease = 0.1;		
-			decrease_num_ = decrease;
-                        temp = (int)(windowd() - (decrease * windowd()));
-                } else {
- 			temp = (int)(decrease_num_ * window());
-		}
-		decreasewin = (double) temp;
-		win = (double) window();
-	}
-	if (how & CLOSE_SSTHRESH_HALF)
-		// For the first decrease, decrease by half
-		// even for non-standard values of decrease_num_.
-		if (first_decrease_ == 1 || slowstart ||
-			last_cwnd_action_ == CWND_ACTION_TIMEOUT) {
-			// Do we really want halfwin instead of decreasewin
-		// after a timeout?
-			ssthresh_ = (int) halfwin;
-		} else {
-			ssthresh_ = (int) decreasewin;
-		}
-	else if (how & CLOSE_SSTHRESH_ECNHAT) 
-		ssthresh_ = (int) ((1 - penalty/2.0) * windowd());
-	//ssthresh_ = (int) (windowd() - sqrt(2*windowd())/2.0);		
-        else if (how & THREE_QUARTER_SSTHRESH)
-		if (ssthresh_ < 3*cwnd_/4)
-			ssthresh_  = (int)(3*cwnd_/4);
-	if (how & CLOSE_CWND_HALF)
-		// For the first decrease, decrease by half
-		// even for non-standard values of decrease_num_.
-		if (first_decrease_ == 1 || slowstart || decrease_num_ == 0.5) {
-			cwnd_ = halfwin;
-		} else cwnd_ = decreasewin;
-        else if (how & CLOSE_CWND_ECNHAT) {
-		cwnd_ = (1 - penalty/2.0) * windowd();
-		if (cwnd_ < 1)
-			cwnd_ = 1;
-		}
-	//cwnd_ = windowd() - sqrt(2*windowd())/2.0;      
-	else if (how & CWND_HALF_WITH_MIN) {
-		// We have not thought about how non-standard TCPs, with
-		// non-standard values of decrease_num_, should respond
-		// after quiescent periods.
-                cwnd_ = decreasewin;
-                if (cwnd_ < 1)
-                        cwnd_ = 1;
-	}
-	else if (how & CLOSE_CWND_RESTART) 
-		cwnd_ = int(wnd_restart_);
-	else if (how & CLOSE_CWND_INIT) 	  
-	        cwnd_ = int(wnd_init_);
-	else if (how & CLOSE_CWND_ONE)
-		cwnd_ = 1;
-	else if (how & CLOSE_CWND_HALF_WAY) {
-		// cwnd_ = win - (win - W_used)/2 ;
-		cwnd_ = W_used + decrease_num_ * (win - W_used);
-                if (cwnd_ < 1)
-                        cwnd_ = 1;
-	}
-	if (ssthresh_ < 2)
-		ssthresh_ = 2;
-	if (cwnd_ < 1)
-		cwnd_ = 1; // Added by Mohammad
-	if (how & (CLOSE_CWND_HALF|CLOSE_CWND_RESTART|CLOSE_CWND_INIT|CLOSE_CWND_ONE|CLOSE_CWND_ECNHAT))
-		cong_action_ = TRUE;
-
-	fcnt_ = count_ = 0;
-	if (first_decrease_ == 1)
-		first_decrease_ = 0;
-	// for event tracing slow start
-	if (cwnd_ == 1 || slowstart) 
-		// Not sure if this is best way to capture slow_start
-		// This is probably tracing a superset of slowdowns of
-		// which all may not be slow_start's --Padma, 07/'01.
-		trace_event("SLOW_START");
+    double decrease;  /* added for highspeed - sylvia */
+    double win, halfwin, decreasewin;
+    int slowstart = 0;
+    ++ncwndcuts_;
+    if (!(how & TCP_IDLE) && !(how & NO_OUTSTANDING_DATA)){
+        ++ncwndcuts1_;
+    }
+
+    //Shuang: deadline-aware
+    double penalty = ecnhat_alpha_;
+    if (deadline != 0) {
+        double tleft = deadline/1e6 - (now() - start_time);
+
+        //if (tleft < 0 && now() < 3) {
+        //	cwnd_ = 1;
+        //	printf("early termination now %.8lf start %.8lf deadline %d\n", now(), start_time, deadline);
+        //	fflush(stdout);
+        //	if (signal_on_empty_);
+        //		bufferempty();
+        //		return;
+        //} else
+        if (tleft < 0) {
+            tleft = 1e10;
+        }
+        double rtt = int(t_srtt_ >> T_SRTT_BITS) * tcp_tick_;
+        double Tc = byterm() / (0.75 * cwnd_ * maxseg_) * rtt;
+        double d = Tc/tleft;
+        if (d > 2) d = 2;
+        if (d < 0.5) d = 0.5;
+        if (d >= 0)
+            penalty = pow(penalty, d);
+        //printf("deadline left %.6lf d-factor %f Tc %f start %f rm %d cwnd %f\n", tleft, Tc/tleft, Tc, start_time, byterm(), double(cwnd_));
+        //fflush(stdout);
+    } else if (penalty > 0) {
+        //non-deadline->TCP
+        penalty = 1;
+    }
+
+    //ecnhat_alpha_ = 0.07;
+    // we are in slowstart for sure if cwnd < ssthresh
+    if (cwnd_ < ssthresh_)
+        slowstart = 1;
+    if (precision_reduce_) {
+        halfwin = windowd() / 2;
+        if (wnd_option_ == 6) {
+            /* binomial controls */
+            decreasewin = windowd() - (1.0-decrease_num_)*pow(windowd(),l_parameter_);
+        } else if (wnd_option_ == 8 && (cwnd_ > low_window_)) {
+            /* experimental highspeed TCP */
+            decrease = decrease_param();
+            //if (decrease < 0.1)
+            //	decrease = 0.1;
+            decrease_num_ = decrease;
+            decreasewin = windowd() - (decrease * windowd());
+        } else {
+            decreasewin = decrease_num_ * windowd();
+        }
+        win = windowd();
+        //printf("decrease param = %f window = %f decwin = %f\n", decrease_num_, win, decreasewin);
+    } else  {
+        int temp;
+        temp = (int)(window() / 2);
+        halfwin = (double) temp;
+        if (wnd_option_ == 6) {
+            /* binomial controls */
+            temp = (int)(window() - (1.0-decrease_num_)*pow(window(),l_parameter_));
+        } else if ((wnd_option_ == 8) && (cwnd_ > low_window_)) {
+            /* experimental highspeed TCP */
+            decrease = decrease_param();
+            //if (decrease < 0.1)
+            //       decrease = 0.1;
+            decrease_num_ = decrease;
+            temp = (int)(windowd() - (decrease * windowd()));
+        } else {
+            temp = (int)(decrease_num_ * window());
+        }
+        decreasewin = (double) temp;
+        win = (double) window();
+    }
+    if (how & CLOSE_SSTHRESH_HALF)
+        // For the first decrease, decrease by half
+        // even for non-standard values of decrease_num_.
+        if (first_decrease_ == 1 || slowstart ||
+                last_cwnd_action_ == CWND_ACTION_TIMEOUT) {
+            // Do we really want halfwin instead of decreasewin
+            // after a timeout?
+            ssthresh_ = (int) halfwin;
+        } else {
+            ssthresh_ = (int) decreasewin;
+        }
+    else if (how & CLOSE_SSTHRESH_ECNHAT)
+        ssthresh_ = (int) ((1 - penalty/2.0) * windowd());
+    //ssthresh_ = (int) (windowd() - sqrt(2*windowd())/2.0);
+    else if (how & THREE_QUARTER_SSTHRESH)
+        if (ssthresh_ < 3*cwnd_/4)
+            ssthresh_  = (int)(3*cwnd_/4);
+    if (how & CLOSE_CWND_HALF)
+        // For the first decrease, decrease by half
+        // even for non-standard values of decrease_num_.
+        if (first_decrease_ == 1 || slowstart || decrease_num_ == 0.5) {
+            cwnd_ = halfwin;
+        } else cwnd_ = decreasewin;
+    else if (how & CLOSE_CWND_ECNHAT) {
+        cwnd_ = (1 - penalty/2.0) * windowd();
+        if (cwnd_ < 1)
+            cwnd_ = 1;
+    }
+    //cwnd_ = windowd() - sqrt(2*windowd())/2.0;
+    else if (how & CWND_HALF_WITH_MIN) {
+        // We have not thought about how non-standard TCPs, with
+        // non-standard values of decrease_num_, should respond
+        // after quiescent periods.
+        cwnd_ = decreasewin;
+        if (cwnd_ < 1)
+            cwnd_ = 1;
+    }
+    else if (how & CLOSE_CWND_RESTART)
+        cwnd_ = int(wnd_restart_);
+    else if (how & CLOSE_CWND_INIT)
+        cwnd_ = int(wnd_init_);
+    else if (how & CLOSE_CWND_ONE)
+        cwnd_ = 1;
+    else if (how & CLOSE_CWND_HALF_WAY) {
+        // cwnd_ = win - (win - W_used)/2 ;
+        cwnd_ = W_used + decrease_num_ * (win - W_used);
+        if (cwnd_ < 1)
+            cwnd_ = 1;
+    }
+    if (ssthresh_ < 2)
+        ssthresh_ = 2;
+    if (cwnd_ < 1)
+        cwnd_ = 1; // Added by Mohammad
+    if (how & (CLOSE_CWND_HALF|CLOSE_CWND_RESTART|CLOSE_CWND_INIT|CLOSE_CWND_ONE|CLOSE_CWND_ECNHAT))
+        cong_action_ = TRUE;
+
+    fcnt_ = count_ = 0;
+    if (first_decrease_ == 1)
+        first_decrease_ = 0;
+    // for event tracing slow start
+    if (cwnd_ == 1 || slowstart)
+        // Not sure if this is best way to capture slow_start
+        // This is probably tracing a superset of slowdowns of
+        // which all may not be slow_start's --Padma, 07/'01.
+        trace_event("SLOW_START");
 }
 
 int
 DDTcpAgent::byterm() {
-	return curseq_ - int(highest_ack_) - sq_.total();
+    return curseq_ - int(highest_ack_) - sq_.total();
 }
 
 int
 DDTcpAgent::foutput(int seqno, int reason) {
-	if (deadline != 0) {
-// 		double tleft = double(deadline)/1e6 - (now() - start_time) - byterm()*8/1e10;
-		double tleft = deadline/1e6 - (now() - start_time) - (curseq_ - int(maxseq_)) * 8/1e10;
-   		if (tleft < 0 && signal_on_empty_) {
-			early_terminated_ = 1;
-			bufferempty();
-			printf("early termination V2 now %.8lf start %.8lf deadline %d byterm %d tleft %.8f\n", now(), start_time, deadline, curseq_ - int(maxseq_), tleft);
-			fflush(stdout);
-			return 0;
-		} else if (tleft < 0) {
-			return 0;
-		}
-		//printf("test foutput\n");
-	}
-	return SackFullTcpAgent::foutput(seqno, reason);
+    if (deadline != 0) {
+        // 		double tleft = double(deadline)/1e6 - (now() - start_time) - byterm()*8/1e10;
+        double tleft = deadline/1e6 - (now() - start_time) - (curseq_ - int(maxseq_)) * 8/1e10;
+        if (tleft < 0 && signal_on_empty_) {
+            early_terminated_ = 1;
+            bufferempty();
+            printf("early termination V2 now %.8lf start %.8lf deadline %d byterm %d tleft %.8f\n", now(), start_time, deadline, curseq_ - int(maxseq_), tleft);
+            fflush(stdout);
+            return 0;
+        } else if (tleft < 0) {
+            return 0;
+        }
+        //printf("test foutput\n");
+    }
+    return SackFullTcpAgent::foutput(seqno, reason);
 }
 
 int
 DDTcpAgent::need_send() {
-	if (deadline != 0) {
- 		double tleft1 = deadline/1e6 - (now() - start_time);
-		if (tleft1 < 0)
-			return 0;
-		//printf("test need send\n");
-	}
-	return SackFullTcpAgent::need_send();
+    if (deadline != 0) {
+        double tleft1 = deadline/1e6 - (now() - start_time);
+        if (tleft1 < 0)
+            return 0;
+        //printf("test need send\n");
+    }
+    return SackFullTcpAgent::need_send();
 }
diff -rupN ns-allinone-2.34-pfabric/ns-2.34/tcp/tcp-sink.cc ns-allinone-2.34-qjump/ns-2.34/tcp/tcp-sink.cc
--- ns-allinone-2.34-pfabric/ns-2.34/tcp/tcp-sink.cc	2015-03-04 17:50:43.190749269 +0000
+++ ns-allinone-2.34-qjump/ns-2.34/tcp/tcp-sink.cc	2015-03-04 23:13:41.198555793 +0000
@@ -274,6 +274,9 @@ void TcpSink::ack(Packet* opkt)
 	hdr_tcp *otcp = hdr_tcp::access(opkt);
 	hdr_ip *oiph = hdr_ip::access(opkt);
 	hdr_tcp *ntcp = hdr_tcp::access(npkt);
+	// Set priority of the reply to the one of the received packet.
+	hdr_ip *niph = hdr_ip::access(npkt);
+	niph->prio() = oiph->prio();
 
 	if (qs_enabled_) {
 		// QuickStart code from Srikanth Sundarrajan.
